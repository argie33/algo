58ee6407cff8d95d5e2081d458562392
/* istanbul ignore next */
function cov_18esqvz1h1() {
  var path = "/home/stocks/algo/webapp/lambda/routes/trades.js";
  var hash = "1ad46d8efcb2c1d305f4e18d5ec639e7e16c5203";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/routes/trades.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 34
        }
      },
      "1": {
        start: {
          line: 2,
          column: 15
        },
        end: {
          line: 2,
          column: 31
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 13,
          column: 3
        }
      },
      "3": {
        start: {
          line: 6,
          column: 2
        },
        end: {
          line: 12,
          column: 5
        }
      },
      "4": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 23,
          column: 3
        }
      },
      "5": {
        start: {
          line: 17,
          column: 2
        },
        end: {
          line: 22,
          column: 5
        }
      },
      "6": {
        start: {
          line: 24,
          column: 30
        },
        end: {
          line: 24,
          column: 59
        }
      },
      "7": {
        start: {
          line: 25,
          column: 31
        },
        end: {
          line: 25,
          column: 59
        }
      },
      "8": {
        start: {
          line: 26,
          column: 30
        },
        end: {
          line: 26,
          column: 74
        }
      },
      "9": {
        start: {
          line: 27,
          column: 22
        },
        end: {
          line: 27,
          column: 61
        }
      },
      "10": {
        start: {
          line: 28,
          column: 22
        },
        end: {
          line: 28,
          column: 55
        }
      },
      "11": {
        start: {
          line: 42,
          column: 0
        },
        end: {
          line: 131,
          column: 3
        }
      },
      "12": {
        start: {
          line: 43,
          column: 2
        },
        end: {
          line: 130,
          column: 3
        }
      },
      "13": {
        start: {
          line: 44,
          column: 19
        },
        end: {
          line: 44,
          column: 32
        }
      },
      "14": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "15": {
        start: {
          line: 46,
          column: 6
        },
        end: {
          line: 46,
          column: 54
        }
      },
      "16": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 65
        }
      },
      "17": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 119,
          column: 5
        }
      },
      "18": {
        start: {
          line: 52,
          column: 21
        },
        end: {
          line: 58,
          column: 18
        }
      },
      "19": {
        start: {
          line: 60,
          column: 27
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "20": {
        start: {
          line: 60,
          column: 51
        },
        end: {
          line: 70,
          column: 7
        }
      },
      "21": {
        start: {
          line: 72,
          column: 6
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "22": {
        start: {
          line: 76,
          column: 48
        },
        end: {
          line: 76,
          column: 73
        }
      },
      "23": {
        start: {
          line: 80,
          column: 6
        },
        end: {
          line: 80,
          column: 91
        }
      },
      "24": {
        start: {
          line: 83,
          column: 6
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "25": {
        start: {
          line: 110,
          column: 32
        },
        end: {
          line: 110,
          column: 34
        }
      },
      "26": {
        start: {
          line: 112,
          column: 6
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "27": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 122,
          column: 58
        }
      },
      "28": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 129,
          column: 7
        }
      },
      "29": {
        start: {
          line: 137,
          column: 0
        },
        end: {
          line: 202,
          column: 3
        }
      },
      "30": {
        start: {
          line: 138,
          column: 2
        },
        end: {
          line: 201,
          column: 3
        }
      },
      "31": {
        start: {
          line: 139,
          column: 19
        },
        end: {
          line: 139,
          column: 32
        }
      },
      "32": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 142,
          column: 5
        }
      },
      "33": {
        start: {
          line: 141,
          column: 6
        },
        end: {
          line: 141,
          column: 54
        }
      },
      "34": {
        start: {
          line: 143,
          column: 57
        },
        end: {
          line: 143,
          column: 65
        }
      },
      "35": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 145,
          column: 68
        }
      },
      "36": {
        start: {
          line: 148,
          column: 24
        },
        end: {
          line: 148,
          column: 71
        }
      },
      "37": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 156,
          column: 5
        }
      },
      "38": {
        start: {
          line: 151,
          column: 6
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "39": {
        start: {
          line: 158,
          column: 4
        },
        end: {
          line: 158,
          column: 64
        }
      },
      "40": {
        start: {
          line: 159,
          column: 52
        },
        end: {
          line: 159,
          column: 63
        }
      },
      "41": {
        start: {
          line: 162,
          column: 25
        },
        end: {
          line: 165,
          column: 16
        }
      },
      "42": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 172,
          column: 5
        }
      },
      "43": {
        start: {
          line: 168,
          column: 6
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "44": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 177,
          column: 5
        }
      },
      "45": {
        start: {
          line: 176,
          column: 6
        },
        end: {
          line: 176,
          column: 58
        }
      },
      "46": {
        start: {
          line: 180,
          column: 25
        },
        end: {
          line: 187,
          column: 5
        }
      },
      "47": {
        start: {
          line: 189,
          column: 4
        },
        end: {
          line: 193,
          column: 7
        }
      },
      "48": {
        start: {
          line: 196,
          column: 4
        },
        end: {
          line: 196,
          column: 59
        }
      },
      "49": {
        start: {
          line: 197,
          column: 4
        },
        end: {
          line: 200,
          column: 7
        }
      },
      "50": {
        start: {
          line: 208,
          column: 0
        },
        end: {
          line: 234,
          column: 3
        }
      },
      "51": {
        start: {
          line: 209,
          column: 2
        },
        end: {
          line: 233,
          column: 3
        }
      },
      "52": {
        start: {
          line: 210,
          column: 19
        },
        end: {
          line: 210,
          column: 32
        }
      },
      "53": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 213,
          column: 5
        }
      },
      "54": {
        start: {
          line: 212,
          column: 6
        },
        end: {
          line: 212,
          column: 54
        }
      },
      "55": {
        start: {
          line: 216,
          column: 4
        },
        end: {
          line: 218,
          column: 5
        }
      },
      "56": {
        start: {
          line: 217,
          column: 6
        },
        end: {
          line: 217,
          column: 58
        }
      },
      "57": {
        start: {
          line: 220,
          column: 20
        },
        end: {
          line: 220,
          column: 79
        }
      },
      "58": {
        start: {
          line: 222,
          column: 4
        },
        end: {
          line: 225,
          column: 7
        }
      },
      "59": {
        start: {
          line: 228,
          column: 4
        },
        end: {
          line: 228,
          column: 58
        }
      },
      "60": {
        start: {
          line: 229,
          column: 4
        },
        end: {
          line: 232,
          column: 7
        }
      },
      "61": {
        start: {
          line: 240,
          column: 0
        },
        end: {
          line: 303,
          column: 3
        }
      },
      "62": {
        start: {
          line: 241,
          column: 2
        },
        end: {
          line: 302,
          column: 3
        }
      },
      "63": {
        start: {
          line: 242,
          column: 19
        },
        end: {
          line: 242,
          column: 32
        }
      },
      "64": {
        start: {
          line: 243,
          column: 4
        },
        end: {
          line: 245,
          column: 5
        }
      },
      "65": {
        start: {
          line: 244,
          column: 6
        },
        end: {
          line: 244,
          column: 54
        }
      },
      "66": {
        start: {
          line: 246,
          column: 55
        },
        end: {
          line: 246,
          column: 64
        }
      },
      "67": {
        start: {
          line: 249,
          column: 23
        },
        end: {
          line: 249,
          column: 25
        }
      },
      "68": {
        start: {
          line: 250,
          column: 17
        },
        end: {
          line: 250,
          column: 60
        }
      },
      "69": {
        start: {
          line: 252,
          column: 4
        },
        end: {
          line: 255,
          column: 5
        }
      },
      "70": {
        start: {
          line: 253,
          column: 6
        },
        end: {
          line: 253,
          column: 42
        }
      },
      "71": {
        start: {
          line: 254,
          column: 6
        },
        end: {
          line: 254,
          column: 26
        }
      },
      "72": {
        start: {
          line: 257,
          column: 19
        },
        end: {
          line: 274,
          column: 14
        }
      },
      "73": {
        start: {
          line: 277,
          column: 24
        },
        end: {
          line: 281,
          column: 16
        }
      },
      "74": {
        start: {
          line: 283,
          column: 4
        },
        end: {
          line: 294,
          column: 7
        }
      },
      "75": {
        start: {
          line: 297,
          column: 4
        },
        end: {
          line: 297,
          column: 54
        }
      },
      "76": {
        start: {
          line: 298,
          column: 4
        },
        end: {
          line: 301,
          column: 7
        }
      },
      "77": {
        start: {
          line: 309,
          column: 0
        },
        end: {
          line: 375,
          column: 3
        }
      },
      "78": {
        start: {
          line: 310,
          column: 2
        },
        end: {
          line: 374,
          column: 3
        }
      },
      "79": {
        start: {
          line: 311,
          column: 19
        },
        end: {
          line: 311,
          column: 32
        }
      },
      "80": {
        start: {
          line: 312,
          column: 4
        },
        end: {
          line: 314,
          column: 5
        }
      },
      "81": {
        start: {
          line: 313,
          column: 6
        },
        end: {
          line: 313,
          column: 54
        }
      },
      "82": {
        start: {
          line: 315,
          column: 23
        },
        end: {
          line: 315,
          column: 54
        }
      },
      "83": {
        start: {
          line: 319,
          column: 19
        },
        end: {
          line: 331,
          column: 28
        }
      },
      "84": {
        start: {
          line: 333,
          column: 4
        },
        end: {
          line: 338,
          column: 5
        }
      },
      "85": {
        start: {
          line: 334,
          column: 6
        },
        end: {
          line: 337,
          column: 9
        }
      },
      "86": {
        start: {
          line: 340,
          column: 21
        },
        end: {
          line: 340,
          column: 35
        }
      },
      "87": {
        start: {
          line: 343,
          column: 29
        },
        end: {
          line: 348,
          column: 87
        }
      },
      "88": {
        start: {
          line: 350,
          column: 4
        },
        end: {
          line: 366,
          column: 7
        }
      },
      "89": {
        start: {
          line: 369,
          column: 4
        },
        end: {
          line: 369,
          column: 63
        }
      },
      "90": {
        start: {
          line: 370,
          column: 4
        },
        end: {
          line: 373,
          column: 7
        }
      },
      "91": {
        start: {
          line: 381,
          column: 0
        },
        end: {
          line: 411,
          column: 3
        }
      },
      "92": {
        start: {
          line: 382,
          column: 2
        },
        end: {
          line: 410,
          column: 3
        }
      },
      "93": {
        start: {
          line: 383,
          column: 19
        },
        end: {
          line: 383,
          column: 32
        }
      },
      "94": {
        start: {
          line: 384,
          column: 4
        },
        end: {
          line: 386,
          column: 5
        }
      },
      "95": {
        start: {
          line: 385,
          column: 6
        },
        end: {
          line: 385,
          column: 54
        }
      },
      "96": {
        start: {
          line: 387,
          column: 27
        },
        end: {
          line: 387,
          column: 36
        }
      },
      "97": {
        start: {
          line: 390,
          column: 4
        },
        end: {
          line: 392,
          column: 5
        }
      },
      "98": {
        start: {
          line: 391,
          column: 6
        },
        end: {
          line: 391,
          column: 58
        }
      },
      "99": {
        start: {
          line: 394,
          column: 21
        },
        end: {
          line: 394,
          column: 90
        }
      },
      "100": {
        start: {
          line: 396,
          column: 4
        },
        end: {
          line: 402,
          column: 7
        }
      },
      "101": {
        start: {
          line: 405,
          column: 4
        },
        end: {
          line: 405,
          column: 59
        }
      },
      "102": {
        start: {
          line: 406,
          column: 4
        },
        end: {
          line: 409,
          column: 7
        }
      },
      "103": {
        start: {
          line: 417,
          column: 0
        },
        end: {
          line: 465,
          column: 3
        }
      },
      "104": {
        start: {
          line: 418,
          column: 2
        },
        end: {
          line: 464,
          column: 3
        }
      },
      "105": {
        start: {
          line: 419,
          column: 19
        },
        end: {
          line: 419,
          column: 32
        }
      },
      "106": {
        start: {
          line: 420,
          column: 4
        },
        end: {
          line: 422,
          column: 5
        }
      },
      "107": {
        start: {
          line: 421,
          column: 6
        },
        end: {
          line: 421,
          column: 54
        }
      },
      "108": {
        start: {
          line: 423,
          column: 33
        },
        end: {
          line: 423,
          column: 42
        }
      },
      "109": {
        start: {
          line: 427,
          column: 28
        },
        end: {
          line: 432,
          column: 16
        }
      },
      "110": {
        start: {
          line: 435,
          column: 28
        },
        end: {
          line: 438,
          column: 16
        }
      },
      "111": {
        start: {
          line: 441,
          column: 30
        },
        end: {
          line: 446,
          column: 16
        }
      },
      "112": {
        start: {
          line: 448,
          column: 4
        },
        end: {
          line: 456,
          column: 7
        }
      },
      "113": {
        start: {
          line: 459,
          column: 4
        },
        end: {
          line: 459,
          column: 61
        }
      },
      "114": {
        start: {
          line: 460,
          column: 4
        },
        end: {
          line: 463,
          column: 7
        }
      },
      "115": {
        start: {
          line: 471,
          column: 0
        },
        end: {
          line: 665,
          column: 3
        }
      },
      "116": {
        start: {
          line: 472,
          column: 2
        },
        end: {
          line: 664,
          column: 3
        }
      },
      "117": {
        start: {
          line: 473,
          column: 4
        },
        end: {
          line: 473,
          column: 78
        }
      },
      "118": {
        start: {
          line: 474,
          column: 19
        },
        end: {
          line: 474,
          column: 32
        }
      },
      "119": {
        start: {
          line: 485,
          column: 8
        },
        end: {
          line: 485,
          column: 17
        }
      },
      "120": {
        start: {
          line: 487,
          column: 4
        },
        end: {
          line: 492,
          column: 5
        }
      },
      "121": {
        start: {
          line: 488,
          column: 6
        },
        end: {
          line: 491,
          column: 9
        }
      },
      "122": {
        start: {
          line: 495,
          column: 26
        },
        end: {
          line: 495,
          column: 59
        }
      },
      "123": {
        start: {
          line: 497,
          column: 4
        },
        end: {
          line: 585,
          column: 5
        }
      },
      "124": {
        start: {
          line: 499,
          column: 6
        },
        end: {
          line: 499,
          column: 65
        }
      },
      "125": {
        start: {
          line: 500,
          column: 26
        },
        end: {
          line: 500,
          column: 63
        }
      },
      "126": {
        start: {
          line: 502,
          column: 6
        },
        end: {
          line: 582,
          column: 7
        }
      },
      "127": {
        start: {
          line: 503,
          column: 8
        },
        end: {
          line: 503,
          column: 88
        }
      },
      "128": {
        start: {
          line: 504,
          column: 23
        },
        end: {
          line: 504,
          column: 106
        }
      },
      "129": {
        start: {
          line: 507,
          column: 43
        },
        end: {
          line: 510,
          column: 10
        }
      },
      "130": {
        start: {
          line: 513,
          column: 21
        },
        end: {
          line: 530,
          column: 11
        }
      },
      "131": {
        start: {
          line: 513,
          column: 42
        },
        end: {
          line: 530,
          column: 9
        }
      },
      "132": {
        start: {
          line: 533,
          column: 8
        },
        end: {
          line: 535,
          column: 9
        }
      },
      "133": {
        start: {
          line: 534,
          column: 10
        },
        end: {
          line: 534,
          column: 95
        }
      },
      "134": {
        start: {
          line: 534,
          column: 42
        },
        end: {
          line: 534,
          column: 93
        }
      },
      "135": {
        start: {
          line: 537,
          column: 8
        },
        end: {
          line: 539,
          column: 9
        }
      },
      "136": {
        start: {
          line: 538,
          column: 10
        },
        end: {
          line: 538,
          column: 97
        }
      },
      "137": {
        start: {
          line: 538,
          column: 42
        },
        end: {
          line: 538,
          column: 95
        }
      },
      "138": {
        start: {
          line: 541,
          column: 8
        },
        end: {
          line: 543,
          column: 9
        }
      },
      "139": {
        start: {
          line: 542,
          column: 10
        },
        end: {
          line: 542,
          column: 95
        }
      },
      "140": {
        start: {
          line: 542,
          column: 42
        },
        end: {
          line: 542,
          column: 93
        }
      },
      "141": {
        start: {
          line: 545,
          column: 8
        },
        end: {
          line: 547,
          column: 9
        }
      },
      "142": {
        start: {
          line: 546,
          column: 10
        },
        end: {
          line: 546,
          column: 82
        }
      },
      "143": {
        start: {
          line: 546,
          column: 42
        },
        end: {
          line: 546,
          column: 80
        }
      },
      "144": {
        start: {
          line: 549,
          column: 8
        },
        end: {
          line: 551,
          column: 9
        }
      },
      "145": {
        start: {
          line: 550,
          column: 10
        },
        end: {
          line: 550,
          column: 67
        }
      },
      "146": {
        start: {
          line: 550,
          column: 42
        },
        end: {
          line: 550,
          column: 65
        }
      },
      "147": {
        start: {
          line: 554,
          column: 8
        },
        end: {
          line: 561,
          column: 11
        }
      },
      "148": {
        start: {
          line: 555,
          column: 23
        },
        end: {
          line: 555,
          column: 52
        }
      },
      "149": {
        start: {
          line: 556,
          column: 23
        },
        end: {
          line: 556,
          column: 52
        }
      },
      "150": {
        start: {
          line: 557,
          column: 32
        },
        end: {
          line: 559,
          column: 43
        }
      },
      "151": {
        start: {
          line: 560,
          column: 10
        },
        end: {
          line: 560,
          column: 31
        }
      },
      "152": {
        start: {
          line: 564,
          column: 22
        },
        end: {
          line: 564,
          column: 35
        }
      },
      "153": {
        start: {
          line: 565,
          column: 32
        },
        end: {
          line: 565,
          column: 98
        }
      },
      "154": {
        start: {
          line: 567,
          column: 8
        },
        end: {
          line: 567,
          column: 67
        }
      },
      "155": {
        start: {
          line: 569,
          column: 8
        },
        end: {
          line: 581,
          column: 11
        }
      },
      "156": {
        start: {
          line: 584,
          column: 6
        },
        end: {
          line: 584,
          column: 88
        }
      },
      "157": {
        start: {
          line: 588,
          column: 4
        },
        end: {
          line: 588,
          column: 52
        }
      },
      "158": {
        start: {
          line: 589,
          column: 23
        },
        end: {
          line: 641,
          column: 5
        }
      },
      "159": {
        start: {
          line: 643,
          column: 4
        },
        end: {
          line: 655,
          column: 7
        }
      },
      "160": {
        start: {
          line: 658,
          column: 4
        },
        end: {
          line: 658,
          column: 60
        }
      },
      "161": {
        start: {
          line: 659,
          column: 4
        },
        end: {
          line: 663,
          column: 7
        }
      },
      "162": {
        start: {
          line: 671,
          column: 0
        },
        end: {
          line: 1004,
          column: 3
        }
      },
      "163": {
        start: {
          line: 672,
          column: 2
        },
        end: {
          line: 1003,
          column: 3
        }
      },
      "164": {
        start: {
          line: 673,
          column: 19
        },
        end: {
          line: 673,
          column: 32
        }
      },
      "165": {
        start: {
          line: 674,
          column: 4
        },
        end: {
          line: 676,
          column: 5
        }
      },
      "166": {
        start: {
          line: 675,
          column: 6
        },
        end: {
          line: 675,
          column: 54
        }
      },
      "167": {
        start: {
          line: 677,
          column: 4
        },
        end: {
          line: 683,
          column: 5
        }
      },
      "168": {
        start: {
          line: 678,
          column: 6
        },
        end: {
          line: 682,
          column: 9
        }
      },
      "169": {
        start: {
          line: 684,
          column: 33
        },
        end: {
          line: 684,
          column: 42
        }
      },
      "170": {
        start: {
          line: 686,
          column: 4
        },
        end: {
          line: 686,
          column: 92
        }
      },
      "171": {
        start: {
          line: 689,
          column: 20
        },
        end: {
          line: 689,
          column: 30
        }
      },
      "172": {
        start: {
          line: 690,
          column: 22
        },
        end: {
          line: 690,
          column: 32
        }
      },
      "173": {
        start: {
          line: 691,
          column: 4
        },
        end: {
          line: 698,
          column: 5
        }
      },
      "174": {
        start: {
          line: 692,
          column: 17
        },
        end: {
          line: 692,
          column: 60
        }
      },
      "175": {
        start: {
          line: 692,
          column: 61
        },
        end: {
          line: 692,
          column: 67
        }
      },
      "176": {
        start: {
          line: 693,
          column: 17
        },
        end: {
          line: 693,
          column: 60
        }
      },
      "177": {
        start: {
          line: 693,
          column: 61
        },
        end: {
          line: 693,
          column: 67
        }
      },
      "178": {
        start: {
          line: 694,
          column: 17
        },
        end: {
          line: 694,
          column: 60
        }
      },
      "179": {
        start: {
          line: 694,
          column: 61
        },
        end: {
          line: 694,
          column: 67
        }
      },
      "180": {
        start: {
          line: 695,
          column: 17
        },
        end: {
          line: 695,
          column: 66
        }
      },
      "181": {
        start: {
          line: 695,
          column: 67
        },
        end: {
          line: 695,
          column: 73
        }
      },
      "182": {
        start: {
          line: 696,
          column: 18
        },
        end: {
          line: 696,
          column: 43
        }
      },
      "183": {
        start: {
          line: 696,
          column: 44
        },
        end: {
          line: 696,
          column: 50
        }
      },
      "184": {
        start: {
          line: 697,
          column: 15
        },
        end: {
          line: 697,
          column: 58
        }
      },
      "185": {
        start: {
          line: 701,
          column: 24
        },
        end: {
          line: 701,
          column: 28
        }
      },
      "186": {
        start: {
          line: 702,
          column: 4
        },
        end: {
          line: 745,
          column: 5
        }
      },
      "187": {
        start: {
          line: 704,
          column: 28
        },
        end: {
          line: 709,
          column: 18
        }
      },
      "188": {
        start: {
          line: 711,
          column: 6
        },
        end: {
          line: 742,
          column: 7
        }
      },
      "189": {
        start: {
          line: 712,
          column: 8
        },
        end: {
          line: 712,
          column: 91
        }
      },
      "190": {
        start: {
          line: 714,
          column: 8
        },
        end: {
          line: 741,
          column: 9
        }
      },
      "191": {
        start: {
          line: 715,
          column: 10
        },
        end: {
          line: 740,
          column: 11
        }
      },
      "192": {
        start: {
          line: 716,
          column: 12
        },
        end: {
          line: 739,
          column: 13
        }
      },
      "193": {
        start: {
          line: 718,
          column: 34
        },
        end: {
          line: 718,
          column: 71
        }
      },
      "194": {
        start: {
          line: 720,
          column: 14
        },
        end: {
          line: 736,
          column: 15
        }
      },
      "195": {
        start: {
          line: 721,
          column: 31
        },
        end: {
          line: 725,
          column: 17
        }
      },
      "196": {
        start: {
          line: 727,
          column: 35
        },
        end: {
          line: 731,
          column: 18
        }
      },
      "197": {
        start: {
          line: 733,
          column: 16
        },
        end: {
          line: 733,
          column: 43
        }
      },
      "198": {
        start: {
          line: 734,
          column: 16
        },
        end: {
          line: 734,
          column: 99
        }
      },
      "199": {
        start: {
          line: 735,
          column: 16
        },
        end: {
          line: 735,
          column: 22
        }
      },
      "200": {
        start: {
          line: 738,
          column: 14
        },
        end: {
          line: 738,
          column: 100
        }
      },
      "201": {
        start: {
          line: 744,
          column: 6
        },
        end: {
          line: 744,
          column: 70
        }
      },
      "202": {
        start: {
          line: 748,
          column: 20
        },
        end: {
          line: 748,
          column: 24
        }
      },
      "203": {
        start: {
          line: 749,
          column: 26
        },
        end: {
          line: 749,
          column: 28
        }
      },
      "204": {
        start: {
          line: 751,
          column: 4
        },
        end: {
          line: 844,
          column: 5
        }
      },
      "205": {
        start: {
          line: 753,
          column: 28
        },
        end: {
          line: 772,
          column: 45
        }
      },
      "206": {
        start: {
          line: 774,
          column: 6
        },
        end: {
          line: 777,
          column: 7
        }
      },
      "207": {
        start: {
          line: 775,
          column: 8
        },
        end: {
          line: 775,
          column: 42
        }
      },
      "208": {
        start: {
          line: 776,
          column: 8
        },
        end: {
          line: 776,
          column: 86
        }
      },
      "209": {
        start: {
          line: 780,
          column: 27
        },
        end: {
          line: 794,
          column: 45
        }
      },
      "210": {
        start: {
          line: 796,
          column: 6
        },
        end: {
          line: 796,
          column: 42
        }
      },
      "211": {
        start: {
          line: 799,
          column: 6
        },
        end: {
          line: 799,
          column: 83
        }
      },
      "212": {
        start: {
          line: 802,
          column: 6
        },
        end: {
          line: 843,
          column: 7
        }
      },
      "213": {
        start: {
          line: 803,
          column: 8
        },
        end: {
          line: 803,
          column: 72
        }
      },
      "214": {
        start: {
          line: 805,
          column: 8
        },
        end: {
          line: 805,
          column: 86
        }
      },
      "215": {
        start: {
          line: 808,
          column: 8
        },
        end: {
          line: 842,
          column: 9
        }
      },
      "216": {
        start: {
          line: 809,
          column: 33
        },
        end: {
          line: 822,
          column: 28
        }
      },
      "217": {
        start: {
          line: 824,
          column: 10
        },
        end: {
          line: 839,
          column: 11
        }
      },
      "218": {
        start: {
          line: 825,
          column: 29
        },
        end: {
          line: 825,
          column: 51
        }
      },
      "219": {
        start: {
          line: 826,
          column: 12
        },
        end: {
          line: 837,
          column: 14
        }
      },
      "220": {
        start: {
          line: 838,
          column: 12
        },
        end: {
          line: 838,
          column: 109
        }
      },
      "221": {
        start: {
          line: 841,
          column: 10
        },
        end: {
          line: 841,
          column: 87
        }
      },
      "222": {
        start: {
          line: 847,
          column: 22
        },
        end: {
          line: 847,
          column: 26
        }
      },
      "223": {
        start: {
          line: 848,
          column: 4
        },
        end: {
          line: 898,
          column: 5
        }
      },
      "224": {
        start: {
          line: 849,
          column: 6
        },
        end: {
          line: 849,
          column: 81
        }
      },
      "225": {
        start: {
          line: 851,
          column: 19
        },
        end: {
          line: 851,
          column: 62
        }
      },
      "226": {
        start: {
          line: 851,
          column: 45
        },
        end: {
          line: 851,
          column: 61
        }
      },
      "227": {
        start: {
          line: 852,
          column: 20
        },
        end: {
          line: 852,
          column: 64
        }
      },
      "228": {
        start: {
          line: 852,
          column: 46
        },
        end: {
          line: 852,
          column: 63
        }
      },
      "229": {
        start: {
          line: 853,
          column: 26
        },
        end: {
          line: 853,
          column: 110
        }
      },
      "230": {
        start: {
          line: 853,
          column: 59
        },
        end: {
          line: 853,
          column: 106
        }
      },
      "231": {
        start: {
          line: 856,
          column: 27
        },
        end: {
          line: 856,
          column: 29
        }
      },
      "232": {
        start: {
          line: 857,
          column: 6
        },
        end: {
          line: 860,
          column: 9
        }
      },
      "233": {
        start: {
          line: 858,
          column: 8
        },
        end: {
          line: 858,
          column: 73
        }
      },
      "234": {
        start: {
          line: 858,
          column: 41
        },
        end: {
          line: 858,
          column: 73
        }
      },
      "235": {
        start: {
          line: 859,
          column: 8
        },
        end: {
          line: 859,
          column: 47
        }
      },
      "236": {
        start: {
          line: 862,
          column: 21
        },
        end: {
          line: 862,
          column: 22
        }
      },
      "237": {
        start: {
          line: 863,
          column: 28
        },
        end: {
          line: 863,
          column: 29
        }
      },
      "238": {
        start: {
          line: 864,
          column: 26
        },
        end: {
          line: 864,
          column: 27
        }
      },
      "239": {
        start: {
          line: 866,
          column: 6
        },
        end: {
          line: 888,
          column: 9
        }
      },
      "240": {
        start: {
          line: 867,
          column: 29
        },
        end: {
          line: 867,
          column: 87
        }
      },
      "241": {
        start: {
          line: 867,
          column: 51
        },
        end: {
          line: 867,
          column: 86
        }
      },
      "242": {
        start: {
          line: 868,
          column: 23
        },
        end: {
          line: 868,
          column: 24
        }
      },
      "243": {
        start: {
          line: 869,
          column: 24
        },
        end: {
          line: 869,
          column: 25
        }
      },
      "244": {
        start: {
          line: 871,
          column: 8
        },
        end: {
          line: 887,
          column: 11
        }
      },
      "245": {
        start: {
          line: 872,
          column: 22
        },
        end: {
          line: 872,
          column: 43
        }
      },
      "246": {
        start: {
          line: 873,
          column: 24
        },
        end: {
          line: 873,
          column: 47
        }
      },
      "247": {
        start: {
          line: 875,
          column: 10
        },
        end: {
          line: 886,
          column: 11
        }
      },
      "248": {
        start: {
          line: 876,
          column: 12
        },
        end: {
          line: 876,
          column: 84
        }
      },
      "249": {
        start: {
          line: 877,
          column: 12
        },
        end: {
          line: 877,
          column: 28
        }
      },
      "250": {
        start: {
          line: 879,
          column: 12
        },
        end: {
          line: 885,
          column: 13
        }
      },
      "251": {
        start: {
          line: 880,
          column: 26
        },
        end: {
          line: 880,
          column: 71
        }
      },
      "252": {
        start: {
          line: 881,
          column: 14
        },
        end: {
          line: 881,
          column: 30
        }
      },
      "253": {
        start: {
          line: 882,
          column: 14
        },
        end: {
          line: 882,
          column: 43
        }
      },
      "254": {
        start: {
          line: 882,
          column: 27
        },
        end: {
          line: 882,
          column: 43
        }
      },
      "255": {
        start: {
          line: 883,
          column: 14
        },
        end: {
          line: 883,
          column: 32
        }
      },
      "256": {
        start: {
          line: 884,
          column: 14
        },
        end: {
          line: 884,
          column: 53
        }
      },
      "257": {
        start: {
          line: 890,
          column: 6
        },
        end: {
          line: 897,
          column: 8
        }
      },
      "258": {
        start: {
          line: 901,
          column: 20
        },
        end: {
          line: 912,
          column: 5
        }
      },
      "259": {
        start: {
          line: 915,
          column: 24
        },
        end: {
          line: 915,
          column: 99
        }
      },
      "260": {
        start: {
          line: 916,
          column: 26
        },
        end: {
          line: 916,
          column: 105
        }
      },
      "261": {
        start: {
          line: 917,
          column: 25
        },
        end: {
          line: 917,
          column: 102
        }
      },
      "262": {
        start: {
          line: 918,
          column: 20
        },
        end: {
          line: 918,
          column: 77
        }
      },
      "263": {
        start: {
          line: 919,
          column: 21
        },
        end: {
          line: 919,
          column: 92
        }
      },
      "264": {
        start: {
          line: 920,
          column: 25
        },
        end: {
          line: 922,
          column: 76
        }
      },
      "265": {
        start: {
          line: 924,
          column: 25
        },
        end: {
          line: 951,
          column: 5
        }
      },
      "266": {
        start: {
          line: 953,
          column: 4
        },
        end: {
          line: 953,
          column: 126
        }
      },
      "267": {
        start: {
          line: 954,
          column: 4
        },
        end: {
          line: 954,
          column: 27
        }
      },
      "268": {
        start: {
          line: 957,
          column: 4
        },
        end: {
          line: 963,
          column: 7
        }
      },
      "269": {
        start: {
          line: 966,
          column: 4
        },
        end: {
          line: 1002,
          column: 5
        }
      },
      "270": {
        start: {
          line: 967,
          column: 6
        },
        end: {
          line: 974,
          column: 9
        }
      },
      "271": {
        start: {
          line: 976,
          column: 6
        },
        end: {
          line: 976,
          column: 72
        }
      },
      "272": {
        start: {
          line: 978,
          column: 6
        },
        end: {
          line: 1001,
          column: 9
        }
      },
      "273": {
        start: {
          line: 1010,
          column: 0
        },
        end: {
          line: 1107,
          column: 3
        }
      },
      "274": {
        start: {
          line: 1011,
          column: 2
        },
        end: {
          line: 1106,
          column: 3
        }
      },
      "275": {
        start: {
          line: 1012,
          column: 19
        },
        end: {
          line: 1012,
          column: 32
        }
      },
      "276": {
        start: {
          line: 1013,
          column: 4
        },
        end: {
          line: 1015,
          column: 5
        }
      },
      "277": {
        start: {
          line: 1014,
          column: 6
        },
        end: {
          line: 1014,
          column: 54
        }
      },
      "278": {
        start: {
          line: 1016,
          column: 51
        },
        end: {
          line: 1016,
          column: 60
        }
      },
      "279": {
        start: {
          line: 1019,
          column: 22
        },
        end: {
          line: 1019,
          column: 45
        }
      },
      "280": {
        start: {
          line: 1020,
          column: 17
        },
        end: {
          line: 1020,
          column: 25
        }
      },
      "281": {
        start: {
          line: 1021,
          column: 21
        },
        end: {
          line: 1021,
          column: 22
        }
      },
      "282": {
        start: {
          line: 1023,
          column: 4
        },
        end: {
          line: 1026,
          column: 5
        }
      },
      "283": {
        start: {
          line: 1024,
          column: 6
        },
        end: {
          line: 1024,
          column: 66
        }
      },
      "284": {
        start: {
          line: 1025,
          column: 6
        },
        end: {
          line: 1025,
          column: 29
        }
      },
      "285": {
        start: {
          line: 1028,
          column: 4
        },
        end: {
          line: 1031,
          column: 5
        }
      },
      "286": {
        start: {
          line: 1029,
          column: 6
        },
        end: {
          line: 1029,
          column: 66
        }
      },
      "287": {
        start: {
          line: 1030,
          column: 6
        },
        end: {
          line: 1030,
          column: 27
        }
      },
      "288": {
        start: {
          line: 1033,
          column: 19
        },
        end: {
          line: 1058,
          column: 14
        }
      },
      "289": {
        start: {
          line: 1060,
          column: 4
        },
        end: {
          line: 1098,
          column: 5
        }
      },
      "290": {
        start: {
          line: 1062,
          column: 25
        },
        end: {
          line: 1067,
          column: 7
        }
      },
      "291": {
        start: {
          line: 1069,
          column: 22
        },
        end: {
          line: 1085,
          column: 8
        }
      },
      "292": {
        start: {
          line: 1069,
          column: 45
        },
        end: {
          line: 1085,
          column: 7
        }
      },
      "293": {
        start: {
          line: 1087,
          column: 18
        },
        end: {
          line: 1087,
          column: 79
        }
      },
      "294": {
        start: {
          line: 1087,
          column: 54
        },
        end: {
          line: 1087,
          column: 67
        }
      },
      "295": {
        start: {
          line: 1089,
          column: 6
        },
        end: {
          line: 1089,
          column: 48
        }
      },
      "296": {
        start: {
          line: 1090,
          column: 6
        },
        end: {
          line: 1090,
          column: 127
        }
      },
      "297": {
        start: {
          line: 1091,
          column: 6
        },
        end: {
          line: 1091,
          column: 20
        }
      },
      "298": {
        start: {
          line: 1094,
          column: 6
        },
        end: {
          line: 1097,
          column: 9
        }
      },
      "299": {
        start: {
          line: 1101,
          column: 4
        },
        end: {
          line: 1101,
          column: 56
        }
      },
      "300": {
        start: {
          line: 1102,
          column: 4
        },
        end: {
          line: 1105,
          column: 7
        }
      },
      "301": {
        start: {
          line: 1113,
          column: 0
        },
        end: {
          line: 1152,
          column: 3
        }
      },
      "302": {
        start: {
          line: 1114,
          column: 2
        },
        end: {
          line: 1151,
          column: 3
        }
      },
      "303": {
        start: {
          line: 1115,
          column: 19
        },
        end: {
          line: 1115,
          column: 32
        }
      },
      "304": {
        start: {
          line: 1116,
          column: 4
        },
        end: {
          line: 1118,
          column: 5
        }
      },
      "305": {
        start: {
          line: 1117,
          column: 6
        },
        end: {
          line: 1117,
          column: 54
        }
      },
      "306": {
        start: {
          line: 1119,
          column: 24
        },
        end: {
          line: 1119,
          column: 32
        }
      },
      "307": {
        start: {
          line: 1121,
          column: 4
        },
        end: {
          line: 1126,
          column: 5
        }
      },
      "308": {
        start: {
          line: 1122,
          column: 6
        },
        end: {
          line: 1125,
          column: 9
        }
      },
      "309": {
        start: {
          line: 1131,
          column: 4
        },
        end: {
          line: 1138,
          column: 7
        }
      },
      "310": {
        start: {
          line: 1132,
          column: 6
        },
        end: {
          line: 1132,
          column: 85
        }
      },
      "311": {
        start: {
          line: 1133,
          column: 6
        },
        end: {
          line: 1133,
          column: 86
        }
      },
      "312": {
        start: {
          line: 1134,
          column: 6
        },
        end: {
          line: 1134,
          column: 86
        }
      },
      "313": {
        start: {
          line: 1135,
          column: 6
        },
        end: {
          line: 1135,
          column: 84
        }
      },
      "314": {
        start: {
          line: 1136,
          column: 6
        },
        end: {
          line: 1136,
          column: 92
        }
      },
      "315": {
        start: {
          line: 1137,
          column: 6
        },
        end: {
          line: 1137,
          column: 88
        }
      },
      "316": {
        start: {
          line: 1140,
          column: 4
        },
        end: {
          line: 1143,
          column: 7
        }
      },
      "317": {
        start: {
          line: 1146,
          column: 4
        },
        end: {
          line: 1146,
          column: 55
        }
      },
      "318": {
        start: {
          line: 1147,
          column: 4
        },
        end: {
          line: 1150,
          column: 7
        }
      },
      "319": {
        start: {
          line: 1154,
          column: 0
        },
        end: {
          line: 1154,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 22
          },
          end: {
            line: 5,
            column: 23
          }
        },
        loc: {
          start: {
            line: 5,
            column: 36
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 16,
            column: 17
          }
        },
        loc: {
          start: {
            line: 16,
            column: 30
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 42,
            column: 48
          },
          end: {
            line: 42,
            column: 49
          }
        },
        loc: {
          start: {
            line: 42,
            column: 68
          },
          end: {
            line: 131,
            column: 1
          }
        },
        line: 42
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 60,
            column: 43
          },
          end: {
            line: 60,
            column: 44
          }
        },
        loc: {
          start: {
            line: 60,
            column: 51
          },
          end: {
            line: 70,
            column: 7
          }
        },
        line: 60
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 76,
            column: 43
          },
          end: {
            line: 76,
            column: 44
          }
        },
        loc: {
          start: {
            line: 76,
            column: 48
          },
          end: {
            line: 76,
            column: 73
          }
        },
        line: 76
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 137,
            column: 49
          },
          end: {
            line: 137,
            column: 50
          }
        },
        loc: {
          start: {
            line: 137,
            column: 69
          },
          end: {
            line: 202,
            column: 1
          }
        },
        line: 137
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 208,
            column: 42
          },
          end: {
            line: 208,
            column: 43
          }
        },
        loc: {
          start: {
            line: 208,
            column: 62
          },
          end: {
            line: 234,
            column: 1
          }
        },
        line: 208
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 240,
            column: 44
          },
          end: {
            line: 240,
            column: 45
          }
        },
        loc: {
          start: {
            line: 240,
            column: 64
          },
          end: {
            line: 303,
            column: 1
          }
        },
        line: 240
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 309,
            column: 56
          },
          end: {
            line: 309,
            column: 57
          }
        },
        loc: {
          start: {
            line: 309,
            column: 76
          },
          end: {
            line: 375,
            column: 1
          }
        },
        line: 309
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 381,
            column: 43
          },
          end: {
            line: 381,
            column: 44
          }
        },
        loc: {
          start: {
            line: 381,
            column: 63
          },
          end: {
            line: 411,
            column: 1
          }
        },
        line: 381
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 417,
            column: 46
          },
          end: {
            line: 417,
            column: 47
          }
        },
        loc: {
          start: {
            line: 417,
            column: 66
          },
          end: {
            line: 465,
            column: 1
          }
        },
        line: 417
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 471,
            column: 42
          },
          end: {
            line: 471,
            column: 43
          }
        },
        loc: {
          start: {
            line: 471,
            column: 62
          },
          end: {
            line: 665,
            column: 1
          }
        },
        line: 471
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 513,
            column: 32
          },
          end: {
            line: 513,
            column: 33
          }
        },
        loc: {
          start: {
            line: 513,
            column: 42
          },
          end: {
            line: 530,
            column: 9
          }
        },
        line: 513
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 534,
            column: 33
          },
          end: {
            line: 534,
            column: 34
          }
        },
        loc: {
          start: {
            line: 534,
            column: 42
          },
          end: {
            line: 534,
            column: 93
          }
        },
        line: 534
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 538,
            column: 33
          },
          end: {
            line: 538,
            column: 34
          }
        },
        loc: {
          start: {
            line: 538,
            column: 42
          },
          end: {
            line: 538,
            column: 95
          }
        },
        line: 538
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 542,
            column: 33
          },
          end: {
            line: 542,
            column: 34
          }
        },
        loc: {
          start: {
            line: 542,
            column: 42
          },
          end: {
            line: 542,
            column: 93
          }
        },
        line: 542
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 546,
            column: 33
          },
          end: {
            line: 546,
            column: 34
          }
        },
        loc: {
          start: {
            line: 546,
            column: 42
          },
          end: {
            line: 546,
            column: 80
          }
        },
        line: 546
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 550,
            column: 33
          },
          end: {
            line: 550,
            column: 34
          }
        },
        loc: {
          start: {
            line: 550,
            column: 42
          },
          end: {
            line: 550,
            column: 65
          }
        },
        line: 550
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 554,
            column: 20
          },
          end: {
            line: 554,
            column: 21
          }
        },
        loc: {
          start: {
            line: 554,
            column: 30
          },
          end: {
            line: 561,
            column: 9
          }
        },
        line: 554
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 671,
            column: 53
          },
          end: {
            line: 671,
            column: 54
          }
        },
        loc: {
          start: {
            line: 671,
            column: 73
          },
          end: {
            line: 1004,
            column: 1
          }
        },
        line: 671
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 851,
            column: 40
          },
          end: {
            line: 851,
            column: 41
          }
        },
        loc: {
          start: {
            line: 851,
            column: 45
          },
          end: {
            line: 851,
            column: 61
          }
        },
        line: 851
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 852,
            column: 41
          },
          end: {
            line: 852,
            column: 42
          }
        },
        loc: {
          start: {
            line: 852,
            column: 46
          },
          end: {
            line: 852,
            column: 63
          }
        },
        line: 852
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 853,
            column: 47
          },
          end: {
            line: 853,
            column: 48
          }
        },
        loc: {
          start: {
            line: 853,
            column: 59
          },
          end: {
            line: 853,
            column: 106
          }
        },
        line: 853
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 857,
            column: 28
          },
          end: {
            line: 857,
            column: 29
          }
        },
        loc: {
          start: {
            line: 857,
            column: 37
          },
          end: {
            line: 860,
            column: 7
          }
        },
        line: 857
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 866,
            column: 42
          },
          end: {
            line: 866,
            column: 43
          }
        },
        loc: {
          start: {
            line: 866,
            column: 52
          },
          end: {
            line: 888,
            column: 7
          }
        },
        line: 866
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 867,
            column: 41
          },
          end: {
            line: 867,
            column: 42
          }
        },
        loc: {
          start: {
            line: 867,
            column: 51
          },
          end: {
            line: 867,
            column: 86
          }
        },
        line: 867
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 871,
            column: 29
          },
          end: {
            line: 871,
            column: 30
          }
        },
        loc: {
          start: {
            line: 871,
            column: 38
          },
          end: {
            line: 887,
            column: 9
          }
        },
        line: 871
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 1010,
            column: 41
          },
          end: {
            line: 1010,
            column: 42
          }
        },
        loc: {
          start: {
            line: 1010,
            column: 61
          },
          end: {
            line: 1107,
            column: 1
          }
        },
        line: 1010
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 1069,
            column: 38
          },
          end: {
            line: 1069,
            column: 39
          }
        },
        loc: {
          start: {
            line: 1069,
            column: 45
          },
          end: {
            line: 1085,
            column: 7
          }
        },
        line: 1069
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 1087,
            column: 47
          },
          end: {
            line: 1087,
            column: 48
          }
        },
        loc: {
          start: {
            line: 1087,
            column: 54
          },
          end: {
            line: 1087,
            column: 67
          }
        },
        line: 1087
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 1113,
            column: 42
          },
          end: {
            line: 1113,
            column: 43
          }
        },
        loc: {
          start: {
            line: 1113,
            column: 62
          },
          end: {
            line: 1152,
            column: 1
          }
        },
        line: 1113
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 1131,
            column: 22
          },
          end: {
            line: 1131,
            column: 23
          }
        },
        loc: {
          start: {
            line: 1131,
            column: 40
          },
          end: {
            line: 1138,
            column: 5
          }
        },
        line: 1131
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "1": {
        loc: {
          start: {
            line: 69,
            column: 29
          },
          end: {
            line: 69,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 29
          },
          end: {
            line: 69,
            column: 54
          }
        }, {
          start: {
            line: 69,
            column: 58
          },
          end: {
            line: 69,
            column: 59
          }
        }],
        line: 69
      },
      "2": {
        loc: {
          start: {
            line: 76,
            column: 48
          },
          end: {
            line: 76,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 48
          },
          end: {
            line: 76,
            column: 58
          }
        }, {
          start: {
            line: 76,
            column: 62
          },
          end: {
            line: 76,
            column: 73
          }
        }],
        line: 76
      },
      "3": {
        loc: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "4": {
        loc: {
          start: {
            line: 143,
            column: 32
          },
          end: {
            line: 143,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 143,
            column: 47
          },
          end: {
            line: 143,
            column: 52
          }
        }],
        line: 143
      },
      "5": {
        loc: {
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 156,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 156,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "6": {
        loc: {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "7": {
        loc: {
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 167,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 167,
            column: 36
          }
        }, {
          start: {
            line: 167,
            column: 40
          },
          end: {
            line: 167,
            column: 95
          }
        }],
        line: 167
      },
      "8": {
        loc: {
          start: {
            line: 175,
            column: 4
          },
          end: {
            line: 177,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 4
          },
          end: {
            line: 177,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "9": {
        loc: {
          start: {
            line: 199,
            column: 13
          },
          end: {
            line: 199,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 199,
            column: 13
          },
          end: {
            line: 199,
            column: 26
          }
        }, {
          start: {
            line: 199,
            column: 30
          },
          end: {
            line: 199,
            column: 67
          }
        }],
        line: 199
      },
      "10": {
        loc: {
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 211
      },
      "11": {
        loc: {
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "12": {
        loc: {
          start: {
            line: 243,
            column: 4
          },
          end: {
            line: 245,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 4
          },
          end: {
            line: 245,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "13": {
        loc: {
          start: {
            line: 246,
            column: 12
          },
          end: {
            line: 246,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 246,
            column: 21
          },
          end: {
            line: 246,
            column: 26
          }
        }],
        line: 246
      },
      "14": {
        loc: {
          start: {
            line: 246,
            column: 28
          },
          end: {
            line: 246,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 246,
            column: 36
          },
          end: {
            line: 246,
            column: 38
          }
        }],
        line: 246
      },
      "15": {
        loc: {
          start: {
            line: 246,
            column: 40
          },
          end: {
            line: 246,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 246,
            column: 49
          },
          end: {
            line: 246,
            column: 50
          }
        }],
        line: 246
      },
      "16": {
        loc: {
          start: {
            line: 252,
            column: 4
          },
          end: {
            line: 255,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 252,
            column: 4
          },
          end: {
            line: 255,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 252
      },
      "17": {
        loc: {
          start: {
            line: 280,
            column: 27
          },
          end: {
            line: 280,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 280,
            column: 46
          },
          end: {
            line: 280,
            column: 72
          }
        }, {
          start: {
            line: 280,
            column: 75
          },
          end: {
            line: 280,
            column: 77
          }
        }],
        line: 280
      },
      "18": {
        loc: {
          start: {
            line: 312,
            column: 4
          },
          end: {
            line: 314,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 312,
            column: 4
          },
          end: {
            line: 314,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 312
      },
      "19": {
        loc: {
          start: {
            line: 333,
            column: 4
          },
          end: {
            line: 338,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 333,
            column: 4
          },
          end: {
            line: 338,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 333
      },
      "20": {
        loc: {
          start: {
            line: 348,
            column: 53
          },
          end: {
            line: 348,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 348,
            column: 53
          },
          end: {
            line: 348,
            column: 71
          }
        }, {
          start: {
            line: 348,
            column: 75
          },
          end: {
            line: 348,
            column: 85
          }
        }],
        line: 348
      },
      "21": {
        loc: {
          start: {
            line: 384,
            column: 4
          },
          end: {
            line: 386,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 384,
            column: 4
          },
          end: {
            line: 386,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 384
      },
      "22": {
        loc: {
          start: {
            line: 387,
            column: 12
          },
          end: {
            line: 387,
            column: 22
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 387,
            column: 20
          },
          end: {
            line: 387,
            column: 22
          }
        }],
        line: 387
      },
      "23": {
        loc: {
          start: {
            line: 390,
            column: 4
          },
          end: {
            line: 392,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 390,
            column: 4
          },
          end: {
            line: 392,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 390
      },
      "24": {
        loc: {
          start: {
            line: 420,
            column: 4
          },
          end: {
            line: 422,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 420,
            column: 4
          },
          end: {
            line: 422,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 420
      },
      "25": {
        loc: {
          start: {
            line: 423,
            column: 12
          },
          end: {
            line: 423,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 423,
            column: 24
          },
          end: {
            line: 423,
            column: 28
          }
        }],
        line: 423
      },
      "26": {
        loc: {
          start: {
            line: 452,
            column: 19
          },
          end: {
            line: 452,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 452,
            column: 19
          },
          end: {
            line: 452,
            column: 42
          }
        }, {
          start: {
            line: 452,
            column: 46
          },
          end: {
            line: 452,
            column: 50
          }
        }],
        line: 452
      },
      "27": {
        loc: {
          start: {
            line: 480,
            column: 6
          },
          end: {
            line: 480,
            column: 20
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 480,
            column: 15
          },
          end: {
            line: 480,
            column: 20
          }
        }],
        line: 480
      },
      "28": {
        loc: {
          start: {
            line: 481,
            column: 6
          },
          end: {
            line: 481,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 481,
            column: 15
          },
          end: {
            line: 481,
            column: 31
          }
        }],
        line: 481
      },
      "29": {
        loc: {
          start: {
            line: 482,
            column: 6
          },
          end: {
            line: 482,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 482,
            column: 18
          },
          end: {
            line: 482,
            column: 24
          }
        }],
        line: 482
      },
      "30": {
        loc: {
          start: {
            line: 483,
            column: 6
          },
          end: {
            line: 483,
            column: 16
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 483,
            column: 14
          },
          end: {
            line: 483,
            column: 16
          }
        }],
        line: 483
      },
      "31": {
        loc: {
          start: {
            line: 484,
            column: 6
          },
          end: {
            line: 484,
            column: 16
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 484,
            column: 15
          },
          end: {
            line: 484,
            column: 16
          }
        }],
        line: 484
      },
      "32": {
        loc: {
          start: {
            line: 487,
            column: 4
          },
          end: {
            line: 492,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 487,
            column: 4
          },
          end: {
            line: 492,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 487
      },
      "33": {
        loc: {
          start: {
            line: 502,
            column: 6
          },
          end: {
            line: 582,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 502,
            column: 6
          },
          end: {
            line: 582,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 502
      },
      "34": {
        loc: {
          start: {
            line: 502,
            column: 10
          },
          end: {
            line: 502,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 502,
            column: 10
          },
          end: {
            line: 502,
            column: 21
          }
        }, {
          start: {
            line: 502,
            column: 25
          },
          end: {
            line: 502,
            column: 43
          }
        }, {
          start: {
            line: 502,
            column: 47
          },
          end: {
            line: 502,
            column: 68
          }
        }],
        line: 502
      },
      "35": {
        loc: {
          start: {
            line: 518,
            column: 28
          },
          end: {
            line: 518,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 518,
            column: 28
          },
          end: {
            line: 518,
            column: 50
          }
        }, {
          start: {
            line: 518,
            column: 54
          },
          end: {
            line: 518,
            column: 71
          }
        }, {
          start: {
            line: 518,
            column: 75
          },
          end: {
            line: 518,
            column: 76
          }
        }],
        line: 518
      },
      "36": {
        loc: {
          start: {
            line: 519,
            column: 26
          },
          end: {
            line: 519,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 519,
            column: 26
          },
          end: {
            line: 519,
            column: 41
          }
        }, {
          start: {
            line: 519,
            column: 45
          },
          end: {
            line: 519,
            column: 61
          }
        }],
        line: 519
      },
      "37": {
        loc: {
          start: {
            line: 523,
            column: 33
          },
          end: {
            line: 523,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 523,
            column: 33
          },
          end: {
            line: 523,
            column: 49
          }
        }, {
          start: {
            line: 523,
            column: 53
          },
          end: {
            line: 523,
            column: 54
          }
        }],
        line: 523
      },
      "38": {
        loc: {
          start: {
            line: 533,
            column: 8
          },
          end: {
            line: 535,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 533,
            column: 8
          },
          end: {
            line: 535,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 533
      },
      "39": {
        loc: {
          start: {
            line: 537,
            column: 8
          },
          end: {
            line: 539,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 537,
            column: 8
          },
          end: {
            line: 539,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 537
      },
      "40": {
        loc: {
          start: {
            line: 541,
            column: 8
          },
          end: {
            line: 543,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 541,
            column: 8
          },
          end: {
            line: 543,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 541
      },
      "41": {
        loc: {
          start: {
            line: 545,
            column: 8
          },
          end: {
            line: 547,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 545,
            column: 8
          },
          end: {
            line: 547,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 545
      },
      "42": {
        loc: {
          start: {
            line: 545,
            column: 12
          },
          end: {
            line: 545,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 545,
            column: 12
          },
          end: {
            line: 545,
            column: 21
          }
        }, {
          start: {
            line: 545,
            column: 25
          },
          end: {
            line: 545,
            column: 44
          }
        }],
        line: 545
      },
      "43": {
        loc: {
          start: {
            line: 549,
            column: 8
          },
          end: {
            line: 551,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 549,
            column: 8
          },
          end: {
            line: 551,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 549
      },
      "44": {
        loc: {
          start: {
            line: 555,
            column: 23
          },
          end: {
            line: 555,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 555,
            column: 23
          },
          end: {
            line: 555,
            column: 32
          }
        }, {
          start: {
            line: 555,
            column: 36
          },
          end: {
            line: 555,
            column: 52
          }
        }],
        line: 555
      },
      "45": {
        loc: {
          start: {
            line: 556,
            column: 23
          },
          end: {
            line: 556,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 556,
            column: 23
          },
          end: {
            line: 556,
            column: 32
          }
        }, {
          start: {
            line: 556,
            column: 36
          },
          end: {
            line: 556,
            column: 52
          }
        }],
        line: 556
      },
      "46": {
        loc: {
          start: {
            line: 557,
            column: 32
          },
          end: {
            line: 559,
            column: 43
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 558,
            column: 12
          },
          end: {
            line: 558,
            column: 43
          }
        }, {
          start: {
            line: 559,
            column: 12
          },
          end: {
            line: 559,
            column: 43
          }
        }],
        line: 557
      },
      "47": {
        loc: {
          start: {
            line: 674,
            column: 4
          },
          end: {
            line: 676,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 674,
            column: 4
          },
          end: {
            line: 676,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 674
      },
      "48": {
        loc: {
          start: {
            line: 677,
            column: 4
          },
          end: {
            line: 683,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 677,
            column: 4
          },
          end: {
            line: 683,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 677
      },
      "49": {
        loc: {
          start: {
            line: 684,
            column: 12
          },
          end: {
            line: 684,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 684,
            column: 24
          },
          end: {
            line: 684,
            column: 28
          }
        }],
        line: 684
      },
      "50": {
        loc: {
          start: {
            line: 691,
            column: 4
          },
          end: {
            line: 698,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 692,
            column: 6
          },
          end: {
            line: 692,
            column: 67
          }
        }, {
          start: {
            line: 693,
            column: 6
          },
          end: {
            line: 693,
            column: 67
          }
        }, {
          start: {
            line: 694,
            column: 6
          },
          end: {
            line: 694,
            column: 67
          }
        }, {
          start: {
            line: 695,
            column: 6
          },
          end: {
            line: 695,
            column: 73
          }
        }, {
          start: {
            line: 696,
            column: 6
          },
          end: {
            line: 696,
            column: 50
          }
        }, {
          start: {
            line: 697,
            column: 6
          },
          end: {
            line: 697,
            column: 58
          }
        }],
        line: 691
      },
      "51": {
        loc: {
          start: {
            line: 711,
            column: 6
          },
          end: {
            line: 742,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 711,
            column: 6
          },
          end: {
            line: 742,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 711
      },
      "52": {
        loc: {
          start: {
            line: 715,
            column: 10
          },
          end: {
            line: 740,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 715,
            column: 10
          },
          end: {
            line: 740,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 715
      },
      "53": {
        loc: {
          start: {
            line: 720,
            column: 14
          },
          end: {
            line: 736,
            column: 15
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 720,
            column: 14
          },
          end: {
            line: 736,
            column: 15
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 720
      },
      "54": {
        loc: {
          start: {
            line: 774,
            column: 6
          },
          end: {
            line: 777,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 774,
            column: 6
          },
          end: {
            line: 777,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 774
      },
      "55": {
        loc: {
          start: {
            line: 824,
            column: 10
          },
          end: {
            line: 839,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 824,
            column: 10
          },
          end: {
            line: 839,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 824
      },
      "56": {
        loc: {
          start: {
            line: 848,
            column: 4
          },
          end: {
            line: 898,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 848,
            column: 4
          },
          end: {
            line: 898,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 848
      },
      "57": {
        loc: {
          start: {
            line: 848,
            column: 8
          },
          end: {
            line: 848,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 848,
            column: 8
          },
          end: {
            line: 848,
            column: 21
          }
        }, {
          start: {
            line: 848,
            column: 25
          },
          end: {
            line: 848,
            column: 49
          }
        }],
        line: 848
      },
      "58": {
        loc: {
          start: {
            line: 858,
            column: 8
          },
          end: {
            line: 858,
            column: 73
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 858,
            column: 8
          },
          end: {
            line: 858,
            column: 73
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 858
      },
      "59": {
        loc: {
          start: {
            line: 875,
            column: 10
          },
          end: {
            line: 886,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 875,
            column: 10
          },
          end: {
            line: 886,
            column: 11
          }
        }, {
          start: {
            line: 878,
            column: 17
          },
          end: {
            line: 886,
            column: 11
          }
        }],
        line: 875
      },
      "60": {
        loc: {
          start: {
            line: 879,
            column: 12
          },
          end: {
            line: 885,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 879,
            column: 12
          },
          end: {
            line: 885,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 879
      },
      "61": {
        loc: {
          start: {
            line: 882,
            column: 14
          },
          end: {
            line: 882,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 882,
            column: 14
          },
          end: {
            line: 882,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 882
      },
      "62": {
        loc: {
          start: {
            line: 901,
            column: 20
          },
          end: {
            line: 912,
            column: 5
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 901,
            column: 20
          },
          end: {
            line: 901,
            column: 31
          }
        }, {
          start: {
            line: 901,
            column: 35
          },
          end: {
            line: 901,
            column: 44
          }
        }, {
          start: {
            line: 901,
            column: 48
          },
          end: {
            line: 912,
            column: 5
          }
        }],
        line: 901
      },
      "63": {
        loc: {
          start: {
            line: 915,
            column: 24
          },
          end: {
            line: 915,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 915,
            column: 38
          },
          end: {
            line: 915,
            column: 61
          }
        }, {
          start: {
            line: 915,
            column: 64
          },
          end: {
            line: 915,
            column: 99
          }
        }],
        line: 915
      },
      "64": {
        loc: {
          start: {
            line: 915,
            column: 73
          },
          end: {
            line: 915,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 915,
            column: 73
          },
          end: {
            line: 915,
            column: 93
          }
        }, {
          start: {
            line: 915,
            column: 97
          },
          end: {
            line: 915,
            column: 98
          }
        }],
        line: 915
      },
      "65": {
        loc: {
          start: {
            line: 916,
            column: 26
          },
          end: {
            line: 916,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 916,
            column: 40
          },
          end: {
            line: 916,
            column: 65
          }
        }, {
          start: {
            line: 916,
            column: 68
          },
          end: {
            line: 916,
            column: 105
          }
        }],
        line: 916
      },
      "66": {
        loc: {
          start: {
            line: 916,
            column: 77
          },
          end: {
            line: 916,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 916,
            column: 77
          },
          end: {
            line: 916,
            column: 99
          }
        }, {
          start: {
            line: 916,
            column: 103
          },
          end: {
            line: 916,
            column: 104
          }
        }],
        line: 916
      },
      "67": {
        loc: {
          start: {
            line: 917,
            column: 25
          },
          end: {
            line: 917,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 917,
            column: 39
          },
          end: {
            line: 917,
            column: 63
          }
        }, {
          start: {
            line: 917,
            column: 66
          },
          end: {
            line: 917,
            column: 102
          }
        }],
        line: 917
      },
      "68": {
        loc: {
          start: {
            line: 917,
            column: 75
          },
          end: {
            line: 917,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 917,
            column: 75
          },
          end: {
            line: 917,
            column: 96
          }
        }, {
          start: {
            line: 917,
            column: 100
          },
          end: {
            line: 917,
            column: 101
          }
        }],
        line: 917
      },
      "69": {
        loc: {
          start: {
            line: 918,
            column: 20
          },
          end: {
            line: 918,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 918,
            column: 39
          },
          end: {
            line: 918,
            column: 72
          }
        }, {
          start: {
            line: 918,
            column: 76
          },
          end: {
            line: 918,
            column: 77
          }
        }],
        line: 918
      },
      "70": {
        loc: {
          start: {
            line: 919,
            column: 21
          },
          end: {
            line: 919,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 919,
            column: 35
          },
          end: {
            line: 919,
            column: 55
          }
        }, {
          start: {
            line: 919,
            column: 58
          },
          end: {
            line: 919,
            column: 92
          }
        }],
        line: 919
      },
      "71": {
        loc: {
          start: {
            line: 919,
            column: 69
          },
          end: {
            line: 919,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 919,
            column: 69
          },
          end: {
            line: 919,
            column: 86
          }
        }, {
          start: {
            line: 919,
            column: 90
          },
          end: {
            line: 919,
            column: 91
          }
        }],
        line: 919
      },
      "72": {
        loc: {
          start: {
            line: 920,
            column: 25
          },
          end: {
            line: 922,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 921,
            column: 6
          },
          end: {
            line: 921,
            column: 108
          }
        }, {
          start: {
            line: 922,
            column: 7
          },
          end: {
            line: 922,
            column: 75
          }
        }],
        line: 920
      },
      "73": {
        loc: {
          start: {
            line: 920,
            column: 25
          },
          end: {
            line: 920,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 920,
            column: 25
          },
          end: {
            line: 920,
            column: 41
          }
        }, {
          start: {
            line: 920,
            column: 45
          },
          end: {
            line: 920,
            column: 57
          }
        }],
        line: 920
      },
      "74": {
        loc: {
          start: {
            line: 922,
            column: 7
          },
          end: {
            line: 922,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 922,
            column: 22
          },
          end: {
            line: 922,
            column: 68
          }
        }, {
          start: {
            line: 922,
            column: 71
          },
          end: {
            line: 922,
            column: 75
          }
        }],
        line: 922
      },
      "75": {
        loc: {
          start: {
            line: 933,
            column: 18
          },
          end: {
            line: 933,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 933,
            column: 36
          },
          end: {
            line: 933,
            column: 83
          }
        }, {
          start: {
            line: 933,
            column: 86
          },
          end: {
            line: 933,
            column: 87
          }
        }],
        line: 933
      },
      "76": {
        loc: {
          start: {
            line: 934,
            column: 30
          },
          end: {
            line: 934,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 934,
            column: 30
          },
          end: {
            line: 934,
            column: 45
          }
        }, {
          start: {
            line: 934,
            column: 49
          },
          end: {
            line: 934,
            column: 50
          }
        }],
        line: 934
      },
      "77": {
        loc: {
          start: {
            line: 935,
            column: 32
          },
          end: {
            line: 935,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 935,
            column: 32
          },
          end: {
            line: 935,
            column: 50
          }
        }, {
          start: {
            line: 935,
            column: 54
          },
          end: {
            line: 935,
            column: 55
          }
        }],
        line: 935
      },
      "78": {
        loc: {
          start: {
            line: 936,
            column: 33
          },
          end: {
            line: 936,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 936,
            column: 33
          },
          end: {
            line: 936,
            column: 52
          }
        }, {
          start: {
            line: 936,
            column: 56
          },
          end: {
            line: 936,
            column: 57
          }
        }],
        line: 936
      },
      "79": {
        loc: {
          start: {
            line: 937,
            column: 39
          },
          end: {
            line: 937,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 937,
            column: 39
          },
          end: {
            line: 937,
            column: 65
          }
        }, {
          start: {
            line: 937,
            column: 69
          },
          end: {
            line: 937,
            column: 70
          }
        }],
        line: 937
      },
      "80": {
        loc: {
          start: {
            line: 938,
            column: 23
          },
          end: {
            line: 938,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 938,
            column: 37
          },
          end: {
            line: 938,
            column: 60
          }
        }, {
          start: {
            line: 938,
            column: 63
          },
          end: {
            line: 938,
            column: 100
          }
        }],
        line: 938
      },
      "81": {
        loc: {
          start: {
            line: 938,
            column: 74
          },
          end: {
            line: 938,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 938,
            column: 74
          },
          end: {
            line: 938,
            column: 94
          }
        }, {
          start: {
            line: 938,
            column: 98
          },
          end: {
            line: 938,
            column: 99
          }
        }],
        line: 938
      },
      "82": {
        loc: {
          start: {
            line: 943,
            column: 20
          },
          end: {
            line: 943,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 943,
            column: 34
          },
          end: {
            line: 943,
            column: 44
          }
        }, {
          start: {
            line: 943,
            column: 48
          },
          end: {
            line: 943,
            column: 79
          }
        }],
        line: 943
      },
      "83": {
        loc: {
          start: {
            line: 943,
            column: 48
          },
          end: {
            line: 943,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 943,
            column: 60
          },
          end: {
            line: 943,
            column: 70
          }
        }, {
          start: {
            line: 943,
            column: 73
          },
          end: {
            line: 943,
            column: 79
          }
        }],
        line: 943
      },
      "84": {
        loc: {
          start: {
            line: 945,
            column: 26
          },
          end: {
            line: 945,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 945,
            column: 40
          },
          end: {
            line: 945,
            column: 65
          }
        }, {
          start: {
            line: 945,
            column: 68
          },
          end: {
            line: 945,
            column: 69
          }
        }],
        line: 945
      },
      "85": {
        loc: {
          start: {
            line: 946,
            column: 21
          },
          end: {
            line: 946,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 946,
            column: 33
          },
          end: {
            line: 946,
            column: 65
          }
        }, {
          start: {
            line: 946,
            column: 68
          },
          end: {
            line: 946,
            column: 69
          }
        }],
        line: 946
      },
      "86": {
        loc: {
          start: {
            line: 960,
            column: 14
          },
          end: {
            line: 960,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 960,
            column: 14
          },
          end: {
            line: 960,
            column: 27
          }
        }, {
          start: {
            line: 960,
            column: 31
          },
          end: {
            line: 960,
            column: 47
          }
        }, {
          start: {
            line: 960,
            column: 51
          },
          end: {
            line: 960,
            column: 60
          }
        }],
        line: 960
      },
      "87": {
        loc: {
          start: {
            line: 961,
            column: 17
          },
          end: {
            line: 961,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 961,
            column: 17
          },
          end: {
            line: 961,
            column: 36
          }
        }, {
          start: {
            line: 961,
            column: 40
          },
          end: {
            line: 961,
            column: 44
          }
        }],
        line: 961
      },
      "88": {
        loc: {
          start: {
            line: 962,
            column: 17
          },
          end: {
            line: 962,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 962,
            column: 17
          },
          end: {
            line: 962,
            column: 30
          }
        }, {
          start: {
            line: 962,
            column: 34
          },
          end: {
            line: 962,
            column: 43
          }
        }],
        line: 962
      },
      "89": {
        loc: {
          start: {
            line: 971,
            column: 17
          },
          end: {
            line: 971,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 971,
            column: 58
          },
          end: {
            line: 971,
            column: 71
          }
        }, {
          start: {
            line: 971,
            column: 74
          },
          end: {
            line: 971,
            column: 83
          }
        }],
        line: 971
      },
      "90": {
        loc: {
          start: {
            line: 973,
            column: 19
          },
          end: {
            line: 973,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 973,
            column: 19
          },
          end: {
            line: 973,
            column: 32
          }
        }, {
          start: {
            line: 973,
            column: 36
          },
          end: {
            line: 973,
            column: 45
          }
        }],
        line: 973
      },
      "91": {
        loc: {
          start: {
            line: 1013,
            column: 4
          },
          end: {
            line: 1015,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1013,
            column: 4
          },
          end: {
            line: 1015,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1013
      },
      "92": {
        loc: {
          start: {
            line: 1016,
            column: 12
          },
          end: {
            line: 1016,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1016,
            column: 21
          },
          end: {
            line: 1016,
            column: 26
          }
        }],
        line: 1016
      },
      "93": {
        loc: {
          start: {
            line: 1023,
            column: 4
          },
          end: {
            line: 1026,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1023,
            column: 4
          },
          end: {
            line: 1026,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1023
      },
      "94": {
        loc: {
          start: {
            line: 1028,
            column: 4
          },
          end: {
            line: 1031,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1028,
            column: 4
          },
          end: {
            line: 1031,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1028
      },
      "95": {
        loc: {
          start: {
            line: 1060,
            column: 4
          },
          end: {
            line: 1098,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1060,
            column: 4
          },
          end: {
            line: 1098,
            column: 5
          }
        }, {
          start: {
            line: 1092,
            column: 11
          },
          end: {
            line: 1098,
            column: 5
          }
        }],
        line: 1060
      },
      "96": {
        loc: {
          start: {
            line: 1116,
            column: 4
          },
          end: {
            line: 1118,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1116,
            column: 4
          },
          end: {
            line: 1118,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1116
      },
      "97": {
        loc: {
          start: {
            line: 1121,
            column: 4
          },
          end: {
            line: 1126,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1121,
            column: 4
          },
          end: {
            line: 1126,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1121
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0],
      "14": [0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0],
      "26": [0, 0],
      "27": [0],
      "28": [0],
      "29": [0],
      "30": [0],
      "31": [0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0, 0],
      "35": [0, 0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0],
      "50": [0, 0, 0, 0, 0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0, 0],
      "96": [0, 0],
      "97": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1ad46d8efcb2c1d305f4e18d5ec639e7e16c5203"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_18esqvz1h1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_18esqvz1h1();
const express =
/* istanbul ignore next */
(cov_18esqvz1h1().s[0]++, require('express'));
const router =
/* istanbul ignore next */
(cov_18esqvz1h1().s[1]++, express.Router());

// Health endpoint (no auth required)
/* istanbul ignore next */
cov_18esqvz1h1().s[2]++;
router.get('/health', (req, res) => {
  /* istanbul ignore next */
  cov_18esqvz1h1().f[0]++;
  cov_18esqvz1h1().s[3]++;
  res.json({
    success: true,
    status: 'operational',
    service: 'trades',
    timestamp: new Date().toISOString(),
    message: 'Trade History service is running'
  });
});

// Basic root endpoint (public)
/* istanbul ignore next */
cov_18esqvz1h1().s[4]++;
router.get('/', (req, res) => {
  /* istanbul ignore next */
  cov_18esqvz1h1().f[1]++;
  cov_18esqvz1h1().s[5]++;
  res.json({
    success: true,
    message: 'Trade History API - Ready',
    timestamp: new Date().toISOString(),
    status: 'operational'
  });
});
const {
  authenticateToken
} =
/* istanbul ignore next */
(cov_18esqvz1h1().s[6]++, require('../middleware/auth'));
const {
  query,
  transaction
} =
/* istanbul ignore next */
(cov_18esqvz1h1().s[7]++, require('../utils/database'));
const TradeAnalyticsService =
/* istanbul ignore next */
(cov_18esqvz1h1().s[8]++, require('../services/tradeAnalyticsService'));
const apiKeyService =
/* istanbul ignore next */
(cov_18esqvz1h1().s[9]++, require('../utils/simpleApiKeyService'));
const AlpacaService =
/* istanbul ignore next */
(cov_18esqvz1h1().s[10]++, require('../utils/alpacaService'));

// Initialize trade analytics service
let tradeAnalyticsService;

/**
 * Professional Trade Analysis API Routes
 * Integrates with user API keys from settings for broker data import
 */

/**
 * @route GET /api/trades/import/status
 * @desc Get trade import status for user
 */
/* istanbul ignore next */
cov_18esqvz1h1().s[11]++;
router.get('/import/status', authenticateToken, async (req, res) => {
  /* istanbul ignore next */
  cov_18esqvz1h1().f[2]++;
  cov_18esqvz1h1().s[12]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[13]++, req.user?.sub);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[14]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_18esqvz1h1().b[0][0]++;
      cov_18esqvz1h1().s[15]++;
      throw new Error('User authentication required');
    } else
    /* istanbul ignore next */
    {
      cov_18esqvz1h1().b[0][1]++;
    } // Fixed: use req.user.sub instead of req.user.id
    cov_18esqvz1h1().s[16]++;
    console.log('Getting trade import status for user:', userId);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[17]++;
    try {
      // Get broker configurations
      const result =
      /* istanbul ignore next */
      (cov_18esqvz1h1().s[18]++, await query(`
        SELECT bc.*, uak.provider, uak.is_active as key_active
        FROM broker_api_configs bc
        JOIN user_api_keys uak ON bc.user_id = uak.user_id AND bc.broker = uak.provider
        WHERE bc.user_id = $1
        ORDER BY bc.updated_at DESC
      `, [userId]));
      const brokerStatus =
      /* istanbul ignore next */
      (cov_18esqvz1h1().s[19]++, result.rows.map(row => {
        /* istanbul ignore next */
        cov_18esqvz1h1().f[3]++;
        cov_18esqvz1h1().s[20]++;
        return {
          broker: row.broker,
          provider: row.provider,
          isActive: row.is_active,
          keyActive: row.key_active,
          isPaperTrading: row.is_paper_trading,
          lastSyncStatus: row.last_sync_status,
          lastSyncError: row.last_sync_error,
          lastImportDate: row.last_import_date,
          totalTradesImported:
          /* istanbul ignore next */
          (cov_18esqvz1h1().b[1][0]++, row.total_trades_imported) ||
          /* istanbul ignore next */
          (cov_18esqvz1h1().b[1][1]++, 0)
        };
      }));
      /* istanbul ignore next */
      cov_18esqvz1h1().s[21]++;
      res.json({
        success: true,
        brokerStatus,
        totalBrokers: brokerStatus.length,
        activeBrokers: brokerStatus.filter(b => {
          /* istanbul ignore next */
          cov_18esqvz1h1().f[4]++;
          cov_18esqvz1h1().s[22]++;
          return /* istanbul ignore next */(cov_18esqvz1h1().b[2][0]++, b.isActive) &&
          /* istanbul ignore next */
          (cov_18esqvz1h1().b[2][1]++, b.keyActive);
        }).length
      });
    } catch (dbError) {
      /* istanbul ignore next */
      cov_18esqvz1h1().s[23]++;
      console.log('Database query failed, returning mock import status:', dbError.message);

      // Return empty broker status with comprehensive diagnostics
      /* istanbul ignore next */
      cov_18esqvz1h1().s[24]++;
      console.error('❌ Broker status unavailable - comprehensive diagnosis needed', {
        database_query_failed: true,
        detailed_diagnostics: {
          attempted_operations: ['broker_api_configs_query', 'user_api_keys_join'],
          potential_causes: ['Database connection failure', 'broker_api_configs table missing', 'user_api_keys table missing', 'Data sync process failed', 'User authentication issues'],
          troubleshooting_steps: ['Check database connectivity', 'Verify broker_api_configs table exists', 'Verify user_api_keys table exists', 'Check data sync process status', 'Review user authentication flow'],
          system_checks: ['Database health status', 'Table existence validation', 'Data sync service availability', 'Authentication service health']
        }
      });
      const emptyBrokerStatus =
      /* istanbul ignore next */
      (cov_18esqvz1h1().s[25]++, []);
      /* istanbul ignore next */
      cov_18esqvz1h1().s[26]++;
      res.json({
        success: true,
        brokerStatus: emptyBrokerStatus,
        totalBrokers: 0,
        activeBrokers: 0,
        message: 'No broker configurations found - configure your broker API keys in settings'
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_18esqvz1h1().s[27]++;
    console.error('Error fetching import status:', error);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[28]++;
    res.json({
      success: true,
      brokerStatus: [],
      totalBrokers: 0,
      activeBrokers: 0,
      note: 'Unable to fetch import status'
    });
  }
});

/**
 * @route POST /api/trades/import/alpaca
 * @desc Import trades from Alpaca using stored API keys
 */
/* istanbul ignore next */
cov_18esqvz1h1().s[29]++;
router.post('/import/alpaca', authenticateToken, async (req, res) => {
  /* istanbul ignore next */
  cov_18esqvz1h1().f[5]++;
  cov_18esqvz1h1().s[30]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[31]++, req.user?.sub);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[32]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_18esqvz1h1().b[3][0]++;
      cov_18esqvz1h1().s[33]++;
      throw new Error('User authentication required');
    } else
    /* istanbul ignore next */
    {
      cov_18esqvz1h1().b[3][1]++;
    }
    const {
      startDate,
      endDate,
      forceRefresh =
      /* istanbul ignore next */
      (cov_18esqvz1h1().b[4][0]++, false)
    } =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[34]++, req.body);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[35]++;
    console.log(`🔄 [TRADES] Import requested for user: ${userId}`);

    // Get user's Alpaca API credentials using simple API key service
    const credentials =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[36]++, await apiKeyService.getApiKey(userId, 'alpaca'));
    /* istanbul ignore next */
    cov_18esqvz1h1().s[37]++;
    if (!credentials) {
      /* istanbul ignore next */
      cov_18esqvz1h1().b[5][0]++;
      cov_18esqvz1h1().s[38]++;
      return res.status(401).json({
        success: false,
        error: 'No active Alpaca API keys found',
        message: 'Please configure your Alpaca API keys in settings'
      });
    } else
    /* istanbul ignore next */
    {
      cov_18esqvz1h1().b[5][1]++;
    }
    cov_18esqvz1h1().s[39]++;
    console.log(`✅ [TRADES] Found Alpaca credentials for user`);
    const {
      keyId: apiKey,
      secretKey: apiSecret
    } =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[40]++, credentials);

    // Check if import is already in progress
    const configResult =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[41]++, await query(`
      SELECT last_sync_status FROM broker_api_configs 
      WHERE user_id = $1 AND broker = 'alpaca'
    `, [userId]));
    /* istanbul ignore next */
    cov_18esqvz1h1().s[42]++;
    if (
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[7][0]++, configResult.rows.length > 0) &&
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[7][1]++, configResult.rows[0].last_sync_status === 'in_progress')) {
      /* istanbul ignore next */
      cov_18esqvz1h1().b[6][0]++;
      cov_18esqvz1h1().s[43]++;
      return res.status(409).json({
        success: false,
        error: 'Trade import already in progress. Please wait for it to complete.'
      });
    } else
    /* istanbul ignore next */
    {
      cov_18esqvz1h1().b[6][1]++;
    }

    // Initialize trade analytics service
    cov_18esqvz1h1().s[44]++;
    if (!tradeAnalyticsService) {
      /* istanbul ignore next */
      cov_18esqvz1h1().b[8][0]++;
      cov_18esqvz1h1().s[45]++;
      tradeAnalyticsService = new TradeAnalyticsService();
    } else
    /* istanbul ignore next */
    {
      cov_18esqvz1h1().b[8][1]++;
    }

    // Start import process
    const importResult =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[46]++, await tradeAnalyticsService.importAlpacaTrades(userId, apiKey, apiSecret, credentials.isSandbox, startDate, endDate));
    /* istanbul ignore next */
    cov_18esqvz1h1().s[47]++;
    res.json({
      success: true,
      message: 'Trade import completed successfully',
      data: importResult
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_18esqvz1h1().s[48]++;
    console.error('Error importing Alpaca trades:', error);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[49]++;
    res.status(500).json({
      success: false,
      error:
      /* istanbul ignore next */
      (cov_18esqvz1h1().b[9][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_18esqvz1h1().b[9][1]++, 'Failed to import trades from Alpaca')
    });
  }
});

/**
 * @route GET /api/trades/summary
 * @desc Get comprehensive trade analysis summary
 */
/* istanbul ignore next */
cov_18esqvz1h1().s[50]++;
router.get('/summary', authenticateToken, async (req, res) => {
  /* istanbul ignore next */
  cov_18esqvz1h1().f[6]++;
  cov_18esqvz1h1().s[51]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[52]++, req.user?.sub);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[53]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_18esqvz1h1().b[10][0]++;
      cov_18esqvz1h1().s[54]++;
      throw new Error('User authentication required');
    } else
    /* istanbul ignore next */
    {
      cov_18esqvz1h1().b[10][1]++;
    }
    // Database queries will use the query function directly
    cov_18esqvz1h1().s[55]++;
    if (!tradeAnalyticsService) {
      /* istanbul ignore next */
      cov_18esqvz1h1().b[11][0]++;
      cov_18esqvz1h1().s[56]++;
      tradeAnalyticsService = new TradeAnalyticsService();
    } else
    /* istanbul ignore next */
    {
      cov_18esqvz1h1().b[11][1]++;
    }
    const summary =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[57]++, await tradeAnalyticsService.getTradeAnalysisSummary(userId));
    /* istanbul ignore next */
    cov_18esqvz1h1().s[58]++;
    res.json({
      success: true,
      data: summary
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_18esqvz1h1().s[59]++;
    console.error('Error fetching trade summary:', error);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[60]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch trade summary'
    });
  }
});

/**
 * @route GET /api/trades/positions
 * @desc Get position history with analytics
 */
/* istanbul ignore next */
cov_18esqvz1h1().s[61]++;
router.get('/positions', authenticateToken, async (req, res) => {
  /* istanbul ignore next */
  cov_18esqvz1h1().f[7]++;
  cov_18esqvz1h1().s[62]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[63]++, req.user?.sub);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[64]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_18esqvz1h1().b[12][0]++;
      cov_18esqvz1h1().s[65]++;
      throw new Error('User authentication required');
    } else
    /* istanbul ignore next */
    {
      cov_18esqvz1h1().b[12][1]++;
    }
    const {
      status =
      /* istanbul ignore next */
      (cov_18esqvz1h1().b[13][0]++, 'all'),
      limit =
      /* istanbul ignore next */
      (cov_18esqvz1h1().b[14][0]++, 50),
      offset =
      /* istanbul ignore next */
      (cov_18esqvz1h1().b[15][0]++, 0)
    } =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[66]++, req.query);
    // Database queries will use the query function directly

    let statusFilter =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[67]++, '');
    let params =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[68]++, [userId, parseInt(limit), parseInt(offset)]);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[69]++;
    if (status !== 'all') {
      /* istanbul ignore next */
      cov_18esqvz1h1().b[16][0]++;
      cov_18esqvz1h1().s[70]++;
      statusFilter = 'AND ph.status = $4';
      /* istanbul ignore next */
      cov_18esqvz1h1().s[71]++;
      params.push(status);
    } else
    /* istanbul ignore next */
    {
      cov_18esqvz1h1().b[16][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[72]++, await query(`
      SELECT 
        ph.*,
        ta.entry_signal_quality,
        ta.exit_signal_quality,
        ta.risk_reward_ratio,
        ta.alpha_generated,
        ta.trade_pattern_type,
        ta.pattern_confidence,
        s.sector,
        s.industry
      FROM position_history ph
      LEFT JOIN trade_analytics ta ON ph.id = ta.position_id
      LEFT JOIN symbols s ON ph.symbol = s.symbol
      WHERE ph.user_id = $1 ${statusFilter}
      ORDER BY ph.opened_at DESC
      LIMIT $2 OFFSET $3
    `, params));

    // Get total count
    const countResult =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[73]++, await query(`
      SELECT COUNT(*) as total 
      FROM position_history 
      WHERE user_id = $1 ${status !== 'all' ?
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[17][0]++, `AND status = '${status}'`) :
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[17][1]++, '')}
    `, [userId]));
    /* istanbul ignore next */
    cov_18esqvz1h1().s[74]++;
    res.json({
      success: true,
      data: {
        positions: result.rows,
        pagination: {
          total: parseInt(countResult.rows[0].total),
          limit: parseInt(limit),
          offset: parseInt(offset),
          hasMore: parseInt(offset) + parseInt(limit) < parseInt(countResult.rows[0].total)
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_18esqvz1h1().s[75]++;
    console.error('Error fetching positions:', error);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[76]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch positions'
    });
  }
});

/**
 * @route GET /api/trades/analytics/:positionId
 * @desc Get detailed analytics for a specific position
 */
/* istanbul ignore next */
cov_18esqvz1h1().s[77]++;
router.get('/analytics/:positionId', authenticateToken, async (req, res) => {
  /* istanbul ignore next */
  cov_18esqvz1h1().f[8]++;
  cov_18esqvz1h1().s[78]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[79]++, req.user?.sub);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[80]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_18esqvz1h1().b[18][0]++;
      cov_18esqvz1h1().s[81]++;
      throw new Error('User authentication required');
    } else
    /* istanbul ignore next */
    {
      cov_18esqvz1h1().b[18][1]++;
    }
    const positionId =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[82]++, parseInt(req.params.positionId));
    // Database queries will use the query function directly

    // Get position with full analytics
    const result =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[83]++, await query(`
      SELECT 
        ph.*,
        ta.*,
        s.sector,
        s.industry,
        s.market_cap,
        s.description as company_description
      FROM position_history ph
      LEFT JOIN trade_analytics ta ON ph.id = ta.position_id
      LEFT JOIN symbols s ON ph.symbol = s.symbol
      WHERE ph.id = $1 AND ph.user_id = $2
    `, [positionId, userId]));
    /* istanbul ignore next */
    cov_18esqvz1h1().s[84]++;
    if (result.rows.length === 0) {
      /* istanbul ignore next */
      cov_18esqvz1h1().b[19][0]++;
      cov_18esqvz1h1().s[85]++;
      return res.status(404).json({
        success: false,
        error: 'Position not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_18esqvz1h1().b[19][1]++;
    }
    const position =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[86]++, result.rows[0]);

    // Get related executions
    const executionsResult =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[87]++, await query(`
      SELECT * FROM trade_executions 
      WHERE user_id = $1 AND symbol = $2 
      AND execution_time BETWEEN $3 AND $4
      ORDER BY execution_time
    `, [userId, position.symbol, position.opened_at,
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[20][0]++, position.closed_at) ||
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[20][1]++, new Date())]));
    /* istanbul ignore next */
    cov_18esqvz1h1().s[88]++;
    res.json({
      success: true,
      data: {
        position,
        executions: executionsResult.rows,
        analytics: {
          riskReward: position.risk_reward_ratio,
          alphaGenerated: position.alpha_generated,
          patternType: position.trade_pattern_type,
          patternConfidence: position.pattern_confidence,
          entryQuality: position.entry_signal_quality,
          exitQuality: position.exit_signal_quality,
          emotionalState: position.emotional_state_score,
          disciplineScore: position.discipline_score
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_18esqvz1h1().s[89]++;
    console.error('Error fetching position analytics:', error);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[90]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch position analytics'
    });
  }
});

/**
 * @route GET /api/trades/insights
 * @desc Get AI-generated trade insights and recommendations
 */
/* istanbul ignore next */
cov_18esqvz1h1().s[91]++;
router.get('/insights', authenticateToken, async (req, res) => {
  /* istanbul ignore next */
  cov_18esqvz1h1().f[9]++;
  cov_18esqvz1h1().s[92]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[93]++, req.user?.sub);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[94]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_18esqvz1h1().b[21][0]++;
      cov_18esqvz1h1().s[95]++;
      throw new Error('User authentication required');
    } else
    /* istanbul ignore next */
    {
      cov_18esqvz1h1().b[21][1]++;
    }
    const {
      limit =
      /* istanbul ignore next */
      (cov_18esqvz1h1().b[22][0]++, 10)
    } =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[96]++, req.query);
    // Database queries will use the query function directly
    /* istanbul ignore next */
    cov_18esqvz1h1().s[97]++;
    if (!tradeAnalyticsService) {
      /* istanbul ignore next */
      cov_18esqvz1h1().b[23][0]++;
      cov_18esqvz1h1().s[98]++;
      tradeAnalyticsService = new TradeAnalyticsService();
    } else
    /* istanbul ignore next */
    {
      cov_18esqvz1h1().b[23][1]++;
    }
    const insights =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[99]++, await tradeAnalyticsService.getTradeInsights(userId, parseInt(limit)));
    /* istanbul ignore next */
    cov_18esqvz1h1().s[100]++;
    res.json({
      success: true,
      data: {
        insights,
        total: insights.length
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_18esqvz1h1().s[101]++;
    console.error('Error fetching trade insights:', error);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[102]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch trade insights'
    });
  }
});

/**
 * @route GET /api/trades/performance
 * @desc Get performance metrics and benchmarks
 */
/* istanbul ignore next */
cov_18esqvz1h1().s[103]++;
router.get('/performance', authenticateToken, async (req, res) => {
  /* istanbul ignore next */
  cov_18esqvz1h1().f[10]++;
  cov_18esqvz1h1().s[104]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[105]++, req.user?.sub);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[106]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_18esqvz1h1().b[24][0]++;
      cov_18esqvz1h1().s[107]++;
      throw new Error('User authentication required');
    } else
    /* istanbul ignore next */
    {
      cov_18esqvz1h1().b[24][1]++;
    }
    const {
      timeframe =
      /* istanbul ignore next */
      (cov_18esqvz1h1().b[25][0]++, '3M')
    } =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[108]++, req.query);
    // Database queries will use the query function directly

    // Get performance benchmarks
    const benchmarkResult =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[109]++, await query(`
      SELECT * FROM performance_benchmarks 
      WHERE user_id = $1 
      ORDER BY benchmark_date DESC
      LIMIT 90
    `, [userId]));

    // Get portfolio summary
    const portfolioResult =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[110]++, await query(`
      SELECT * FROM portfolio_summary 
      WHERE user_id = $1
    `, [userId]));

    // Get performance attribution
    const attributionResult =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[111]++, await query(`
      SELECT * FROM performance_attribution 
      WHERE user_id = $1 
      ORDER BY closed_at DESC
      LIMIT 50
    `, [userId]));
    /* istanbul ignore next */
    cov_18esqvz1h1().s[112]++;
    res.json({
      success: true,
      data: {
        benchmarks: benchmarkResult.rows,
        portfolio:
        /* istanbul ignore next */
        (cov_18esqvz1h1().b[26][0]++, portfolioResult.rows[0]) ||
        /* istanbul ignore next */
        (cov_18esqvz1h1().b[26][1]++, null),
        attribution: attributionResult.rows,
        timeframe
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_18esqvz1h1().s[113]++;
    console.error('Error fetching performance data:', error);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[114]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch performance data'
    });
  }
});

/**
 * @route GET /api/trades/history
 * @desc Get paginated trade history using real broker API integration
 */
/* istanbul ignore next */
cov_18esqvz1h1().s[115]++;
router.get('/history', authenticateToken, async (req, res) => {
  /* istanbul ignore next */
  cov_18esqvz1h1().f[11]++;
  cov_18esqvz1h1().s[116]++;
  try {
    /* istanbul ignore next */
    cov_18esqvz1h1().s[117]++;
    console.log('📈 Trade history request received for user:', req.user?.sub);
    const userId =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[118]++, req.user?.sub);
    const {
      symbol,
      startDate,
      endDate,
      tradeType,
      status =
      /* istanbul ignore next */
      (cov_18esqvz1h1().b[27][0]++, 'all'),
      sortBy =
      /* istanbul ignore next */
      (cov_18esqvz1h1().b[28][0]++, 'execution_time'),
      sortOrder =
      /* istanbul ignore next */
      (cov_18esqvz1h1().b[29][0]++, 'desc'),
      limit =
      /* istanbul ignore next */
      (cov_18esqvz1h1().b[30][0]++, 50),
      offset =
      /* istanbul ignore next */
      (cov_18esqvz1h1().b[31][0]++, 0)
    } =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[119]++, req.query);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[120]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_18esqvz1h1().b[32][0]++;
      cov_18esqvz1h1().s[121]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_18esqvz1h1().b[32][1]++;
    }

    // Use real broker API integration
    const AlpacaService =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[122]++, require('../utils/alpacaService'));
    /* istanbul ignore next */
    cov_18esqvz1h1().s[123]++;
    try {
      /* istanbul ignore next */
      cov_18esqvz1h1().s[124]++;
      // Try to get real broker trade data
      console.log('🔑 Retrieving API credentials for Alpaca...');
      const credentials =
      /* istanbul ignore next */
      (cov_18esqvz1h1().s[125]++, await getUserApiKey(userId, 'alpaca'));
      /* istanbul ignore next */
      cov_18esqvz1h1().s[126]++;
      if (
      /* istanbul ignore next */
      (cov_18esqvz1h1().b[34][0]++, credentials) &&
      /* istanbul ignore next */
      (cov_18esqvz1h1().b[34][1]++, credentials.apiKey) &&
      /* istanbul ignore next */
      (cov_18esqvz1h1().b[34][2]++, credentials.apiSecret)) {
        /* istanbul ignore next */
        cov_18esqvz1h1().b[33][0]++;
        cov_18esqvz1h1().s[127]++;
        console.log('✅ Valid Alpaca credentials found, fetching real trade history...');
        const alpaca =
        /* istanbul ignore next */
        (cov_18esqvz1h1().s[128]++, new AlpacaService(credentials.apiKey, credentials.apiSecret, credentials.isSandbox));

        // Get orders and activities from Alpaca
        const [orders, portfolioHistory] =
        /* istanbul ignore next */
        (cov_18esqvz1h1().s[129]++, await Promise.all([alpaca.getOrders({
          status: 'all',
          limit: 500
        }), alpaca.getPortfolioHistory('1Y')]));

        // Transform orders to trade history format
        let trades =
        /* istanbul ignore next */
        (cov_18esqvz1h1().s[130]++, orders.map(order => {
          /* istanbul ignore next */
          cov_18esqvz1h1().f[12]++;
          cov_18esqvz1h1().s[131]++;
          return {
            id: order.id,
            symbol: order.symbol,
            side: order.side,
            // 'buy' or 'sell'
            quantity: parseFloat(order.qty),
            price: parseFloat(
            /* istanbul ignore next */
            (cov_18esqvz1h1().b[35][0]++, order.filled_avg_price) ||
            /* istanbul ignore next */
            (cov_18esqvz1h1().b[35][1]++, order.limit_price) ||
            /* istanbul ignore next */
            (cov_18esqvz1h1().b[35][2]++, 0)),
            execution_time:
            /* istanbul ignore next */
            (cov_18esqvz1h1().b[36][0]++, order.filled_at) ||
            /* istanbul ignore next */
            (cov_18esqvz1h1().b[36][1]++, order.created_at),
            order_type: order.order_type,
            time_in_force: order.time_in_force,
            status: order.status,
            filled_qty: parseFloat(
            /* istanbul ignore next */
            (cov_18esqvz1h1().b[37][0]++, order.filled_qty) ||
            /* istanbul ignore next */
            (cov_18esqvz1h1().b[37][1]++, 0)),
            gross_pnl: 0,
            // Would need position tracking for accurate P&L
            net_pnl: 0,
            return_percentage: 0,
            holding_period_days: 0,
            commission: 0,
            // Alpaca is commission-free
            source: 'alpaca_api'
          };
        }));

        // Apply filters
        /* istanbul ignore next */
        cov_18esqvz1h1().s[132]++;
        if (symbol) {
          /* istanbul ignore next */
          cov_18esqvz1h1().b[38][0]++;
          cov_18esqvz1h1().s[133]++;
          trades = trades.filter(trade => {
            /* istanbul ignore next */
            cov_18esqvz1h1().f[13]++;
            cov_18esqvz1h1().s[134]++;
            return trade.symbol.toUpperCase() === symbol.toUpperCase();
          });
        } else
        /* istanbul ignore next */
        {
          cov_18esqvz1h1().b[38][1]++;
        }
        cov_18esqvz1h1().s[135]++;
        if (startDate) {
          /* istanbul ignore next */
          cov_18esqvz1h1().b[39][0]++;
          cov_18esqvz1h1().s[136]++;
          trades = trades.filter(trade => {
            /* istanbul ignore next */
            cov_18esqvz1h1().f[14]++;
            cov_18esqvz1h1().s[137]++;
            return new Date(trade.execution_time) >= new Date(startDate);
          });
        } else
        /* istanbul ignore next */
        {
          cov_18esqvz1h1().b[39][1]++;
        }
        cov_18esqvz1h1().s[138]++;
        if (endDate) {
          /* istanbul ignore next */
          cov_18esqvz1h1().b[40][0]++;
          cov_18esqvz1h1().s[139]++;
          trades = trades.filter(trade => {
            /* istanbul ignore next */
            cov_18esqvz1h1().f[15]++;
            cov_18esqvz1h1().s[140]++;
            return new Date(trade.execution_time) <= new Date(endDate);
          });
        } else
        /* istanbul ignore next */
        {
          cov_18esqvz1h1().b[40][1]++;
        }
        cov_18esqvz1h1().s[141]++;
        if (
        /* istanbul ignore next */
        (cov_18esqvz1h1().b[42][0]++, tradeType) &&
        /* istanbul ignore next */
        (cov_18esqvz1h1().b[42][1]++, tradeType !== 'all')) {
          /* istanbul ignore next */
          cov_18esqvz1h1().b[41][0]++;
          cov_18esqvz1h1().s[142]++;
          trades = trades.filter(trade => {
            /* istanbul ignore next */
            cov_18esqvz1h1().f[16]++;
            cov_18esqvz1h1().s[143]++;
            return trade.side === tradeType.toLowerCase();
          });
        } else
        /* istanbul ignore next */
        {
          cov_18esqvz1h1().b[41][1]++;
        }
        cov_18esqvz1h1().s[144]++;
        if (status !== 'all') {
          /* istanbul ignore next */
          cov_18esqvz1h1().b[43][0]++;
          cov_18esqvz1h1().s[145]++;
          trades = trades.filter(trade => {
            /* istanbul ignore next */
            cov_18esqvz1h1().f[17]++;
            cov_18esqvz1h1().s[146]++;
            return trade.status === status;
          });
        } else
        /* istanbul ignore next */
        {
          cov_18esqvz1h1().b[43][1]++;
        }

        // Sort trades
        cov_18esqvz1h1().s[147]++;
        trades.sort((a, b) => {
          /* istanbul ignore next */
          cov_18esqvz1h1().f[18]++;
          const aVal =
          /* istanbul ignore next */
          (cov_18esqvz1h1().s[148]++,
          /* istanbul ignore next */
          (cov_18esqvz1h1().b[44][0]++, a[sortBy]) ||
          /* istanbul ignore next */
          (cov_18esqvz1h1().b[44][1]++, a.execution_time));
          const bVal =
          /* istanbul ignore next */
          (cov_18esqvz1h1().s[149]++,
          /* istanbul ignore next */
          (cov_18esqvz1h1().b[45][0]++, b[sortBy]) ||
          /* istanbul ignore next */
          (cov_18esqvz1h1().b[45][1]++, b.execution_time));
          const compareResult =
          /* istanbul ignore next */
          (cov_18esqvz1h1().s[150]++, sortOrder === 'desc' ?
          /* istanbul ignore next */
          (cov_18esqvz1h1().b[46][0]++, new Date(bVal) - new Date(aVal)) :
          /* istanbul ignore next */
          (cov_18esqvz1h1().b[46][1]++, new Date(aVal) - new Date(bVal)));
          /* istanbul ignore next */
          cov_18esqvz1h1().s[151]++;
          return compareResult;
        });

        // Apply pagination
        const total =
        /* istanbul ignore next */
        (cov_18esqvz1h1().s[152]++, trades.length);
        const paginatedTrades =
        /* istanbul ignore next */
        (cov_18esqvz1h1().s[153]++, trades.slice(parseInt(offset), parseInt(offset) + parseInt(limit)));
        /* istanbul ignore next */
        cov_18esqvz1h1().s[154]++;
        console.log(`✅ Retrieved ${total} trades from Alpaca API`);
        /* istanbul ignore next */
        cov_18esqvz1h1().s[155]++;
        return res.json({
          success: true,
          data: {
            trades: paginatedTrades,
            pagination: {
              total,
              limit: parseInt(limit),
              offset: parseInt(offset),
              hasMore: parseInt(offset) + parseInt(limit) < total
            },
            source: 'alpaca_api'
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_18esqvz1h1().b[33][1]++;
      }
    } catch (apiError) {
      /* istanbul ignore next */
      cov_18esqvz1h1().s[156]++;
      console.log('⚠️ Broker API failed, falling back to mock data:', apiError.message);
    }

    // Fallback to mock trade history data
    /* istanbul ignore next */
    cov_18esqvz1h1().s[157]++;
    console.log('📝 Using mock trade history data');
    const mockTrades =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[158]++, [{
      id: 'mock-1',
      symbol: 'AAPL',
      side: 'buy',
      quantity: 100,
      price: 150.00,
      execution_time: new Date(Date.now() - 86400000 * 7).toISOString(),
      // 7 days ago
      order_type: 'market',
      status: 'filled',
      filled_qty: 100,
      gross_pnl: 2500,
      net_pnl: 2500,
      return_percentage: 16.67,
      holding_period_days: 7,
      commission: 0,
      source: 'mock_data'
    }, {
      id: 'mock-2',
      symbol: 'MSFT',
      side: 'buy',
      quantity: 50,
      price: 280.00,
      execution_time: new Date(Date.now() - 86400000 * 14).toISOString(),
      // 14 days ago
      order_type: 'limit',
      status: 'filled',
      filled_qty: 50,
      gross_pnl: 1512,
      net_pnl: 1512,
      return_percentage: 10.8,
      holding_period_days: 14,
      commission: 0,
      source: 'mock_data'
    }, {
      id: 'mock-3',
      symbol: 'TSLA',
      side: 'sell',
      quantity: 25,
      price: 220.00,
      execution_time: new Date(Date.now() - 86400000 * 21).toISOString(),
      // 21 days ago
      order_type: 'market',
      status: 'filled',
      filled_qty: 25,
      gross_pnl: -500,
      net_pnl: -500,
      return_percentage: -8.33,
      holding_period_days: 30,
      commission: 0,
      source: 'mock_data'
    }]);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[159]++;
    res.json({
      success: true,
      data: {
        trades: mockTrades,
        pagination: {
          total: mockTrades.length,
          limit: parseInt(limit),
          offset: parseInt(offset),
          hasMore: false
        },
        source: 'mock_data'
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_18esqvz1h1().s[160]++;
    console.error('❌ Error fetching trade history:', error);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[161]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch trade history',
      details: error.message
    });
  }
});

/**
 * @route GET /api/trades/analytics/overview
 * @desc Get trade analytics overview with key metrics
 */
/* istanbul ignore next */
cov_18esqvz1h1().s[162]++;
router.get('/analytics/overview', authenticateToken, async (req, res) => {
  /* istanbul ignore next */
  cov_18esqvz1h1().f[19]++;
  cov_18esqvz1h1().s[163]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[164]++, req.user?.sub);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[165]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_18esqvz1h1().b[47][0]++;
      cov_18esqvz1h1().s[166]++;
      throw new Error('User authentication required');
    } else
    /* istanbul ignore next */
    {
      cov_18esqvz1h1().b[47][1]++;
    }
    cov_18esqvz1h1().s[167]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_18esqvz1h1().b[48][0]++;
      cov_18esqvz1h1().s[168]++;
      return res.status(401).json({
        success: false,
        error: 'Authentication required',
        message: 'User must be authenticated to access trade analytics'
      });
    } else
    /* istanbul ignore next */
    {
      cov_18esqvz1h1().b[48][1]++;
    }
    const {
      timeframe =
      /* istanbul ignore next */
      (cov_18esqvz1h1().b[49][0]++, '3M')
    } =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[169]++, req.query);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[170]++;
    console.log(`📊 Trade analytics requested for user ${userId}, timeframe: ${timeframe}`);

    // Calculate date range
    const endDate =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[171]++, new Date());
    const startDate =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[172]++, new Date());
    /* istanbul ignore next */
    cov_18esqvz1h1().s[173]++;
    switch (timeframe) {
      case '1M':
        /* istanbul ignore next */
        cov_18esqvz1h1().b[50][0]++;
        cov_18esqvz1h1().s[174]++;
        startDate.setMonth(endDate.getMonth() - 1);
        /* istanbul ignore next */
        cov_18esqvz1h1().s[175]++;
        break;
      case '3M':
        /* istanbul ignore next */
        cov_18esqvz1h1().b[50][1]++;
        cov_18esqvz1h1().s[176]++;
        startDate.setMonth(endDate.getMonth() - 3);
        /* istanbul ignore next */
        cov_18esqvz1h1().s[177]++;
        break;
      case '6M':
        /* istanbul ignore next */
        cov_18esqvz1h1().b[50][2]++;
        cov_18esqvz1h1().s[178]++;
        startDate.setMonth(endDate.getMonth() - 6);
        /* istanbul ignore next */
        cov_18esqvz1h1().s[179]++;
        break;
      case '1Y':
        /* istanbul ignore next */
        cov_18esqvz1h1().b[50][3]++;
        cov_18esqvz1h1().s[180]++;
        startDate.setFullYear(endDate.getFullYear() - 1);
        /* istanbul ignore next */
        cov_18esqvz1h1().s[181]++;
        break;
      case 'YTD':
        /* istanbul ignore next */
        cov_18esqvz1h1().b[50][4]++;
        cov_18esqvz1h1().s[182]++;
        startDate.setMonth(0, 1);
        /* istanbul ignore next */
        cov_18esqvz1h1().s[183]++;
        break;
      default:
        /* istanbul ignore next */
        cov_18esqvz1h1().b[50][5]++;
        cov_18esqvz1h1().s[184]++;
        startDate.setMonth(endDate.getMonth() - 3);
    }

    // First, try to get live trade data from connected brokers
    let liveTradeData =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[185]++, null);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[186]++;
    try {
      // Get user's active API keys to fetch live trade data
      const apiKeysResult =
      /* istanbul ignore next */
      (cov_18esqvz1h1().s[187]++, await query(`
        SELECT provider, encrypted_api_key, key_iv, key_auth_tag, 
               encrypted_api_secret, secret_iv, secret_auth_tag, user_salt, is_sandbox
        FROM user_api_keys 
        WHERE user_id = $1 AND is_active = true
      `, [userId]));
      /* istanbul ignore next */
      cov_18esqvz1h1().s[188]++;
      if (apiKeysResult.rows.length > 0) {
        /* istanbul ignore next */
        cov_18esqvz1h1().b[51][0]++;
        cov_18esqvz1h1().s[189]++;
        console.log(`🔑 Found ${apiKeysResult.rows.length} active API keys for analytics`);
        /* istanbul ignore next */
        cov_18esqvz1h1().s[190]++;
        for (const keyData of apiKeysResult.rows) {
          /* istanbul ignore next */
          cov_18esqvz1h1().s[191]++;
          if (keyData.provider === 'alpaca') {
            /* istanbul ignore next */
            cov_18esqvz1h1().b[52][0]++;
            cov_18esqvz1h1().s[192]++;
            try {
              // Get live activities/trades from Alpaca
              const credentials =
              /* istanbul ignore next */
              (cov_18esqvz1h1().s[193]++, await getUserApiKey(userId, 'alpaca'));
              /* istanbul ignore next */
              cov_18esqvz1h1().s[194]++;
              if (credentials) {
                /* istanbul ignore next */
                cov_18esqvz1h1().b[53][0]++;
                const alpaca =
                /* istanbul ignore next */
                (cov_18esqvz1h1().s[195]++, new AlpacaService(credentials.apiKey, credentials.apiSecret, credentials.isSandbox));
                const activities =
                /* istanbul ignore next */
                (cov_18esqvz1h1().s[196]++, await alpaca.getActivities({
                  activityType: 'FILL',
                  date: startDate.toISOString().split('T')[0],
                  until: endDate.toISOString().split('T')[0]
                }));
                /* istanbul ignore next */
                cov_18esqvz1h1().s[197]++;
                liveTradeData = activities;
                /* istanbul ignore next */
                cov_18esqvz1h1().s[198]++;
                console.log(`📈 Retrieved ${activities.length} live trade activities from Alpaca`);
                /* istanbul ignore next */
                cov_18esqvz1h1().s[199]++;
                break;
              } else
              /* istanbul ignore next */
              {
                cov_18esqvz1h1().b[53][1]++;
              }
            } catch (apiError) {
              /* istanbul ignore next */
              cov_18esqvz1h1().s[200]++;
              console.warn(`Failed to fetch live data from ${keyData.provider}:`, apiError.message);
            }
          } else
          /* istanbul ignore next */
          {
            cov_18esqvz1h1().b[52][1]++;
          }
        }
      } else
      /* istanbul ignore next */
      {
        cov_18esqvz1h1().b[51][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_18esqvz1h1().s[201]++;
      console.warn('Failed to fetch live trade data:', error.message);
    }

    // Get stored trade analytics from database with comprehensive error handling
    let dbMetrics =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[202]++, null);
    let sectorBreakdown =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[203]++, []);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[204]++;
    try {
      // Try to get trade metrics from stored data first
      const metricsResult =
      /* istanbul ignore next */
      (cov_18esqvz1h1().s[205]++, await query(`
        SELECT 
          COUNT(*) as total_trades,
          COUNT(CASE WHEN ph.net_pnl > 0 THEN 1 END) as winning_trades,
          COUNT(CASE WHEN ph.net_pnl < 0 THEN 1 END) as losing_trades,
          SUM(ph.net_pnl) as total_pnl,
          AVG(ph.net_pnl) as avg_pnl,
          AVG(ph.return_percentage) as avg_roi,
          MAX(ph.net_pnl) as best_trade,
          MIN(ph.net_pnl) as worst_trade,
          AVG(ph.holding_period_days) as avg_holding_period,
          SUM(CASE WHEN te.quantity IS NOT NULL THEN te.quantity * te.price ELSE 0 END) as total_volume
        FROM position_history ph
        LEFT JOIN trade_executions te ON ph.symbol = te.symbol 
          AND ph.user_id = te.user_id
          AND te.execution_time BETWEEN ph.opened_at AND COALESCE(ph.closed_at, NOW())
        WHERE ph.user_id = $1 
          AND ph.opened_at >= $2 
          AND ph.opened_at <= $3
      `, [userId, startDate, endDate], 10000));
      /* istanbul ignore next */
      cov_18esqvz1h1().s[206]++;
      if (metricsResult.rows.length > 0) {
        /* istanbul ignore next */
        cov_18esqvz1h1().b[54][0]++;
        cov_18esqvz1h1().s[207]++;
        dbMetrics = metricsResult.rows[0];
        /* istanbul ignore next */
        cov_18esqvz1h1().s[208]++;
        console.log(`📊 Found ${dbMetrics.total_trades} stored trades for analytics`);
      } else
      /* istanbul ignore next */
      {
        cov_18esqvz1h1().b[54][1]++;
      }

      // Get sector breakdown from stored data
      const sectorResult =
      /* istanbul ignore next */
      (cov_18esqvz1h1().s[209]++, await query(`
        SELECT 
          COALESCE(s.sector, 'Unknown') as sector,
          COUNT(*) as trade_count,
          SUM(ph.net_pnl) as sector_pnl,
          AVG(ph.return_percentage) as avg_roi,
          SUM(ph.quantity * ph.avg_entry_price) as total_volume
        FROM position_history ph
        LEFT JOIN symbols s ON ph.symbol = s.symbol
        WHERE ph.user_id = $1 
          AND ph.opened_at >= $2 
          AND ph.opened_at <= $3
        GROUP BY COALESCE(s.sector, 'Unknown')
        ORDER BY sector_pnl DESC
      `, [userId, startDate, endDate], 10000));
      /* istanbul ignore next */
      cov_18esqvz1h1().s[210]++;
      sectorBreakdown = sectorResult.rows;
    } catch (dbError) {
      /* istanbul ignore next */
      cov_18esqvz1h1().s[211]++;
      console.warn('Database query failed, checking for tables:', dbError.message);

      // Check if tables exist and create fallback
      /* istanbul ignore next */
      cov_18esqvz1h1().s[212]++;
      try {
        /* istanbul ignore next */
        cov_18esqvz1h1().s[213]++;
        await query('SELECT 1 FROM position_history LIMIT 1', [], 5000);
      } catch (tableError) {
        /* istanbul ignore next */
        cov_18esqvz1h1().s[214]++;
        console.warn('Trade tables may not exist yet, using imported portfolio data');

        // Try to get analytics from portfolio holdings instead
        /* istanbul ignore next */
        cov_18esqvz1h1().s[215]++;
        try {
          const holdingsResult =
          /* istanbul ignore next */
          (cov_18esqvz1h1().s[216]++, await query(`
            SELECT 
              COUNT(*) as total_positions,
              SUM(CASE WHEN unrealized_pl > 0 THEN 1 ELSE 0 END) as winning_positions,
              SUM(CASE WHEN unrealized_pl < 0 THEN 1 ELSE 0 END) as losing_positions,
              SUM(unrealized_pl) as total_pnl,
              AVG(unrealized_pl) as avg_pnl,
              AVG(unrealized_plpc) as avg_roi,
              MAX(unrealized_pl) as best_position,
              MIN(unrealized_pl) as worst_position,
              SUM(market_value) as total_volume
            FROM portfolio_holdings 
            WHERE user_id = $1 AND quantity > 0
          `, [userId], 5000));
          /* istanbul ignore next */
          cov_18esqvz1h1().s[217]++;
          if (holdingsResult.rows.length > 0) {
            /* istanbul ignore next */
            cov_18esqvz1h1().b[55][0]++;
            const holdings =
            /* istanbul ignore next */
            (cov_18esqvz1h1().s[218]++, holdingsResult.rows[0]);
            /* istanbul ignore next */
            cov_18esqvz1h1().s[219]++;
            dbMetrics = {
              total_trades: holdings.total_positions,
              winning_trades: holdings.winning_positions,
              losing_trades: holdings.losing_positions,
              total_pnl: holdings.total_pnl,
              avg_pnl: holdings.avg_pnl,
              avg_roi: holdings.avg_roi,
              best_trade: holdings.best_position,
              worst_trade: holdings.worst_position,
              avg_holding_period: 0,
              // Not available from holdings
              total_volume: holdings.total_volume
            };
            /* istanbul ignore next */
            cov_18esqvz1h1().s[220]++;
            console.log(`📈 Using portfolio holdings for analytics (${holdings.total_positions} positions)`);
          } else
          /* istanbul ignore next */
          {
            cov_18esqvz1h1().b[55][1]++;
          }
        } catch (holdingsError) {
          /* istanbul ignore next */
          cov_18esqvz1h1().s[221]++;
          console.warn('Portfolio holdings query also failed:', holdingsError.message);
        }
      }
    }

    // Process live trade data if available
    let liveMetrics =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[222]++, null);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[223]++;
    if (
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[57][0]++, liveTradeData) &&
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[57][1]++, liveTradeData.length > 0)) {
      /* istanbul ignore next */
      cov_18esqvz1h1().b[56][0]++;
      cov_18esqvz1h1().s[224]++;
      console.log(`🔄 Processing ${liveTradeData.length} live trade activities`);
      const buys =
      /* istanbul ignore next */
      (cov_18esqvz1h1().s[225]++, liveTradeData.filter(t => {
        /* istanbul ignore next */
        cov_18esqvz1h1().f[20]++;
        cov_18esqvz1h1().s[226]++;
        return t.side === 'buy';
      }));
      const sells =
      /* istanbul ignore next */
      (cov_18esqvz1h1().s[227]++, liveTradeData.filter(t => {
        /* istanbul ignore next */
        cov_18esqvz1h1().f[21]++;
        cov_18esqvz1h1().s[228]++;
        return t.side === 'sell';
      }));
      const totalVolume =
      /* istanbul ignore next */
      (cov_18esqvz1h1().s[229]++, liveTradeData.reduce((sum, t) => {
        /* istanbul ignore next */
        cov_18esqvz1h1().f[22]++;
        cov_18esqvz1h1().s[230]++;
        return sum + parseFloat(t.qty) * parseFloat(t.price);
      }, 0));

      // Calculate P&L from matched buy/sell pairs
      const symbolGroups =
      /* istanbul ignore next */
      (cov_18esqvz1h1().s[231]++, {});
      /* istanbul ignore next */
      cov_18esqvz1h1().s[232]++;
      liveTradeData.forEach(trade => {
        /* istanbul ignore next */
        cov_18esqvz1h1().f[23]++;
        cov_18esqvz1h1().s[233]++;
        if (!symbolGroups[trade.symbol]) {
          /* istanbul ignore next */
          cov_18esqvz1h1().b[58][0]++;
          cov_18esqvz1h1().s[234]++;
          symbolGroups[trade.symbol] = [];
        } else
        /* istanbul ignore next */
        {
          cov_18esqvz1h1().b[58][1]++;
        }
        cov_18esqvz1h1().s[235]++;
        symbolGroups[trade.symbol].push(trade);
      });
      let totalPnL =
      /* istanbul ignore next */
      (cov_18esqvz1h1().s[236]++, 0);
      let completedTrades =
      /* istanbul ignore next */
      (cov_18esqvz1h1().s[237]++, 0);
      let winningTrades =
      /* istanbul ignore next */
      (cov_18esqvz1h1().s[238]++, 0);
      /* istanbul ignore next */
      cov_18esqvz1h1().s[239]++;
      Object.values(symbolGroups).forEach(trades => {
        /* istanbul ignore next */
        cov_18esqvz1h1().f[24]++;
        const sortedTrades =
        /* istanbul ignore next */
        (cov_18esqvz1h1().s[240]++, trades.sort((a, b) => {
          /* istanbul ignore next */
          cov_18esqvz1h1().f[25]++;
          cov_18esqvz1h1().s[241]++;
          return new Date(a.date) - new Date(b.date);
        }));
        let position =
        /* istanbul ignore next */
        (cov_18esqvz1h1().s[242]++, 0);
        let costBasis =
        /* istanbul ignore next */
        (cov_18esqvz1h1().s[243]++, 0);
        /* istanbul ignore next */
        cov_18esqvz1h1().s[244]++;
        sortedTrades.forEach(trade => {
          /* istanbul ignore next */
          cov_18esqvz1h1().f[26]++;
          const qty =
          /* istanbul ignore next */
          (cov_18esqvz1h1().s[245]++, parseFloat(trade.qty));
          const price =
          /* istanbul ignore next */
          (cov_18esqvz1h1().s[246]++, parseFloat(trade.price));
          /* istanbul ignore next */
          cov_18esqvz1h1().s[247]++;
          if (trade.side === 'buy') {
            /* istanbul ignore next */
            cov_18esqvz1h1().b[59][0]++;
            cov_18esqvz1h1().s[248]++;
            costBasis = (costBasis * position + price * qty) / (position + qty);
            /* istanbul ignore next */
            cov_18esqvz1h1().s[249]++;
            position += qty;
          } else {
            /* istanbul ignore next */
            cov_18esqvz1h1().b[59][1]++;
            cov_18esqvz1h1().s[250]++;
            // sell
            if (position > 0) {
              /* istanbul ignore next */
              cov_18esqvz1h1().b[60][0]++;
              const pnl =
              /* istanbul ignore next */
              (cov_18esqvz1h1().s[251]++, (price - costBasis) * Math.min(qty, position));
              /* istanbul ignore next */
              cov_18esqvz1h1().s[252]++;
              totalPnL += pnl;
              /* istanbul ignore next */
              cov_18esqvz1h1().s[253]++;
              if (pnl > 0) {
                /* istanbul ignore next */
                cov_18esqvz1h1().b[61][0]++;
                cov_18esqvz1h1().s[254]++;
                winningTrades++;
              } else
              /* istanbul ignore next */
              {
                cov_18esqvz1h1().b[61][1]++;
              }
              cov_18esqvz1h1().s[255]++;
              completedTrades++;
              /* istanbul ignore next */
              cov_18esqvz1h1().s[256]++;
              position = Math.max(0, position - qty);
            } else
            /* istanbul ignore next */
            {
              cov_18esqvz1h1().b[60][1]++;
            }
          }
        });
      });
      /* istanbul ignore next */
      cov_18esqvz1h1().s[257]++;
      liveMetrics = {
        totalTrades: completedTrades,
        winningTrades: winningTrades,
        losingTrades: completedTrades - winningTrades,
        totalPnL: totalPnL,
        totalVolume: totalVolume,
        rawActivities: liveTradeData.length
      };
    } else
    /* istanbul ignore next */
    {
      cov_18esqvz1h1().b[56][1]++;
    }

    // Combine or prioritize metrics (live data takes precedence)
    const metrics =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[258]++,
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[62][0]++, liveMetrics) ||
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[62][1]++, dbMetrics) ||
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[62][2]++, {
      total_trades: 0,
      winning_trades: 0,
      losing_trades: 0,
      total_pnl: 0,
      avg_pnl: 0,
      avg_roi: 0,
      best_trade: 0,
      worst_trade: 0,
      avg_holding_period: 0,
      total_volume: 0
    }));

    // Calculate derived metrics
    const totalTrades =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[259]++, liveMetrics ?
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[63][0]++, liveMetrics.totalTrades) :
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[63][1]++, parseInt(
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[64][0]++, metrics.total_trades) ||
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[64][1]++, 0))));
    const winningTrades =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[260]++, liveMetrics ?
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[65][0]++, liveMetrics.winningTrades) :
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[65][1]++, parseInt(
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[66][0]++, metrics.winning_trades) ||
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[66][1]++, 0))));
    const losingTrades =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[261]++, liveMetrics ?
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[67][0]++, liveMetrics.losingTrades) :
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[67][1]++, parseInt(
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[68][0]++, metrics.losing_trades) ||
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[68][1]++, 0))));
    const winRate =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[262]++, totalTrades > 0 ?
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[69][0]++, winningTrades / totalTrades * 100) :
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[69][1]++, 0));
    const totalPnL =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[263]++, liveMetrics ?
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[70][0]++, liveMetrics.totalPnL) :
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[70][1]++, parseFloat(
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[71][0]++, metrics.total_pnl) ||
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[71][1]++, 0))));
    const profitFactor =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[264]++,
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[73][0]++, losingTrades > 0) &&
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[73][1]++, totalPnL < 0) ?
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[72][0]++, Math.abs(winningTrades * (totalPnL / totalTrades)) / Math.abs(losingTrades * (totalPnL / totalTrades))) :
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[72][1]++, totalPnL > 0 ?
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[74][0]++, Math.abs(totalPnL / Math.max(losingTrades, 1))) :
    /* istanbul ignore next */
    (cov_18esqvz1h1().b[74][1]++, null)));
    const responseData =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[265]++, {
      success: true,
      data: {
        overview: {
          totalTrades: totalTrades,
          winningTrades: winningTrades,
          losingTrades: losingTrades,
          winRate: parseFloat(winRate.toFixed(2)),
          totalPnl: parseFloat(totalPnL.toFixed(2)),
          avgPnl: totalTrades > 0 ?
          /* istanbul ignore next */
          (cov_18esqvz1h1().b[75][0]++, parseFloat((totalPnL / totalTrades).toFixed(2))) :
          /* istanbul ignore next */
          (cov_18esqvz1h1().b[75][1]++, 0),
          avgRoi: parseFloat(
          /* istanbul ignore next */
          (cov_18esqvz1h1().b[76][0]++, metrics.avg_roi) ||
          /* istanbul ignore next */
          (cov_18esqvz1h1().b[76][1]++, 0)),
          bestTrade: parseFloat(
          /* istanbul ignore next */
          (cov_18esqvz1h1().b[77][0]++, metrics.best_trade) ||
          /* istanbul ignore next */
          (cov_18esqvz1h1().b[77][1]++, 0)),
          worstTrade: parseFloat(
          /* istanbul ignore next */
          (cov_18esqvz1h1().b[78][0]++, metrics.worst_trade) ||
          /* istanbul ignore next */
          (cov_18esqvz1h1().b[78][1]++, 0)),
          avgHoldingPeriod: parseFloat(
          /* istanbul ignore next */
          (cov_18esqvz1h1().b[79][0]++, metrics.avg_holding_period) ||
          /* istanbul ignore next */
          (cov_18esqvz1h1().b[79][1]++, 0)),
          totalVolume: liveMetrics ?
          /* istanbul ignore next */
          (cov_18esqvz1h1().b[80][0]++, liveMetrics.totalVolume) :
          /* istanbul ignore next */
          (cov_18esqvz1h1().b[80][1]++, parseFloat(
          /* istanbul ignore next */
          (cov_18esqvz1h1().b[81][0]++, metrics.total_volume) ||
          /* istanbul ignore next */
          (cov_18esqvz1h1().b[81][1]++, 0))),
          profitFactor: profitFactor
        },
        sectorBreakdown: sectorBreakdown,
        timeframe: timeframe,
        dataSource: liveMetrics ?
        /* istanbul ignore next */
        (cov_18esqvz1h1().b[82][0]++, 'live_api') :
        /* istanbul ignore next */
        (cov_18esqvz1h1().b[82][1]++, dbMetrics ?
        /* istanbul ignore next */
        (cov_18esqvz1h1().b[83][0]++, 'database') :
        /* istanbul ignore next */
        (cov_18esqvz1h1().b[83][1]++, 'none')),
        metadata: {
          liveActivities: liveMetrics ?
          /* istanbul ignore next */
          (cov_18esqvz1h1().b[84][0]++, liveMetrics.rawActivities) :
          /* istanbul ignore next */
          (cov_18esqvz1h1().b[84][1]++, 0),
          dbRecords: dbMetrics ?
          /* istanbul ignore next */
          (cov_18esqvz1h1().b[85][0]++, parseInt(dbMetrics.total_trades)) :
          /* istanbul ignore next */
          (cov_18esqvz1h1().b[85][1]++, 0),
          hasLiveData: !!liveMetrics,
          hasStoredData: !!dbMetrics
        }
      }
    });
    /* istanbul ignore next */
    cov_18esqvz1h1().s[266]++;
    console.log(`✅ Analytics complete - ${totalTrades} trades, ${winRate.toFixed(1)}% win rate, $${totalPnL.toFixed(2)} P&L`);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[267]++;
    res.json(responseData);
  } catch (error) {
    /* istanbul ignore next */
    cov_18esqvz1h1().s[268]++;
    console.error('Error fetching analytics overview:', {
      message: error.message,
      stack: error.stack,
      userId:
      /* istanbul ignore next */
      (cov_18esqvz1h1().b[86][0]++, req.user?.sub) ||
      /* istanbul ignore next */
      (cov_18esqvz1h1().b[86][1]++, req.user?.userId) ||
      /* istanbul ignore next */
      (cov_18esqvz1h1().b[86][2]++, 'unknown'),
      timeframe:
      /* istanbul ignore next */
      (cov_18esqvz1h1().b[87][0]++, req.query.timeframe) ||
      /* istanbul ignore next */
      (cov_18esqvz1h1().b[87][1]++, '3M'),
      requestId:
      /* istanbul ignore next */
      (cov_18esqvz1h1().b[88][0]++, req.requestId) ||
      /* istanbul ignore next */
      (cov_18esqvz1h1().b[88][1]++, 'unknown')
    });

    // Return detailed error structure with proper HTTP status
    /* istanbul ignore next */
    cov_18esqvz1h1().s[269]++;
    try {
      /* istanbul ignore next */
      cov_18esqvz1h1().s[270]++;
      res.status(500).json({
        success: false,
        error: 'Internal server error',
        message: 'Failed to fetch analytics overview',
        details: process.env.NODE_ENV === 'development' ?
        /* istanbul ignore next */
        (cov_18esqvz1h1().b[89][0]++, error.message) :
        /* istanbul ignore next */
        (cov_18esqvz1h1().b[89][1]++, undefined),
        timestamp: new Date().toISOString(),
        requestId:
        /* istanbul ignore next */
        (cov_18esqvz1h1().b[90][0]++, req.requestId) ||
        /* istanbul ignore next */
        (cov_18esqvz1h1().b[90][1]++, 'unknown')
      });
    } catch (fallbackError) {
      /* istanbul ignore next */
      cov_18esqvz1h1().s[271]++;
      console.error('Fallback error handler triggered:', fallbackError);
      // Last resort fallback response
      /* istanbul ignore next */
      cov_18esqvz1h1().s[272]++;
      res.status(200).json({
        success: true,
        data: {
          analytics: {
            totalTrades: 0,
            winningTrades: 0,
            losingTrades: 0,
            winRate: 0,
            totalPnL: 0,
            avgPnL: 0,
            avgRoi: 0,
            bestTrade: 0,
            worstTrade: 0,
            avgHoldingPeriod: 0,
            totalVolume: 0
          },
          chartData: [],
          pnlBySymbol: [],
          tradingPatterns: [],
          dataSource: 'none'
        },
        message: 'No trade data available. Please import your portfolio data from your broker first.',
        timestamp: new Date().toISOString()
      });
    }
  }
});

/**
 * @route GET /api/trades/export
 * @desc Export trade data in various formats
 */
/* istanbul ignore next */
cov_18esqvz1h1().s[273]++;
router.get('/export', authenticateToken, async (req, res) => {
  /* istanbul ignore next */
  cov_18esqvz1h1().f[27]++;
  cov_18esqvz1h1().s[274]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[275]++, req.user?.sub);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[276]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_18esqvz1h1().b[91][0]++;
      cov_18esqvz1h1().s[277]++;
      throw new Error('User authentication required');
    } else
    /* istanbul ignore next */
    {
      cov_18esqvz1h1().b[91][1]++;
    }
    const {
      format =
      /* istanbul ignore next */
      (cov_18esqvz1h1().b[92][0]++, 'csv'),
      startDate,
      endDate
    } =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[278]++, req.query);
    // Database queries will use the query function directly

    let whereClause =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[279]++, 'WHERE te.user_id = $1');
    let params =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[280]++, [userId]);
    let paramCount =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[281]++, 1);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[282]++;
    if (startDate) {
      /* istanbul ignore next */
      cov_18esqvz1h1().b[93][0]++;
      cov_18esqvz1h1().s[283]++;
      whereClause += ` AND te.execution_time >= $${++paramCount}`;
      /* istanbul ignore next */
      cov_18esqvz1h1().s[284]++;
      params.push(startDate);
    } else
    /* istanbul ignore next */
    {
      cov_18esqvz1h1().b[93][1]++;
    }
    cov_18esqvz1h1().s[285]++;
    if (endDate) {
      /* istanbul ignore next */
      cov_18esqvz1h1().b[94][0]++;
      cov_18esqvz1h1().s[286]++;
      whereClause += ` AND te.execution_time <= $${++paramCount}`;
      /* istanbul ignore next */
      cov_18esqvz1h1().s[287]++;
      params.push(endDate);
    } else
    /* istanbul ignore next */
    {
      cov_18esqvz1h1().b[94][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[288]++, await query(`
      SELECT 
        te.execution_time,
        te.symbol,
        te.side,
        te.quantity,
        te.price,
        te.commission,
        ph.gross_pnl,
        ph.net_pnl,
        ph.return_percentage,
        ph.holding_period_days,
        ta.trade_pattern_type,
        ta.pattern_confidence,
        ta.risk_reward_ratio,
        s.sector,
        s.industry
      FROM trade_executions te
      LEFT JOIN position_history ph ON te.symbol = ph.symbol 
        AND te.user_id = ph.user_id
        AND te.execution_time BETWEEN ph.opened_at AND COALESCE(ph.closed_at, NOW())
      LEFT JOIN trade_analytics ta ON ph.id = ta.position_id
      LEFT JOIN symbols s ON te.symbol = s.symbol
      ${whereClause}
      ORDER BY te.execution_time DESC
    `, params));
    /* istanbul ignore next */
    cov_18esqvz1h1().s[289]++;
    if (format === 'csv') {
      /* istanbul ignore next */
      cov_18esqvz1h1().b[95][0]++;
      // Convert to CSV
      const csvHeaders =
      /* istanbul ignore next */
      (cov_18esqvz1h1().s[290]++, ['Date', 'Symbol', 'Side', 'Quantity', 'Price', 'Commission', 'Gross PnL', 'Net PnL', 'Return %', 'Holding Period (Days)', 'Pattern Type', 'Pattern Confidence', 'Risk/Reward Ratio', 'Sector', 'Industry']);
      const csvData =
      /* istanbul ignore next */
      (cov_18esqvz1h1().s[291]++, result.rows.map(row => {
        /* istanbul ignore next */
        cov_18esqvz1h1().f[28]++;
        cov_18esqvz1h1().s[292]++;
        return [row.execution_time, row.symbol, row.side, row.quantity, row.price, row.commission, row.gross_pnl, row.net_pnl, row.return_percentage, row.holding_period_days, row.trade_pattern_type, row.pattern_confidence, row.risk_reward_ratio, row.sector, row.industry];
      }));
      const csv =
      /* istanbul ignore next */
      (cov_18esqvz1h1().s[293]++, [csvHeaders, ...csvData].map(row => {
        /* istanbul ignore next */
        cov_18esqvz1h1().f[29]++;
        cov_18esqvz1h1().s[294]++;
        return row.join(',');
      }).join('\n'));
      /* istanbul ignore next */
      cov_18esqvz1h1().s[295]++;
      res.setHeader('Content-Type', 'text/csv');
      /* istanbul ignore next */
      cov_18esqvz1h1().s[296]++;
      res.setHeader('Content-Disposition', `attachment; filename=trade_history_${new Date().toISOString().split('T')[0]}.csv`);
      /* istanbul ignore next */
      cov_18esqvz1h1().s[297]++;
      res.send(csv);
    } else {
      /* istanbul ignore next */
      cov_18esqvz1h1().b[95][1]++;
      cov_18esqvz1h1().s[298]++;
      // Return JSON
      res.json({
        success: true,
        data: result.rows
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_18esqvz1h1().s[299]++;
    console.error('Error exporting trade data:', error);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[300]++;
    res.status(500).json({
      success: false,
      error: 'Failed to export trade data'
    });
  }
});

/**
 * @route DELETE /api/trades/data
 * @desc Delete all trade data for user (for testing/reset)
 */
/* istanbul ignore next */
cov_18esqvz1h1().s[301]++;
router.delete('/data', authenticateToken, async (req, res) => {
  /* istanbul ignore next */
  cov_18esqvz1h1().f[30]++;
  cov_18esqvz1h1().s[302]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[303]++, req.user?.sub);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[304]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_18esqvz1h1().b[96][0]++;
      cov_18esqvz1h1().s[305]++;
      throw new Error('User authentication required');
    } else
    /* istanbul ignore next */
    {
      cov_18esqvz1h1().b[96][1]++;
    }
    const {
      confirm
    } =
    /* istanbul ignore next */
    (cov_18esqvz1h1().s[306]++, req.body);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[307]++;
    if (confirm !== 'DELETE_ALL_TRADE_DATA') {
      /* istanbul ignore next */
      cov_18esqvz1h1().b[97][0]++;
      cov_18esqvz1h1().s[308]++;
      return res.status(400).json({
        success: false,
        error: 'Confirmation required. Send { "confirm": "DELETE_ALL_TRADE_DATA" }'
      });
    } else
    /* istanbul ignore next */
    {
      cov_18esqvz1h1().b[97][1]++;
    }

    // Database queries will use the query function directly

    // Delete all trade-related data for user using transaction
    cov_18esqvz1h1().s[309]++;
    await transaction(async client => {
      /* istanbul ignore next */
      cov_18esqvz1h1().f[31]++;
      cov_18esqvz1h1().s[310]++;
      await client.query('DELETE FROM trade_analytics WHERE user_id = $1', [userId]);
      /* istanbul ignore next */
      cov_18esqvz1h1().s[311]++;
      await client.query('DELETE FROM position_history WHERE user_id = $1', [userId]);
      /* istanbul ignore next */
      cov_18esqvz1h1().s[312]++;
      await client.query('DELETE FROM trade_executions WHERE user_id = $1', [userId]);
      /* istanbul ignore next */
      cov_18esqvz1h1().s[313]++;
      await client.query('DELETE FROM trade_insights WHERE user_id = $1', [userId]);
      /* istanbul ignore next */
      cov_18esqvz1h1().s[314]++;
      await client.query('DELETE FROM performance_benchmarks WHERE user_id = $1', [userId]);
      /* istanbul ignore next */
      cov_18esqvz1h1().s[315]++;
      await client.query('DELETE FROM broker_api_configs WHERE user_id = $1', [userId]);
    });
    /* istanbul ignore next */
    cov_18esqvz1h1().s[316]++;
    res.json({
      success: true,
      message: 'All trade data deleted successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_18esqvz1h1().s[317]++;
    console.error('Error deleting trade data:', error);
    /* istanbul ignore next */
    cov_18esqvz1h1().s[318]++;
    res.status(500).json({
      success: false,
      error: 'Failed to delete trade data'
    });
  }
});
/* istanbul ignore next */
cov_18esqvz1h1().s[319]++;
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,