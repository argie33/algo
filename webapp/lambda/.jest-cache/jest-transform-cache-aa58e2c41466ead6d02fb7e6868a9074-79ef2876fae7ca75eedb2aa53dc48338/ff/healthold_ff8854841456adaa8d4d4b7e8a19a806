16981d7200f2528dd2181be518ebb042
/* istanbul ignore next */
function cov_6e7x3lu8z() {
  var path = "/home/stocks/algo/webapp/lambda/routes/health-old.js";
  var hash = "4084e7eba52ed78b73403b2fe207ae345fb669fd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/routes/health-old.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 34
        }
      },
      "1": {
        start: {
          line: 2,
          column: 60
        },
        end: {
          line: 2,
          column: 88
        }
      },
      "2": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 31
        }
      },
      "3": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 374,
          column: 3
        }
      },
      "4": {
        start: {
          line: 8,
          column: 2
        },
        end: {
          line: 373,
          column: 3
        }
      },
      "5": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 28,
          column: 5
        }
      },
      "6": {
        start: {
          line: 11,
          column: 6
        },
        end: {
          line: 27,
          column: 9
        }
      },
      "7": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 58
        }
      },
      "8": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "9": {
        start: {
          line: 33,
          column: 6
        },
        end: {
          line: 33,
          column: 16
        }
      },
      "10": {
        start: {
          line: 35,
          column: 6
        },
        end: {
          line: 35,
          column: 67
        }
      },
      "11": {
        start: {
          line: 36,
          column: 6
        },
        end: {
          line: 56,
          column: 7
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 35
        }
      },
      "13": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 77
        }
      },
      "14": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 55,
          column: 11
        }
      },
      "15": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 76,
          column: 5
        }
      },
      "16": {
        start: {
          line: 60,
          column: 6
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "17": {
        start: {
          line: 78,
          column: 20
        },
        end: {
          line: 78,
          column: 30
        }
      },
      "18": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 82,
          column: 65
        }
      },
      "19": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 83,
          column: 89
        }
      },
      "20": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 84,
          column: 73
        }
      },
      "21": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 85,
          column: 93
        }
      },
      "22": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 86,
          column: 105
        }
      },
      "23": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 87,
          column: 72
        }
      },
      "24": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 88,
          column: 92
        }
      },
      "25": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 208,
          column: 5
        }
      },
      "26": {
        start: {
          line: 92,
          column: 62
        },
        end: {
          line: 92,
          column: 104
        }
      },
      "27": {
        start: {
          line: 93,
          column: 29
        },
        end: {
          line: 93,
          column: 104
        }
      },
      "28": {
        start: {
          line: 95,
          column: 6
        },
        end: {
          line: 156,
          column: 7
        }
      },
      "29": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "30": {
        start: {
          line: 97,
          column: 31
        },
        end: {
          line: 99,
          column: 13
        }
      },
      "31": {
        start: {
          line: 100,
          column: 27
        },
        end: {
          line: 100,
          column: 64
        }
      },
      "32": {
        start: {
          line: 101,
          column: 10
        },
        end: {
          line: 101,
          column: 56
        }
      },
      "33": {
        start: {
          line: 102,
          column: 10
        },
        end: {
          line: 102,
          column: 64
        }
      },
      "34": {
        start: {
          line: 103,
          column: 10
        },
        end: {
          line: 103,
          column: 64
        }
      },
      "35": {
        start: {
          line: 104,
          column: 10
        },
        end: {
          line: 104,
          column: 66
        }
      },
      "36": {
        start: {
          line: 105,
          column: 10
        },
        end: {
          line: 105,
          column: 68
        }
      },
      "37": {
        start: {
          line: 108,
          column: 22
        },
        end: {
          line: 108,
          column: 36
        }
      },
      "38": {
        start: {
          line: 109,
          column: 32
        },
        end: {
          line: 109,
          column: 47
        }
      },
      "39": {
        start: {
          line: 110,
          column: 25
        },
        end: {
          line: 110,
          column: 46
        }
      },
      "40": {
        start: {
          line: 112,
          column: 10
        },
        end: {
          line: 119,
          column: 11
        }
      },
      "41": {
        start: {
          line: 113,
          column: 30
        },
        end: {
          line: 113,
          column: 57
        }
      },
      "42": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 46
        }
      },
      "43": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 61
        }
      },
      "44": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 82
        }
      },
      "45": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 70
        }
      },
      "46": {
        start: {
          line: 122,
          column: 22
        },
        end: {
          line: 122,
          column: 36
        }
      },
      "47": {
        start: {
          line: 123,
          column: 42
        },
        end: {
          line: 142,
          column: 11
        }
      },
      "48": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 141,
          column: 15
        }
      },
      "49": {
        start: {
          line: 125,
          column: 29
        },
        end: {
          line: 125,
          column: 45
        }
      },
      "50": {
        start: {
          line: 126,
          column: 30
        },
        end: {
          line: 129,
          column: 22
        }
      },
      "51": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 127,
          column: 33
        }
      },
      "52": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 128,
          column: 76
        }
      },
      "53": {
        start: {
          line: 131,
          column: 14
        },
        end: {
          line: 135,
          column: 17
        }
      },
      "54": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 132,
          column: 38
        }
      },
      "55": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 33
        }
      },
      "56": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 30
        }
      },
      "57": {
        start: {
          line: 137,
          column: 14
        },
        end: {
          line: 140,
          column: 17
        }
      },
      "58": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 138,
          column: 38
        }
      },
      "59": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 28
        }
      },
      "60": {
        start: {
          line: 144,
          column: 10
        },
        end: {
          line: 151,
          column: 11
        }
      },
      "61": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 44
        }
      },
      "62": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 87
        }
      },
      "63": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 76
        }
      },
      "64": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 88
        }
      },
      "65": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 73
        }
      },
      "66": {
        start: {
          line: 154,
          column: 10
        },
        end: {
          line: 154,
          column: 79
        }
      },
      "67": {
        start: {
          line: 158,
          column: 6
        },
        end: {
          line: 161,
          column: 9
        }
      },
      "68": {
        start: {
          line: 160,
          column: 35
        },
        end: {
          line: 160,
          column: 109
        }
      },
      "69": {
        start: {
          line: 160,
          column: 52
        },
        end: {
          line: 160,
          column: 102
        }
      },
      "70": {
        start: {
          line: 162,
          column: 6
        },
        end: {
          line: 162,
          column: 62
        }
      },
      "71": {
        start: {
          line: 166,
          column: 6
        },
        end: {
          line: 166,
          column: 72
        }
      },
      "72": {
        start: {
          line: 167,
          column: 6
        },
        end: {
          line: 167,
          column: 40
        }
      },
      "73": {
        start: {
          line: 169,
          column: 6
        },
        end: {
          line: 183,
          column: 7
        }
      },
      "74": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 82
        }
      },
      "75": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 85
        }
      },
      "76": {
        start: {
          line: 172,
          column: 13
        },
        end: {
          line: 183,
          column: 7
        }
      },
      "77": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 90
        }
      },
      "78": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 92
        }
      },
      "79": {
        start: {
          line: 175,
          column: 13
        },
        end: {
          line: 183,
          column: 7
        }
      },
      "80": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 67
        }
      },
      "81": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 87
        }
      },
      "82": {
        start: {
          line: 178,
          column: 13
        },
        end: {
          line: 183,
          column: 7
        }
      },
      "83": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 68
        }
      },
      "84": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 82
        }
      },
      "85": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 77
        }
      },
      "86": {
        start: {
          line: 185,
          column: 6
        },
        end: {
          line: 207,
          column: 9
        }
      },
      "87": {
        start: {
          line: 210,
          column: 4
        },
        end: {
          line: 231,
          column: 5
        }
      },
      "88": {
        start: {
          line: 211,
          column: 6
        },
        end: {
          line: 211,
          column: 56
        }
      },
      "89": {
        start: {
          line: 213,
          column: 6
        },
        end: {
          line: 213,
          column: 55
        }
      },
      "90": {
        start: {
          line: 214,
          column: 6
        },
        end: {
          line: 230,
          column: 9
        }
      },
      "91": {
        start: {
          line: 232,
          column: 19
        },
        end: {
          line: 232,
          column: 39
        }
      },
      "92": {
        start: {
          line: 234,
          column: 17
        },
        end: {
          line: 234,
          column: 19
        }
      },
      "93": {
        start: {
          line: 235,
          column: 25
        },
        end: {
          line: 235,
          column: 27
        }
      },
      "94": {
        start: {
          line: 238,
          column: 4
        },
        end: {
          line: 253,
          column: 5
        }
      },
      "95": {
        start: {
          line: 239,
          column: 34
        },
        end: {
          line: 247,
          column: 8
        }
      },
      "96": {
        start: {
          line: 246,
          column: 35
        },
        end: {
          line: 246,
          column: 98
        }
      },
      "97": {
        start: {
          line: 246,
          column: 52
        },
        end: {
          line: 246,
          column: 91
        }
      },
      "98": {
        start: {
          line: 248,
          column: 6
        },
        end: {
          line: 248,
          column: 75
        }
      },
      "99": {
        start: {
          line: 248,
          column: 59
        },
        end: {
          line: 248,
          column: 73
        }
      },
      "100": {
        start: {
          line: 249,
          column: 6
        },
        end: {
          line: 249,
          column: 71
        }
      },
      "101": {
        start: {
          line: 251,
          column: 6
        },
        end: {
          line: 251,
          column: 68
        }
      },
      "102": {
        start: {
          line: 252,
          column: 6
        },
        end: {
          line: 252,
          column: 71
        }
      },
      "103": {
        start: {
          line: 256,
          column: 27
        },
        end: {
          line: 261,
          column: 5
        }
      },
      "104": {
        start: {
          line: 264,
          column: 26
        },
        end: {
          line: 266,
          column: 20
        }
      },
      "105": {
        start: {
          line: 265,
          column: 49
        },
        end: {
          line: 265,
          column: 75
        }
      },
      "106": {
        start: {
          line: 269,
          column: 22
        },
        end: {
          line: 269,
          column: 23
        }
      },
      "107": {
        start: {
          line: 270,
          column: 4
        },
        end: {
          line: 321,
          column: 5
        }
      },
      "108": {
        start: {
          line: 270,
          column: 17
        },
        end: {
          line: 270,
          column: 18
        }
      },
      "109": {
        start: {
          line: 271,
          column: 20
        },
        end: {
          line: 271,
          column: 57
        }
      },
      "110": {
        start: {
          line: 272,
          column: 28
        },
        end: {
          line: 311,
          column: 8
        }
      },
      "111": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 310,
          column: 11
        }
      },
      "112": {
        start: {
          line: 276,
          column: 39
        },
        end: {
          line: 276,
          column: 77
        }
      },
      "113": {
        start: {
          line: 277,
          column: 33
        },
        end: {
          line: 277,
          column: 57
        }
      },
      "114": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 281,
          column: 13
        }
      },
      "115": {
        start: {
          line: 280,
          column: 14
        },
        end: {
          line: 280,
          column: 59
        }
      },
      "116": {
        start: {
          line: 284,
          column: 50
        },
        end: {
          line: 288,
          column: 14
        }
      },
      "117": {
        start: {
          line: 290,
          column: 27
        },
        end: {
          line: 290,
          column: 58
        }
      },
      "118": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 295,
          column: 14
        }
      },
      "119": {
        start: {
          line: 297,
          column: 27
        },
        end: {
          line: 303,
          column: 13
        }
      },
      "120": {
        start: {
          line: 304,
          column: 35
        },
        end: {
          line: 309,
          column: 19
        }
      },
      "121": {
        start: {
          line: 304,
          column: 52
        },
        end: {
          line: 309,
          column: 12
        }
      },
      "122": {
        start: {
          line: 313,
          column: 27
        },
        end: {
          line: 313,
          column: 59
        }
      },
      "123": {
        start: {
          line: 314,
          column: 6
        },
        end: {
          line: 320,
          column: 9
        }
      },
      "124": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 319,
          column: 9
        }
      },
      "125": {
        start: {
          line: 316,
          column: 10
        },
        end: {
          line: 316,
          column: 46
        }
      },
      "126": {
        start: {
          line: 318,
          column: 10
        },
        end: {
          line: 318,
          column: 69
        }
      },
      "127": {
        start: {
          line: 324,
          column: 29
        },
        end: {
          line: 324,
          column: 131
        }
      },
      "128": {
        start: {
          line: 324,
          column: 71
        },
        end: {
          line: 324,
          column: 130
        }
      },
      "129": {
        start: {
          line: 325,
          column: 24
        },
        end: {
          line: 325,
          column: 126
        }
      },
      "130": {
        start: {
          line: 325,
          column: 66
        },
        end: {
          line: 325,
          column: 125
        }
      },
      "131": {
        start: {
          line: 327,
          column: 4
        },
        end: {
          line: 337,
          column: 6
        }
      },
      "132": {
        start: {
          line: 332,
          column: 65
        },
        end: {
          line: 332,
          column: 76
        }
      },
      "133": {
        start: {
          line: 333,
          column: 55
        },
        end: {
          line: 336,
          column: 7
        }
      },
      "134": {
        start: {
          line: 340,
          column: 27
        },
        end: {
          line: 340,
          column: 33
        }
      },
      "135": {
        start: {
          line: 342,
          column: 19
        },
        end: {
          line: 356,
          column: 5
        }
      },
      "136": {
        start: {
          line: 357,
          column: 4
        },
        end: {
          line: 357,
          column: 21
        }
      },
      "137": {
        start: {
          line: 359,
          column: 4
        },
        end: {
          line: 359,
          column: 49
        }
      },
      "138": {
        start: {
          line: 360,
          column: 4
        },
        end: {
          line: 372,
          column: 7
        }
      },
      "139": {
        start: {
          line: 377,
          column: 0
        },
        end: {
          line: 549,
          column: 3
        }
      },
      "140": {
        start: {
          line: 378,
          column: 2
        },
        end: {
          line: 378,
          column: 55
        }
      },
      "141": {
        start: {
          line: 379,
          column: 2
        },
        end: {
          line: 548,
          column: 3
        }
      },
      "142": {
        start: {
          line: 381,
          column: 24
        },
        end: {
          line: 381,
          column: 50
        }
      },
      "143": {
        start: {
          line: 385,
          column: 4
        },
        end: {
          line: 418,
          column: 5
        }
      },
      "144": {
        start: {
          line: 386,
          column: 24
        },
        end: {
          line: 386,
          column: 34
        }
      },
      "145": {
        start: {
          line: 387,
          column: 6
        },
        end: {
          line: 390,
          column: 9
        }
      },
      "146": {
        start: {
          line: 389,
          column: 35
        },
        end: {
          line: 389,
          column: 98
        }
      },
      "147": {
        start: {
          line: 389,
          column: 52
        },
        end: {
          line: 389,
          column: 91
        }
      },
      "148": {
        start: {
          line: 393,
          column: 19
        },
        end: {
          line: 393,
          column: 28
        }
      },
      "149": {
        start: {
          line: 394,
          column: 6
        },
        end: {
          line: 403,
          column: 8
        }
      },
      "150": {
        start: {
          line: 405,
          column: 6
        },
        end: {
          line: 405,
          column: 70
        }
      },
      "151": {
        start: {
          line: 406,
          column: 6
        },
        end: {
          line: 417,
          column: 9
        }
      },
      "152": {
        start: {
          line: 421,
          column: 4
        },
        end: {
          line: 430,
          column: 5
        }
      },
      "153": {
        start: {
          line: 422,
          column: 6
        },
        end: {
          line: 429,
          column: 9
        }
      },
      "154": {
        start: {
          line: 433,
          column: 25
        },
        end: {
          line: 433,
          column: 27
        }
      },
      "155": {
        start: {
          line: 434,
          column: 4
        },
        end: {
          line: 486,
          column: 5
        }
      },
      "156": {
        start: {
          line: 435,
          column: 29
        },
        end: {
          line: 435,
          column: 83
        }
      },
      "157": {
        start: {
          line: 436,
          column: 30
        },
        end: {
          line: 436,
          column: 32
        }
      },
      "158": {
        start: {
          line: 438,
          column: 6
        },
        end: {
          line: 485,
          column: 7
        }
      },
      "159": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 473,
          column: 9
        }
      },
      "160": {
        start: {
          line: 440,
          column: 28
        },
        end: {
          line: 440,
          column: 38
        }
      },
      "161": {
        start: {
          line: 441,
          column: 10
        },
        end: {
          line: 472,
          column: 11
        }
      },
      "162": {
        start: {
          line: 444,
          column: 39
        },
        end: {
          line: 444,
          column: 77
        }
      },
      "163": {
        start: {
          line: 445,
          column: 33
        },
        end: {
          line: 445,
          column: 57
        }
      },
      "164": {
        start: {
          line: 447,
          column: 12
        },
        end: {
          line: 449,
          column: 13
        }
      },
      "165": {
        start: {
          line: 448,
          column: 14
        },
        end: {
          line: 448,
          column: 59
        }
      },
      "166": {
        start: {
          line: 451,
          column: 51
        },
        end: {
          line: 455,
          column: 14
        }
      },
      "167": {
        start: {
          line: 457,
          column: 27
        },
        end: {
          line: 460,
          column: 14
        }
      },
      "168": {
        start: {
          line: 459,
          column: 41
        },
        end: {
          line: 459,
          column: 99
        }
      },
      "169": {
        start: {
          line: 459,
          column: 58
        },
        end: {
          line: 459,
          column: 92
        }
      },
      "170": {
        start: {
          line: 462,
          column: 12
        },
        end: {
          line: 465,
          column: 14
        }
      },
      "171": {
        start: {
          line: 467,
          column: 12
        },
        end: {
          line: 471,
          column: 14
        }
      },
      "172": {
        start: {
          line: 475,
          column: 31
        },
        end: {
          line: 475,
          column: 102
        }
      },
      "173": {
        start: {
          line: 475,
          column: 74
        },
        end: {
          line: 475,
          column: 94
        }
      },
      "174": {
        start: {
          line: 476,
          column: 8
        },
        end: {
          line: 481,
          column: 10
        }
      },
      "175": {
        start: {
          line: 484,
          column: 8
        },
        end: {
          line: 484,
          column: 58
        }
      },
      "176": {
        start: {
          line: 489,
          column: 4
        },
        end: {
          line: 503,
          column: 5
        }
      },
      "177": {
        start: {
          line: 490,
          column: 29
        },
        end: {
          line: 490,
          column: 63
        }
      },
      "178": {
        start: {
          line: 492,
          column: 6
        },
        end: {
          line: 502,
          column: 9
        }
      },
      "179": {
        start: {
          line: 506,
          column: 21
        },
        end: {
          line: 506,
          column: 23
        }
      },
      "180": {
        start: {
          line: 507,
          column: 4
        },
        end: {
          line: 522,
          column: 5
        }
      },
      "181": {
        start: {
          line: 508,
          column: 6
        },
        end: {
          line: 521,
          column: 7
        }
      },
      "182": {
        start: {
          line: 509,
          column: 33
        },
        end: {
          line: 512,
          column: 10
        }
      },
      "183": {
        start: {
          line: 511,
          column: 37
        },
        end: {
          line: 511,
          column: 101
        }
      },
      "184": {
        start: {
          line: 511,
          column: 54
        },
        end: {
          line: 511,
          column: 94
        }
      },
      "185": {
        start: {
          line: 514,
          column: 8
        },
        end: {
          line: 517,
          column: 10
        }
      },
      "186": {
        start: {
          line: 520,
          column: 8
        },
        end: {
          line: 520,
          column: 50
        }
      },
      "187": {
        start: {
          line: 525,
          column: 27
        },
        end: {
          line: 525,
          column: 68
        }
      },
      "188": {
        start: {
          line: 527,
          column: 4
        },
        end: {
          line: 538,
          column: 7
        }
      },
      "189": {
        start: {
          line: 541,
          column: 4
        },
        end: {
          line: 541,
          column: 60
        }
      },
      "190": {
        start: {
          line: 542,
          column: 4
        },
        end: {
          line: 547,
          column: 7
        }
      },
      "191": {
        start: {
          line: 552,
          column: 0
        },
        end: {
          line: 573,
          column: 3
        }
      },
      "192": {
        start: {
          line: 553,
          column: 2
        },
        end: {
          line: 572,
          column: 3
        }
      },
      "193": {
        start: {
          line: 554,
          column: 19
        },
        end: {
          line: 554,
          column: 93
        }
      },
      "194": {
        start: {
          line: 556,
          column: 4
        },
        end: {
          line: 562,
          column: 7
        }
      },
      "195": {
        start: {
          line: 565,
          column: 4
        },
        end: {
          line: 565,
          column: 63
        }
      },
      "196": {
        start: {
          line: 566,
          column: 4
        },
        end: {
          line: 571,
          column: 7
        }
      },
      "197": {
        start: {
          line: 576,
          column: 0
        },
        end: {
          line: 795,
          column: 3
        }
      },
      "198": {
        start: {
          line: 577,
          column: 2
        },
        end: {
          line: 577,
          column: 67
        }
      },
      "199": {
        start: {
          line: 579,
          column: 2
        },
        end: {
          line: 604,
          column: 3
        }
      },
      "200": {
        start: {
          line: 580,
          column: 4
        },
        end: {
          line: 595,
          column: 5
        }
      },
      "201": {
        start: {
          line: 581,
          column: 6
        },
        end: {
          line: 581,
          column: 16
        }
      },
      "202": {
        start: {
          line: 583,
          column: 6
        },
        end: {
          line: 583,
          column: 74
        }
      },
      "203": {
        start: {
          line: 584,
          column: 6
        },
        end: {
          line: 594,
          column: 7
        }
      },
      "204": {
        start: {
          line: 585,
          column: 8
        },
        end: {
          line: 585,
          column: 35
        }
      },
      "205": {
        start: {
          line: 587,
          column: 8
        },
        end: {
          line: 587,
          column: 90
        }
      },
      "206": {
        start: {
          line: 588,
          column: 8
        },
        end: {
          line: 593,
          column: 11
        }
      },
      "207": {
        start: {
          line: 598,
          column: 4
        },
        end: {
          line: 603,
          column: 7
        }
      },
      "208": {
        start: {
          line: 605,
          column: 22
        },
        end: {
          line: 637,
          column: 3
        }
      },
      "209": {
        start: {
          line: 638,
          column: 22
        },
        end: {
          line: 638,
          column: 31
        }
      },
      "210": {
        start: {
          line: 639,
          column: 2
        },
        end: {
          line: 794,
          column: 3
        }
      },
      "211": {
        start: {
          line: 641,
          column: 39
        },
        end: {
          line: 641,
          column: 49
        }
      },
      "212": {
        start: {
          line: 642,
          column: 4
        },
        end: {
          line: 672,
          column: 5
        }
      },
      "213": {
        start: {
          line: 643,
          column: 6
        },
        end: {
          line: 643,
          column: 129
        }
      },
      "214": {
        start: {
          line: 644,
          column: 6
        },
        end: {
          line: 644,
          column: 68
        }
      },
      "215": {
        start: {
          line: 645,
          column: 6
        },
        end: {
          line: 657,
          column: 7
        }
      },
      "216": {
        start: {
          line: 646,
          column: 20
        },
        end: {
          line: 646,
          column: 42
        }
      },
      "217": {
        start: {
          line: 647,
          column: 8
        },
        end: {
          line: 647,
          column: 52
        }
      },
      "218": {
        start: {
          line: 648,
          column: 8
        },
        end: {
          line: 648,
          column: 116
        }
      },
      "219": {
        start: {
          line: 649,
          column: 8
        },
        end: {
          line: 649,
          column: 75
        }
      },
      "220": {
        start: {
          line: 650,
          column: 8
        },
        end: {
          line: 650,
          column: 48
        }
      },
      "221": {
        start: {
          line: 651,
          column: 8
        },
        end: {
          line: 651,
          column: 60
        }
      },
      "222": {
        start: {
          line: 653,
          column: 8
        },
        end: {
          line: 653,
          column: 60
        }
      },
      "223": {
        start: {
          line: 654,
          column: 8
        },
        end: {
          line: 654,
          column: 85
        }
      },
      "224": {
        start: {
          line: 655,
          column: 8
        },
        end: {
          line: 655,
          column: 35
        }
      },
      "225": {
        start: {
          line: 656,
          column: 8
        },
        end: {
          line: 656,
          column: 136
        }
      },
      "226": {
        start: {
          line: 659,
          column: 6
        },
        end: {
          line: 659,
          column: 47
        }
      },
      "227": {
        start: {
          line: 660,
          column: 6
        },
        end: {
          line: 660,
          column: 62
        }
      },
      "228": {
        start: {
          line: 661,
          column: 6
        },
        end: {
          line: 661,
          column: 74
        }
      },
      "229": {
        start: {
          line: 662,
          column: 6
        },
        end: {
          line: 662,
          column: 34
        }
      },
      "230": {
        start: {
          line: 663,
          column: 6
        },
        end: {
          line: 663,
          column: 113
        }
      },
      "231": {
        start: {
          line: 664,
          column: 6
        },
        end: {
          line: 671,
          column: 10
        }
      },
      "232": {
        start: {
          line: 674,
          column: 4
        },
        end: {
          line: 682,
          column: 5
        }
      },
      "233": {
        start: {
          line: 675,
          column: 23
        },
        end: {
          line: 675,
          column: 99
        }
      },
      "234": {
        start: {
          line: 676,
          column: 6
        },
        end: {
          line: 679,
          column: 7
        }
      },
      "235": {
        start: {
          line: 677,
          column: 8
        },
        end: {
          line: 677,
          column: 73
        }
      },
      "236": {
        start: {
          line: 678,
          column: 8
        },
        end: {
          line: 678,
          column: 66
        }
      },
      "237": {
        start: {
          line: 681,
          column: 6
        },
        end: {
          line: 681,
          column: 66
        }
      },
      "238": {
        start: {
          line: 684,
          column: 4
        },
        end: {
          line: 689,
          column: 5
        }
      },
      "239": {
        start: {
          line: 685,
          column: 22
        },
        end: {
          line: 685,
          column: 162
        }
      },
      "240": {
        start: {
          line: 686,
          column: 6
        },
        end: {
          line: 686,
          column: 74
        }
      },
      "241": {
        start: {
          line: 686,
          column: 59
        },
        end: {
          line: 686,
          column: 72
        }
      },
      "242": {
        start: {
          line: 688,
          column: 6
        },
        end: {
          line: 688,
          column: 69
        }
      },
      "243": {
        start: {
          line: 691,
          column: 17
        },
        end: {
          line: 691,
          column: 19
        }
      },
      "244": {
        start: {
          line: 691,
          column: 34
        },
        end: {
          line: 691,
          column: 44
        }
      },
      "245": {
        start: {
          line: 692,
          column: 4
        },
        end: {
          line: 764,
          column: 5
        }
      },
      "246": {
        start: {
          line: 693,
          column: 27
        },
        end: {
          line: 703,
          column: 8
        }
      },
      "247": {
        start: {
          line: 704,
          column: 6
        },
        end: {
          line: 704,
          column: 33
        }
      },
      "248": {
        start: {
          line: 705,
          column: 6
        },
        end: {
          line: 705,
          column: 47
        }
      },
      "249": {
        start: {
          line: 706,
          column: 27
        },
        end: {
          line: 706,
          column: 28
        }
      },
      "250": {
        start: {
          line: 707,
          column: 6
        },
        end: {
          line: 749,
          column: 7
        }
      },
      "251": {
        start: {
          line: 708,
          column: 8
        },
        end: {
          line: 748,
          column: 9
        }
      },
      "252": {
        start: {
          line: 710,
          column: 37
        },
        end: {
          line: 710,
          column: 75
        }
      },
      "253": {
        start: {
          line: 711,
          column: 31
        },
        end: {
          line: 711,
          column: 55
        }
      },
      "254": {
        start: {
          line: 713,
          column: 10
        },
        end: {
          line: 716,
          column: 11
        }
      },
      "255": {
        start: {
          line: 714,
          column: 12
        },
        end: {
          line: 714,
          column: 78
        }
      },
      "256": {
        start: {
          line: 715,
          column: 12
        },
        end: {
          line: 715,
          column: 21
        }
      },
      "257": {
        start: {
          line: 718,
          column: 61
        },
        end: {
          line: 721,
          column: 12
        }
      },
      "258": {
        start: {
          line: 722,
          column: 24
        },
        end: {
          line: 722,
          column: 60
        }
      },
      "259": {
        start: {
          line: 723,
          column: 30
        },
        end: {
          line: 723,
          column: 59
        }
      },
      "260": {
        start: {
          line: 724,
          column: 10
        },
        end: {
          line: 724,
          column: 43
        }
      },
      "261": {
        start: {
          line: 726,
          column: 27
        },
        end: {
          line: 726,
          column: 31
        }
      },
      "262": {
        start: {
          line: 727,
          column: 10
        },
        end: {
          line: 742,
          column: 38
        }
      },
      "263": {
        start: {
          line: 728,
          column: 26
        },
        end: {
          line: 728,
          column: 221
        }
      },
      "264": {
        start: {
          line: 729,
          column: 12
        },
        end: {
          line: 741,
          column: 13
        }
      },
      "265": {
        start: {
          line: 730,
          column: 26
        },
        end: {
          line: 730,
          column: 51
        }
      },
      "266": {
        start: {
          line: 732,
          column: 14
        },
        end: {
          line: 734,
          column: 15
        }
      },
      "267": {
        start: {
          line: 733,
          column: 16
        },
        end: {
          line: 733,
          column: 25
        }
      },
      "268": {
        start: {
          line: 735,
          column: 61
        },
        end: {
          line: 738,
          column: 16
        }
      },
      "269": {
        start: {
          line: 739,
          column: 28
        },
        end: {
          line: 739,
          column: 60
        }
      },
      "270": {
        start: {
          line: 740,
          column: 14
        },
        end: {
          line: 740,
          column: 53
        }
      },
      "271": {
        start: {
          line: 743,
          column: 10
        },
        end: {
          line: 743,
          column: 41
        }
      },
      "272": {
        start: {
          line: 744,
          column: 10
        },
        end: {
          line: 744,
          column: 48
        }
      },
      "273": {
        start: {
          line: 744,
          column: 31
        },
        end: {
          line: 744,
          column: 48
        }
      },
      "274": {
        start: {
          line: 746,
          column: 10
        },
        end: {
          line: 746,
          column: 36
        }
      },
      "275": {
        start: {
          line: 747,
          column: 10
        },
        end: {
          line: 747,
          column: 88
        }
      },
      "276": {
        start: {
          line: 750,
          column: 6
        },
        end: {
          line: 750,
          column: 51
        }
      },
      "277": {
        start: {
          line: 751,
          column: 6
        },
        end: {
          line: 751,
          column: 39
        }
      },
      "278": {
        start: {
          line: 752,
          column: 6
        },
        end: {
          line: 752,
          column: 62
        }
      },
      "279": {
        start: {
          line: 753,
          column: 6
        },
        end: {
          line: 759,
          column: 7
        }
      },
      "280": {
        start: {
          line: 754,
          column: 8
        },
        end: {
          line: 754,
          column: 35
        }
      },
      "281": {
        start: {
          line: 755,
          column: 8
        },
        end: {
          line: 755,
          column: 106
        }
      },
      "282": {
        start: {
          line: 756,
          column: 13
        },
        end: {
          line: 759,
          column: 7
        }
      },
      "283": {
        start: {
          line: 757,
          column: 8
        },
        end: {
          line: 757,
          column: 35
        }
      },
      "284": {
        start: {
          line: 758,
          column: 8
        },
        end: {
          line: 758,
          column: 104
        }
      },
      "285": {
        start: {
          line: 761,
          column: 6
        },
        end: {
          line: 761,
          column: 68
        }
      },
      "286": {
        start: {
          line: 762,
          column: 6
        },
        end: {
          line: 762,
          column: 33
        }
      },
      "287": {
        start: {
          line: 763,
          column: 6
        },
        end: {
          line: 763,
          column: 103
        }
      },
      "288": {
        start: {
          line: 766,
          column: 4
        },
        end: {
          line: 768,
          column: 5
        }
      },
      "289": {
        start: {
          line: 767,
          column: 6
        },
        end: {
          line: 767,
          column: 33
        }
      },
      "290": {
        start: {
          line: 769,
          column: 4
        },
        end: {
          line: 781,
          column: 7
        }
      },
      "291": {
        start: {
          line: 783,
          column: 4
        },
        end: {
          line: 783,
          column: 69
        }
      },
      "292": {
        start: {
          line: 784,
          column: 4
        },
        end: {
          line: 784,
          column: 32
        }
      },
      "293": {
        start: {
          line: 785,
          column: 4
        },
        end: {
          line: 785,
          column: 88
        }
      },
      "294": {
        start: {
          line: 786,
          column: 4
        },
        end: {
          line: 793,
          column: 8
        }
      },
      "295": {
        start: {
          line: 798,
          column: 0
        },
        end: {
          line: 806,
          column: 3
        }
      },
      "296": {
        start: {
          line: 799,
          column: 2
        },
        end: {
          line: 799,
          column: 54
        }
      },
      "297": {
        start: {
          line: 800,
          column: 2
        },
        end: {
          line: 805,
          column: 3
        }
      },
      "298": {
        start: {
          line: 801,
          column: 19
        },
        end: {
          line: 801,
          column: 48
        }
      },
      "299": {
        start: {
          line: 802,
          column: 4
        },
        end: {
          line: 802,
          column: 48
        }
      },
      "300": {
        start: {
          line: 804,
          column: 4
        },
        end: {
          line: 804,
          column: 58
        }
      },
      "301": {
        start: {
          line: 809,
          column: 0
        },
        end: {
          line: 1173,
          column: 3
        }
      },
      "302": {
        start: {
          line: 810,
          column: 2
        },
        end: {
          line: 810,
          column: 60
        }
      },
      "303": {
        start: {
          line: 811,
          column: 2
        },
        end: {
          line: 1172,
          column: 3
        }
      },
      "304": {
        start: {
          line: 813,
          column: 4
        },
        end: {
          line: 828,
          column: 5
        }
      },
      "305": {
        start: {
          line: 814,
          column: 6
        },
        end: {
          line: 814,
          column: 16
        }
      },
      "306": {
        start: {
          line: 816,
          column: 6
        },
        end: {
          line: 816,
          column: 76
        }
      },
      "307": {
        start: {
          line: 817,
          column: 6
        },
        end: {
          line: 827,
          column: 7
        }
      },
      "308": {
        start: {
          line: 818,
          column: 8
        },
        end: {
          line: 818,
          column: 35
        }
      },
      "309": {
        start: {
          line: 820,
          column: 8
        },
        end: {
          line: 820,
          column: 92
        }
      },
      "310": {
        start: {
          line: 821,
          column: 8
        },
        end: {
          line: 826,
          column: 11
        }
      },
      "311": {
        start: {
          line: 831,
          column: 4
        },
        end: {
          line: 978,
          column: 5
        }
      },
      "312": {
        start: {
          line: 832,
          column: 6
        },
        end: {
          line: 832,
          column: 57
        }
      },
      "313": {
        start: {
          line: 834,
          column: 6
        },
        end: {
          line: 834,
          column: 72
        }
      },
      "314": {
        start: {
          line: 835,
          column: 6
        },
        end: {
          line: 977,
          column: 7
        }
      },
      "315": {
        start: {
          line: 837,
          column: 8
        },
        end: {
          line: 856,
          column: 11
        }
      },
      "316": {
        start: {
          line: 859,
          column: 32
        },
        end: {
          line: 958,
          column: 9
        }
      },
      "317": {
        start: {
          line: 960,
          column: 8
        },
        end: {
          line: 966,
          column: 9
        }
      },
      "318": {
        start: {
          line: 961,
          column: 10
        },
        end: {
          line: 965,
          column: 76
        }
      },
      "319": {
        start: {
          line: 968,
          column: 8
        },
        end: {
          line: 968,
          column: 103
        }
      },
      "320": {
        start: {
          line: 970,
          column: 8
        },
        end: {
          line: 970,
          column: 84
        }
      },
      "321": {
        start: {
          line: 971,
          column: 8
        },
        end: {
          line: 976,
          column: 11
        }
      },
      "322": {
        start: {
          line: 981,
          column: 22
        },
        end: {
          line: 981,
          column: 32
        }
      },
      "323": {
        start: {
          line: 982,
          column: 26
        },
        end: {
          line: 982,
          column: 28
        }
      },
      "324": {
        start: {
          line: 983,
          column: 18
        },
        end: {
          line: 992,
          column: 5
        }
      },
      "325": {
        start: {
          line: 994,
          column: 4
        },
        end: {
          line: 1150,
          column: 5
        }
      },
      "326": {
        start: {
          line: 996,
          column: 28
        },
        end: {
          line: 996,
          column: 106
        }
      },
      "327": {
        start: {
          line: 997,
          column: 6
        },
        end: {
          line: 997,
          column: 52
        }
      },
      "328": {
        start: {
          line: 999,
          column: 6
        },
        end: {
          line: 1141,
          column: 7
        }
      },
      "329": {
        start: {
          line: 1000,
          column: 26
        },
        end: {
          line: 1000,
          column: 45
        }
      },
      "330": {
        start: {
          line: 1001,
          column: 26
        },
        end: {
          line: 1001,
          column: 35
        }
      },
      "331": {
        start: {
          line: 1002,
          column: 26
        },
        end: {
          line: 1002,
          column: 27
        }
      },
      "332": {
        start: {
          line: 1003,
          column: 26
        },
        end: {
          line: 1003,
          column: 30
        }
      },
      "333": {
        start: {
          line: 1004,
          column: 23
        },
        end: {
          line: 1004,
          column: 27
        }
      },
      "334": {
        start: {
          line: 1005,
          column: 22
        },
        end: {
          line: 1005,
          column: 27
        }
      },
      "335": {
        start: {
          line: 1007,
          column: 8
        },
        end: {
          line: 1111,
          column: 9
        }
      },
      "336": {
        start: {
          line: 1009,
          column: 30
        },
        end: {
          line: 1012,
          column: 25
        }
      },
      "337": {
        start: {
          line: 1014,
          column: 10
        },
        end: {
          line: 1106,
          column: 11
        }
      },
      "338": {
        start: {
          line: 1015,
          column: 12
        },
        end: {
          line: 1015,
          column: 36
        }
      },
      "339": {
        start: {
          line: 1016,
          column: 12
        },
        end: {
          line: 1016,
          column: 37
        }
      },
      "340": {
        start: {
          line: 1018,
          column: 12
        },
        end: {
          line: 1105,
          column: 13
        }
      },
      "341": {
        start: {
          line: 1021,
          column: 41
        },
        end: {
          line: 1021,
          column: 79
        }
      },
      "342": {
        start: {
          line: 1022,
          column: 35
        },
        end: {
          line: 1022,
          column: 59
        }
      },
      "343": {
        start: {
          line: 1024,
          column: 14
        },
        end: {
          line: 1030,
          column: 15
        }
      },
      "344": {
        start: {
          line: 1025,
          column: 16
        },
        end: {
          line: 1025,
          column: 75
        }
      },
      "345": {
        start: {
          line: 1026,
          column: 16
        },
        end: {
          line: 1026,
          column: 45
        }
      },
      "346": {
        start: {
          line: 1027,
          column: 16
        },
        end: {
          line: 1027,
          column: 41
        }
      },
      "347": {
        start: {
          line: 1028,
          column: 16
        },
        end: {
          line: 1028,
          column: 75
        }
      },
      "348": {
        start: {
          line: 1029,
          column: 16
        },
        end: {
          line: 1029,
          column: 25
        }
      },
      "349": {
        start: {
          line: 1032,
          column: 67
        },
        end: {
          line: 1035,
          column: 16
        }
      },
      "350": {
        start: {
          line: 1036,
          column: 35
        },
        end: {
          line: 1036,
          column: 73
        }
      },
      "351": {
        start: {
          line: 1037,
          column: 14
        },
        end: {
          line: 1037,
          column: 65
        }
      },
      "352": {
        start: {
          line: 1038,
          column: 14
        },
        end: {
          line: 1038,
          column: 51
        }
      },
      "353": {
        start: {
          line: 1040,
          column: 14
        },
        end: {
          line: 1100,
          column: 15
        }
      },
      "354": {
        start: {
          line: 1041,
          column: 16
        },
        end: {
          line: 1041,
          column: 38
        }
      },
      "355": {
        start: {
          line: 1042,
          column: 16
        },
        end: {
          line: 1042,
          column: 39
        }
      },
      "356": {
        start: {
          line: 1045,
          column: 41
        },
        end: {
          line: 1045,
          column: 118
        }
      },
      "357": {
        start: {
          line: 1046,
          column: 37
        },
        end: {
          line: 1046,
          column: 42
        }
      },
      "358": {
        start: {
          line: 1048,
          column: 16
        },
        end: {
          line: 1074,
          column: 17
        }
      },
      "359": {
        start: {
          line: 1049,
          column: 18
        },
        end: {
          line: 1073,
          column: 19
        }
      },
      "360": {
        start: {
          line: 1050,
          column: 37
        },
        end: {
          line: 1053,
          column: 40
        }
      },
      "361": {
        start: {
          line: 1055,
          column: 20
        },
        end: {
          line: 1070,
          column: 21
        }
      },
      "362": {
        start: {
          line: 1057,
          column: 22
        },
        end: {
          line: 1059,
          column: 23
        }
      },
      "363": {
        start: {
          line: 1058,
          column: 24
        },
        end: {
          line: 1058,
          column: 33
        }
      },
      "364": {
        start: {
          line: 1060,
          column: 67
        },
        end: {
          line: 1063,
          column: 24
        }
      },
      "365": {
        start: {
          line: 1064,
          column: 39
        },
        end: {
          line: 1064,
          column: 69
        }
      },
      "366": {
        start: {
          line: 1065,
          column: 22
        },
        end: {
          line: 1069,
          column: 23
        }
      },
      "367": {
        start: {
          line: 1066,
          column: 24
        },
        end: {
          line: 1066,
          column: 67
        }
      },
      "368": {
        start: {
          line: 1067,
          column: 24
        },
        end: {
          line: 1067,
          column: 46
        }
      },
      "369": {
        start: {
          line: 1068,
          column: 24
        },
        end: {
          line: 1068,
          column: 30
        }
      },
      "370": {
        start: {
          line: 1077,
          column: 16
        },
        end: {
          line: 1099,
          column: 17
        }
      },
      "371": {
        start: {
          line: 1078,
          column: 43
        },
        end: {
          line: 1078,
          column: 77
        }
      },
      "372": {
        start: {
          line: 1079,
          column: 41
        },
        end: {
          line: 1079,
          column: 51
        }
      },
      "373": {
        start: {
          line: 1082,
          column: 43
        },
        end: {
          line: 1082,
          column: 98
        }
      },
      "374": {
        start: {
          line: 1083,
          column: 40
        },
        end: {
          line: 1086,
          column: 85
        }
      },
      "375": {
        start: {
          line: 1088,
          column: 18
        },
        end: {
          line: 1095,
          column: 19
        }
      },
      "376": {
        start: {
          line: 1089,
          column: 20
        },
        end: {
          line: 1089,
          column: 42
        }
      },
      "377": {
        start: {
          line: 1090,
          column: 20
        },
        end: {
          line: 1090,
          column: 35
        }
      },
      "378": {
        start: {
          line: 1091,
          column: 20
        },
        end: {
          line: 1091,
          column: 43
        }
      },
      "379": {
        start: {
          line: 1093,
          column: 20
        },
        end: {
          line: 1093,
          column: 44
        }
      },
      "380": {
        start: {
          line: 1094,
          column: 20
        },
        end: {
          line: 1094,
          column: 45
        }
      },
      "381": {
        start: {
          line: 1097,
          column: 18
        },
        end: {
          line: 1097,
          column: 42
        }
      },
      "382": {
        start: {
          line: 1098,
          column: 18
        },
        end: {
          line: 1098,
          column: 43
        }
      },
      "383": {
        start: {
          line: 1102,
          column: 14
        },
        end: {
          line: 1102,
          column: 36
        }
      },
      "384": {
        start: {
          line: 1103,
          column: 14
        },
        end: {
          line: 1103,
          column: 45
        }
      },
      "385": {
        start: {
          line: 1104,
          column: 14
        },
        end: {
          line: 1104,
          column: 37
        }
      },
      "386": {
        start: {
          line: 1108,
          column: 10
        },
        end: {
          line: 1108,
          column: 32
        }
      },
      "387": {
        start: {
          line: 1109,
          column: 10
        },
        end: {
          line: 1109,
          column: 40
        }
      },
      "388": {
        start: {
          line: 1110,
          column: 10
        },
        end: {
          line: 1110,
          column: 33
        }
      },
      "389": {
        start: {
          line: 1114,
          column: 8
        },
        end: {
          line: 1132,
          column: 9
        }
      },
      "390": {
        start: {
          line: 1115,
          column: 10
        },
        end: {
          line: 1129,
          column: 87
        }
      },
      "391": {
        start: {
          line: 1131,
          column: 10
        },
        end: {
          line: 1131,
          column: 103
        }
      },
      "392": {
        start: {
          line: 1134,
          column: 8
        },
        end: {
          line: 1140,
          column: 11
        }
      },
      "393": {
        start: {
          line: 1143,
          column: 6
        },
        end: {
          line: 1143,
          column: 86
        }
      },
      "394": {
        start: {
          line: 1144,
          column: 6
        },
        end: {
          line: 1149,
          column: 9
        }
      },
      "395": {
        start: {
          line: 1152,
          column: 21
        },
        end: {
          line: 1152,
          column: 43
        }
      },
      "396": {
        start: {
          line: 1154,
          column: 4
        },
        end: {
          line: 1162,
          column: 7
        }
      },
      "397": {
        start: {
          line: 1165,
          column: 4
        },
        end: {
          line: 1165,
          column: 59
        }
      },
      "398": {
        start: {
          line: 1166,
          column: 4
        },
        end: {
          line: 1171,
          column: 7
        }
      },
      "399": {
        start: {
          line: 1176,
          column: 0
        },
        end: {
          line: 1236,
          column: 3
        }
      },
      "400": {
        start: {
          line: 1177,
          column: 2
        },
        end: {
          line: 1235,
          column: 3
        }
      },
      "401": {
        start: {
          line: 1179,
          column: 4
        },
        end: {
          line: 1183,
          column: 5
        }
      },
      "402": {
        start: {
          line: 1180,
          column: 6
        },
        end: {
          line: 1180,
          column: 16
        }
      },
      "403": {
        start: {
          line: 1182,
          column: 6
        },
        end: {
          line: 1182,
          column: 33
        }
      },
      "404": {
        start: {
          line: 1186,
          column: 26
        },
        end: {
          line: 1203,
          column: 6
        }
      },
      "405": {
        start: {
          line: 1205,
          column: 27
        },
        end: {
          line: 1218,
          column: 6
        }
      },
      "406": {
        start: {
          line: 1220,
          column: 4
        },
        end: {
          line: 1225,
          column: 7
        }
      },
      "407": {
        start: {
          line: 1228,
          column: 4
        },
        end: {
          line: 1228,
          column: 65
        }
      },
      "408": {
        start: {
          line: 1229,
          column: 4
        },
        end: {
          line: 1234,
          column: 7
        }
      },
      "409": {
        start: {
          line: 1239,
          column: 0
        },
        end: {
          line: 1267,
          column: 3
        }
      },
      "410": {
        start: {
          line: 1240,
          column: 2
        },
        end: {
          line: 1240,
          column: 51
        }
      },
      "411": {
        start: {
          line: 1241,
          column: 2
        },
        end: {
          line: 1266,
          column: 3
        }
      },
      "412": {
        start: {
          line: 1243,
          column: 4
        },
        end: {
          line: 1248,
          column: 5
        }
      },
      "413": {
        start: {
          line: 1244,
          column: 6
        },
        end: {
          line: 1244,
          column: 16
        }
      },
      "414": {
        start: {
          line: 1246,
          column: 6
        },
        end: {
          line: 1246,
          column: 67
        }
      },
      "415": {
        start: {
          line: 1247,
          column: 6
        },
        end: {
          line: 1247,
          column: 33
        }
      },
      "416": {
        start: {
          line: 1251,
          column: 17
        },
        end: {
          line: 1251,
          column: 26
        }
      },
      "417": {
        start: {
          line: 1253,
          column: 4
        },
        end: {
          line: 1257,
          column: 7
        }
      },
      "418": {
        start: {
          line: 1259,
          column: 4
        },
        end: {
          line: 1259,
          column: 51
        }
      },
      "419": {
        start: {
          line: 1260,
          column: 4
        },
        end: {
          line: 1265,
          column: 7
        }
      },
      "420": {
        start: {
          line: 1270,
          column: 0
        },
        end: {
          line: 1349,
          column: 3
        }
      },
      "421": {
        start: {
          line: 1271,
          column: 2
        },
        end: {
          line: 1348,
          column: 3
        }
      },
      "422": {
        start: {
          line: 1272,
          column: 4
        },
        end: {
          line: 1272,
          column: 58
        }
      },
      "423": {
        start: {
          line: 1274,
          column: 22
        },
        end: {
          line: 1297,
          column: 5
        }
      },
      "424": {
        start: {
          line: 1300,
          column: 4
        },
        end: {
          line: 1300,
          column: 54
        }
      },
      "425": {
        start: {
          line: 1301,
          column: 4
        },
        end: {
          line: 1306,
          column: 5
        }
      },
      "426": {
        start: {
          line: 1302,
          column: 26
        },
        end: {
          line: 1302,
          column: 57
        }
      },
      "427": {
        start: {
          line: 1303,
          column: 6
        },
        end: {
          line: 1303,
          column: 42
        }
      },
      "428": {
        start: {
          line: 1305,
          column: 6
        },
        end: {
          line: 1305,
          column: 74
        }
      },
      "429": {
        start: {
          line: 1309,
          column: 4
        },
        end: {
          line: 1309,
          column: 53
        }
      },
      "430": {
        start: {
          line: 1310,
          column: 4
        },
        end: {
          line: 1315,
          column: 5
        }
      },
      "431": {
        start: {
          line: 1311,
          column: 23
        },
        end: {
          line: 1311,
          column: 42
        }
      },
      "432": {
        start: {
          line: 1312,
          column: 6
        },
        end: {
          line: 1312,
          column: 42
        }
      },
      "433": {
        start: {
          line: 1314,
          column: 6
        },
        end: {
          line: 1314,
          column: 77
        }
      },
      "434": {
        start: {
          line: 1318,
          column: 4
        },
        end: {
          line: 1324,
          column: 5
        }
      },
      "435": {
        start: {
          line: 1319,
          column: 6
        },
        end: {
          line: 1323,
          column: 8
        }
      },
      "436": {
        start: {
          line: 1326,
          column: 4
        },
        end: {
          line: 1326,
          column: 45
        }
      },
      "437": {
        start: {
          line: 1328,
          column: 4
        },
        end: {
          line: 1338,
          column: 7
        }
      },
      "438": {
        start: {
          line: 1341,
          column: 4
        },
        end: {
          line: 1341,
          column: 53
        }
      },
      "439": {
        start: {
          line: 1342,
          column: 4
        },
        end: {
          line: 1347,
          column: 7
        }
      },
      "440": {
        start: {
          line: 1351,
          column: 0
        },
        end: {
          line: 1351,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 16
          },
          end: {
            line: 7,
            column: 17
          }
        },
        loc: {
          start: {
            line: 7,
            column: 36
          },
          end: {
            line: 374,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 123,
            column: 42
          },
          end: {
            line: 123,
            column: 43
          }
        },
        loc: {
          start: {
            line: 123,
            column: 48
          },
          end: {
            line: 142,
            column: 11
          }
        },
        line: 123
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 124,
            column: 31
          },
          end: {
            line: 124,
            column: 32
          }
        },
        loc: {
          start: {
            line: 124,
            column: 52
          },
          end: {
            line: 141,
            column: 13
          }
        },
        line: 124
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 126,
            column: 41
          },
          end: {
            line: 126,
            column: 42
          }
        },
        loc: {
          start: {
            line: 126,
            column: 47
          },
          end: {
            line: 129,
            column: 15
          }
        },
        line: 126
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 131,
            column: 59
          },
          end: {
            line: 131,
            column: 60
          }
        },
        loc: {
          start: {
            line: 131,
            column: 65
          },
          end: {
            line: 135,
            column: 15
          }
        },
        line: 131
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 137,
            column: 33
          },
          end: {
            line: 137,
            column: 34
          }
        },
        loc: {
          start: {
            line: 137,
            column: 42
          },
          end: {
            line: 140,
            column: 15
          }
        },
        line: 137
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 160,
            column: 20
          },
          end: {
            line: 160,
            column: 21
          }
        },
        loc: {
          start: {
            line: 160,
            column: 35
          },
          end: {
            line: 160,
            column: 109
          }
        },
        line: 160
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 160,
            column: 46
          },
          end: {
            line: 160,
            column: 47
          }
        },
        loc: {
          start: {
            line: 160,
            column: 52
          },
          end: {
            line: 160,
            column: 102
          }
        },
        line: 160
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 246,
            column: 20
          },
          end: {
            line: 246,
            column: 21
          }
        },
        loc: {
          start: {
            line: 246,
            column: 35
          },
          end: {
            line: 246,
            column: 98
          }
        },
        line: 246
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 246,
            column: 46
          },
          end: {
            line: 246,
            column: 47
          }
        },
        loc: {
          start: {
            line: 246,
            column: 52
          },
          end: {
            line: 246,
            column: 91
          }
        },
        line: 246
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 248,
            column: 52
          },
          end: {
            line: 248,
            column: 53
          }
        },
        loc: {
          start: {
            line: 248,
            column: 59
          },
          end: {
            line: 248,
            column: 73
          }
        },
        line: 248
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 265,
            column: 44
          },
          end: {
            line: 265,
            column: 45
          }
        },
        loc: {
          start: {
            line: 265,
            column: 49
          },
          end: {
            line: 265,
            column: 75
          }
        },
        line: 265
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 272,
            column: 38
          },
          end: {
            line: 272,
            column: 39
          }
        },
        loc: {
          start: {
            line: 272,
            column: 51
          },
          end: {
            line: 311,
            column: 7
          }
        },
        line: 272
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 274,
            column: 11
          },
          end: {
            line: 274,
            column: 12
          }
        },
        loc: {
          start: {
            line: 274,
            column: 23
          },
          end: {
            line: 296,
            column: 11
          }
        },
        line: 274
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 297,
            column: 19
          },
          end: {
            line: 297,
            column: 20
          }
        },
        loc: {
          start: {
            line: 297,
            column: 27
          },
          end: {
            line: 303,
            column: 13
          }
        },
        line: 297
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 304,
            column: 22
          },
          end: {
            line: 304,
            column: 23
          }
        },
        loc: {
          start: {
            line: 304,
            column: 35
          },
          end: {
            line: 309,
            column: 19
          }
        },
        line: 304
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 304,
            column: 46
          },
          end: {
            line: 304,
            column: 47
          }
        },
        loc: {
          start: {
            line: 304,
            column: 52
          },
          end: {
            line: 309,
            column: 12
          }
        },
        line: 304
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 314,
            column: 27
          },
          end: {
            line: 314,
            column: 28
          }
        },
        loc: {
          start: {
            line: 314,
            column: 37
          },
          end: {
            line: 320,
            column: 7
          }
        },
        line: 314
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 324,
            column: 59
          },
          end: {
            line: 324,
            column: 60
          }
        },
        loc: {
          start: {
            line: 324,
            column: 71
          },
          end: {
            line: 324,
            column: 130
          }
        },
        line: 324
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 325,
            column: 54
          },
          end: {
            line: 325,
            column: 55
          }
        },
        loc: {
          start: {
            line: 325,
            column: 66
          },
          end: {
            line: 325,
            column: 125
          }
        },
        line: 325
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 332,
            column: 45
          },
          end: {
            line: 332,
            column: 46
          }
        },
        loc: {
          start: {
            line: 332,
            column: 65
          },
          end: {
            line: 332,
            column: 76
          }
        },
        line: 332
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 333,
            column: 49
          },
          end: {
            line: 333,
            column: 50
          }
        },
        loc: {
          start: {
            line: 333,
            column: 55
          },
          end: {
            line: 336,
            column: 7
          }
        },
        line: 333
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 377,
            column: 24
          },
          end: {
            line: 377,
            column: 25
          }
        },
        loc: {
          start: {
            line: 377,
            column: 44
          },
          end: {
            line: 549,
            column: 1
          }
        },
        line: 377
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 389,
            column: 20
          },
          end: {
            line: 389,
            column: 21
          }
        },
        loc: {
          start: {
            line: 389,
            column: 35
          },
          end: {
            line: 389,
            column: 98
          }
        },
        line: 389
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 389,
            column: 46
          },
          end: {
            line: 389,
            column: 47
          }
        },
        loc: {
          start: {
            line: 389,
            column: 52
          },
          end: {
            line: 389,
            column: 91
          }
        },
        line: 389
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 459,
            column: 26
          },
          end: {
            line: 459,
            column: 27
          }
        },
        loc: {
          start: {
            line: 459,
            column: 41
          },
          end: {
            line: 459,
            column: 99
          }
        },
        line: 459
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 459,
            column: 52
          },
          end: {
            line: 459,
            column: 53
          }
        },
        loc: {
          start: {
            line: 459,
            column: 58
          },
          end: {
            line: 459,
            column: 92
          }
        },
        line: 459
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 475,
            column: 69
          },
          end: {
            line: 475,
            column: 70
          }
        },
        loc: {
          start: {
            line: 475,
            column: 74
          },
          end: {
            line: 475,
            column: 94
          }
        },
        line: 475
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 511,
            column: 22
          },
          end: {
            line: 511,
            column: 23
          }
        },
        loc: {
          start: {
            line: 511,
            column: 37
          },
          end: {
            line: 511,
            column: 101
          }
        },
        line: 511
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 511,
            column: 48
          },
          end: {
            line: 511,
            column: 49
          }
        },
        loc: {
          start: {
            line: 511,
            column: 54
          },
          end: {
            line: 511,
            column: 94
          }
        },
        line: 511
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 552,
            column: 31
          },
          end: {
            line: 552,
            column: 32
          }
        },
        loc: {
          start: {
            line: 552,
            column: 51
          },
          end: {
            line: 573,
            column: 1
          }
        },
        line: 552
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 576,
            column: 36
          },
          end: {
            line: 576,
            column: 37
          }
        },
        loc: {
          start: {
            line: 576,
            column: 56
          },
          end: {
            line: 795,
            column: 1
          }
        },
        line: 576
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 686,
            column: 54
          },
          end: {
            line: 686,
            column: 55
          }
        },
        loc: {
          start: {
            line: 686,
            column: 59
          },
          end: {
            line: 686,
            column: 72
          }
        },
        line: 686
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 798,
            column: 23
          },
          end: {
            line: 798,
            column: 24
          }
        },
        loc: {
          start: {
            line: 798,
            column: 43
          },
          end: {
            line: 806,
            column: 1
          }
        },
        line: 798
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 809,
            column: 30
          },
          end: {
            line: 809,
            column: 31
          }
        },
        loc: {
          start: {
            line: 809,
            column: 50
          },
          end: {
            line: 1173,
            column: 1
          }
        },
        line: 809
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 1176,
            column: 30
          },
          end: {
            line: 1176,
            column: 31
          }
        },
        loc: {
          start: {
            line: 1176,
            column: 50
          },
          end: {
            line: 1236,
            column: 1
          }
        },
        line: 1176
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 1239,
            column: 30
          },
          end: {
            line: 1239,
            column: 31
          }
        },
        loc: {
          start: {
            line: 1239,
            column: 50
          },
          end: {
            line: 1267,
            column: 1
          }
        },
        line: 1239
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 1270,
            column: 21
          },
          end: {
            line: 1270,
            column: 22
          }
        },
        loc: {
          start: {
            line: 1270,
            column: 41
          },
          end: {
            line: 1349,
            column: 1
          }
        },
        line: 1270
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 21
          },
          end: {
            line: 16,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 21
          },
          end: {
            line: 16,
            column: 44
          }
        }, {
          start: {
            line: 16,
            column: 48
          },
          end: {
            line: 16,
            column: 53
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 21,
            column: 46
          },
          end: {
            line: 21,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 46
          },
          end: {
            line: 21,
            column: 69
          }
        }, {
          start: {
            line: 21,
            column: 73
          },
          end: {
            line: 21,
            column: 78
          }
        }],
        line: 21
      },
      "3": {
        loc: {
          start: {
            line: 45,
            column: 23
          },
          end: {
            line: 45,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 23
          },
          end: {
            line: 45,
            column: 46
          }
        }, {
          start: {
            line: 45,
            column: 50
          },
          end: {
            line: 45,
            column: 55
          }
        }],
        line: 45
      },
      "4": {
        loc: {
          start: {
            line: 52,
            column: 48
          },
          end: {
            line: 52,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 48
          },
          end: {
            line: 52,
            column: 71
          }
        }, {
          start: {
            line: 52,
            column: 75
          },
          end: {
            line: 52,
            column: 80
          }
        }],
        line: 52
      },
      "5": {
        loc: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "6": {
        loc: {
          start: {
            line: 65,
            column: 21
          },
          end: {
            line: 65,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 21
          },
          end: {
            line: 65,
            column: 44
          }
        }, {
          start: {
            line: 65,
            column: 48
          },
          end: {
            line: 65,
            column: 53
          }
        }],
        line: 65
      },
      "7": {
        loc: {
          start: {
            line: 72,
            column: 46
          },
          end: {
            line: 72,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 46
          },
          end: {
            line: 72,
            column: 69
          }
        }, {
          start: {
            line: 72,
            column: 73
          },
          end: {
            line: 72,
            column: 78
          }
        }],
        line: 72
      },
      "8": {
        loc: {
          start: {
            line: 83,
            column: 38
          },
          end: {
            line: 83,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 38
          },
          end: {
            line: 83,
            column: 74
          }
        }, {
          start: {
            line: 83,
            column: 78
          },
          end: {
            line: 83,
            column: 87
          }
        }],
        line: 83
      },
      "9": {
        loc: {
          start: {
            line: 84,
            column: 36
          },
          end: {
            line: 84,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 36
          },
          end: {
            line: 84,
            column: 58
          }
        }, {
          start: {
            line: 84,
            column: 62
          },
          end: {
            line: 84,
            column: 71
          }
        }],
        line: 84
      },
      "10": {
        loc: {
          start: {
            line: 85,
            column: 34
          },
          end: {
            line: 85,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 34
          },
          end: {
            line: 85,
            column: 71
          }
        }, {
          start: {
            line: 85,
            column: 75
          },
          end: {
            line: 85,
            column: 91
          }
        }],
        line: 85
      },
      "11": {
        loc: {
          start: {
            line: 86,
            column: 38
          },
          end: {
            line: 86,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 38
          },
          end: {
            line: 86,
            column: 83
          }
        }, {
          start: {
            line: 86,
            column: 87
          },
          end: {
            line: 86,
            column: 103
          }
        }],
        line: 86
      },
      "12": {
        loc: {
          start: {
            line: 87,
            column: 34
          },
          end: {
            line: 87,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 34
          },
          end: {
            line: 87,
            column: 57
          }
        }, {
          start: {
            line: 87,
            column: 61
          },
          end: {
            line: 87,
            column: 70
          }
        }],
        line: 87
      },
      "13": {
        loc: {
          start: {
            line: 88,
            column: 36
          },
          end: {
            line: 88,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 88,
            column: 64
          },
          end: {
            line: 88,
            column: 78
          }
        }, {
          start: {
            line: 88,
            column: 81
          },
          end: {
            line: 88,
            column: 90
          }
        }],
        line: 88
      },
      "14": {
        loc: {
          start: {
            line: 93,
            column: 64
          },
          end: {
            line: 93,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 64
          },
          end: {
            line: 93,
            column: 86
          }
        }, {
          start: {
            line: 93,
            column: 90
          },
          end: {
            line: 93,
            column: 101
          }
        }],
        line: 93
      },
      "15": {
        loc: {
          start: {
            line: 95,
            column: 6
          },
          end: {
            line: 156,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 6
          },
          end: {
            line: 156,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "16": {
        loc: {
          start: {
            line: 102,
            column: 36
          },
          end: {
            line: 102,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 36
          },
          end: {
            line: 102,
            column: 49
          }
        }, {
          start: {
            line: 102,
            column: 53
          },
          end: {
            line: 102,
            column: 62
          }
        }],
        line: 102
      },
      "17": {
        loc: {
          start: {
            line: 103,
            column: 36
          },
          end: {
            line: 103,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 36
          },
          end: {
            line: 103,
            column: 49
          }
        }, {
          start: {
            line: 103,
            column: 53
          },
          end: {
            line: 103,
            column: 62
          }
        }],
        line: 103
      },
      "18": {
        loc: {
          start: {
            line: 104,
            column: 36
          },
          end: {
            line: 104,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 36
          },
          end: {
            line: 104,
            column: 51
          }
        }, {
          start: {
            line: 104,
            column: 55
          },
          end: {
            line: 104,
            column: 64
          }
        }],
        line: 104
      },
      "19": {
        loc: {
          start: {
            line: 105,
            column: 36
          },
          end: {
            line: 105,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 36
          },
          end: {
            line: 105,
            column: 53
          }
        }, {
          start: {
            line: 105,
            column: 57
          },
          end: {
            line: 105,
            column: 66
          }
        }],
        line: 105
      },
      "20": {
        loc: {
          start: {
            line: 116,
            column: 40
          },
          end: {
            line: 116,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 116,
            column: 65
          },
          end: {
            line: 116,
            column: 71
          }
        }, {
          start: {
            line: 116,
            column: 74
          },
          end: {
            line: 116,
            column: 80
          }
        }],
        line: 116
      },
      "21": {
        loc: {
          start: {
            line: 169,
            column: 6
          },
          end: {
            line: 183,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 6
          },
          end: {
            line: 183,
            column: 7
          }
        }, {
          start: {
            line: 172,
            column: 13
          },
          end: {
            line: 183,
            column: 7
          }
        }],
        line: 169
      },
      "22": {
        loc: {
          start: {
            line: 172,
            column: 13
          },
          end: {
            line: 183,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 13
          },
          end: {
            line: 183,
            column: 7
          }
        }, {
          start: {
            line: 175,
            column: 13
          },
          end: {
            line: 183,
            column: 7
          }
        }],
        line: 172
      },
      "23": {
        loc: {
          start: {
            line: 175,
            column: 13
          },
          end: {
            line: 183,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 13
          },
          end: {
            line: 183,
            column: 7
          }
        }, {
          start: {
            line: 178,
            column: 13
          },
          end: {
            line: 183,
            column: 7
          }
        }],
        line: 175
      },
      "24": {
        loc: {
          start: {
            line: 175,
            column: 17
          },
          end: {
            line: 175,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 175,
            column: 17
          },
          end: {
            line: 175,
            column: 54
          }
        }, {
          start: {
            line: 175,
            column: 58
          },
          end: {
            line: 175,
            column: 98
          }
        }],
        line: 175
      },
      "25": {
        loc: {
          start: {
            line: 178,
            column: 13
          },
          end: {
            line: 183,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 13
          },
          end: {
            line: 183,
            column: 7
          }
        }, {
          start: {
            line: 181,
            column: 13
          },
          end: {
            line: 183,
            column: 7
          }
        }],
        line: 178
      },
      "26": {
        loc: {
          start: {
            line: 182,
            column: 50
          },
          end: {
            line: 182,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 182,
            column: 50
          },
          end: {
            line: 182,
            column: 62
          }
        }, {
          start: {
            line: 182,
            column: 66
          },
          end: {
            line: 182,
            column: 75
          }
        }],
        line: 182
      },
      "27": {
        loc: {
          start: {
            line: 190,
            column: 21
          },
          end: {
            line: 190,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 190,
            column: 21
          },
          end: {
            line: 190,
            column: 44
          }
        }, {
          start: {
            line: 190,
            column: 48
          },
          end: {
            line: 190,
            column: 53
          }
        }],
        line: 190
      },
      "28": {
        loc: {
          start: {
            line: 198,
            column: 30
          },
          end: {
            line: 198,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 198,
            column: 30
          },
          end: {
            line: 198,
            column: 67
          }
        }, {
          start: {
            line: 198,
            column: 71
          },
          end: {
            line: 198,
            column: 87
          }
        }],
        line: 198
      },
      "29": {
        loc: {
          start: {
            line: 199,
            column: 34
          },
          end: {
            line: 199,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 199,
            column: 34
          },
          end: {
            line: 199,
            column: 79
          }
        }, {
          start: {
            line: 199,
            column: 83
          },
          end: {
            line: 199,
            column: 99
          }
        }],
        line: 199
      },
      "30": {
        loc: {
          start: {
            line: 200,
            column: 24
          },
          end: {
            line: 200,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 200,
            column: 24
          },
          end: {
            line: 200,
            column: 47
          }
        }, {
          start: {
            line: 200,
            column: 51
          },
          end: {
            line: 200,
            column: 60
          }
        }],
        line: 200
      },
      "31": {
        loc: {
          start: {
            line: 204,
            column: 46
          },
          end: {
            line: 204,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 46
          },
          end: {
            line: 204,
            column: 69
          }
        }, {
          start: {
            line: 204,
            column: 73
          },
          end: {
            line: 204,
            column: 78
          }
        }],
        line: 204
      },
      "32": {
        loc: {
          start: {
            line: 219,
            column: 21
          },
          end: {
            line: 219,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 219,
            column: 21
          },
          end: {
            line: 219,
            column: 44
          }
        }, {
          start: {
            line: 219,
            column: 48
          },
          end: {
            line: 219,
            column: 53
          }
        }],
        line: 219
      },
      "33": {
        loc: {
          start: {
            line: 227,
            column: 46
          },
          end: {
            line: 227,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 227,
            column: 46
          },
          end: {
            line: 227,
            column: 69
          }
        }, {
          start: {
            line: 227,
            column: 73
          },
          end: {
            line: 227,
            column: 78
          }
        }],
        line: 227
      },
      "34": {
        loc: {
          start: {
            line: 264,
            column: 26
          },
          end: {
            line: 266,
            column: 20
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 265,
            column: 6
          },
          end: {
            line: 265,
            column: 98
          }
        }, {
          start: {
            line: 266,
            column: 6
          },
          end: {
            line: 266,
            column: 20
          }
        }],
        line: 264
      },
      "35": {
        loc: {
          start: {
            line: 279,
            column: 12
          },
          end: {
            line: 281,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 279,
            column: 12
          },
          end: {
            line: 281,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 279
      },
      "36": {
        loc: {
          start: {
            line: 301,
            column: 21
          },
          end: {
            line: 302,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 301,
            column: 62
          },
          end: {
            line: 301,
            column: 84
          }
        }, {
          start: {
            line: 302,
            column: 21
          },
          end: {
            line: 302,
            column: 101
          }
        }],
        line: 301
      },
      "37": {
        loc: {
          start: {
            line: 302,
            column: 21
          },
          end: {
            line: 302,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 302,
            column: 60
          },
          end: {
            line: 302,
            column: 87
          }
        }, {
          start: {
            line: 302,
            column: 90
          },
          end: {
            line: 302,
            column: 101
          }
        }],
        line: 302
      },
      "38": {
        loc: {
          start: {
            line: 315,
            column: 8
          },
          end: {
            line: 319,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 315,
            column: 8
          },
          end: {
            line: 319,
            column: 9
          }
        }, {
          start: {
            line: 317,
            column: 15
          },
          end: {
            line: 319,
            column: 9
          }
        }],
        line: 315
      },
      "39": {
        loc: {
          start: {
            line: 324,
            column: 71
          },
          end: {
            line: 324,
            column: 130
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 324,
            column: 71
          },
          end: {
            line: 324,
            column: 92
          }
        }, {
          start: {
            line: 324,
            column: 96
          },
          end: {
            line: 324,
            column: 112
          }
        }, {
          start: {
            line: 324,
            column: 116
          },
          end: {
            line: 324,
            column: 130
          }
        }],
        line: 324
      },
      "40": {
        loc: {
          start: {
            line: 325,
            column: 66
          },
          end: {
            line: 325,
            column: 125
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 325,
            column: 66
          },
          end: {
            line: 325,
            column: 87
          }
        }, {
          start: {
            line: 325,
            column: 91
          },
          end: {
            line: 325,
            column: 107
          }
        }, {
          start: {
            line: 325,
            column: 111
          },
          end: {
            line: 325,
            column: 125
          }
        }],
        line: 325
      },
      "41": {
        loc: {
          start: {
            line: 328,
            column: 20
          },
          end: {
            line: 328,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 328,
            column: 20
          },
          end: {
            line: 328,
            column: 41
          }
        }, {
          start: {
            line: 328,
            column: 45
          },
          end: {
            line: 328,
            column: 65
          }
        }],
        line: 328
      },
      "42": {
        loc: {
          start: {
            line: 335,
            column: 16
          },
          end: {
            line: 335,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 335,
            column: 43
          },
          end: {
            line: 335,
            column: 89
          }
        }, {
          start: {
            line: 335,
            column: 93
          },
          end: {
            line: 335,
            column: 106
          }
        }],
        line: 335
      },
      "43": {
        loc: {
          start: {
            line: 335,
            column: 43
          },
          end: {
            line: 335,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 335,
            column: 75
          },
          end: {
            line: 335,
            column: 79
          }
        }, {
          start: {
            line: 335,
            column: 82
          },
          end: {
            line: 335,
            column: 89
          }
        }],
        line: 335
      },
      "44": {
        loc: {
          start: {
            line: 352,
            column: 21
          },
          end: {
            line: 352,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 352,
            column: 21
          },
          end: {
            line: 352,
            column: 41
          }
        }, {
          start: {
            line: 352,
            column: 45
          },
          end: {
            line: 352,
            column: 58
          }
        }],
        line: 352
      },
      "45": {
        loc: {
          start: {
            line: 369,
            column: 44
          },
          end: {
            line: 369,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 369,
            column: 44
          },
          end: {
            line: 369,
            column: 67
          }
        }, {
          start: {
            line: 369,
            column: 71
          },
          end: {
            line: 369,
            column: 76
          }
        }],
        line: 369
      },
      "46": {
        loc: {
          start: {
            line: 381,
            column: 24
          },
          end: {
            line: 381,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 381,
            column: 24
          },
          end: {
            line: 381,
            column: 39
          }
        }, {
          start: {
            line: 381,
            column: 43
          },
          end: {
            line: 381,
            column: 50
          }
        }],
        line: 381
      },
      "47": {
        loc: {
          start: {
            line: 416,
            column: 46
          },
          end: {
            line: 416,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 416,
            column: 46
          },
          end: {
            line: 416,
            column: 69
          }
        }, {
          start: {
            line: 416,
            column: 73
          },
          end: {
            line: 416,
            column: 78
          }
        }],
        line: 416
      },
      "48": {
        loc: {
          start: {
            line: 421,
            column: 4
          },
          end: {
            line: 430,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 421,
            column: 4
          },
          end: {
            line: 430,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 421
      },
      "49": {
        loc: {
          start: {
            line: 428,
            column: 46
          },
          end: {
            line: 428,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 428,
            column: 46
          },
          end: {
            line: 428,
            column: 69
          }
        }, {
          start: {
            line: 428,
            column: 73
          },
          end: {
            line: 428,
            column: 78
          }
        }],
        line: 428
      },
      "50": {
        loc: {
          start: {
            line: 434,
            column: 4
          },
          end: {
            line: 486,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 434,
            column: 4
          },
          end: {
            line: 486,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 434
      },
      "51": {
        loc: {
          start: {
            line: 434,
            column: 8
          },
          end: {
            line: 434,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 434,
            column: 8
          },
          end: {
            line: 434,
            column: 34
          }
        }, {
          start: {
            line: 434,
            column: 38
          },
          end: {
            line: 434,
            column: 60
          }
        }],
        line: 434
      },
      "52": {
        loc: {
          start: {
            line: 447,
            column: 12
          },
          end: {
            line: 449,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 447,
            column: 12
          },
          end: {
            line: 449,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 447
      },
      "53": {
        loc: {
          start: {
            line: 489,
            column: 4
          },
          end: {
            line: 503,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 489,
            column: 4
          },
          end: {
            line: 503,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 489
      },
      "54": {
        loc: {
          start: {
            line: 493,
            column: 16
          },
          end: {
            line: 493,
            column: 50
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 493,
            column: 33
          },
          end: {
            line: 493,
            column: 37
          }
        }, {
          start: {
            line: 493,
            column: 40
          },
          end: {
            line: 493,
            column: 50
          }
        }],
        line: 493
      },
      "55": {
        loc: {
          start: {
            line: 501,
            column: 46
          },
          end: {
            line: 501,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 501,
            column: 46
          },
          end: {
            line: 501,
            column: 69
          }
        }, {
          start: {
            line: 501,
            column: 73
          },
          end: {
            line: 501,
            column: 78
          }
        }],
        line: 501
      },
      "56": {
        loc: {
          start: {
            line: 507,
            column: 4
          },
          end: {
            line: 522,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 507,
            column: 4
          },
          end: {
            line: 522,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 507
      },
      "57": {
        loc: {
          start: {
            line: 525,
            column: 28
          },
          end: {
            line: 525,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 525,
            column: 28
          },
          end: {
            line: 525,
            column: 56
          }
        }, {
          start: {
            line: 525,
            column: 60
          },
          end: {
            line: 525,
            column: 61
          }
        }],
        line: 525
      },
      "58": {
        loc: {
          start: {
            line: 528,
            column: 14
          },
          end: {
            line: 528,
            column: 48
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 528,
            column: 31
          },
          end: {
            line: 528,
            column: 35
          }
        }, {
          start: {
            line: 528,
            column: 38
          },
          end: {
            line: 528,
            column: 48
          }
        }],
        line: 528
      },
      "59": {
        loc: {
          start: {
            line: 537,
            column: 44
          },
          end: {
            line: 537,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 537,
            column: 44
          },
          end: {
            line: 537,
            column: 67
          }
        }, {
          start: {
            line: 537,
            column: 71
          },
          end: {
            line: 537,
            column: 76
          }
        }],
        line: 537
      },
      "60": {
        loc: {
          start: {
            line: 609,
            column: 21
          },
          end: {
            line: 609,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 609,
            column: 49
          },
          end: {
            line: 609,
            column: 54
          }
        }, {
          start: {
            line: 609,
            column: 57
          },
          end: {
            line: 609,
            column: 66
          }
        }],
        line: 609
      },
      "61": {
        loc: {
          start: {
            line: 610,
            column: 19
          },
          end: {
            line: 610,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 610,
            column: 45
          },
          end: {
            line: 610,
            column: 50
          }
        }, {
          start: {
            line: 610,
            column: 53
          },
          end: {
            line: 610,
            column: 62
          }
        }],
        line: 610
      },
      "62": {
        loc: {
          start: {
            line: 613,
            column: 16
          },
          end: {
            line: 613,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 613,
            column: 16
          },
          end: {
            line: 613,
            column: 54
          }
        }, {
          start: {
            line: 613,
            column: 58
          },
          end: {
            line: 613,
            column: 84
          }
        }],
        line: 613
      },
      "63": {
        loc: {
          start: {
            line: 645,
            column: 6
          },
          end: {
            line: 657,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 645,
            column: 6
          },
          end: {
            line: 657,
            column: 7
          }
        }, {
          start: {
            line: 652,
            column: 13
          },
          end: {
            line: 657,
            column: 7
          }
        }],
        line: 645
      },
      "64": {
        loc: {
          start: {
            line: 648,
            column: 40
          },
          end: {
            line: 648,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 648,
            column: 68
          },
          end: {
            line: 648,
            column: 89
          }
        }, {
          start: {
            line: 648,
            column: 92
          },
          end: {
            line: 648,
            column: 115
          }
        }],
        line: 648
      },
      "65": {
        loc: {
          start: {
            line: 665,
            column: 21
          },
          end: {
            line: 665,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 665,
            column: 21
          },
          end: {
            line: 665,
            column: 53
          }
        }, {
          start: {
            line: 665,
            column: 57
          },
          end: {
            line: 665,
            column: 66
          }
        }],
        line: 665
      },
      "66": {
        loc: {
          start: {
            line: 676,
            column: 6
          },
          end: {
            line: 679,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 676,
            column: 6
          },
          end: {
            line: 679,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 676
      },
      "67": {
        loc: {
          start: {
            line: 677,
            column: 36
          },
          end: {
            line: 677,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 677,
            column: 36
          },
          end: {
            line: 677,
            column: 57
          }
        }, {
          start: {
            line: 677,
            column: 61
          },
          end: {
            line: 677,
            column: 72
          }
        }],
        line: 677
      },
      "68": {
        loc: {
          start: {
            line: 678,
            column: 36
          },
          end: {
            line: 678,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 678,
            column: 36
          },
          end: {
            line: 678,
            column: 57
          }
        }, {
          start: {
            line: 678,
            column: 61
          },
          end: {
            line: 678,
            column: 65
          }
        }],
        line: 678
      },
      "69": {
        loc: {
          start: {
            line: 713,
            column: 10
          },
          end: {
            line: 716,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 713,
            column: 10
          },
          end: {
            line: 716,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 713
      },
      "70": {
        loc: {
          start: {
            line: 729,
            column: 12
          },
          end: {
            line: 741,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 729,
            column: 12
          },
          end: {
            line: 741,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 729
      },
      "71": {
        loc: {
          start: {
            line: 732,
            column: 14
          },
          end: {
            line: 734,
            column: 15
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 732,
            column: 14
          },
          end: {
            line: 734,
            column: 15
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 732
      },
      "72": {
        loc: {
          start: {
            line: 744,
            column: 10
          },
          end: {
            line: 744,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 744,
            column: 10
          },
          end: {
            line: 744,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 744
      },
      "73": {
        loc: {
          start: {
            line: 753,
            column: 6
          },
          end: {
            line: 759,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 753,
            column: 6
          },
          end: {
            line: 759,
            column: 7
          }
        }, {
          start: {
            line: 756,
            column: 13
          },
          end: {
            line: 759,
            column: 7
          }
        }],
        line: 753
      },
      "74": {
        loc: {
          start: {
            line: 756,
            column: 13
          },
          end: {
            line: 759,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 756,
            column: 13
          },
          end: {
            line: 759,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 756
      },
      "75": {
        loc: {
          start: {
            line: 766,
            column: 4
          },
          end: {
            line: 768,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 766,
            column: 4
          },
          end: {
            line: 768,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 766
      },
      "76": {
        loc: {
          start: {
            line: 766,
            column: 8
          },
          end: {
            line: 766,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 766,
            column: 8
          },
          end: {
            line: 766,
            column: 37
          }
        }, {
          start: {
            line: 766,
            column: 41
          },
          end: {
            line: 766,
            column: 77
          }
        }],
        line: 766
      },
      "77": {
        loc: {
          start: {
            line: 770,
            column: 14
          },
          end: {
            line: 770,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 770,
            column: 62
          },
          end: {
            line: 770,
            column: 66
          }
        }, {
          start: {
            line: 770,
            column: 69
          },
          end: {
            line: 770,
            column: 76
          }
        }],
        line: 770
      },
      "78": {
        loc: {
          start: {
            line: 774,
            column: 21
          },
          end: {
            line: 774,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 774,
            column: 21
          },
          end: {
            line: 774,
            column: 53
          }
        }, {
          start: {
            line: 774,
            column: 57
          },
          end: {
            line: 774,
            column: 66
          }
        }],
        line: 774
      },
      "79": {
        loc: {
          start: {
            line: 787,
            column: 19
          },
          end: {
            line: 787,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 787,
            column: 19
          },
          end: {
            line: 787,
            column: 51
          }
        }, {
          start: {
            line: 787,
            column: 55
          },
          end: {
            line: 787,
            column: 64
          }
        }],
        line: 787
      },
      "80": {
        loc: {
          start: {
            line: 1014,
            column: 10
          },
          end: {
            line: 1106,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1014,
            column: 10
          },
          end: {
            line: 1106,
            column: 11
          }
        }, {
          start: {
            line: 1017,
            column: 17
          },
          end: {
            line: 1106,
            column: 11
          }
        }],
        line: 1014
      },
      "81": {
        loc: {
          start: {
            line: 1024,
            column: 14
          },
          end: {
            line: 1030,
            column: 15
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1024,
            column: 14
          },
          end: {
            line: 1030,
            column: 15
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1024
      },
      "82": {
        loc: {
          start: {
            line: 1040,
            column: 14
          },
          end: {
            line: 1100,
            column: 15
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1040,
            column: 14
          },
          end: {
            line: 1100,
            column: 15
          }
        }, {
          start: {
            line: 1043,
            column: 21
          },
          end: {
            line: 1100,
            column: 15
          }
        }],
        line: 1040
      },
      "83": {
        loc: {
          start: {
            line: 1055,
            column: 20
          },
          end: {
            line: 1070,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1055,
            column: 20
          },
          end: {
            line: 1070,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1055
      },
      "84": {
        loc: {
          start: {
            line: 1057,
            column: 22
          },
          end: {
            line: 1059,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1057,
            column: 22
          },
          end: {
            line: 1059,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1057
      },
      "85": {
        loc: {
          start: {
            line: 1065,
            column: 22
          },
          end: {
            line: 1069,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1065,
            column: 22
          },
          end: {
            line: 1069,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1065
      },
      "86": {
        loc: {
          start: {
            line: 1077,
            column: 16
          },
          end: {
            line: 1099,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1077,
            column: 16
          },
          end: {
            line: 1099,
            column: 17
          }
        }, {
          start: {
            line: 1096,
            column: 23
          },
          end: {
            line: 1099,
            column: 17
          }
        }],
        line: 1077
      },
      "87": {
        loc: {
          start: {
            line: 1077,
            column: 20
          },
          end: {
            line: 1077,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1077,
            column: 20
          },
          end: {
            line: 1077,
            column: 31
          }
        }, {
          start: {
            line: 1077,
            column: 35
          },
          end: {
            line: 1077,
            column: 69
          }
        }],
        line: 1077
      },
      "88": {
        loc: {
          start: {
            line: 1083,
            column: 40
          },
          end: {
            line: 1086,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1083,
            column: 76
          },
          end: {
            line: 1083,
            column: 77
          }
        }, {
          start: {
            line: 1084,
            column: 39
          },
          end: {
            line: 1086,
            column: 85
          }
        }],
        line: 1083
      },
      "89": {
        loc: {
          start: {
            line: 1084,
            column: 39
          },
          end: {
            line: 1086,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1084,
            column: 74
          },
          end: {
            line: 1084,
            column: 76
          }
        }, {
          start: {
            line: 1085,
            column: 39
          },
          end: {
            line: 1086,
            column: 85
          }
        }],
        line: 1084
      },
      "90": {
        loc: {
          start: {
            line: 1085,
            column: 39
          },
          end: {
            line: 1086,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1085,
            column: 75
          },
          end: {
            line: 1085,
            column: 78
          }
        }, {
          start: {
            line: 1086,
            column: 39
          },
          end: {
            line: 1086,
            column: 85
          }
        }],
        line: 1085
      },
      "91": {
        loc: {
          start: {
            line: 1086,
            column: 39
          },
          end: {
            line: 1086,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1086,
            column: 76
          },
          end: {
            line: 1086,
            column: 80
          }
        }, {
          start: {
            line: 1086,
            column: 83
          },
          end: {
            line: 1086,
            column: 85
          }
        }],
        line: 1086
      },
      "92": {
        loc: {
          start: {
            line: 1088,
            column: 18
          },
          end: {
            line: 1095,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1088,
            column: 18
          },
          end: {
            line: 1095,
            column: 19
          }
        }, {
          start: {
            line: 1092,
            column: 25
          },
          end: {
            line: 1095,
            column: 19
          }
        }],
        line: 1088
      },
      "93": {
        loc: {
          start: {
            line: 1293,
            column: 21
          },
          end: {
            line: 1293,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1293,
            column: 49
          },
          end: {
            line: 1293,
            column: 99
          }
        }, {
          start: {
            line: 1293,
            column: 102
          },
          end: {
            line: 1293,
            column: 106
          }
        }],
        line: 1293
      },
      "94": {
        loc: {
          start: {
            line: 1294,
            column: 20
          },
          end: {
            line: 1294,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1294,
            column: 20
          },
          end: {
            line: 1294,
            column: 43
          }
        }, {
          start: {
            line: 1294,
            column: 47
          },
          end: {
            line: 1294,
            column: 51
          }
        }],
        line: 1294
      },
      "95": {
        loc: {
          start: {
            line: 1318,
            column: 4
          },
          end: {
            line: 1324,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1318,
            column: 4
          },
          end: {
            line: 1324,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1318
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0,
      "320": 0,
      "321": 0,
      "322": 0,
      "323": 0,
      "324": 0,
      "325": 0,
      "326": 0,
      "327": 0,
      "328": 0,
      "329": 0,
      "330": 0,
      "331": 0,
      "332": 0,
      "333": 0,
      "334": 0,
      "335": 0,
      "336": 0,
      "337": 0,
      "338": 0,
      "339": 0,
      "340": 0,
      "341": 0,
      "342": 0,
      "343": 0,
      "344": 0,
      "345": 0,
      "346": 0,
      "347": 0,
      "348": 0,
      "349": 0,
      "350": 0,
      "351": 0,
      "352": 0,
      "353": 0,
      "354": 0,
      "355": 0,
      "356": 0,
      "357": 0,
      "358": 0,
      "359": 0,
      "360": 0,
      "361": 0,
      "362": 0,
      "363": 0,
      "364": 0,
      "365": 0,
      "366": 0,
      "367": 0,
      "368": 0,
      "369": 0,
      "370": 0,
      "371": 0,
      "372": 0,
      "373": 0,
      "374": 0,
      "375": 0,
      "376": 0,
      "377": 0,
      "378": 0,
      "379": 0,
      "380": 0,
      "381": 0,
      "382": 0,
      "383": 0,
      "384": 0,
      "385": 0,
      "386": 0,
      "387": 0,
      "388": 0,
      "389": 0,
      "390": 0,
      "391": 0,
      "392": 0,
      "393": 0,
      "394": 0,
      "395": 0,
      "396": 0,
      "397": 0,
      "398": 0,
      "399": 0,
      "400": 0,
      "401": 0,
      "402": 0,
      "403": 0,
      "404": 0,
      "405": 0,
      "406": 0,
      "407": 0,
      "408": 0,
      "409": 0,
      "410": 0,
      "411": 0,
      "412": 0,
      "413": 0,
      "414": 0,
      "415": 0,
      "416": 0,
      "417": 0,
      "418": 0,
      "419": 0,
      "420": 0,
      "421": 0,
      "422": 0,
      "423": 0,
      "424": 0,
      "425": 0,
      "426": 0,
      "427": 0,
      "428": 0,
      "429": 0,
      "430": 0,
      "431": 0,
      "432": 0,
      "433": 0,
      "434": 0,
      "435": 0,
      "436": 0,
      "437": 0,
      "438": 0,
      "439": 0,
      "440": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0, 0],
      "40": [0, 0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4084e7eba52ed78b73403b2fe207ae345fb669fd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_6e7x3lu8z = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_6e7x3lu8z();
const express =
/* istanbul ignore next */
(cov_6e7x3lu8z().s[0]++, require('express'));
const {
  query,
  initializeDatabase,
  getPool,
  healthCheck
} =
/* istanbul ignore next */
(cov_6e7x3lu8z().s[1]++, require('../utils/database'));
const router =
/* istanbul ignore next */
(cov_6e7x3lu8z().s[2]++, express.Router());

// Health check endpoint
/* istanbul ignore next */
cov_6e7x3lu8z().s[3]++;
router.get('/', async (req, res) => {
  /* istanbul ignore next */
  cov_6e7x3lu8z().f[0]++;
  cov_6e7x3lu8z().s[4]++;
  try {
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[5]++;
    // Basic health check without database (for quick status)
    if (req.query.quick === 'true') {
      /* istanbul ignore next */
      cov_6e7x3lu8z().b[0][0]++;
      cov_6e7x3lu8z().s[6]++;
      return res.json({
        status: 'healthy',
        healthy: true,
        service: 'Financial Dashboard API',
        timestamp: new Date().toISOString(),
        environment:
        /* istanbul ignore next */
        (cov_6e7x3lu8z().b[1][0]++, process.env.ENVIRONMENT) ||
        /* istanbul ignore next */
        (cov_6e7x3lu8z().b[1][1]++, 'dev'),
        memory: process.memoryUsage(),
        uptime: process.uptime(),
        note: 'Quick health check - database not tested',
        database: {
          status: 'not_tested'
        },
        api: {
          version: '1.0.0',
          environment:
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[2][0]++, process.env.ENVIRONMENT) ||
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[2][1]++, 'dev')
        },
        config: {
          hasDbSecret: !!process.env.DB_SECRET_ARN,
          hasDbEndpoint: !!process.env.DB_ENDPOINT,
          hasAwsRegion: !!process.env.AWS_REGION
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_6e7x3lu8z().b[0][1]++;
    }
    // Full health check with database
    cov_6e7x3lu8z().s[7]++;
    console.log('Starting health check with database...');
    // Initialize database if not already done
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[8]++;
    try {
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[9]++;
      getPool(); // This will throw if not initialized
    } catch (initError) {
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[10]++;
      console.log('Database not initialized, initializing now...');
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[11]++;
      try {
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[12]++;
        await initializeDatabase();
      } catch (dbInitError) {
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[13]++;
        console.error('Failed to initialize database:', dbInitError.message);
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[14]++;
        return res.status(503).json({
          status: 'unhealthy',
          healthy: false,
          service: 'Financial Dashboard API',
          timestamp: new Date().toISOString(),
          environment:
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[3][0]++, process.env.ENVIRONMENT) ||
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[3][1]++, 'dev'),
          database: {
            status: 'initialization_failed',
            error: dbInitError.message,
            lastAttempt: new Date().toISOString(),
            tables: {}
          },
          api: {
            version: '1.0.0',
            environment:
            /* istanbul ignore next */
            (cov_6e7x3lu8z().b[4][0]++, process.env.ENVIRONMENT) ||
            /* istanbul ignore next */
            (cov_6e7x3lu8z().b[4][1]++, 'dev')
          },
          memory: process.memoryUsage(),
          uptime: process.uptime()
        });
      }
    }
    // Check if database error was passed from middleware
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[15]++;
    if (req.dbError) {
      /* istanbul ignore next */
      cov_6e7x3lu8z().b[5][0]++;
      cov_6e7x3lu8z().s[16]++;
      return res.status(503).json({
        status: 'unhealthy',
        healthy: false,
        service: 'Financial Dashboard API',
        timestamp: new Date().toISOString(),
        environment:
        /* istanbul ignore next */
        (cov_6e7x3lu8z().b[6][0]++, process.env.ENVIRONMENT) ||
        /* istanbul ignore next */
        (cov_6e7x3lu8z().b[6][1]++, 'dev'),
        database: {
          status: 'unavailable',
          error: req.dbError.message,
          lastAttempt: new Date().toISOString(),
          tables: {}
        },
        api: {
          version: '1.0.0',
          environment:
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[7][0]++, process.env.ENVIRONMENT) ||
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[7][1]++, 'dev')
        },
        memory: process.memoryUsage(),
        uptime: process.uptime()
      });
    } else
    /* istanbul ignore next */
    {
      cov_6e7x3lu8z().b[5][1]++;
    }
    // Test database connection with timeout and detailed error reporting
    const dbStart =
    /* istanbul ignore next */
    (cov_6e7x3lu8z().s[17]++, Date.now());
    let result;

    // Enhanced logging for network debugging
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[18]++;
    console.log('🔍 HEALTH CHECK - Lambda Network Diagnostics:');
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[19]++;
    console.log('  Lambda Function:',
    /* istanbul ignore next */
    (cov_6e7x3lu8z().b[8][0]++, process.env.AWS_LAMBDA_FUNCTION_NAME) ||
    /* istanbul ignore next */
    (cov_6e7x3lu8z().b[8][1]++, 'unknown'));
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[20]++;
    console.log('  Lambda Region:',
    /* istanbul ignore next */
    (cov_6e7x3lu8z().b[9][0]++, process.env.AWS_REGION) ||
    /* istanbul ignore next */
    (cov_6e7x3lu8z().b[9][1]++, 'unknown'));
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[21]++;
    console.log('  VPC Subnets:',
    /* istanbul ignore next */
    (cov_6e7x3lu8z().b[10][0]++, process.env.AWS_LAMBDA_VPC_SUBNET_IDS) ||
    /* istanbul ignore next */
    (cov_6e7x3lu8z().b[10][1]++, 'not configured'));
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[22]++;
    console.log('  Security Groups:',
    /* istanbul ignore next */
    (cov_6e7x3lu8z().b[11][0]++, process.env.AWS_LAMBDA_VPC_SECURITY_GROUP_IDS) ||
    /* istanbul ignore next */
    (cov_6e7x3lu8z().b[11][1]++, 'not configured'));
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[23]++;
    console.log('  DB Endpoint:',
    /* istanbul ignore next */
    (cov_6e7x3lu8z().b[12][0]++, process.env.DB_ENDPOINT) ||
    /* istanbul ignore next */
    (cov_6e7x3lu8z().b[12][1]++, 'not set'));
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[24]++;
    console.log('  DB Secret ARN:', process.env.DB_SECRET_ARN ?
    /* istanbul ignore next */
    (cov_6e7x3lu8z().b[13][0]++, '[CONFIGURED]') :
    /* istanbul ignore next */
    (cov_6e7x3lu8z().b[13][1]++, 'not set'));
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[25]++;
    try {
      // Get database credentials for connectivity logging
      const {
        SecretsManagerClient,
        GetSecretValueCommand
      } =
      /* istanbul ignore next */
      (cov_6e7x3lu8z().s[26]++, require('@aws-sdk/client-secrets-manager'));
      const secretsManager =
      /* istanbul ignore next */
      (cov_6e7x3lu8z().s[27]++, new SecretsManagerClient({
        region:
        /* istanbul ignore next */
        (cov_6e7x3lu8z().b[14][0]++, process.env.AWS_REGION) ||
        /* istanbul ignore next */
        (cov_6e7x3lu8z().b[14][1]++, 'us-east-1')
      }));
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[28]++;
      if (process.env.DB_SECRET_ARN) {
        /* istanbul ignore next */
        cov_6e7x3lu8z().b[15][0]++;
        cov_6e7x3lu8z().s[29]++;
        try {
          const secretResult =
          /* istanbul ignore next */
          (cov_6e7x3lu8z().s[30]++, await secretsManager.send(new GetSecretValueCommand({
            SecretId: process.env.DB_SECRET_ARN
          })));
          const dbConfig =
          /* istanbul ignore next */
          (cov_6e7x3lu8z().s[31]++, JSON.parse(secretResult.SecretString));
          /* istanbul ignore next */
          cov_6e7x3lu8z().s[32]++;
          console.log('🔍 DATABASE CONNECTION TARGET:');
          /* istanbul ignore next */
          cov_6e7x3lu8z().s[33]++;
          console.log('  DB Host:',
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[16][0]++, dbConfig.host) ||
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[16][1]++, 'unknown'));
          /* istanbul ignore next */
          cov_6e7x3lu8z().s[34]++;
          console.log('  DB Port:',
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[17][0]++, dbConfig.port) ||
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[17][1]++, 'unknown'));
          /* istanbul ignore next */
          cov_6e7x3lu8z().s[35]++;
          console.log('  DB Name:',
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[18][0]++, dbConfig.dbname) ||
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[18][1]++, 'unknown'));
          /* istanbul ignore next */
          cov_6e7x3lu8z().s[36]++;
          console.log('  DB User:',
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[19][0]++, dbConfig.username) ||
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[19][1]++, 'unknown'));

          // Test DNS resolution for network debugging
          const dns =
          /* istanbul ignore next */
          (cov_6e7x3lu8z().s[37]++, require('dns'));
          const {
            promisify
          } =
          /* istanbul ignore next */
          (cov_6e7x3lu8z().s[38]++, require('util'));
          const lookup =
          /* istanbul ignore next */
          (cov_6e7x3lu8z().s[39]++, promisify(dns.lookup));
          /* istanbul ignore next */
          cov_6e7x3lu8z().s[40]++;
          try {
            const dnsResult =
            /* istanbul ignore next */
            (cov_6e7x3lu8z().s[41]++, await lookup(dbConfig.host));
            /* istanbul ignore next */
            cov_6e7x3lu8z().s[42]++;
            console.log('🔍 DNS RESOLUTION:');
            /* istanbul ignore next */
            cov_6e7x3lu8z().s[43]++;
            console.log('  Resolved IP:', dnsResult.address);
            /* istanbul ignore next */
            cov_6e7x3lu8z().s[44]++;
            console.log('  IP Family:', dnsResult.family === 4 ?
            /* istanbul ignore next */
            (cov_6e7x3lu8z().b[20][0]++, 'IPv4') :
            /* istanbul ignore next */
            (cov_6e7x3lu8z().b[20][1]++, 'IPv6'));
          } catch (dnsError) {
            /* istanbul ignore next */
            cov_6e7x3lu8z().s[45]++;
            console.log('❌ DNS RESOLUTION FAILED:', dnsError.message);
          }

          // Test basic network connectivity
          const net =
          /* istanbul ignore next */
          (cov_6e7x3lu8z().s[46]++, require('net'));
          /* istanbul ignore next */
          cov_6e7x3lu8z().s[47]++;
          const testNetworkConnectivity = () => {
            /* istanbul ignore next */
            cov_6e7x3lu8z().f[1]++;
            cov_6e7x3lu8z().s[48]++;
            return new Promise((resolve, reject) => {
              /* istanbul ignore next */
              cov_6e7x3lu8z().f[2]++;
              const socket =
              /* istanbul ignore next */
              (cov_6e7x3lu8z().s[49]++, new net.Socket());
              const timeout =
              /* istanbul ignore next */
              (cov_6e7x3lu8z().s[50]++, setTimeout(() => {
                /* istanbul ignore next */
                cov_6e7x3lu8z().f[3]++;
                cov_6e7x3lu8z().s[51]++;
                socket.destroy();
                /* istanbul ignore next */
                cov_6e7x3lu8z().s[52]++;
                reject(new Error('Network connectivity test timeout (3s)'));
              }, 3000));
              /* istanbul ignore next */
              cov_6e7x3lu8z().s[53]++;
              socket.connect(dbConfig.port, dbConfig.host, () => {
                /* istanbul ignore next */
                cov_6e7x3lu8z().f[4]++;
                cov_6e7x3lu8z().s[54]++;
                clearTimeout(timeout);
                /* istanbul ignore next */
                cov_6e7x3lu8z().s[55]++;
                socket.destroy();
                /* istanbul ignore next */
                cov_6e7x3lu8z().s[56]++;
                resolve(true);
              });
              /* istanbul ignore next */
              cov_6e7x3lu8z().s[57]++;
              socket.on('error', err => {
                /* istanbul ignore next */
                cov_6e7x3lu8z().f[5]++;
                cov_6e7x3lu8z().s[58]++;
                clearTimeout(timeout);
                /* istanbul ignore next */
                cov_6e7x3lu8z().s[59]++;
                reject(err);
              });
            });
          };
          /* istanbul ignore next */
          cov_6e7x3lu8z().s[60]++;
          try {
            /* istanbul ignore next */
            cov_6e7x3lu8z().s[61]++;
            await testNetworkConnectivity();
            /* istanbul ignore next */
            cov_6e7x3lu8z().s[62]++;
            console.log('✅ NETWORK CONNECTIVITY: Lambda can reach database host:port');
          } catch (netError) {
            /* istanbul ignore next */
            cov_6e7x3lu8z().s[63]++;
            console.log('❌ NETWORK CONNECTIVITY FAILED:', netError.message);
            /* istanbul ignore next */
            cov_6e7x3lu8z().s[64]++;
            console.log('   This indicates Lambda subnet cannot reach database subnet');
            /* istanbul ignore next */
            cov_6e7x3lu8z().s[65]++;
            console.log('   Check: VPC routing, security groups, NACLs');
          }
        } catch (secretError) {
          /* istanbul ignore next */
          cov_6e7x3lu8z().s[66]++;
          console.log('❌ SECRETS MANAGER ACCESS FAILED:', secretError.message);
        }
      } else
      /* istanbul ignore next */
      {
        cov_6e7x3lu8z().b[15][1]++;
      }
      cov_6e7x3lu8z().s[67]++;
      result = await Promise.race([query('SELECT 1 as ok'), new Promise((_, reject) => {
        /* istanbul ignore next */
        cov_6e7x3lu8z().f[6]++;
        cov_6e7x3lu8z().s[68]++;
        return setTimeout(() => {
          /* istanbul ignore next */
          cov_6e7x3lu8z().f[7]++;
          cov_6e7x3lu8z().s[69]++;
          return reject(new Error('Database health check timeout'));
        }, 5000);
      })]);
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[70]++;
      console.log('✅ DATABASE QUERY: Basic query successful');
    } catch (dbError) {
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[71]++;
      // Enhanced error logging for network debugging
      console.error('❌ DATABASE HEALTH CHECK FAILED:', dbError.message);
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[72]++;
      console.log('🔍 ERROR ANALYSIS:');
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[73]++;
      if (dbError.message.includes('timeout')) {
        /* istanbul ignore next */
        cov_6e7x3lu8z().b[21][0]++;
        cov_6e7x3lu8z().s[74]++;
        console.log('  → Database connection timeout - likely network/VPC issue');
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[75]++;
        console.log('  → Check: Lambda VPC config, security groups, routing tables');
      } else {
        /* istanbul ignore next */
        cov_6e7x3lu8z().b[21][1]++;
        cov_6e7x3lu8z().s[76]++;
        if (dbError.message.includes('ECONNREFUSED')) {
          /* istanbul ignore next */
          cov_6e7x3lu8z().b[22][0]++;
          cov_6e7x3lu8z().s[77]++;
          console.log('  → Connection refused - database not listening or network blocked');
          /* istanbul ignore next */
          cov_6e7x3lu8z().s[78]++;
          console.log('  → Check: Database status, security group rules, port configuration');
        } else {
          /* istanbul ignore next */
          cov_6e7x3lu8z().b[22][1]++;
          cov_6e7x3lu8z().s[79]++;
          if (
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[24][0]++, dbError.message.includes('ENOTFOUND')) ||
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[24][1]++, dbError.message.includes('EHOSTUNREACH'))) {
            /* istanbul ignore next */
            cov_6e7x3lu8z().b[23][0]++;
            cov_6e7x3lu8z().s[80]++;
            console.log('  → Host unreachable - DNS or routing issue');
            /* istanbul ignore next */
            cov_6e7x3lu8z().s[81]++;
            console.log('  → Check: VPC DNS settings, route tables, subnet configuration');
          } else {
            /* istanbul ignore next */
            cov_6e7x3lu8z().b[23][1]++;
            cov_6e7x3lu8z().s[82]++;
            if (dbError.message.includes('authentication')) {
              /* istanbul ignore next */
              cov_6e7x3lu8z().b[25][0]++;
              cov_6e7x3lu8z().s[83]++;
              console.log('  → Authentication failed - credential issue');
              /* istanbul ignore next */
              cov_6e7x3lu8z().s[84]++;
              console.log('  → Check: Database user permissions, password correctness');
            } else {
              /* istanbul ignore next */
              cov_6e7x3lu8z().b[25][1]++;
              cov_6e7x3lu8z().s[85]++;
              console.log('  → Unexpected error type:',
              /* istanbul ignore next */
              (cov_6e7x3lu8z().b[26][0]++, dbError.code) ||
              /* istanbul ignore next */
              (cov_6e7x3lu8z().b[26][1]++, 'unknown'));
            }
          }
        }
      }
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[86]++;
      return res.status(503).json({
        status: 'unhealthy',
        healthy: false,
        service: 'Financial Dashboard API',
        timestamp: new Date().toISOString(),
        environment:
        /* istanbul ignore next */
        (cov_6e7x3lu8z().b[27][0]++, process.env.ENVIRONMENT) ||
        /* istanbul ignore next */
        (cov_6e7x3lu8z().b[27][1]++, 'dev'),
        database: {
          status: 'disconnected',
          error: dbError.message,
          errorCode: dbError.code,
          lastAttempt: new Date().toISOString(),
          tables: {},
          networkDiagnostics: {
            lambdaVpcSubnets:
            /* istanbul ignore next */
            (cov_6e7x3lu8z().b[28][0]++, process.env.AWS_LAMBDA_VPC_SUBNET_IDS) ||
            /* istanbul ignore next */
            (cov_6e7x3lu8z().b[28][1]++, 'not configured'),
            lambdaSecurityGroups:
            /* istanbul ignore next */
            (cov_6e7x3lu8z().b[29][0]++, process.env.AWS_LAMBDA_VPC_SECURITY_GROUP_IDS) ||
            /* istanbul ignore next */
            (cov_6e7x3lu8z().b[29][1]++, 'not configured'),
            dbEndpoint:
            /* istanbul ignore next */
            (cov_6e7x3lu8z().b[30][0]++, process.env.DB_ENDPOINT) ||
            /* istanbul ignore next */
            (cov_6e7x3lu8z().b[30][1]++, 'not set'),
            hasDbSecret: !!process.env.DB_SECRET_ARN
          }
        },
        api: {
          version: '1.0.0',
          environment:
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[31][0]++, process.env.ENVIRONMENT) ||
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[31][1]++, 'dev')
        },
        memory: process.memoryUsage(),
        uptime: process.uptime()
      });
    }
    // Additional: test a real table if DB connection works
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[87]++;
    try {
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[88]++;
      await query('SELECT COUNT(*) FROM stock_symbols');
    } catch (tableError) {
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[89]++;
      console.error('Table query failed:', tableError);
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[90]++;
      return res.status(503).json({
        status: 'unhealthy',
        healthy: false,
        service: 'Financial Dashboard API',
        timestamp: new Date().toISOString(),
        environment:
        /* istanbul ignore next */
        (cov_6e7x3lu8z().b[32][0]++, process.env.ENVIRONMENT) ||
        /* istanbul ignore next */
        (cov_6e7x3lu8z().b[32][1]++, 'dev'),
        database: {
          status: 'connected_but_table_error',
          error: tableError.message,
          stack: tableError.stack,
          lastAttempt: new Date().toISOString(),
          tables: {}
        },
        api: {
          version: '1.0.0',
          environment:
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[33][0]++, process.env.ENVIRONMENT) ||
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[33][1]++, 'dev')
        },
        memory: process.memoryUsage(),
        uptime: process.uptime()
      });
    }
    const dbTime =
    /* istanbul ignore next */
    (cov_6e7x3lu8z().s[91]++, Date.now() - dbStart);
    // Get table information with individual timeouts for partial results
    let tables =
    /* istanbul ignore next */
    (cov_6e7x3lu8z().s[92]++, {});
    let existingTables =
    /* istanbul ignore next */
    (cov_6e7x3lu8z().s[93]++, []);

    // First, try to get list of all tables
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[94]++;
    try {
      const tableExistenceCheck =
      /* istanbul ignore next */
      (cov_6e7x3lu8z().s[95]++, await Promise.race([query(`
          SELECT table_name 
          FROM information_schema.tables 
          WHERE table_schema = 'public' 
          ORDER BY table_name
        `), new Promise((_, reject) => {
        /* istanbul ignore next */
        cov_6e7x3lu8z().f[8]++;
        cov_6e7x3lu8z().s[96]++;
        return setTimeout(() => {
          /* istanbul ignore next */
          cov_6e7x3lu8z().f[9]++;
          cov_6e7x3lu8z().s[97]++;
          return reject(new Error('Table list timeout'));
        }, 2000);
      })]));
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[98]++;
      existingTables = tableExistenceCheck.rows.map(row => {
        /* istanbul ignore next */
        cov_6e7x3lu8z().f[10]++;
        cov_6e7x3lu8z().s[99]++;
        return row.table_name;
      });
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[100]++;
      console.log(`Found ${existingTables.length} tables in database`);
    } catch (listError) {
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[101]++;
      console.error('Failed to get table list:', listError.message);
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[102]++;
      tables['_error'] = `Failed to list tables: ${listError.message}`;
    }

    // Define priority tables to check
    const priorityTables =
    /* istanbul ignore next */
    (cov_6e7x3lu8z().s[103]++, ['stock_symbols', 'etf_symbols', 'price_daily', 'price_weekly', 'technical_data_daily', 'portfolio_holdings', 'health_status', 'company_profile', 'market_data', 'key_metrics', 'annual_income_statement', 'quarterly_income_statement', 'fear_greed_index', 'economic_data']);

    // Check each table individually to get partial results
    const tablesToCheck =
    /* istanbul ignore next */
    (cov_6e7x3lu8z().s[104]++, existingTables.length > 0 ?
    /* istanbul ignore next */
    (cov_6e7x3lu8z().b[34][0]++, [...new Set([...priorityTables.filter(t => {
      /* istanbul ignore next */
      cov_6e7x3lu8z().f[11]++;
      cov_6e7x3lu8z().s[105]++;
      return existingTables.includes(t);
    }), ...existingTables])]) :
    /* istanbul ignore next */
    (cov_6e7x3lu8z().b[34][1]++, priorityTables));

    // Process tables in batches to avoid overwhelming the DB
    const batchSize =
    /* istanbul ignore next */
    (cov_6e7x3lu8z().s[106]++, 5);
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[107]++;
    for (let i =
    /* istanbul ignore next */
    (cov_6e7x3lu8z().s[108]++, 0); i < tablesToCheck.length; i += batchSize) {
      const batch =
      /* istanbul ignore next */
      (cov_6e7x3lu8z().s[109]++, tablesToCheck.slice(i, i + batchSize));
      const batchPromises =
      /* istanbul ignore next */
      (cov_6e7x3lu8z().s[110]++, batch.map(tableName => {
        /* istanbul ignore next */
        cov_6e7x3lu8z().f[12]++;
        cov_6e7x3lu8z().s[111]++;
        return Promise.race([(async () => {
          /* istanbul ignore next */
          cov_6e7x3lu8z().f[13]++;
          // Validate table name against whitelist for security
          const SecureQueryBuilder =
          /* istanbul ignore next */
          (cov_6e7x3lu8z().s[112]++, require('../utils/secureQueryBuilder'));
          const queryBuilder =
          /* istanbul ignore next */
          (cov_6e7x3lu8z().s[113]++, new SecureQueryBuilder());
          /* istanbul ignore next */
          cov_6e7x3lu8z().s[114]++;
          if (!queryBuilder.allowedTables.has(tableName.toLowerCase())) {
            /* istanbul ignore next */
            cov_6e7x3lu8z().b[35][0]++;
            cov_6e7x3lu8z().s[115]++;
            throw new Error('Unauthorized table access');
          } else
          /* istanbul ignore next */
          {
            cov_6e7x3lu8z().b[35][1]++;
          }

          // Use secure query builder
          const {
            query: countQuery,
            params
          } =
          /* istanbul ignore next */
          (cov_6e7x3lu8z().s[116]++, queryBuilder.buildSelect({
            table: tableName,
            columns: ['COUNT(*) as count'],
            limit: 1
          }));
          const result =
          /* istanbul ignore next */
          (cov_6e7x3lu8z().s[117]++, await query(countQuery, params));
          /* istanbul ignore next */
          cov_6e7x3lu8z().s[118]++;
          return {
            table: tableName,
            count: parseInt(result.rows[0].count),
            status: 'success'
          };
        })().catch(err => {
          /* istanbul ignore next */
          cov_6e7x3lu8z().f[14]++;
          cov_6e7x3lu8z().s[119]++;
          return {
            table: tableName,
            count: null,
            status: 'error',
            error: err.message.includes('does not exist') ?
            /* istanbul ignore next */
            (cov_6e7x3lu8z().b[36][0]++, 'Table does not exist') :
            /* istanbul ignore next */
            (cov_6e7x3lu8z().b[36][1]++, err.message.includes('Unauthorized') ?
            /* istanbul ignore next */
            (cov_6e7x3lu8z().b[37][0]++, 'Unauthorized table access') :
            /* istanbul ignore next */
            (cov_6e7x3lu8z().b[37][1]++, err.message))
          };
        }), new Promise(resolve => {
          /* istanbul ignore next */
          cov_6e7x3lu8z().f[15]++;
          cov_6e7x3lu8z().s[120]++;
          return setTimeout(() => {
            /* istanbul ignore next */
            cov_6e7x3lu8z().f[16]++;
            cov_6e7x3lu8z().s[121]++;
            return resolve({
              table: tableName,
              count: null,
              status: 'timeout',
              error: 'Query timeout (1s)'
            });
          }, 1000);
        })]);
      }));
      const batchResults =
      /* istanbul ignore next */
      (cov_6e7x3lu8z().s[122]++, await Promise.all(batchPromises));
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[123]++;
      batchResults.forEach(result => {
        /* istanbul ignore next */
        cov_6e7x3lu8z().f[17]++;
        cov_6e7x3lu8z().s[124]++;
        if (result.status === 'success') {
          /* istanbul ignore next */
          cov_6e7x3lu8z().b[38][0]++;
          cov_6e7x3lu8z().s[125]++;
          tables[result.table] = result.count;
        } else {
          /* istanbul ignore next */
          cov_6e7x3lu8z().b[38][1]++;
          cov_6e7x3lu8z().s[126]++;
          tables[result.table] = `${result.status}: ${result.error}`;
        }
      });
    }

    // Add comprehensive summary
    const successfulTables =
    /* istanbul ignore next */
    (cov_6e7x3lu8z().s[127]++, Object.entries(tables).filter(([k, v]) => {
      /* istanbul ignore next */
      cov_6e7x3lu8z().f[18]++;
      cov_6e7x3lu8z().s[128]++;
      return /* istanbul ignore next */(cov_6e7x3lu8z().b[39][0]++, typeof v === 'number') &&
      /* istanbul ignore next */
      (cov_6e7x3lu8z().b[39][1]++, k !== '_summary') &&
      /* istanbul ignore next */
      (cov_6e7x3lu8z().b[39][2]++, k !== '_error');
    }));
    const errorTables =
    /* istanbul ignore next */
    (cov_6e7x3lu8z().s[129]++, Object.entries(tables).filter(([k, v]) => {
      /* istanbul ignore next */
      cov_6e7x3lu8z().f[19]++;
      cov_6e7x3lu8z().s[130]++;
      return /* istanbul ignore next */(cov_6e7x3lu8z().b[40][0]++, typeof v === 'string') &&
      /* istanbul ignore next */
      (cov_6e7x3lu8z().b[40][1]++, k !== '_summary') &&
      /* istanbul ignore next */
      (cov_6e7x3lu8z().b[40][2]++, k !== '_error');
    }));
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[131]++;
    tables['_summary'] = {
      total_tables:
      /* istanbul ignore next */
      (cov_6e7x3lu8z().b[41][0]++, existingTables.length) ||
      /* istanbul ignore next */
      (cov_6e7x3lu8z().b[41][1]++, tablesToCheck.length),
      tables_checked: tablesToCheck.length,
      successful_checks: successfulTables.length,
      failed_checks: errorTables.length,
      total_records: successfulTables.reduce((sum, [, count]) => {
        /* istanbul ignore next */
        cov_6e7x3lu8z().f[20]++;
        cov_6e7x3lu8z().s[132]++;
        return sum + count;
      }, 0),
      priority_tables_status: priorityTables.map(t => {
        /* istanbul ignore next */
        cov_6e7x3lu8z().f[21]++;
        cov_6e7x3lu8z().s[133]++;
        return {
          table: t,
          status: tables[t] !== undefined ?
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[42][0]++, typeof tables[t] === 'number' ?
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[43][0]++, 'ok') :
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[43][1]++, 'error')) :
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[42][1]++, 'not_checked')
        };
      })
    };

    // Show all tables instead of filtering
    const filteredTables =
    /* istanbul ignore next */
    (cov_6e7x3lu8z().s[134]++, tables);
    const health =
    /* istanbul ignore next */
    (cov_6e7x3lu8z().s[135]++, {
      status: 'healthy',
      healthy: true,
      timestamp: new Date().toISOString(),
      database: {
        status: 'connected',
        tables: filteredTables
      },
      api: {
        version: '1.0.0',
        environment:
        /* istanbul ignore next */
        (cov_6e7x3lu8z().b[44][0]++, process.env.NODE_ENV) ||
        /* istanbul ignore next */
        (cov_6e7x3lu8z().b[44][1]++, 'development')
      },
      memory: process.memoryUsage(),
      uptime: process.uptime()
    });
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[136]++;
    res.json(health);
  } catch (error) {
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[137]++;
    console.error('Health check failed:', error);
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[138]++;
    res.status(503).json({
      status: 'unhealthy',
      healthy: false,
      timestamp: new Date().toISOString(),
      error: error.message,
      database: {
        status: 'disconnected',
        tables: {}
      },
      api: {
        version: '1.0.0',
        environment:
        /* istanbul ignore next */
        (cov_6e7x3lu8z().b[45][0]++, process.env.ENVIRONMENT) ||
        /* istanbul ignore next */
        (cov_6e7x3lu8z().b[45][1]++, 'dev')
      },
      memory: process.memoryUsage(),
      uptime: process.uptime()
    });
  }
});

// Simple database test endpoint 
/* istanbul ignore next */
cov_6e7x3lu8z().s[139]++;
router.get('/database', async (req, res) => {
  /* istanbul ignore next */
  cov_6e7x3lu8z().f[22]++;
  cov_6e7x3lu8z().s[140]++;
  console.log('Received request for /health/database');
  /* istanbul ignore next */
  cov_6e7x3lu8z().s[141]++;
  try {
    // Multi-tier health check approach
    const healthLevel =
    /* istanbul ignore next */
    (cov_6e7x3lu8z().s[142]++,
    /* istanbul ignore next */
    (cov_6e7x3lu8z().b[46][0]++, req.query.level) ||
    /* istanbul ignore next */
    (cov_6e7x3lu8z().b[46][1]++, 'basic')); // basic, critical, full

    // Tier 1: Basic connectivity (always run, <2s)
    let basicHealth;
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[143]++;
    try {
      const startTime =
      /* istanbul ignore next */
      (cov_6e7x3lu8z().s[144]++, Date.now());
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[145]++;
      await Promise.race([query('SELECT current_timestamp as server_time, version() as version'), new Promise((_, reject) => {
        /* istanbul ignore next */
        cov_6e7x3lu8z().f[23]++;
        cov_6e7x3lu8z().s[146]++;
        return setTimeout(() => {
          /* istanbul ignore next */
          cov_6e7x3lu8z().f[24]++;
          cov_6e7x3lu8z().s[147]++;
          return reject(new Error('Connection timeout'));
        }, 2000);
      })]);

      // Check connection pool health
      const pool =
      /* istanbul ignore next */
      (cov_6e7x3lu8z().s[148]++, getPool());
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[149]++;
      basicHealth = {
        status: 'connected',
        response_time_ms: Date.now() - startTime,
        connection_pool: {
          total_connections: pool.totalCount,
          active_connections: pool.totalCount - pool.idleCount,
          idle_connections: pool.idleCount,
          waiting_clients: pool.waitingCount
        }
      };
    } catch (connError) {
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[150]++;
      console.error('Database connection failed:', connError.message);
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[151]++;
      return res.status(503).json({
        status: 'unhealthy',
        healthy: false,
        timestamp: new Date().toISOString(),
        database: {
          status: 'disconnected',
          error: connError.message,
          level: 'basic',
          response_time_ms: 2000
        },
        api: {
          version: '1.0.0',
          environment:
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[47][0]++, process.env.ENVIRONMENT) ||
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[47][1]++, 'dev')
        }
      });
    }

    // Return immediately for basic health check
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[152]++;
    if (healthLevel === 'basic') {
      /* istanbul ignore next */
      cov_6e7x3lu8z().b[48][0]++;
      cov_6e7x3lu8z().s[153]++;
      return res.json({
        status: 'ok',
        healthy: true,
        timestamp: new Date().toISOString(),
        level: 'basic',
        database: basicHealth,
        api: {
          version: '1.0.0',
          environment:
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[49][0]++, process.env.ENVIRONMENT) ||
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[49][1]++, 'dev')
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_6e7x3lu8z().b[48][1]++;
    }

    // Tier 2: Critical tables check (if requested, <5s total)
    let criticalHealth =
    /* istanbul ignore next */
    (cov_6e7x3lu8z().s[154]++, {});
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[155]++;
    if (
    /* istanbul ignore next */
    (cov_6e7x3lu8z().b[51][0]++, healthLevel === 'critical') ||
    /* istanbul ignore next */
    (cov_6e7x3lu8z().b[51][1]++, healthLevel === 'full')) {
      /* istanbul ignore next */
      cov_6e7x3lu8z().b[50][0]++;
      const criticalTables =
      /* istanbul ignore next */
      (cov_6e7x3lu8z().s[156]++, ['stock_symbols', 'price_daily', 'portfolio_holdings']);
      const criticalResults =
      /* istanbul ignore next */
      (cov_6e7x3lu8z().s[157]++, {});
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[158]++;
      try {
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[159]++;
        for (const table of criticalTables) {
          const startTime =
          /* istanbul ignore next */
          (cov_6e7x3lu8z().s[160]++, Date.now());
          /* istanbul ignore next */
          cov_6e7x3lu8z().s[161]++;
          try {
            // Fast existence check only
            // Validate table name for security
            const SecureQueryBuilder =
            /* istanbul ignore next */
            (cov_6e7x3lu8z().s[162]++, require('../utils/secureQueryBuilder'));
            const queryBuilder =
            /* istanbul ignore next */
            (cov_6e7x3lu8z().s[163]++, new SecureQueryBuilder());
            /* istanbul ignore next */
            cov_6e7x3lu8z().s[164]++;
            if (!queryBuilder.allowedTables.has(table.toLowerCase())) {
              /* istanbul ignore next */
              cov_6e7x3lu8z().b[52][0]++;
              cov_6e7x3lu8z().s[165]++;
              throw new Error('Unauthorized table access');
            } else
            /* istanbul ignore next */
            {
              cov_6e7x3lu8z().b[52][1]++;
            }
            const {
              query: selectQuery,
              params
            } =
            /* istanbul ignore next */
            (cov_6e7x3lu8z().s[166]++, queryBuilder.buildSelect({
              table: table,
              columns: ['1'],
              limit: 1
            }));
            const result =
            /* istanbul ignore next */
            (cov_6e7x3lu8z().s[167]++, await Promise.race([query(selectQuery, params), new Promise((_, reject) => {
              /* istanbul ignore next */
              cov_6e7x3lu8z().f[25]++;
              cov_6e7x3lu8z().s[168]++;
              return setTimeout(() => {
                /* istanbul ignore next */
                cov_6e7x3lu8z().f[26]++;
                cov_6e7x3lu8z().s[169]++;
                return reject(new Error('Table timeout'));
              }, 1000);
            })]));
            /* istanbul ignore next */
            cov_6e7x3lu8z().s[170]++;
            criticalResults[table] = {
              status: 'accessible',
              response_time_ms: Date.now() - startTime
            };
          } catch (tableError) {
            /* istanbul ignore next */
            cov_6e7x3lu8z().s[171]++;
            criticalResults[table] = {
              status: 'error',
              error: tableError.message,
              response_time_ms: Date.now() - startTime
            };
          }
        }
        const failedCritical =
        /* istanbul ignore next */
        (cov_6e7x3lu8z().s[172]++, Object.values(criticalResults).filter(r => {
          /* istanbul ignore next */
          cov_6e7x3lu8z().f[27]++;
          cov_6e7x3lu8z().s[173]++;
          return r.status === 'error';
        }).length);
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[174]++;
        criticalHealth = {
          tables_checked: criticalTables.length,
          tables_healthy: criticalTables.length - failedCritical,
          tables_failed: failedCritical,
          results: criticalResults
        };
      } catch (criticalError) {
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[175]++;
        criticalHealth = {
          error: criticalError.message
        };
      }
    } else
    /* istanbul ignore next */
    {
      cov_6e7x3lu8z().b[50][1]++;
    }

    // Return critical level health check
    cov_6e7x3lu8z().s[176]++;
    if (healthLevel === 'critical') {
      /* istanbul ignore next */
      cov_6e7x3lu8z().b[53][0]++;
      const overallHealthy =
      /* istanbul ignore next */
      (cov_6e7x3lu8z().s[177]++, criticalHealth.tables_failed === 0);
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[178]++;
      return res.json({
        status: overallHealthy ?
        /* istanbul ignore next */
        (cov_6e7x3lu8z().b[54][0]++, 'ok') :
        /* istanbul ignore next */
        (cov_6e7x3lu8z().b[54][1]++, 'degraded'),
        healthy: overallHealthy,
        timestamp: new Date().toISOString(),
        level: 'critical',
        database: {
          ...basicHealth,
          critical_tables: criticalHealth
        },
        api: {
          version: '1.0.0',
          environment:
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[55][0]++, process.env.ENVIRONMENT) ||
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[55][1]++, 'dev')
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_6e7x3lu8z().b[53][1]++;
    }

    // Tier 3: Full health check (only if explicitly requested)
    let fullHealth =
    /* istanbul ignore next */
    (cov_6e7x3lu8z().s[179]++, {});
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[180]++;
    if (healthLevel === 'full') {
      /* istanbul ignore next */
      cov_6e7x3lu8z().b[56][0]++;
      cov_6e7x3lu8z().s[181]++;
      try {
        const tableCountResult =
        /* istanbul ignore next */
        (cov_6e7x3lu8z().s[182]++, await Promise.race([query(`SELECT COUNT(*) as count FROM information_schema.tables WHERE table_schema = 'public'`), new Promise((_, reject) => {
          /* istanbul ignore next */
          cov_6e7x3lu8z().f[28]++;
          cov_6e7x3lu8z().s[183]++;
          return setTimeout(() => {
            /* istanbul ignore next */
            cov_6e7x3lu8z().f[29]++;
            cov_6e7x3lu8z().s[184]++;
            return reject(new Error('Table count timeout'));
          }, 2000);
        })]));
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[185]++;
        fullHealth = {
          total_tables: parseInt(tableCountResult.rows[0].count),
          message: 'Full table analysis available via /health/update-status'
        };
      } catch (fullError) {
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[186]++;
        fullHealth = {
          error: fullError.message
        };
      }
    } else
    /* istanbul ignore next */
    {
      cov_6e7x3lu8z().b[56][1]++;
    }

    // Return full health check
    const overallHealthy =
    /* istanbul ignore next */
    (cov_6e7x3lu8z().s[187]++, (
    /* istanbul ignore next */
    (cov_6e7x3lu8z().b[57][0]++, criticalHealth.tables_failed) ||
    /* istanbul ignore next */
    (cov_6e7x3lu8z().b[57][1]++, 0)) === 0);
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[188]++;
    return res.json({
      status: overallHealthy ?
      /* istanbul ignore next */
      (cov_6e7x3lu8z().b[58][0]++, 'ok') :
      /* istanbul ignore next */
      (cov_6e7x3lu8z().b[58][1]++, 'degraded'),
      healthy: overallHealthy,
      timestamp: new Date().toISOString(),
      level: healthLevel,
      database: {
        ...basicHealth,
        critical_tables: criticalHealth,
        full_analysis: fullHealth
      },
      api: {
        version: '1.0.0',
        environment:
        /* istanbul ignore next */
        (cov_6e7x3lu8z().b[59][0]++, process.env.ENVIRONMENT) ||
        /* istanbul ignore next */
        (cov_6e7x3lu8z().b[59][1]++, 'dev')
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[189]++;
    console.error('Error in database health check:', error);
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[190]++;
    res.status(500).json({
      status: 'error',
      error: 'Health check failed',
      message: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Test database connection
/* istanbul ignore next */
cov_6e7x3lu8z().s[191]++;
router.get('/test-connection', async (req, res) => {
  /* istanbul ignore next */
  cov_6e7x3lu8z().f[30]++;
  cov_6e7x3lu8z().s[192]++;
  try {
    const result =
    /* istanbul ignore next */
    (cov_6e7x3lu8z().s[193]++, await query('SELECT NOW() as current_time, version() as postgres_version'));
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[194]++;
    res.json({
      status: 'ok',
      connection: 'successful',
      currentTime: result.rows[0].current_time,
      postgresVersion: result.rows[0].postgres_version,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[195]++;
    console.error('Error testing database connection:', error);
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[196]++;
    res.status(500).json({
      status: 'error',
      connection: 'failed',
      error: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Enhanced comprehensive database diagnostics endpoint
/* istanbul ignore next */
cov_6e7x3lu8z().s[197]++;
router.get('/database/diagnostics', async (req, res) => {
  /* istanbul ignore next */
  cov_6e7x3lu8z().f[31]++;
  cov_6e7x3lu8z().s[198]++;
  console.log('Received request for /health/database/diagnostics');
  // Ensure DB pool is initialized (like in /stocks and main health check)
  /* istanbul ignore next */
  cov_6e7x3lu8z().s[199]++;
  try {
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[200]++;
    try {
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[201]++;
      getPool(); // Throws if not initialized
    } catch (initError) {
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[202]++;
      console.log('Diagnostics: DB not initialized, initializing now...');
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[203]++;
      try {
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[204]++;
        await initializeDatabase();
      } catch (dbInitError) {
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[205]++;
        console.error('Diagnostics: Failed to initialize database:', dbInitError.message);
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[206]++;
        return res.status(503).json({
          status: 'error',
          diagnostics: {
            connection: {
              status: 'initialization_failed',
              error: dbInitError.message
            }
          },
          message: 'Failed to initialize database connection',
          timestamp: new Date().toISOString()
        });
      }
    }
    // Now proceed with diagnostics as before
  } catch (fatalInitError) {
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[207]++;
    return res.status(503).json({
      status: 'error',
      diagnostics: {
        connection: {
          status: 'fatal_init_error',
          error: fatalInitError.message
        }
      },
      message: 'Fatal error initializing database connection',
      timestamp: new Date().toISOString()
    });
  }
  const diagnostics =
  /* istanbul ignore next */
  (cov_6e7x3lu8z().s[208]++, {
    timestamp: new Date().toISOString(),
    environment: {
      NODE_ENV: process.env.NODE_ENV,
      DB_SECRET_ARN: process.env.DB_SECRET_ARN ?
      /* istanbul ignore next */
      (cov_6e7x3lu8z().b[60][0]++, 'SET') :
      /* istanbul ignore next */
      (cov_6e7x3lu8z().b[60][1]++, 'NOT_SET'),
      DB_ENDPOINT: process.env.DB_ENDPOINT ?
      /* istanbul ignore next */
      (cov_6e7x3lu8z().b[61][0]++, 'SET') :
      /* istanbul ignore next */
      (cov_6e7x3lu8z().b[61][1]++, 'NOT_SET'),
      WEBAPP_AWS_REGION: process.env.WEBAPP_AWS_REGION,
      AWS_REGION: process.env.AWS_REGION,
      IS_LOCAL:
      /* istanbul ignore next */
      (cov_6e7x3lu8z().b[62][0]++, process.env.NODE_ENV === 'development') ||
      /* istanbul ignore next */
      (cov_6e7x3lu8z().b[62][1]++, !process.env.DB_SECRET_ARN),
      RUNTIME: 'AWS Lambda Node.js'
    },
    connection: {
      status: 'unknown',
      method: 'unknown',
      details: {},
      durationMs: null
    },
    database: {
      name: 'unknown',
      version: 'unknown',
      host: 'unknown',
      schemas: []
    },
    tables: {
      total: 0,
      withData: 0,
      list: [],
      errors: [],
      durationMs: null
    },
    errors: [],
    recommendations: []
  });
  let overallStatus =
  /* istanbul ignore next */
  (cov_6e7x3lu8z().s[209]++, 'healthy');
  /* istanbul ignore next */
  cov_6e7x3lu8z().s[210]++;
  try {
    // Connection step
    let connectionTest,
      connectStart =
      /* istanbul ignore next */
      (cov_6e7x3lu8z().s[211]++, Date.now());
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[212]++;
    try {
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[213]++;
      connectionTest = await query('SELECT NOW() as current_time, version() as postgres_version, current_database() as db_name');
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[214]++;
      diagnostics.connection.durationMs = Date.now() - connectStart;
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[215]++;
      if (connectionTest.rows.length > 0) {
        /* istanbul ignore next */
        cov_6e7x3lu8z().b[63][0]++;
        const row =
        /* istanbul ignore next */
        (cov_6e7x3lu8z().s[216]++, connectionTest.rows[0]);
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[217]++;
        diagnostics.connection.status = 'connected';
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[218]++;
        diagnostics.connection.method = process.env.DB_SECRET_ARN ?
        /* istanbul ignore next */
        (cov_6e7x3lu8z().b[64][0]++, 'AWS Secrets Manager') :
        /* istanbul ignore next */
        (cov_6e7x3lu8z().b[64][1]++, 'Environment Variables');
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[219]++;
        diagnostics.connection.details = {
          connectedAt: row.current_time
        };
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[220]++;
        diagnostics.database.name = row.db_name;
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[221]++;
        diagnostics.database.version = row.postgres_version;
      } else {
        /* istanbul ignore next */
        cov_6e7x3lu8z().b[63][1]++;
        cov_6e7x3lu8z().s[222]++;
        diagnostics.connection.status = 'connected_no_data';
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[223]++;
        diagnostics.connection.details = {
          error: 'Connected but no data returned'
        };
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[224]++;
        overallStatus = 'degraded';
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[225]++;
        diagnostics.recommendations.push('Database connection established but no data returned. Check DB user permissions and schema.');
      }
    } catch (err) {
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[226]++;
      diagnostics.connection.status = 'failed';
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[227]++;
      diagnostics.connection.details = {
        error: err.message
      };
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[228]++;
      diagnostics.errors.push({
        step: 'connection',
        error: err.message
      });
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[229]++;
      overallStatus = 'unhealthy';
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[230]++;
      diagnostics.recommendations.push('Database connection failed. Check credentials, network, and DB status.');
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[231]++;
      return res.status(500).json({
        status: 'error',
        overallStatus,
        diagnostics,
        summary: {
          environment:
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[65][0]++, diagnostics.environment.NODE_ENV) ||
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[65][1]++, 'unknown'),
          database: diagnostics.database.name,
          connection: diagnostics.connection.status,
          tablesWithData: `${diagnostics.tables.withData}/${diagnostics.tables.total}`,
          errors: diagnostics.errors.concat(diagnostics.tables.errors),
          recommendations: diagnostics.recommendations
        }
      });
    }
    // Host info
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[232]++;
    try {
      const hostInfo =
      /* istanbul ignore next */
      (cov_6e7x3lu8z().s[233]++, await query("SELECT inet_server_addr() as host, inet_server_port() as port"));
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[234]++;
      if (hostInfo.rows.length > 0) {
        /* istanbul ignore next */
        cov_6e7x3lu8z().b[66][0]++;
        cov_6e7x3lu8z().s[235]++;
        diagnostics.database.host =
        /* istanbul ignore next */
        (cov_6e7x3lu8z().b[67][0]++, hostInfo.rows[0].host) ||
        /* istanbul ignore next */
        (cov_6e7x3lu8z().b[67][1]++, 'localhost');
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[236]++;
        diagnostics.database.port =
        /* istanbul ignore next */
        (cov_6e7x3lu8z().b[68][0]++, hostInfo.rows[0].port) ||
        /* istanbul ignore next */
        (cov_6e7x3lu8z().b[68][1]++, 5432);
      } else
      /* istanbul ignore next */
      {
        cov_6e7x3lu8z().b[66][1]++;
      }
    } catch (e) {
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[237]++;
      diagnostics.errors.push({
        step: 'host',
        error: e.message
      });
    }
    // Schemas
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[238]++;
    try {
      const schemas =
      /* istanbul ignore next */
      (cov_6e7x3lu8z().s[239]++, await query("SELECT schema_name FROM information_schema.schemata WHERE schema_name NOT LIKE 'pg_%' AND schema_name != 'information_schema'"));
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[240]++;
      diagnostics.database.schemas = schemas.rows.map(r => {
        /* istanbul ignore next */
        cov_6e7x3lu8z().f[32]++;
        cov_6e7x3lu8z().s[241]++;
        return r.schema_name;
      });
    } catch (e) {
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[242]++;
      diagnostics.errors.push({
        step: 'schemas',
        error: e.message
      });
    }
    // Table info and record counts
    let tables =
      /* istanbul ignore next */
      (cov_6e7x3lu8z().s[243]++, []),
      tableStart =
      /* istanbul ignore next */
      (cov_6e7x3lu8z().s[244]++, Date.now());
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[245]++;
    try {
      const tablesResult =
      /* istanbul ignore next */
      (cov_6e7x3lu8z().s[246]++, await query(`
        SELECT 
          t.table_name,
          (SELECT COUNT(*) FROM information_schema.columns WHERE table_name = t.table_name) as column_count,
          pg_size_pretty(pg_total_relation_size(c.oid)) as size
        FROM information_schema.tables t
        LEFT JOIN pg_class c ON c.relname = t.table_name
        WHERE t.table_schema = 'public' 
        AND t.table_type = 'BASE TABLE'
        ORDER BY t.table_name
      `));
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[247]++;
      tables = tablesResult.rows;
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[248]++;
      diagnostics.tables.total = tables.length;
      let tablesWithData =
      /* istanbul ignore next */
      (cov_6e7x3lu8z().s[249]++, 0);
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[250]++;
      for (const table of tables) {
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[251]++;
        try {
          // Validate table name for security
          const SecureQueryBuilder =
          /* istanbul ignore next */
          (cov_6e7x3lu8z().s[252]++, require('../utils/secureQueryBuilder'));
          const queryBuilder =
          /* istanbul ignore next */
          (cov_6e7x3lu8z().s[253]++, new SecureQueryBuilder());
          /* istanbul ignore next */
          cov_6e7x3lu8z().s[254]++;
          if (!queryBuilder.allowedTables.has(table.table_name.toLowerCase())) {
            /* istanbul ignore next */
            cov_6e7x3lu8z().b[69][0]++;
            cov_6e7x3lu8z().s[255]++;
            console.warn(`🚨 Unauthorized table access: ${table.table_name}`);
            /* istanbul ignore next */
            cov_6e7x3lu8z().s[256]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_6e7x3lu8z().b[69][1]++;
          }
          const {
            query: countQuery,
            params: countParams
          } =
          /* istanbul ignore next */
          (cov_6e7x3lu8z().s[257]++, queryBuilder.buildSelect({
            table: table.table_name,
            columns: ['COUNT(*) as count']
          }));
          const count =
          /* istanbul ignore next */
          (cov_6e7x3lu8z().s[258]++, await query(countQuery, countParams));
          const recordCount =
          /* istanbul ignore next */
          (cov_6e7x3lu8z().s[259]++, parseInt(count.rows[0].count));
          /* istanbul ignore next */
          cov_6e7x3lu8z().s[260]++;
          table.record_count = recordCount;
          // Try to get last updated timestamp
          let lastUpdate =
          /* istanbul ignore next */
          (cov_6e7x3lu8z().s[261]++, null);
          /* istanbul ignore next */
          cov_6e7x3lu8z().s[262]++;
          try {
            const tsCol =
            /* istanbul ignore next */
            (cov_6e7x3lu8z().s[263]++, await query(`SELECT column_name FROM information_schema.columns WHERE table_name = $1 AND column_name IN ('fetched_at','updated_at','created_at','date','period_end') LIMIT 1`, [table.table_name]));
            /* istanbul ignore next */
            cov_6e7x3lu8z().s[264]++;
            if (tsCol.rows.length > 0) {
              /* istanbul ignore next */
              cov_6e7x3lu8z().b[70][0]++;
              const col =
              /* istanbul ignore next */
              (cov_6e7x3lu8z().s[265]++, tsCol.rows[0].column_name);
              // Validate column name
              /* istanbul ignore next */
              cov_6e7x3lu8z().s[266]++;
              if (!['fetched_at', 'updated_at', 'created_at', 'date', 'period_end'].includes(col)) {
                /* istanbul ignore next */
                cov_6e7x3lu8z().b[71][0]++;
                cov_6e7x3lu8z().s[267]++;
                continue;
              } else
              /* istanbul ignore next */
              {
                cov_6e7x3lu8z().b[71][1]++;
              }
              const {
                query: maxQuery,
                params: maxParams
              } =
              /* istanbul ignore next */
              (cov_6e7x3lu8z().s[268]++, queryBuilder.buildSelect({
                table: table.table_name,
                columns: [`MAX(${col}) as last_update`]
              }));
              const tsRes =
              /* istanbul ignore next */
              (cov_6e7x3lu8z().s[269]++, await query(maxQuery, maxParams));
              /* istanbul ignore next */
              cov_6e7x3lu8z().s[270]++;
              lastUpdate = tsRes.rows[0].last_update;
            } else
            /* istanbul ignore next */
            {
              cov_6e7x3lu8z().b[70][1]++;
            }
          } catch (e) {/* ignore */}
          /* istanbul ignore next */
          cov_6e7x3lu8z().s[271]++;
          table.last_update = lastUpdate;
          /* istanbul ignore next */
          cov_6e7x3lu8z().s[272]++;
          if (recordCount > 0) {
            /* istanbul ignore next */
            cov_6e7x3lu8z().b[72][0]++;
            cov_6e7x3lu8z().s[273]++;
            tablesWithData++;
          } else
          /* istanbul ignore next */
          {
            cov_6e7x3lu8z().b[72][1]++;
          }
        } catch (e) {
          /* istanbul ignore next */
          cov_6e7x3lu8z().s[274]++;
          table.record_count = null;
          /* istanbul ignore next */
          cov_6e7x3lu8z().s[275]++;
          diagnostics.tables.errors.push({
            table: table.table_name,
            error: e.message
          });
        }
      }
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[276]++;
      diagnostics.tables.withData = tablesWithData;
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[277]++;
      diagnostics.tables.list = tables;
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[278]++;
      diagnostics.tables.durationMs = Date.now() - tableStart;
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[279]++;
      if (tablesWithData === 0) {
        /* istanbul ignore next */
        cov_6e7x3lu8z().b[73][0]++;
        cov_6e7x3lu8z().s[280]++;
        overallStatus = 'degraded';
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[281]++;
        diagnostics.recommendations.push('No tables have data. Check ETL/loader jobs and DB population.');
      } else {
        /* istanbul ignore next */
        cov_6e7x3lu8z().b[73][1]++;
        cov_6e7x3lu8z().s[282]++;
        if (tablesWithData < tables.length) {
          /* istanbul ignore next */
          cov_6e7x3lu8z().b[74][0]++;
          cov_6e7x3lu8z().s[283]++;
          overallStatus = 'degraded';
          /* istanbul ignore next */
          cov_6e7x3lu8z().s[284]++;
          diagnostics.recommendations.push('Some tables are empty. Review loader jobs and data sources.');
        } else
        /* istanbul ignore next */
        {
          cov_6e7x3lu8z().b[74][1]++;
        }
      }
    } catch (e) {
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[285]++;
      diagnostics.errors.push({
        step: 'tables',
        error: e.message
      });
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[286]++;
      overallStatus = 'degraded';
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[287]++;
      diagnostics.recommendations.push('Failed to fetch table info. Check DB permissions and schema.');
    }
    // Final summary
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[288]++;
    if (
    /* istanbul ignore next */
    (cov_6e7x3lu8z().b[76][0]++, diagnostics.errors.length > 0) ||
    /* istanbul ignore next */
    (cov_6e7x3lu8z().b[76][1]++, diagnostics.tables.errors.length > 0)) {
      /* istanbul ignore next */
      cov_6e7x3lu8z().b[75][0]++;
      cov_6e7x3lu8z().s[289]++;
      overallStatus = 'degraded';
    } else
    /* istanbul ignore next */
    {
      cov_6e7x3lu8z().b[75][1]++;
    }
    cov_6e7x3lu8z().s[290]++;
    res.json({
      status: diagnostics.connection.status === 'connected' ?
      /* istanbul ignore next */
      (cov_6e7x3lu8z().b[77][0]++, 'ok') :
      /* istanbul ignore next */
      (cov_6e7x3lu8z().b[77][1]++, 'error'),
      overallStatus,
      diagnostics,
      summary: {
        environment:
        /* istanbul ignore next */
        (cov_6e7x3lu8z().b[78][0]++, diagnostics.environment.NODE_ENV) ||
        /* istanbul ignore next */
        (cov_6e7x3lu8z().b[78][1]++, 'unknown'),
        database: diagnostics.database.name,
        connection: diagnostics.connection.status,
        tablesWithData: `${diagnostics.tables.withData}/${diagnostics.tables.total}`,
        errors: diagnostics.errors.concat(diagnostics.tables.errors),
        recommendations: diagnostics.recommendations
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[291]++;
    diagnostics.errors.push({
      step: 'fatal',
      error: error.message
    });
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[292]++;
    overallStatus = 'unhealthy';
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[293]++;
    diagnostics.recommendations.push('Fatal error in diagnostics. Check backend logs.');
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[294]++;
    res.status(500).json({
      status: 'error',
      overallStatus,
      diagnostics,
      summary: {
        environment:
        /* istanbul ignore next */
        (cov_6e7x3lu8z().b[79][0]++, diagnostics.environment.NODE_ENV) ||
        /* istanbul ignore next */
        (cov_6e7x3lu8z().b[79][1]++, 'unknown'),
        database: diagnostics.database.name,
        connection: diagnostics.connection.status,
        tablesWithData: `${diagnostics.tables.withData}/${diagnostics.tables.total}`,
        errors: diagnostics.errors.concat(diagnostics.tables.errors),
        recommendations: diagnostics.recommendations
      }
    });
  }
});

// Minimal DB test endpoint for debugging
/* istanbul ignore next */
cov_6e7x3lu8z().s[295]++;
router.get('/db-test', async (req, res) => {
  /* istanbul ignore next */
  cov_6e7x3lu8z().f[33]++;
  cov_6e7x3lu8z().s[296]++;
  console.log('Received request for /health/db-test');
  /* istanbul ignore next */
  cov_6e7x3lu8z().s[297]++;
  try {
    const result =
    /* istanbul ignore next */
    (cov_6e7x3lu8z().s[298]++, await query('SELECT 1 as ok'));
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[299]++;
    res.json({
      ok: true,
      result: result.rows
    });
  } catch (e) {
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[300]++;
    res.status(500).json({
      ok: false,
      error: e.message
    });
  }
});

// Update health status for all tables - comprehensive monitoring
/* istanbul ignore next */
cov_6e7x3lu8z().s[301]++;
router.post('/update-status', async (req, res) => {
  /* istanbul ignore next */
  cov_6e7x3lu8z().f[34]++;
  cov_6e7x3lu8z().s[302]++;
  console.log('Received request for /health/update-status');
  /* istanbul ignore next */
  cov_6e7x3lu8z().s[303]++;
  try {
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[304]++;
    // Ensure database pool is initialized
    try {
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[305]++;
      getPool();
    } catch (initError) {
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[306]++;
      console.log('Health update: DB not initialized, initializing now...');
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[307]++;
      try {
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[308]++;
        await initializeDatabase();
      } catch (dbInitError) {
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[309]++;
        console.error('Health update: Failed to initialize database:', dbInitError.message);
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[310]++;
        return res.status(503).json({
          status: 'error',
          message: 'Failed to initialize database connection',
          error: dbInitError.message,
          timestamp: new Date().toISOString()
        });
      }
    }

    // Check if health_status table exists, create if not
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[311]++;
    try {
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[312]++;
      await query('SELECT 1 FROM health_status LIMIT 1');
    } catch (tableError) {
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[313]++;
      console.log('Health_status table does not exist, creating it...');
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[314]++;
      try {
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[315]++;
        // Create the comprehensive health_status table
        await query(`
          CREATE TABLE IF NOT EXISTS health_status (
            table_name VARCHAR(255) PRIMARY KEY,
            status VARCHAR(50) NOT NULL DEFAULT 'unknown',
            record_count BIGINT DEFAULT 0,
            missing_data_count BIGINT DEFAULT 0,
            last_updated TIMESTAMP WITH TIME ZONE,
            last_checked TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
            is_stale BOOLEAN DEFAULT FALSE,
            error TEXT,
            table_category VARCHAR(100),
            critical_table BOOLEAN DEFAULT FALSE,
            expected_update_frequency INTERVAL DEFAULT '1 day',
            size_bytes BIGINT DEFAULT 0,
            last_vacuum TIMESTAMP WITH TIME ZONE,
            last_analyze TIMESTAMP WITH TIME ZONE,
            created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
          )
        `);

        // Insert all monitored tables - comprehensive list
        const monitoredTables =
        /* istanbul ignore next */
        (cov_6e7x3lu8z().s[316]++, [
        // Core Tables (Stock Symbol Management)
        {
          name: 'stock_symbols',
          category: 'symbols',
          critical: true,
          frequency: '1 week'
        }, {
          name: 'etf_symbols',
          category: 'symbols',
          critical: true,
          frequency: '1 week'
        }, {
          name: 'last_updated',
          category: 'tracking',
          critical: true,
          frequency: '1 hour'
        },
        // Price & Market Data Tables
        {
          name: 'price_daily',
          category: 'prices',
          critical: true,
          frequency: '1 day'
        }, {
          name: 'price_weekly',
          category: 'prices',
          critical: true,
          frequency: '1 week'
        }, {
          name: 'price_monthly',
          category: 'prices',
          critical: true,
          frequency: '1 month'
        }, {
          name: 'etf_price_daily',
          category: 'prices',
          critical: true,
          frequency: '1 day'
        }, {
          name: 'etf_price_weekly',
          category: 'prices',
          critical: true,
          frequency: '1 week'
        }, {
          name: 'etf_price_monthly',
          category: 'prices',
          critical: true,
          frequency: '1 month'
        }, {
          name: 'price_data_montly',
          category: 'prices',
          critical: false,
          frequency: '1 month'
        },
        // Test table with typo

        // Technical Analysis Tables (corrected names)
        {
          name: 'technical_data_daily',
          category: 'technicals',
          critical: true,
          frequency: '1 day'
        }, {
          name: 'technical_data_weekly',
          category: 'technicals',
          critical: true,
          frequency: '1 week'
        }, {
          name: 'technical_data_monthly',
          category: 'technicals',
          critical: true,
          frequency: '1 month'
        },
        // Financial Statement Tables (Annual)
        {
          name: 'annual_balance_sheet',
          category: 'financials',
          critical: false,
          frequency: '3 months'
        }, {
          name: 'annual_income_statement',
          category: 'financials',
          critical: false,
          frequency: '3 months'
        }, {
          name: 'annual_cash_flow',
          category: 'financials',
          critical: false,
          frequency: '3 months'
        },
        // Fixed name

        // Financial Statement Tables (Quarterly)
        {
          name: 'quarterly_balance_sheet',
          category: 'financials',
          critical: true,
          frequency: '3 months'
        }, {
          name: 'quarterly_income_statement',
          category: 'financials',
          critical: true,
          frequency: '3 months'
        }, {
          name: 'quarterly_cash_flow',
          category: 'financials',
          critical: true,
          frequency: '3 months'
        },
        // Fixed name

        // Financial Statement Tables (TTM)
        {
          name: 'ttm_income_statement',
          category: 'financials',
          critical: false,
          frequency: '3 months'
        }, {
          name: 'ttm_cash_flow',
          category: 'financials',
          critical: false,
          frequency: '3 months'
        },
        // Fixed name

        // Company Information Tables
        {
          name: 'company_profile',
          category: 'company',
          critical: true,
          frequency: '1 week'
        }, {
          name: 'market_data',
          category: 'company',
          critical: true,
          frequency: '1 day'
        }, {
          name: 'key_metrics',
          category: 'company',
          critical: true,
          frequency: '1 day'
        }, {
          name: 'analyst_estimates',
          category: 'company',
          critical: false,
          frequency: '1 week'
        }, {
          name: 'governance_scores',
          category: 'company',
          critical: false,
          frequency: '1 month'
        }, {
          name: 'leadership_team',
          category: 'company',
          critical: false,
          frequency: '1 month'
        },
        // Earnings & Calendar Tables
        {
          name: 'earnings_history',
          category: 'earnings',
          critical: false,
          frequency: '1 day'
        }, {
          name: 'earnings_estimates',
          category: 'earnings',
          critical: true,
          frequency: '1 day'
        },
        // Fixed name
        {
          name: 'revenue_estimates',
          category: 'earnings',
          critical: false,
          frequency: '1 day'
        },
        // Fixed name
        {
          name: 'calendar_events',
          category: 'earnings',
          critical: true,
          frequency: '1 day'
        }, {
          name: 'earnings_metrics',
          category: 'earnings',
          critical: false,
          frequency: '1 day'
        },
        // Added missing table

        // Market Sentiment & Economic Tables
        {
          name: 'fear_greed_index',
          category: 'sentiment',
          critical: true,
          frequency: '1 day'
        }, {
          name: 'aaii_sentiment',
          category: 'sentiment',
          critical: false,
          frequency: '1 week'
        }, {
          name: 'naaim',
          category: 'sentiment',
          critical: false,
          frequency: '1 week'
        }, {
          name: 'economic_data',
          category: 'sentiment',
          critical: false,
          frequency: '1 day'
        }, {
          name: 'analyst_upgrade_downgrade',
          category: 'sentiment',
          critical: false,
          frequency: '1 day'
        },
        // Trading & Portfolio Tables
        {
          name: 'portfolio_holdings',
          category: 'trading',
          critical: false,
          frequency: '1 hour'
        }, {
          name: 'portfolio_performance',
          category: 'trading',
          critical: false,
          frequency: '1 hour'
        }, {
          name: 'trading_alerts',
          category: 'trading',
          critical: false,
          frequency: '1 hour'
        }, {
          name: 'buy_sell_daily',
          category: 'trading',
          critical: true,
          frequency: '1 day'
        }, {
          name: 'buy_sell_weekly',
          category: 'trading',
          critical: true,
          frequency: '1 week'
        }, {
          name: 'buy_sell_monthly',
          category: 'trading',
          critical: true,
          frequency: '1 month'
        },
        // News & Additional Data
        {
          name: 'stock_news',
          category: 'news',
          critical: false,
          frequency: '1 hour'
        },
        // Fixed name
        {
          name: 'stocks',
          category: 'other',
          critical: false,
          frequency: '1 day'
        },
        // Quality & Value Metrics Tables
        {
          name: 'quality_metrics',
          category: 'scoring',
          critical: true,
          frequency: '1 day'
        }, {
          name: 'value_metrics',
          category: 'scoring',
          critical: true,
          frequency: '1 day'
        }, {
          name: 'growth_metrics',
          category: 'scoring',
          critical: true,
          frequency: '1 day'
        },
        // Advanced Scoring System Tables
        {
          name: 'stock_scores',
          category: 'scoring',
          critical: true,
          frequency: '1 day'
        }, {
          name: 'earnings_quality_metrics',
          category: 'scoring',
          critical: false,
          frequency: '1 day'
        }, {
          name: 'balance_sheet_strength',
          category: 'scoring',
          critical: false,
          frequency: '1 day'
        }, {
          name: 'profitability_metrics',
          category: 'scoring',
          critical: false,
          frequency: '1 day'
        }, {
          name: 'management_effectiveness',
          category: 'scoring',
          critical: false,
          frequency: '1 day'
        }, {
          name: 'valuation_multiples',
          category: 'scoring',
          critical: false,
          frequency: '1 day'
        }, {
          name: 'intrinsic_value_analysis',
          category: 'scoring',
          critical: false,
          frequency: '1 day'
        }, {
          name: 'revenue_growth_analysis',
          category: 'scoring',
          critical: false,
          frequency: '1 day'
        }, {
          name: 'earnings_growth_analysis',
          category: 'scoring',
          critical: false,
          frequency: '1 day'
        }, {
          name: 'price_momentum_analysis',
          category: 'scoring',
          critical: false,
          frequency: '1 day'
        }, {
          name: 'technical_momentum_analysis',
          category: 'scoring',
          critical: false,
          frequency: '1 day'
        }, {
          name: 'analyst_sentiment_analysis',
          category: 'scoring',
          critical: false,
          frequency: '1 day'
        }, {
          name: 'social_sentiment_analysis',
          category: 'scoring',
          critical: false,
          frequency: '1 day'
        }, {
          name: 'institutional_positioning',
          category: 'scoring',
          critical: false,
          frequency: '1 week'
        }, {
          name: 'insider_trading_analysis',
          category: 'scoring',
          critical: false,
          frequency: '1 day'
        }, {
          name: 'score_performance_tracking',
          category: 'scoring',
          critical: false,
          frequency: '1 day'
        }, {
          name: 'market_regime',
          category: 'scoring',
          critical: false,
          frequency: '1 day'
        }, {
          name: 'stock_symbols_enhanced',
          category: 'scoring',
          critical: false,
          frequency: '1 week'
        },
        // System Health Monitoring
        {
          name: 'health_status',
          category: 'system',
          critical: true,
          frequency: '1 hour'
        },
        // Test Tables
        {
          name: 'earnings',
          category: 'test',
          critical: false,
          frequency: '1 day'
        }, {
          name: 'prices',
          category: 'test',
          critical: false,
          frequency: '1 day'
        }]);
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[317]++;
        for (const table of monitoredTables) {
          /* istanbul ignore next */
          cov_6e7x3lu8z().s[318]++;
          await query(`
            INSERT INTO health_status (table_name, table_category, critical_table, expected_update_frequency)
            VALUES ($1, $2, $3, $4)
            ON CONFLICT (table_name) DO NOTHING
          `, [table.name, table.category, table.critical, table.frequency]);
        }
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[319]++;
        console.log(`Health_status table created and populated with ${monitoredTables.length} tables`);
      } catch (createError) {
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[320]++;
        console.error('Failed to create health_status table:', createError.message);
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[321]++;
        return res.status(500).json({
          status: 'error',
          message: 'Failed to create health_status table',
          error: createError.message,
          timestamp: new Date().toISOString()
        });
      }
    }

    // Perform comprehensive health check for all tables
    const startTime =
    /* istanbul ignore next */
    (cov_6e7x3lu8z().s[322]++, Date.now());
    const healthResults =
    /* istanbul ignore next */
    (cov_6e7x3lu8z().s[323]++, []);
    let summary =
    /* istanbul ignore next */
    (cov_6e7x3lu8z().s[324]++, {
      total_tables: 0,
      healthy_tables: 0,
      stale_tables: 0,
      empty_tables: 0,
      error_tables: 0,
      missing_tables: 0,
      total_records: 0,
      total_missing_data: 0
    });
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[325]++;
    try {
      // Get list of tables to check
      const tablesToCheck =
      /* istanbul ignore next */
      (cov_6e7x3lu8z().s[326]++, await query('SELECT table_name, expected_update_frequency FROM health_status'));
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[327]++;
      summary.total_tables = tablesToCheck.rowCount;
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[328]++;
      for (const tableRow of tablesToCheck.rows) {
        const tableName =
        /* istanbul ignore next */
        (cov_6e7x3lu8z().s[329]++, tableRow.table_name);
        let tableStatus =
        /* istanbul ignore next */
        (cov_6e7x3lu8z().s[330]++, 'unknown');
        let recordCount =
        /* istanbul ignore next */
        (cov_6e7x3lu8z().s[331]++, 0);
        let lastUpdated =
        /* istanbul ignore next */
        (cov_6e7x3lu8z().s[332]++, null);
        let errorMsg =
        /* istanbul ignore next */
        (cov_6e7x3lu8z().s[333]++, null);
        let isStale =
        /* istanbul ignore next */
        (cov_6e7x3lu8z().s[334]++, false);
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[335]++;
        try {
          // Check if table exists and get record count
          const countResult =
          /* istanbul ignore next */
          (cov_6e7x3lu8z().s[336]++, await query(`
            SELECT COUNT(*) as count FROM information_schema.tables 
            WHERE table_name = $1 AND table_schema = 'public'
          `, [tableName]));
          /* istanbul ignore next */
          cov_6e7x3lu8z().s[337]++;
          if (countResult.rows[0].count === '0') {
            /* istanbul ignore next */
            cov_6e7x3lu8z().b[80][0]++;
            cov_6e7x3lu8z().s[338]++;
            tableStatus = 'missing';
            /* istanbul ignore next */
            cov_6e7x3lu8z().s[339]++;
            summary.missing_tables++;
          } else {
            /* istanbul ignore next */
            cov_6e7x3lu8z().b[80][1]++;
            cov_6e7x3lu8z().s[340]++;
            try {
              // Get record count
              // Validate table name for security
              const SecureQueryBuilder =
              /* istanbul ignore next */
              (cov_6e7x3lu8z().s[341]++, require('../utils/secureQueryBuilder'));
              const queryBuilder =
              /* istanbul ignore next */
              (cov_6e7x3lu8z().s[342]++, new SecureQueryBuilder());
              /* istanbul ignore next */
              cov_6e7x3lu8z().s[343]++;
              if (!queryBuilder.allowedTables.has(tableName.toLowerCase())) {
                /* istanbul ignore next */
                cov_6e7x3lu8z().b[81][0]++;
                cov_6e7x3lu8z().s[344]++;
                console.warn(`🚨 Unauthorized table access: ${tableName}`);
                /* istanbul ignore next */
                cov_6e7x3lu8z().s[345]++;
                tableStatus = 'unauthorized';
                /* istanbul ignore next */
                cov_6e7x3lu8z().s[346]++;
                summary.missing_tables++;
                /* istanbul ignore next */
                cov_6e7x3lu8z().s[347]++;
                tableData[tableName] = {
                  status: tableStatus,
                  records: 0
                };
                /* istanbul ignore next */
                cov_6e7x3lu8z().s[348]++;
                continue;
              } else
              /* istanbul ignore next */
              {
                cov_6e7x3lu8z().b[81][1]++;
              }
              const {
                query: recordQuery,
                params: recordParams
              } =
              /* istanbul ignore next */
              (cov_6e7x3lu8z().s[349]++, queryBuilder.buildSelect({
                table: tableName,
                columns: ['COUNT(*) as count']
              }));
              const recordResult =
              /* istanbul ignore next */
              (cov_6e7x3lu8z().s[350]++, await query(recordQuery, recordParams));
              /* istanbul ignore next */
              cov_6e7x3lu8z().s[351]++;
              recordCount = parseInt(recordResult.rows[0].count);
              /* istanbul ignore next */
              cov_6e7x3lu8z().s[352]++;
              summary.total_records += recordCount;
              /* istanbul ignore next */
              cov_6e7x3lu8z().s[353]++;
              if (recordCount === 0) {
                /* istanbul ignore next */
                cov_6e7x3lu8z().b[82][0]++;
                cov_6e7x3lu8z().s[354]++;
                tableStatus = 'empty';
                /* istanbul ignore next */
                cov_6e7x3lu8z().s[355]++;
                summary.empty_tables++;
              } else {
                /* istanbul ignore next */
                cov_6e7x3lu8z().b[82][1]++;
                // Try to get last updated timestamp
                const timestampColumns =
                /* istanbul ignore next */
                (cov_6e7x3lu8z().s[356]++, ['fetched_at', 'updated_at', 'created_at', 'date', 'period_end', 'timestamp']);
                let foundTimestamp =
                /* istanbul ignore next */
                (cov_6e7x3lu8z().s[357]++, false);
                /* istanbul ignore next */
                cov_6e7x3lu8z().s[358]++;
                for (const col of timestampColumns) {
                  /* istanbul ignore next */
                  cov_6e7x3lu8z().s[359]++;
                  try {
                    const colCheck =
                    /* istanbul ignore next */
                    (cov_6e7x3lu8z().s[360]++, await query(`
                      SELECT column_name FROM information_schema.columns 
                      WHERE table_name = $1 AND column_name = $2
                    `, [tableName, col]));
                    /* istanbul ignore next */
                    cov_6e7x3lu8z().s[361]++;
                    if (colCheck.rowCount > 0) {
                      /* istanbul ignore next */
                      cov_6e7x3lu8z().b[83][0]++;
                      cov_6e7x3lu8z().s[362]++;
                      // Validate column name
                      if (!['fetched_at', 'updated_at', 'created_at', 'date', 'period_end'].includes(col)) {
                        /* istanbul ignore next */
                        cov_6e7x3lu8z().b[84][0]++;
                        cov_6e7x3lu8z().s[363]++;
                        continue;
                      } else
                      /* istanbul ignore next */
                      {
                        cov_6e7x3lu8z().b[84][1]++;
                      }
                      const {
                        query: tsQuery,
                        params: tsParams
                      } =
                      /* istanbul ignore next */
                      (cov_6e7x3lu8z().s[364]++, queryBuilder.buildSelect({
                        table: tableName,
                        columns: [`MAX(${col}) as last_update`]
                      }));
                      const tsResult =
                      /* istanbul ignore next */
                      (cov_6e7x3lu8z().s[365]++, await query(tsQuery, tsParams));
                      /* istanbul ignore next */
                      cov_6e7x3lu8z().s[366]++;
                      if (tsResult.rows[0].last_update) {
                        /* istanbul ignore next */
                        cov_6e7x3lu8z().b[85][0]++;
                        cov_6e7x3lu8z().s[367]++;
                        lastUpdated = tsResult.rows[0].last_update;
                        /* istanbul ignore next */
                        cov_6e7x3lu8z().s[368]++;
                        foundTimestamp = true;
                        /* istanbul ignore next */
                        cov_6e7x3lu8z().s[369]++;
                        break;
                      } else
                      /* istanbul ignore next */
                      {
                        cov_6e7x3lu8z().b[85][1]++;
                      }
                    } else
                    /* istanbul ignore next */
                    {
                      cov_6e7x3lu8z().b[83][1]++;
                    }
                  } catch (tsError) {
                    // Continue to next column
                  }
                }

                // Determine if stale based on expected frequency
                /* istanbul ignore next */
                cov_6e7x3lu8z().s[370]++;
                if (
                /* istanbul ignore next */
                (cov_6e7x3lu8z().b[87][0]++, lastUpdated) &&
                /* istanbul ignore next */
                (cov_6e7x3lu8z().b[87][1]++, tableRow.expected_update_frequency)) {
                  /* istanbul ignore next */
                  cov_6e7x3lu8z().b[86][0]++;
                  const expectedInterval =
                  /* istanbul ignore next */
                  (cov_6e7x3lu8z().s[371]++, tableRow.expected_update_frequency);
                  const staleThreshold =
                  /* istanbul ignore next */
                  (cov_6e7x3lu8z().s[372]++, new Date());

                  // Simple stale check - if last update is older than 2x expected frequency
                  const hoursSinceUpdate =
                  /* istanbul ignore next */
                  (cov_6e7x3lu8z().s[373]++, (new Date() - new Date(lastUpdated)) / (1000 * 60 * 60));
                  const expectedHours =
                  /* istanbul ignore next */
                  (cov_6e7x3lu8z().s[374]++, expectedInterval.includes('hour') ?
                  /* istanbul ignore next */
                  (cov_6e7x3lu8z().b[88][0]++, 2) :
                  /* istanbul ignore next */
                  (cov_6e7x3lu8z().b[88][1]++, expectedInterval.includes('day') ?
                  /* istanbul ignore next */
                  (cov_6e7x3lu8z().b[89][0]++, 48) :
                  /* istanbul ignore next */
                  (cov_6e7x3lu8z().b[89][1]++, expectedInterval.includes('week') ?
                  /* istanbul ignore next */
                  (cov_6e7x3lu8z().b[90][0]++, 336) :
                  /* istanbul ignore next */
                  (cov_6e7x3lu8z().b[90][1]++, expectedInterval.includes('month') ?
                  /* istanbul ignore next */
                  (cov_6e7x3lu8z().b[91][0]++, 1440) :
                  /* istanbul ignore next */
                  (cov_6e7x3lu8z().b[91][1]++, 48)))));
                  /* istanbul ignore next */
                  cov_6e7x3lu8z().s[375]++;
                  if (hoursSinceUpdate > expectedHours) {
                    /* istanbul ignore next */
                    cov_6e7x3lu8z().b[92][0]++;
                    cov_6e7x3lu8z().s[376]++;
                    tableStatus = 'stale';
                    /* istanbul ignore next */
                    cov_6e7x3lu8z().s[377]++;
                    isStale = true;
                    /* istanbul ignore next */
                    cov_6e7x3lu8z().s[378]++;
                    summary.stale_tables++;
                  } else {
                    /* istanbul ignore next */
                    cov_6e7x3lu8z().b[92][1]++;
                    cov_6e7x3lu8z().s[379]++;
                    tableStatus = 'healthy';
                    /* istanbul ignore next */
                    cov_6e7x3lu8z().s[380]++;
                    summary.healthy_tables++;
                  }
                } else {
                  /* istanbul ignore next */
                  cov_6e7x3lu8z().b[86][1]++;
                  cov_6e7x3lu8z().s[381]++;
                  tableStatus = 'healthy';
                  /* istanbul ignore next */
                  cov_6e7x3lu8z().s[382]++;
                  summary.healthy_tables++;
                }
              }
            } catch (recordError) {
              /* istanbul ignore next */
              cov_6e7x3lu8z().s[383]++;
              tableStatus = 'error';
              /* istanbul ignore next */
              cov_6e7x3lu8z().s[384]++;
              errorMsg = recordError.message;
              /* istanbul ignore next */
              cov_6e7x3lu8z().s[385]++;
              summary.error_tables++;
            }
          }
        } catch (checkError) {
          /* istanbul ignore next */
          cov_6e7x3lu8z().s[386]++;
          tableStatus = 'error';
          /* istanbul ignore next */
          cov_6e7x3lu8z().s[387]++;
          errorMsg = checkError.message;
          /* istanbul ignore next */
          cov_6e7x3lu8z().s[388]++;
          summary.error_tables++;
        }

        // Update health status for this table
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[389]++;
        try {
          /* istanbul ignore next */
          cov_6e7x3lu8z().s[390]++;
          await query(`
            INSERT INTO health_status (
              table_name, status, record_count, missing_data_count, 
              last_updated, last_checked, is_stale, error
            ) VALUES ($1, $2, $3, $4, $5, CURRENT_TIMESTAMP, $6, $7)
            ON CONFLICT (table_name) DO UPDATE SET
              status = EXCLUDED.status,
              record_count = EXCLUDED.record_count,
              missing_data_count = EXCLUDED.missing_data_count,
              last_updated = EXCLUDED.last_updated,
              last_checked = EXCLUDED.last_checked,
              is_stale = EXCLUDED.is_stale,
              error = EXCLUDED.error,
              updated_at = CURRENT_TIMESTAMP
          `, [tableName, tableStatus, recordCount, 0, lastUpdated, isStale, errorMsg]);
        } catch (updateError) {
          /* istanbul ignore next */
          cov_6e7x3lu8z().s[391]++;
          console.error(`Failed to update health status for table ${tableName}:`, updateError.message);
        }
        /* istanbul ignore next */
        cov_6e7x3lu8z().s[392]++;
        healthResults.push({
          table_name: tableName,
          status: tableStatus,
          record_count: recordCount,
          last_updated: lastUpdated,
          error: errorMsg
        });
      }
    } catch (overallError) {
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[393]++;
      console.error('Error during comprehensive health check:', overallError.message);
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[394]++;
      return res.status(500).json({
        status: 'error',
        message: 'Failed to perform comprehensive health check',
        error: overallError.message,
        timestamp: new Date().toISOString()
      });
    }
    const duration =
    /* istanbul ignore next */
    (cov_6e7x3lu8z().s[395]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[396]++;
    return res.json({
      status: 'success',
      message: 'Health status updated successfully',
      timestamp: new Date().toISOString(),
      duration_ms: duration,
      summary: summary,
      tables_checked: summary.total_tables,
      results: healthResults
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[397]++;
    console.error('Error in health status update:', error);
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[398]++;
    res.status(500).json({
      status: 'error',
      message: 'Health status update failed',
      error: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Get health status summary
/* istanbul ignore next */
cov_6e7x3lu8z().s[399]++;
router.get('/status-summary', async (req, res) => {
  /* istanbul ignore next */
  cov_6e7x3lu8z().f[35]++;
  cov_6e7x3lu8z().s[400]++;
  try {
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[401]++;
    // Ensure database is initialized
    try {
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[402]++;
      getPool();
    } catch (initError) {
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[403]++;
      await initializeDatabase();
    }

    // Get summary statistics
    const summaryResult =
    /* istanbul ignore next */
    (cov_6e7x3lu8z().s[404]++, await query(`
      SELECT 
        table_category,
        COUNT(*) as total_tables,
        COUNT(CASE WHEN status = 'healthy' THEN 1 END) as healthy_tables,
        COUNT(CASE WHEN status = 'stale' THEN 1 END) as stale_tables,
        COUNT(CASE WHEN status = 'empty' THEN 1 END) as empty_tables,
        COUNT(CASE WHEN status = 'error' THEN 1 END) as error_tables,
        COUNT(CASE WHEN status = 'missing' THEN 1 END) as missing_tables,
        COUNT(CASE WHEN critical_table = true THEN 1 END) as critical_tables,
        SUM(record_count) as total_records,
        SUM(missing_data_count) as total_missing_data,
        MAX(last_updated) as latest_update,
        MIN(last_updated) as oldest_update
      FROM health_status
      GROUP BY table_category
      ORDER BY table_category
    `));
    const overallSummary =
    /* istanbul ignore next */
    (cov_6e7x3lu8z().s[405]++, await query(`
      SELECT 
        COUNT(*) as total_tables,
        COUNT(CASE WHEN status = 'healthy' THEN 1 END) as healthy_tables,
        COUNT(CASE WHEN status = 'stale' THEN 1 END) as stale_tables,
        COUNT(CASE WHEN status = 'empty' THEN 1 END) as empty_tables,
        COUNT(CASE WHEN status = 'error' THEN 1 END) as error_tables,
        COUNT(CASE WHEN status = 'missing' THEN 1 END) as missing_tables,
        COUNT(CASE WHEN critical_table = true THEN 1 END) as critical_tables,
        SUM(record_count) as total_records,
        SUM(missing_data_count) as total_missing_data,
        MAX(last_checked) as last_health_check
      FROM health_status
    `));
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[406]++;
    res.json({
      status: 'success',
      timestamp: new Date().toISOString(),
      overall: overallSummary.rows[0],
      by_category: summaryResult.rows
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[407]++;
    console.error('Error getting health status summary:', error);
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[408]++;
    res.status(500).json({
      status: 'error',
      message: 'Failed to get health status summary',
      error: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Force create all required tables endpoint
/* istanbul ignore next */
cov_6e7x3lu8z().s[409]++;
router.post('/create-tables', async (req, res) => {
  /* istanbul ignore next */
  cov_6e7x3lu8z().f[36]++;
  cov_6e7x3lu8z().s[410]++;
  console.log('Received request to create tables');
  /* istanbul ignore next */
  cov_6e7x3lu8z().s[411]++;
  try {
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[412]++;
    // Initialize database if needed
    try {
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[413]++;
      getPool();
    } catch (initError) {
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[414]++;
      console.log('Database not initialized, initializing now...');
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[415]++;
      await initializeDatabase();
    }

    // This will trigger the createRequiredTables function in database.js
    const pool =
    /* istanbul ignore next */
    (cov_6e7x3lu8z().s[416]++, getPool());
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[417]++;
    res.json({
      status: 'success',
      message: 'Table creation completed. Check server logs for details.',
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[418]++;
    console.error('Error creating tables:', error);
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[419]++;
    res.status(500).json({
      status: 'error',
      message: 'Failed to create tables',
      error: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Detailed debug endpoint for troubleshooting Lambda to DB connectivity
/* istanbul ignore next */
cov_6e7x3lu8z().s[420]++;
router.get('/debug', async (req, res) => {
  /* istanbul ignore next */
  cov_6e7x3lu8z().f[37]++;
  cov_6e7x3lu8z().s[421]++;
  try {
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[422]++;
    console.log('🔍 Starting detailed debug analysis...');
    const debugInfo =
    /* istanbul ignore next */
    (cov_6e7x3lu8z().s[423]++, {
      timestamp: new Date().toISOString(),
      environment: {
        NODE_ENV: process.env.NODE_ENV,
        AWS_REGION: process.env.AWS_REGION,
        AWS_LAMBDA_FUNCTION_NAME: process.env.AWS_LAMBDA_FUNCTION_NAME,
        AWS_LAMBDA_FUNCTION_VERSION: process.env.AWS_LAMBDA_FUNCTION_VERSION,
        AWS_EXECUTION_ENV: process.env.AWS_EXECUTION_ENV
      },
      lambda: {
        inLambda: !!process.env.AWS_LAMBDA_RUNTIME_API,
        vpcEnabled: !!process.env._LAMBDA_SERVER_PORT,
        memory: process.memoryUsage(),
        uptime: process.uptime()
      },
      database: {
        config: {
          hasSecretArn: !!process.env.DB_SECRET_ARN,
          hasEndpoint: !!process.env.DB_ENDPOINT,
          secretArn: process.env.DB_SECRET_ARN ?
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[93][0]++, `${process.env.DB_SECRET_ARN.substring(0, 50)}...`) :
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[93][1]++, null),
          endpoint:
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[94][0]++, process.env.DB_ENDPOINT) ||
          /* istanbul ignore next */
          (cov_6e7x3lu8z().b[94][1]++, null)
        }
      }
    });

    // Test network connectivity
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[424]++;
    console.log('🌐 Testing network connectivity...');
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[425]++;
    try {
      const networkTest =
      /* istanbul ignore next */
      (cov_6e7x3lu8z().s[426]++, await testNetworkConnectivity());
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[427]++;
      debugInfo.networkTest = networkTest;
    } catch (error) {
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[428]++;
      debugInfo.networkTest = {
        status: 'error',
        message: error.message
      };
    }

    // Test database connection
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[429]++;
    console.log('💾 Testing database connection...');
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[430]++;
    try {
      const dbHealth =
      /* istanbul ignore next */
      (cov_6e7x3lu8z().s[431]++, await healthCheck());
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[432]++;
      debugInfo.databaseHealth = dbHealth;
    } catch (error) {
      /* istanbul ignore next */
      cov_6e7x3lu8z().s[433]++;
      debugInfo.databaseHealth = {
        status: 'error',
        message: error.message
      };
    }

    // Add VPC/networking information if available
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[434]++;
    if (process.env.AWS_LAMBDA_RUNTIME_API) {
      /* istanbul ignore next */
      cov_6e7x3lu8z().b[95][0]++;
      cov_6e7x3lu8z().s[435]++;
      debugInfo.networking = {
        lambdaRuntimeApi: !!process.env.AWS_LAMBDA_RUNTIME_API,
        vpcConfig: !!process.env._LAMBDA_SERVER_PORT,
        executionEnv: process.env.AWS_EXECUTION_ENV
      };
    } else
    /* istanbul ignore next */
    {
      cov_6e7x3lu8z().b[95][1]++;
    }
    cov_6e7x3lu8z().s[436]++;
    console.log('✅ Debug analysis complete');
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[437]++;
    res.json({
      status: 'success',
      debug: debugInfo,
      recommendations: ["Check that Lambda is in private subnets with route to database", "Verify security groups allow Lambda → Database on port 5432", "Ensure database security group allows inbound from Lambda security group", "Check VPC route tables for proper routing", "Verify Secrets Manager permissions are granted to Lambda role"]
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[438]++;
    console.error('❌ Debug endpoint failed:', error);
    /* istanbul ignore next */
    cov_6e7x3lu8z().s[439]++;
    res.status(500).json({
      status: 'error',
      message: 'Debug analysis failed',
      error: error.message,
      timestamp: new Date().toISOString()
    });
  }
});
/* istanbul ignore next */
cov_6e7x3lu8z().s[440]++;
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,