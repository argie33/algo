d218fb0988e2458e6b38efb5e95965da
/* istanbul ignore next */
function cov_8qi21014() {
  var path = "/home/stocks/algo/webapp/lambda/routes/price.js";
  var hash = "4f56035f2fa678dd6c1d6a5bfd5fbb60a50e0e18";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/routes/price.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 34
        }
      },
      "1": {
        start: {
          line: 2,
          column: 18
        },
        end: {
          line: 2,
          column: 46
        }
      },
      "2": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 31
        }
      },
      "3": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 13,
          column: 3
        }
      },
      "4": {
        start: {
          line: 8,
          column: 2
        },
        end: {
          line: 12,
          column: 5
        }
      },
      "5": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 165,
          column: 3
        }
      },
      "6": {
        start: {
          line: 17,
          column: 24
        },
        end: {
          line: 17,
          column: 34
        }
      },
      "7": {
        start: {
          line: 18,
          column: 65
        },
        end: {
          line: 18,
          column: 74
        }
      },
      "8": {
        start: {
          line: 21,
          column: 26
        },
        end: {
          line: 21,
          column: 56
        }
      },
      "9": {
        start: {
          line: 22,
          column: 2
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "10": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 96
        }
      },
      "11": {
        start: {
          line: 26,
          column: 2
        },
        end: {
          line: 164,
          column: 3
        }
      },
      "12": {
        start: {
          line: 27,
          column: 19
        },
        end: {
          line: 27,
          column: 57
        }
      },
      "13": {
        start: {
          line: 28,
          column: 21
        },
        end: {
          line: 28,
          column: 51
        }
      },
      "14": {
        start: {
          line: 31,
          column: 22
        },
        end: {
          line: 31,
          column: 33
        }
      },
      "15": {
        start: {
          line: 32,
          column: 19
        },
        end: {
          line: 32,
          column: 21
        }
      },
      "16": {
        start: {
          line: 33,
          column: 21
        },
        end: {
          line: 33,
          column: 22
        }
      },
      "17": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "18": {
        start: {
          line: 37,
          column: 6
        },
        end: {
          line: 37,
          column: 77
        }
      },
      "19": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 50
        }
      },
      "20": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 38
        }
      },
      "21": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 17
        }
      },
      "22": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "23": {
        start: {
          line: 46,
          column: 6
        },
        end: {
          line: 46,
          column: 51
        }
      },
      "24": {
        start: {
          line: 47,
          column: 6
        },
        end: {
          line: 47,
          column: 30
        }
      },
      "25": {
        start: {
          line: 48,
          column: 6
        },
        end: {
          line: 48,
          column: 19
        }
      },
      "26": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "27": {
        start: {
          line: 52,
          column: 6
        },
        end: {
          line: 52,
          column: 51
        }
      },
      "28": {
        start: {
          line: 53,
          column: 6
        },
        end: {
          line: 53,
          column: 28
        }
      },
      "29": {
        start: {
          line: 54,
          column: 6
        },
        end: {
          line: 54,
          column: 19
        }
      },
      "30": {
        start: {
          line: 58,
          column: 22
        },
        end: {
          line: 58,
          column: 42
        }
      },
      "31": {
        start: {
          line: 61,
          column: 24
        },
        end: {
          line: 66,
          column: 22
        }
      },
      "32": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "33": {
        start: {
          line: 69,
          column: 6
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "34": {
        start: {
          line: 76,
          column: 23
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "35": {
        start: {
          line: 82,
          column: 24
        },
        end: {
          line: 82,
          column: 55
        }
      },
      "36": {
        start: {
          line: 83,
          column: 18
        },
        end: {
          line: 83,
          column: 53
        }
      },
      "37": {
        start: {
          line: 86,
          column: 22
        },
        end: {
          line: 102,
          column: 5
        }
      },
      "38": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 104,
          column: 34
        }
      },
      "39": {
        start: {
          line: 105,
          column: 23
        },
        end: {
          line: 105,
          column: 53
        }
      },
      "40": {
        start: {
          line: 108,
          column: 19
        },
        end: {
          line: 108,
          column: 68
        }
      },
      "41": {
        start: {
          line: 108,
          column: 46
        },
        end: {
          line: 108,
          column: 67
        }
      },
      "42": {
        start: {
          line: 109,
          column: 20
        },
        end: {
          line: 109,
          column: 68
        }
      },
      "43": {
        start: {
          line: 109,
          column: 47
        },
        end: {
          line: 109,
          column: 67
        }
      },
      "44": {
        start: {
          line: 111,
          column: 18
        },
        end: {
          line: 117,
          column: 12
        }
      },
      "45": {
        start: {
          line: 112,
          column: 41
        },
        end: {
          line: 112,
          column: 46
        }
      },
      "46": {
        start: {
          line: 115,
          column: 53
        },
        end: {
          line: 115,
          column: 58
        }
      },
      "47": {
        start: {
          line: 120,
          column: 21
        },
        end: {
          line: 152,
          column: 5
        }
      },
      "48": {
        start: {
          line: 122,
          column: 40
        },
        end: {
          line: 133,
          column: 7
        }
      },
      "49": {
        start: {
          line: 154,
          column: 4
        },
        end: {
          line: 154,
          column: 113
        }
      },
      "50": {
        start: {
          line: 155,
          column: 4
        },
        end: {
          line: 155,
          column: 23
        }
      },
      "51": {
        start: {
          line: 158,
          column: 4
        },
        end: {
          line: 158,
          column: 57
        }
      },
      "52": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 163,
          column: 7
        }
      },
      "53": {
        start: {
          line: 168,
          column: 0
        },
        end: {
          line: 240,
          column: 3
        }
      },
      "54": {
        start: {
          line: 169,
          column: 24
        },
        end: {
          line: 169,
          column: 34
        }
      },
      "55": {
        start: {
          line: 170,
          column: 34
        },
        end: {
          line: 170,
          column: 43
        }
      },
      "56": {
        start: {
          line: 173,
          column: 26
        },
        end: {
          line: 173,
          column: 56
        }
      },
      "57": {
        start: {
          line: 174,
          column: 2
        },
        end: {
          line: 176,
          column: 3
        }
      },
      "58": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 175,
          column: 96
        }
      },
      "59": {
        start: {
          line: 178,
          column: 2
        },
        end: {
          line: 239,
          column: 3
        }
      },
      "60": {
        start: {
          line: 179,
          column: 22
        },
        end: {
          line: 179,
          column: 42
        }
      },
      "61": {
        start: {
          line: 180,
          column: 21
        },
        end: {
          line: 180,
          column: 51
        }
      },
      "62": {
        start: {
          line: 182,
          column: 22
        },
        end: {
          line: 182,
          column: 24
        }
      },
      "63": {
        start: {
          line: 183,
          column: 19
        },
        end: {
          line: 183,
          column: 21
        }
      },
      "64": {
        start: {
          line: 184,
          column: 21
        },
        end: {
          line: 184,
          column: 22
        }
      },
      "65": {
        start: {
          line: 187,
          column: 4
        },
        end: {
          line: 191,
          column: 5
        }
      },
      "66": {
        start: {
          line: 188,
          column: 6
        },
        end: {
          line: 188,
          column: 56
        }
      },
      "67": {
        start: {
          line: 189,
          column: 6
        },
        end: {
          line: 189,
          column: 47
        }
      },
      "68": {
        start: {
          line: 190,
          column: 6
        },
        end: {
          line: 190,
          column: 19
        }
      },
      "69": {
        start: {
          line: 193,
          column: 24
        },
        end: {
          line: 206,
          column: 5
        }
      },
      "70": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 208,
          column: 26
        }
      },
      "71": {
        start: {
          line: 209,
          column: 19
        },
        end: {
          line: 209,
          column: 51
        }
      },
      "72": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 230,
          column: 7
        }
      },
      "73": {
        start: {
          line: 213,
          column: 36
        },
        end: {
          line: 224,
          column: 7
        }
      },
      "74": {
        start: {
          line: 233,
          column: 4
        },
        end: {
          line: 233,
          column: 51
        }
      },
      "75": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 238,
          column: 7
        }
      },
      "76": {
        start: {
          line: 243,
          column: 0
        },
        end: {
          line: 303,
          column: 3
        }
      },
      "77": {
        start: {
          line: 244,
          column: 21
        },
        end: {
          line: 244,
          column: 31
        }
      },
      "78": {
        start: {
          line: 245,
          column: 34
        },
        end: {
          line: 245,
          column: 43
        }
      },
      "79": {
        start: {
          line: 247,
          column: 2
        },
        end: {
          line: 302,
          column: 3
        }
      },
      "80": {
        start: {
          line: 248,
          column: 22
        },
        end: {
          line: 248,
          column: 42
        }
      },
      "81": {
        start: {
          line: 250,
          column: 24
        },
        end: {
          line: 264,
          column: 5
        }
      },
      "82": {
        start: {
          line: 266,
          column: 19
        },
        end: {
          line: 266,
          column: 67
        }
      },
      "83": {
        start: {
          line: 268,
          column: 4
        },
        end: {
          line: 273,
          column: 5
        }
      },
      "84": {
        start: {
          line: 269,
          column: 6
        },
        end: {
          line: 272,
          column: 9
        }
      },
      "85": {
        start: {
          line: 275,
          column: 23
        },
        end: {
          line: 275,
          column: 37
        }
      },
      "86": {
        start: {
          line: 277,
          column: 4
        },
        end: {
          line: 293,
          column: 7
        }
      },
      "87": {
        start: {
          line: 296,
          column: 4
        },
        end: {
          line: 296,
          column: 56
        }
      },
      "88": {
        start: {
          line: 297,
          column: 4
        },
        end: {
          line: 301,
          column: 7
        }
      },
      "89": {
        start: {
          line: 305,
          column: 0
        },
        end: {
          line: 305,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 34
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 34
          },
          end: {
            line: 16,
            column: 35
          }
        },
        loc: {
          start: {
            line: 16,
            column: 54
          },
          end: {
            line: 165,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 108,
            column: 39
          },
          end: {
            line: 108,
            column: 40
          }
        },
        loc: {
          start: {
            line: 108,
            column: 46
          },
          end: {
            line: 108,
            column: 67
          }
        },
        line: 108
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 109,
            column: 40
          },
          end: {
            line: 109,
            column: 41
          }
        },
        loc: {
          start: {
            line: 109,
            column: 47
          },
          end: {
            line: 109,
            column: 67
          }
        },
        line: 109
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 112,
            column: 31
          },
          end: {
            line: 112,
            column: 32
          }
        },
        loc: {
          start: {
            line: 112,
            column: 41
          },
          end: {
            line: 112,
            column: 46
          }
        },
        line: 112
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 115,
            column: 43
          },
          end: {
            line: 115,
            column: 44
          }
        },
        loc: {
          start: {
            line: 115,
            column: 53
          },
          end: {
            line: 115,
            column: 58
          }
        },
        line: 115
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 122,
            column: 32
          },
          end: {
            line: 122,
            column: 33
          }
        },
        loc: {
          start: {
            line: 122,
            column: 40
          },
          end: {
            line: 133,
            column: 7
          }
        },
        line: 122
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 168,
            column: 34
          },
          end: {
            line: 168,
            column: 35
          }
        },
        loc: {
          start: {
            line: 168,
            column: 54
          },
          end: {
            line: 240,
            column: 1
          }
        },
        line: 168
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 213,
            column: 28
          },
          end: {
            line: 213,
            column: 29
          }
        },
        loc: {
          start: {
            line: 213,
            column: 36
          },
          end: {
            line: 224,
            column: 7
          }
        },
        line: 213
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 243,
            column: 30
          },
          end: {
            line: 243,
            column: 31
          }
        },
        loc: {
          start: {
            line: 243,
            column: 50
          },
          end: {
            line: 303,
            column: 1
          }
        },
        line: 243
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 10
          },
          end: {
            line: 18,
            column: 18
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 18,
            column: 17
          },
          end: {
            line: 18,
            column: 18
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 30
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 2
          },
          end: {
            line: 24,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 2
          },
          end: {
            line: 24,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "4": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 15
          }
        }, {
          start: {
            line: 36,
            column: 19
          },
          end: {
            line: 36,
            column: 33
          }
        }],
        line: 36
      },
      "5": {
        loc: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "6": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "7": {
        loc: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "8": {
        loc: {
          start: {
            line: 111,
            column: 18
          },
          end: {
            line: 117,
            column: 12
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 111,
            column: 38
          },
          end: {
            line: 117,
            column: 5
          }
        }, {
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 117,
            column: 12
          }
        }],
        line: 111
      },
      "9": {
        loc: {
          start: {
            line: 130,
            column: 23
          },
          end: {
            line: 130,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 130,
            column: 39
          },
          end: {
            line: 130,
            column: 64
          }
        }, {
          start: {
            line: 130,
            column: 67
          },
          end: {
            line: 130,
            column: 71
          }
        }],
        line: 130
      },
      "10": {
        loc: {
          start: {
            line: 131,
            column: 21
          },
          end: {
            line: 131,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 131,
            column: 40
          },
          end: {
            line: 131,
            column: 68
          }
        }, {
          start: {
            line: 131,
            column: 71
          },
          end: {
            line: 131,
            column: 75
          }
        }],
        line: 131
      },
      "11": {
        loc: {
          start: {
            line: 132,
            column: 18
          },
          end: {
            line: 132,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 132,
            column: 34
          },
          end: {
            line: 132,
            column: 59
          }
        }, {
          start: {
            line: 132,
            column: 62
          },
          end: {
            line: 132,
            column: 66
          }
        }],
        line: 132
      },
      "12": {
        loc: {
          start: {
            line: 147,
            column: 16
          },
          end: {
            line: 147,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 16
          },
          end: {
            line: 147,
            column: 26
          }
        }, {
          start: {
            line: 147,
            column: 30
          },
          end: {
            line: 147,
            column: 40
          }
        }],
        line: 147
      },
      "13": {
        loc: {
          start: {
            line: 148,
            column: 14
          },
          end: {
            line: 148,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 14
          },
          end: {
            line: 148,
            column: 22
          }
        }, {
          start: {
            line: 148,
            column: 26
          },
          end: {
            line: 148,
            column: 34
          }
        }],
        line: 148
      },
      "14": {
        loc: {
          start: {
            line: 162,
            column: 15
          },
          end: {
            line: 162,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 162,
            column: 56
          },
          end: {
            line: 162,
            column: 69
          }
        }, {
          start: {
            line: 162,
            column: 72
          },
          end: {
            line: 162,
            column: 81
          }
        }],
        line: 162
      },
      "15": {
        loc: {
          start: {
            line: 170,
            column: 18
          },
          end: {
            line: 170,
            column: 29
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 170,
            column: 26
          },
          end: {
            line: 170,
            column: 29
          }
        }],
        line: 170
      },
      "16": {
        loc: {
          start: {
            line: 174,
            column: 2
          },
          end: {
            line: 176,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 2
          },
          end: {
            line: 176,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "17": {
        loc: {
          start: {
            line: 187,
            column: 4
          },
          end: {
            line: 191,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 4
          },
          end: {
            line: 191,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "18": {
        loc: {
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 187,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 187,
            column: 14
          }
        }, {
          start: {
            line: 187,
            column: 18
          },
          end: {
            line: 187,
            column: 31
          }
        }],
        line: 187
      },
      "19": {
        loc: {
          start: {
            line: 228,
            column: 20
          },
          end: {
            line: 228,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 228,
            column: 20
          },
          end: {
            line: 228,
            column: 26
          }
        }, {
          start: {
            line: 228,
            column: 30
          },
          end: {
            line: 228,
            column: 34
          }
        }],
        line: 228
      },
      "20": {
        loc: {
          start: {
            line: 237,
            column: 15
          },
          end: {
            line: 237,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 237,
            column: 56
          },
          end: {
            line: 237,
            column: 69
          }
        }, {
          start: {
            line: 237,
            column: 72
          },
          end: {
            line: 237,
            column: 81
          }
        }],
        line: 237
      },
      "21": {
        loc: {
          start: {
            line: 245,
            column: 10
          },
          end: {
            line: 245,
            column: 29
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 245,
            column: 22
          },
          end: {
            line: 245,
            column: 29
          }
        }],
        line: 245
      },
      "22": {
        loc: {
          start: {
            line: 268,
            column: 4
          },
          end: {
            line: 273,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 268,
            column: 4
          },
          end: {
            line: 273,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 268
      },
      "23": {
        loc: {
          start: {
            line: 287,
            column: 23
          },
          end: {
            line: 287,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 287,
            column: 51
          },
          end: {
            line: 287,
            column: 88
          }
        }, {
          start: {
            line: 287,
            column: 91
          },
          end: {
            line: 287,
            column: 95
          }
        }],
        line: 287
      },
      "24": {
        loc: {
          start: {
            line: 300,
            column: 15
          },
          end: {
            line: 300,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 300,
            column: 56
          },
          end: {
            line: 300,
            column: 69
          }
        }, {
          start: {
            line: 300,
            column: 72
          },
          end: {
            line: 300,
            column: 81
          }
        }],
        line: 300
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4f56035f2fa678dd6c1d6a5bfd5fbb60a50e0e18"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_8qi21014 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_8qi21014();
const express =
/* istanbul ignore next */
(cov_8qi21014().s[0]++, require('express'));
const {
  query
} =
/* istanbul ignore next */
(cov_8qi21014().s[1]++, require('../utils/database'));
const router =
/* istanbul ignore next */
(cov_8qi21014().s[2]++, express.Router());

// Basic ping endpoint
/* istanbul ignore next */
cov_8qi21014().s[3]++;
router.get('/ping', (req, res) => {
  /* istanbul ignore next */
  cov_8qi21014().f[0]++;
  cov_8qi21014().s[4]++;
  res.json({
    status: 'ok',
    endpoint: 'price',
    timestamp: new Date().toISOString()
  });
});

// Main price history endpoint - timeframe-based (daily, weekly, monthly)
/* istanbul ignore next */
cov_8qi21014().s[5]++;
router.get('/history/:timeframe', async (req, res) => {
  /* istanbul ignore next */
  cov_8qi21014().f[1]++;
  const {
    timeframe
  } =
  /* istanbul ignore next */
  (cov_8qi21014().s[6]++, req.params);
  const {
    page =
    /* istanbul ignore next */
    (cov_8qi21014().b[0][0]++, 1),
    limit =
    /* istanbul ignore next */
    (cov_8qi21014().b[1][0]++, 50),
    symbol,
    start_date,
    end_date
  } =
  /* istanbul ignore next */
  (cov_8qi21014().s[7]++, req.query);

  // Validate timeframe
  const validTimeframes =
  /* istanbul ignore next */
  (cov_8qi21014().s[8]++, ['daily', 'weekly', 'monthly']);
  /* istanbul ignore next */
  cov_8qi21014().s[9]++;
  if (!validTimeframes.includes(timeframe)) {
    /* istanbul ignore next */
    cov_8qi21014().b[2][0]++;
    cov_8qi21014().s[10]++;
    return res.status(400).json({
      error: 'Invalid timeframe. Use daily, weekly, or monthly.'
    });
  } else
  /* istanbul ignore next */
  {
    cov_8qi21014().b[2][1]++;
  }
  cov_8qi21014().s[11]++;
  try {
    const offset =
    /* istanbul ignore next */
    (cov_8qi21014().s[12]++, (parseInt(page) - 1) * parseInt(limit));
    const maxLimit =
    /* istanbul ignore next */
    (cov_8qi21014().s[13]++, Math.min(parseInt(limit), 200));

    // Build WHERE clause
    let whereClause =
    /* istanbul ignore next */
    (cov_8qi21014().s[14]++, 'WHERE 1=1');
    const params =
    /* istanbul ignore next */
    (cov_8qi21014().s[15]++, []);
    let paramIndex =
    /* istanbul ignore next */
    (cov_8qi21014().s[16]++, 1);

    // Symbol filter (required)
    /* istanbul ignore next */
    cov_8qi21014().s[17]++;
    if (
    /* istanbul ignore next */
    (cov_8qi21014().b[4][0]++, !symbol) ||
    /* istanbul ignore next */
    (cov_8qi21014().b[4][1]++, !symbol.trim())) {
      /* istanbul ignore next */
      cov_8qi21014().b[3][0]++;
      cov_8qi21014().s[18]++;
      return res.status(400).json({
        error: 'Symbol parameter is required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_8qi21014().b[3][1]++;
    }
    cov_8qi21014().s[19]++;
    whereClause += ` AND symbol = $${paramIndex}`;
    /* istanbul ignore next */
    cov_8qi21014().s[20]++;
    params.push(symbol.toUpperCase());
    /* istanbul ignore next */
    cov_8qi21014().s[21]++;
    paramIndex++;

    // Date filters
    /* istanbul ignore next */
    cov_8qi21014().s[22]++;
    if (start_date) {
      /* istanbul ignore next */
      cov_8qi21014().b[5][0]++;
      cov_8qi21014().s[23]++;
      whereClause += ` AND date >= $${paramIndex}`;
      /* istanbul ignore next */
      cov_8qi21014().s[24]++;
      params.push(start_date);
      /* istanbul ignore next */
      cov_8qi21014().s[25]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_8qi21014().b[5][1]++;
    }
    cov_8qi21014().s[26]++;
    if (end_date) {
      /* istanbul ignore next */
      cov_8qi21014().b[6][0]++;
      cov_8qi21014().s[27]++;
      whereClause += ` AND date <= $${paramIndex}`;
      /* istanbul ignore next */
      cov_8qi21014().s[28]++;
      params.push(end_date);
      /* istanbul ignore next */
      cov_8qi21014().s[29]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_8qi21014().b[6][1]++;
    }

    // Determine table name based on timeframe
    const tableName =
    /* istanbul ignore next */
    (cov_8qi21014().s[30]++, `price_${timeframe}`);

    // Check if table exists
    const tableExists =
    /* istanbul ignore next */
    (cov_8qi21014().s[31]++, await query(`
      SELECT EXISTS (
        SELECT FROM information_schema.tables 
        WHERE table_schema = 'public' 
        AND table_name = $1
      )`, [tableName]));
    /* istanbul ignore next */
    cov_8qi21014().s[32]++;
    if (!tableExists.rows[0].exists) {
      /* istanbul ignore next */
      cov_8qi21014().b[7][0]++;
      cov_8qi21014().s[33]++;
      return res.status(404).json({
        error: `Price data table for ${timeframe} timeframe not found`,
        availableTimeframes: validTimeframes
      });
    } else
    /* istanbul ignore next */
    {
      cov_8qi21014().b[7][1]++;
    }

    // Get total count for pagination
    const countQuery =
    /* istanbul ignore next */
    (cov_8qi21014().s[34]++, `
      SELECT COUNT(*) as total 
      FROM ${tableName} 
      ${whereClause}
    `);
    const countResult =
    /* istanbul ignore next */
    (cov_8qi21014().s[35]++, await query(countQuery, params));
    const total =
    /* istanbul ignore next */
    (cov_8qi21014().s[36]++, parseInt(countResult.rows[0].total));

    // Main data query with pagination
    const dataQuery =
    /* istanbul ignore next */
    (cov_8qi21014().s[37]++, `
      SELECT 
        symbol,
        date,
        open,
        high,
        low,
        close,
        volume,
        adj_close,
        stock_splits,
        dividends
      FROM ${tableName}
      ${whereClause}
      ORDER BY date DESC
      LIMIT $${paramIndex} OFFSET $${paramIndex + 1}
    `);
    /* istanbul ignore next */
    cov_8qi21014().s[38]++;
    params.push(maxLimit, offset);
    const dataResult =
    /* istanbul ignore next */
    (cov_8qi21014().s[39]++, await query(dataQuery, params));

    // Calculate some basic statistics for the response
    const prices =
    /* istanbul ignore next */
    (cov_8qi21014().s[40]++, dataResult.rows.map(row => {
      /* istanbul ignore next */
      cov_8qi21014().f[2]++;
      cov_8qi21014().s[41]++;
      return parseFloat(row.close);
    }));
    const volumes =
    /* istanbul ignore next */
    (cov_8qi21014().s[42]++, dataResult.rows.map(row => {
      /* istanbul ignore next */
      cov_8qi21014().f[3]++;
      cov_8qi21014().s[43]++;
      return parseInt(row.volume);
    }));
    const stats =
    /* istanbul ignore next */
    (cov_8qi21014().s[44]++, prices.length > 0 ?
    /* istanbul ignore next */
    (cov_8qi21014().b[8][0]++, {
      avgPrice: (prices.reduce((a, b) => {
        /* istanbul ignore next */
        cov_8qi21014().f[4]++;
        cov_8qi21014().s[45]++;
        return a + b;
      }, 0) / prices.length).toFixed(2),
      minPrice: Math.min(...prices).toFixed(2),
      maxPrice: Math.max(...prices).toFixed(2),
      avgVolume: Math.round(volumes.reduce((a, b) => {
        /* istanbul ignore next */
        cov_8qi21014().f[5]++;
        cov_8qi21014().s[46]++;
        return a + b;
      }, 0) / volumes.length),
      totalRecords: total
    }) :
    /* istanbul ignore next */
    (cov_8qi21014().b[8][1]++, null));

    // Format response
    const response =
    /* istanbul ignore next */
    (cov_8qi21014().s[47]++, {
      success: true,
      data: dataResult.rows.map(row => {
        /* istanbul ignore next */
        cov_8qi21014().f[6]++;
        cov_8qi21014().s[48]++;
        return {
          symbol: row.symbol,
          date: row.date,
          open: parseFloat(row.open),
          high: parseFloat(row.high),
          low: parseFloat(row.low),
          close: parseFloat(row.close),
          volume: parseInt(row.volume),
          adjustedClose: row.adj_close ?
          /* istanbul ignore next */
          (cov_8qi21014().b[9][0]++, parseFloat(row.adj_close)) :
          /* istanbul ignore next */
          (cov_8qi21014().b[9][1]++, null),
          splitFactor: row.stock_splits ?
          /* istanbul ignore next */
          (cov_8qi21014().b[10][0]++, parseFloat(row.stock_splits)) :
          /* istanbul ignore next */
          (cov_8qi21014().b[10][1]++, null),
          dividend: row.dividends ?
          /* istanbul ignore next */
          (cov_8qi21014().b[11][0]++, parseFloat(row.dividends)) :
          /* istanbul ignore next */
          (cov_8qi21014().b[11][1]++, null)
        };
      }),
      pagination: {
        page: parseInt(page),
        limit: maxLimit,
        total: total,
        totalPages: Math.ceil(total / maxLimit),
        hasNextPage: offset + maxLimit < total,
        hasPreviousPage: page > 1
      },
      statistics: stats,
      metadata: {
        symbol: symbol.toUpperCase(),
        timeframe: timeframe,
        dateRange: {
          from:
          /* istanbul ignore next */
          (cov_8qi21014().b[12][0]++, start_date) ||
          /* istanbul ignore next */
          (cov_8qi21014().b[12][1]++, 'earliest'),
          to:
          /* istanbul ignore next */
          (cov_8qi21014().b[13][0]++, end_date) ||
          /* istanbul ignore next */
          (cov_8qi21014().b[13][1]++, 'latest')
        },
        generatedAt: new Date().toISOString()
      }
    });
    /* istanbul ignore next */
    cov_8qi21014().s[49]++;
    console.log(`📊 Price history query successful: ${symbol} ${timeframe} - ${dataResult.rows.length} records`);
    /* istanbul ignore next */
    cov_8qi21014().s[50]++;
    res.json(response);
  } catch (error) {
    /* istanbul ignore next */
    cov_8qi21014().s[51]++;
    console.error('❌ Price history query error:', error);
    /* istanbul ignore next */
    cov_8qi21014().s[52]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch price history data',
      details: process.env.NODE_ENV === 'development' ?
      /* istanbul ignore next */
      (cov_8qi21014().b[14][0]++, error.message) :
      /* istanbul ignore next */
      (cov_8qi21014().b[14][1]++, undefined)
    });
  }
});

// Get available symbols for a timeframe
/* istanbul ignore next */
cov_8qi21014().s[53]++;
router.get('/symbols/:timeframe', async (req, res) => {
  /* istanbul ignore next */
  cov_8qi21014().f[7]++;
  const {
    timeframe
  } =
  /* istanbul ignore next */
  (cov_8qi21014().s[54]++, req.params);
  const {
    search,
    limit =
    /* istanbul ignore next */
    (cov_8qi21014().b[15][0]++, 100)
  } =
  /* istanbul ignore next */
  (cov_8qi21014().s[55]++, req.query);

  // Validate timeframe
  const validTimeframes =
  /* istanbul ignore next */
  (cov_8qi21014().s[56]++, ['daily', 'weekly', 'monthly']);
  /* istanbul ignore next */
  cov_8qi21014().s[57]++;
  if (!validTimeframes.includes(timeframe)) {
    /* istanbul ignore next */
    cov_8qi21014().b[16][0]++;
    cov_8qi21014().s[58]++;
    return res.status(400).json({
      error: 'Invalid timeframe. Use daily, weekly, or monthly.'
    });
  } else
  /* istanbul ignore next */
  {
    cov_8qi21014().b[16][1]++;
  }
  cov_8qi21014().s[59]++;
  try {
    const tableName =
    /* istanbul ignore next */
    (cov_8qi21014().s[60]++, `price_${timeframe}`);
    const maxLimit =
    /* istanbul ignore next */
    (cov_8qi21014().s[61]++, Math.min(parseInt(limit), 500));
    let whereClause =
    /* istanbul ignore next */
    (cov_8qi21014().s[62]++, '');
    const params =
    /* istanbul ignore next */
    (cov_8qi21014().s[63]++, []);
    let paramIndex =
    /* istanbul ignore next */
    (cov_8qi21014().s[64]++, 1);

    // Add search filter if provided
    /* istanbul ignore next */
    cov_8qi21014().s[65]++;
    if (
    /* istanbul ignore next */
    (cov_8qi21014().b[18][0]++, search) &&
    /* istanbul ignore next */
    (cov_8qi21014().b[18][1]++, search.trim())) {
      /* istanbul ignore next */
      cov_8qi21014().b[17][0]++;
      cov_8qi21014().s[66]++;
      whereClause = `WHERE symbol ILIKE $${paramIndex}`;
      /* istanbul ignore next */
      cov_8qi21014().s[67]++;
      params.push(`%${search.toUpperCase()}%`);
      /* istanbul ignore next */
      cov_8qi21014().s[68]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_8qi21014().b[17][1]++;
    }
    const symbolQuery =
    /* istanbul ignore next */
    (cov_8qi21014().s[69]++, `
      SELECT 
        symbol,
        COUNT(*) as record_count,
        MIN(date) as earliest_date,
        MAX(date) as latest_date,
        MAX(close) as max_close,
        MIN(close) as min_close
      FROM ${tableName}
      ${whereClause}
      GROUP BY symbol
      ORDER BY symbol
      LIMIT $${paramIndex}
    `);
    /* istanbul ignore next */
    cov_8qi21014().s[70]++;
    params.push(maxLimit);
    const result =
    /* istanbul ignore next */
    (cov_8qi21014().s[71]++, await query(symbolQuery, params));
    /* istanbul ignore next */
    cov_8qi21014().s[72]++;
    res.json({
      success: true,
      data: result.rows.map(row => {
        /* istanbul ignore next */
        cov_8qi21014().f[8]++;
        cov_8qi21014().s[73]++;
        return {
          symbol: row.symbol,
          recordCount: parseInt(row.record_count),
          dateRange: {
            earliest: row.earliest_date,
            latest: row.latest_date
          },
          priceRange: {
            min: parseFloat(row.min_close),
            max: parseFloat(row.max_close)
          }
        };
      }),
      metadata: {
        timeframe: timeframe,
        totalSymbols: result.rows.length,
        searchTerm:
        /* istanbul ignore next */
        (cov_8qi21014().b[19][0]++, search) ||
        /* istanbul ignore next */
        (cov_8qi21014().b[19][1]++, null)
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_8qi21014().s[74]++;
    console.error('❌ Symbols query error:', error);
    /* istanbul ignore next */
    cov_8qi21014().s[75]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch available symbols',
      details: process.env.NODE_ENV === 'development' ?
      /* istanbul ignore next */
      (cov_8qi21014().b[20][0]++, error.message) :
      /* istanbul ignore next */
      (cov_8qi21014().b[20][1]++, undefined)
    });
  }
});

// Get latest price for a symbol
/* istanbul ignore next */
cov_8qi21014().s[76]++;
router.get('/latest/:symbol', async (req, res) => {
  /* istanbul ignore next */
  cov_8qi21014().f[9]++;
  const {
    symbol
  } =
  /* istanbul ignore next */
  (cov_8qi21014().s[77]++, req.params);
  const {
    timeframe =
    /* istanbul ignore next */
    (cov_8qi21014().b[21][0]++, 'daily')
  } =
  /* istanbul ignore next */
  (cov_8qi21014().s[78]++, req.query);
  /* istanbul ignore next */
  cov_8qi21014().s[79]++;
  try {
    const tableName =
    /* istanbul ignore next */
    (cov_8qi21014().s[80]++, `price_${timeframe}`);
    const latestQuery =
    /* istanbul ignore next */
    (cov_8qi21014().s[81]++, `
      SELECT 
        symbol,
        date,
        open,
        high,
        low,
        close,
        volume,
        adjusted_close
      FROM ${tableName}
      WHERE symbol = $1
      ORDER BY date DESC
      LIMIT 1
    `);
    const result =
    /* istanbul ignore next */
    (cov_8qi21014().s[82]++, await query(latestQuery, [symbol.toUpperCase()]));
    /* istanbul ignore next */
    cov_8qi21014().s[83]++;
    if (result.rows.length === 0) {
      /* istanbul ignore next */
      cov_8qi21014().b[22][0]++;
      cov_8qi21014().s[84]++;
      return res.status(404).json({
        success: false,
        error: `No price data found for symbol ${symbol.toUpperCase()} in ${timeframe} timeframe`
      });
    } else
    /* istanbul ignore next */
    {
      cov_8qi21014().b[22][1]++;
    }
    const latestData =
    /* istanbul ignore next */
    (cov_8qi21014().s[85]++, result.rows[0]);
    /* istanbul ignore next */
    cov_8qi21014().s[86]++;
    res.json({
      success: true,
      data: {
        symbol: latestData.symbol,
        date: latestData.date,
        open: parseFloat(latestData.open),
        high: parseFloat(latestData.high),
        low: parseFloat(latestData.low),
        close: parseFloat(latestData.close),
        volume: parseInt(latestData.volume),
        adjustedClose: latestData.adjusted_close ?
        /* istanbul ignore next */
        (cov_8qi21014().b[23][0]++, parseFloat(latestData.adjusted_close)) :
        /* istanbul ignore next */
        (cov_8qi21014().b[23][1]++, null)
      },
      metadata: {
        timeframe: timeframe,
        generatedAt: new Date().toISOString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_8qi21014().s[87]++;
    console.error('❌ Latest price query error:', error);
    /* istanbul ignore next */
    cov_8qi21014().s[88]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch latest price data',
      details: process.env.NODE_ENV === 'development' ?
      /* istanbul ignore next */
      (cov_8qi21014().b[24][0]++, error.message) :
      /* istanbul ignore next */
      (cov_8qi21014().b[24][1]++, undefined)
    });
  }
});
/* istanbul ignore next */
cov_8qi21014().s[89]++;
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,