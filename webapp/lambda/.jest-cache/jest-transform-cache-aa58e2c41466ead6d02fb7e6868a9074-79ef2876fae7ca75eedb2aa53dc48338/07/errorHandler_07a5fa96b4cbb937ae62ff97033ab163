314e88b50aacc3ae2faee6127f021817
/* istanbul ignore next */
function cov_1ugyrthvvt() {
  var path = "/home/stocks/algo/webapp/lambda/middleware/errorHandler.js";
  var hash = "914fe73e2b9baf1cf692a30f6ab12f4654b0c48f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/middleware/errorHandler.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 44
        },
        end: {
          line: 1,
          column: 70
        }
      },
      "1": {
        start: {
          line: 3,
          column: 21
        },
        end: {
          line: 93,
          column: 1
        }
      },
      "2": {
        start: {
          line: 5,
          column: 20
        },
        end: {
          line: 8,
          column: 42
        }
      },
      "3": {
        start: {
          line: 11,
          column: 2
        },
        end: {
          line: 27,
          column: 3
        }
      },
      "4": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 18,
          column: 7
        }
      },
      "5": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 26,
          column: 18
        }
      },
      "6": {
        start: {
          line: 30,
          column: 2
        },
        end: {
          line: 30,
          column: 49
        }
      },
      "7": {
        start: {
          line: 31,
          column: 2
        },
        end: {
          line: 31,
          column: 93
        }
      },
      "8": {
        start: {
          line: 32,
          column: 2
        },
        end: {
          line: 32,
          column: 147
        }
      },
      "9": {
        start: {
          line: 33,
          column: 2
        },
        end: {
          line: 33,
          column: 57
        }
      },
      "10": {
        start: {
          line: 34,
          column: 2
        },
        end: {
          line: 34,
          column: 48
        }
      },
      "11": {
        start: {
          line: 35,
          column: 2
        },
        end: {
          line: 35,
          column: 92
        }
      },
      "12": {
        start: {
          line: 38,
          column: 15
        },
        end: {
          line: 38,
          column: 18
        }
      },
      "13": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 39
        }
      },
      "14": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 20
        }
      },
      "15": {
        start: {
          line: 43,
          column: 2
        },
        end: {
          line: 63,
          column: 3
        }
      },
      "16": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 17
        }
      },
      "17": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 33
        }
      },
      "18": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 26
        }
      },
      "19": {
        start: {
          line: 47,
          column: 9
        },
        end: {
          line: 63,
          column: 3
        }
      },
      "20": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 17
        }
      },
      "21": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 32
        }
      },
      "22": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 62
        }
      },
      "23": {
        start: {
          line: 51,
          column: 9
        },
        end: {
          line: 63,
          column: 3
        }
      },
      "24": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 17
        }
      },
      "25": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 34
        }
      },
      "26": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 49
        }
      },
      "27": {
        start: {
          line: 55,
          column: 9
        },
        end: {
          line: 63,
          column: 3
        }
      },
      "28": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 17
        }
      },
      "29": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 57,
          column: 45
        }
      },
      "30": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 50
        }
      },
      "31": {
        start: {
          line: 59,
          column: 9
        },
        end: {
          line: 63,
          column: 3
        }
      },
      "32": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 40
        }
      },
      "33": {
        start: {
          line: 61,
          column: 20
        },
        end: {
          line: 61,
          column: 40
        }
      },
      "34": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 26
        }
      },
      "35": {
        start: {
          line: 65,
          column: 19
        },
        end: {
          line: 73,
          column: 3
        }
      },
      "36": {
        start: {
          line: 76,
          column: 2
        },
        end: {
          line: 78,
          column: 3
        }
      },
      "37": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 77,
          column: 37
        }
      },
      "38": {
        start: {
          line: 81,
          column: 2
        },
        end: {
          line: 83,
          column: 3
        }
      },
      "39": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 82,
          column: 35
        }
      },
      "40": {
        start: {
          line: 84,
          column: 2
        },
        end: {
          line: 86,
          column: 3
        }
      },
      "41": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 85,
          column: 47
        }
      },
      "42": {
        start: {
          line: 89,
          column: 2
        },
        end: {
          line: 89,
          column: 47
        }
      },
      "43": {
        start: {
          line: 91,
          column: 2
        },
        end: {
          line: 91,
          column: 91
        }
      },
      "44": {
        start: {
          line: 92,
          column: 2
        },
        end: {
          line: 92,
          column: 36
        }
      },
      "45": {
        start: {
          line: 95,
          column: 0
        },
        end: {
          line: 95,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 3,
            column: 21
          },
          end: {
            line: 3,
            column: 22
          }
        },
        loc: {
          start: {
            line: 3,
            column: 46
          },
          end: {
            line: 93,
            column: 1
          }
        },
        line: 3
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 5,
            column: 20
          },
          end: {
            line: 8,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 20
          },
          end: {
            line: 5,
            column: 41
          }
        }, {
          start: {
            line: 6,
            column: 19
          },
          end: {
            line: 6,
            column: 46
          }
        }, {
          start: {
            line: 7,
            column: 19
          },
          end: {
            line: 7,
            column: 50
          }
        }, {
          start: {
            line: 8,
            column: 19
          },
          end: {
            line: 8,
            column: 42
          }
        }],
        line: 5
      },
      "1": {
        loc: {
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 27,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 27,
            column: 3
          }
        }, {
          start: {
            line: 19,
            column: 9
          },
          end: {
            line: 27,
            column: 3
          }
        }],
        line: 11
      },
      "2": {
        loc: {
          start: {
            line: 43,
            column: 2
          },
          end: {
            line: 63,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 2
          },
          end: {
            line: 63,
            column: 3
          }
        }, {
          start: {
            line: 47,
            column: 9
          },
          end: {
            line: 63,
            column: 3
          }
        }],
        line: 43
      },
      "3": {
        loc: {
          start: {
            line: 47,
            column: 9
          },
          end: {
            line: 63,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 9
          },
          end: {
            line: 63,
            column: 3
          }
        }, {
          start: {
            line: 51,
            column: 9
          },
          end: {
            line: 63,
            column: 3
          }
        }],
        line: 47
      },
      "4": {
        loc: {
          start: {
            line: 51,
            column: 9
          },
          end: {
            line: 63,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 9
          },
          end: {
            line: 63,
            column: 3
          }
        }, {
          start: {
            line: 55,
            column: 9
          },
          end: {
            line: 63,
            column: 3
          }
        }],
        line: 51
      },
      "5": {
        loc: {
          start: {
            line: 55,
            column: 9
          },
          end: {
            line: 63,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 9
          },
          end: {
            line: 63,
            column: 3
          }
        }, {
          start: {
            line: 59,
            column: 9
          },
          end: {
            line: 63,
            column: 3
          }
        }],
        line: 55
      },
      "6": {
        loc: {
          start: {
            line: 59,
            column: 9
          },
          end: {
            line: 63,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 9
          },
          end: {
            line: 63,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "7": {
        loc: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "8": {
        loc: {
          start: {
            line: 76,
            column: 2
          },
          end: {
            line: 78,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 2
          },
          end: {
            line: 78,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "9": {
        loc: {
          start: {
            line: 76,
            column: 6
          },
          end: {
            line: 76,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 6
          },
          end: {
            line: 76,
            column: 44
          }
        }, {
          start: {
            line: 76,
            column: 48
          },
          end: {
            line: 76,
            column: 55
          }
        }],
        line: 76
      },
      "10": {
        loc: {
          start: {
            line: 81,
            column: 2
          },
          end: {
            line: 83,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 2
          },
          end: {
            line: 83,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "11": {
        loc: {
          start: {
            line: 84,
            column: 2
          },
          end: {
            line: 86,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 2
          },
          end: {
            line: 86,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "914fe73e2b9baf1cf692a30f6ab12f4654b0c48f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ugyrthvvt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ugyrthvvt();
const {
  logError,
  generateCorrelationId
} =
/* istanbul ignore next */
(cov_1ugyrthvvt().s[0]++, require('../utils/logger'));
/* istanbul ignore next */
cov_1ugyrthvvt().s[1]++;
const errorHandler = (err, req, res, next) => {
  /* istanbul ignore next */
  cov_1ugyrthvvt().f[0]++;
  // Get or generate correlation ID
  const requestId =
  /* istanbul ignore next */
  (cov_1ugyrthvvt().s[2]++,
  /* istanbul ignore next */
  (cov_1ugyrthvvt().b[0][0]++, req.logger?.requestId) ||
  /* istanbul ignore next */
  (cov_1ugyrthvvt().b[0][1]++, req.headers['x-request-id']) ||
  /* istanbul ignore next */
  (cov_1ugyrthvvt().b[0][2]++, req.headers['x-correlation-id']) ||
  /* istanbul ignore next */
  (cov_1ugyrthvvt().b[0][3]++, generateCorrelationId()));

  // Use enhanced logging if available
  /* istanbul ignore next */
  cov_1ugyrthvvt().s[3]++;
  if (req.logger) {
    /* istanbul ignore next */
    cov_1ugyrthvvt().b[1][0]++;
    cov_1ugyrthvvt().s[4]++;
    req.logger.error('Unhandled error occurred', {
      error: err,
      url: req.url,
      method: req.method,
      user_id: req.user?.sub,
      error_type: err.constructor.name
    });
  } else {
    /* istanbul ignore next */
    cov_1ugyrthvvt().b[1][1]++;
    cov_1ugyrthvvt().s[5]++;
    // Fallback to utility function
    logError(err, {
      url: req.url,
      method: req.method,
      user_id: req.user?.sub,
      error_type: err.constructor.name
    }, requestId);
  }

  // CRITICAL: Set CORS headers immediately to prevent CORS errors
  /* istanbul ignore next */
  cov_1ugyrthvvt().s[6]++;
  res.header('Access-Control-Allow-Origin', '*');
  /* istanbul ignore next */
  cov_1ugyrthvvt().s[7]++;
  res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS, HEAD, PATCH');
  /* istanbul ignore next */
  cov_1ugyrthvvt().s[8]++;
  res.header('Access-Control-Allow-Headers', 'Content-Type, Authorization, X-Requested-With, X-Session-ID, Accept, Origin, Cache-Control, Pragma');
  /* istanbul ignore next */
  cov_1ugyrthvvt().s[9]++;
  res.header('Access-Control-Allow-Credentials', 'true');
  /* istanbul ignore next */
  cov_1ugyrthvvt().s[10]++;
  res.header('Access-Control-Max-Age', '86400');
  /* istanbul ignore next */
  cov_1ugyrthvvt().s[11]++;
  res.header('Access-Control-Expose-Headers', 'Content-Length, Content-Type, X-Request-ID');

  // Default error response
  let status =
  /* istanbul ignore next */
  (cov_1ugyrthvvt().s[12]++, 500);
  let message =
  /* istanbul ignore next */
  (cov_1ugyrthvvt().s[13]++, 'Internal Server Error');
  let details =
  /* istanbul ignore next */
  (cov_1ugyrthvvt().s[14]++, null);

  // Handle specific error types
  /* istanbul ignore next */
  cov_1ugyrthvvt().s[15]++;
  if (err.name === 'ValidationError') {
    /* istanbul ignore next */
    cov_1ugyrthvvt().b[2][0]++;
    cov_1ugyrthvvt().s[16]++;
    status = 400;
    /* istanbul ignore next */
    cov_1ugyrthvvt().s[17]++;
    message = 'Validation Error';
    /* istanbul ignore next */
    cov_1ugyrthvvt().s[18]++;
    details = err.message;
  } else {
    /* istanbul ignore next */
    cov_1ugyrthvvt().b[2][1]++;
    cov_1ugyrthvvt().s[19]++;
    if (err.code === '23505') {
      /* istanbul ignore next */
      cov_1ugyrthvvt().b[3][0]++;
      cov_1ugyrthvvt().s[20]++;
      // PostgreSQL unique violation
      status = 409;
      /* istanbul ignore next */
      cov_1ugyrthvvt().s[21]++;
      message = 'Duplicate entry';
      /* istanbul ignore next */
      cov_1ugyrthvvt().s[22]++;
      details = 'A record with this information already exists';
    } else {
      /* istanbul ignore next */
      cov_1ugyrthvvt().b[3][1]++;
      cov_1ugyrthvvt().s[23]++;
      if (err.code === '23503') {
        /* istanbul ignore next */
        cov_1ugyrthvvt().b[4][0]++;
        cov_1ugyrthvvt().s[24]++;
        // PostgreSQL foreign key violation
        status = 400;
        /* istanbul ignore next */
        cov_1ugyrthvvt().s[25]++;
        message = 'Invalid reference';
        /* istanbul ignore next */
        cov_1ugyrthvvt().s[26]++;
        details = 'Referenced record does not exist';
      } else {
        /* istanbul ignore next */
        cov_1ugyrthvvt().b[4][1]++;
        cov_1ugyrthvvt().s[27]++;
        if (err.code === '42P01') {
          /* istanbul ignore next */
          cov_1ugyrthvvt().b[5][0]++;
          cov_1ugyrthvvt().s[28]++;
          // PostgreSQL table does not exist
          status = 500;
          /* istanbul ignore next */
          cov_1ugyrthvvt().s[29]++;
          message = 'Database configuration error';
          /* istanbul ignore next */
          cov_1ugyrthvvt().s[30]++;
          details = 'Required database table not found';
        } else {
          /* istanbul ignore next */
          cov_1ugyrthvvt().b[5][1]++;
          cov_1ugyrthvvt().s[31]++;
          if (err.message) {
            /* istanbul ignore next */
            cov_1ugyrthvvt().b[6][0]++;
            cov_1ugyrthvvt().s[32]++;
            // If we have a custom error message, use it
            if (err.status) {
              /* istanbul ignore next */
              cov_1ugyrthvvt().b[7][0]++;
              cov_1ugyrthvvt().s[33]++;
              status = err.status;
            } else
            /* istanbul ignore next */
            {
              cov_1ugyrthvvt().b[7][1]++;
            }
            cov_1ugyrthvvt().s[34]++;
            message = err.message;
          } else
          /* istanbul ignore next */
          {
            cov_1ugyrthvvt().b[6][1]++;
          }
        }
      }
    }
  }
  const response =
  /* istanbul ignore next */
  (cov_1ugyrthvvt().s[35]++, {
    error: {
      status,
      message,
      timestamp: new Date().toISOString(),
      path: req.url,
      request_id: requestId
    }
  });

  // Add details in development mode
  /* istanbul ignore next */
  cov_1ugyrthvvt().s[36]++;
  if (
  /* istanbul ignore next */
  (cov_1ugyrthvvt().b[9][0]++, process.env.NODE_ENV === 'development') &&
  /* istanbul ignore next */
  (cov_1ugyrthvvt().b[9][1]++, details)) {
    /* istanbul ignore next */
    cov_1ugyrthvvt().b[8][0]++;
    cov_1ugyrthvvt().s[37]++;
    response.error.details = details;
  } else
  /* istanbul ignore next */
  {
    cov_1ugyrthvvt().b[8][1]++;
  }

  // Add error code and type for better debugging
  cov_1ugyrthvvt().s[38]++;
  if (err.code) {
    /* istanbul ignore next */
    cov_1ugyrthvvt().b[10][0]++;
    cov_1ugyrthvvt().s[39]++;
    response.error.code = err.code;
  } else
  /* istanbul ignore next */
  {
    cov_1ugyrthvvt().b[10][1]++;
  }
  cov_1ugyrthvvt().s[40]++;
  if (err.constructor.name !== 'Error') {
    /* istanbul ignore next */
    cov_1ugyrthvvt().b[11][0]++;
    cov_1ugyrthvvt().s[41]++;
    response.error.type = err.constructor.name;
  } else
  /* istanbul ignore next */
  {
    cov_1ugyrthvvt().b[11][1]++;
  }

  // Set correlation ID in response header
  cov_1ugyrthvvt().s[42]++;
  res.setHeader('X-Correlation-ID', requestId);
  /* istanbul ignore next */
  cov_1ugyrthvvt().s[43]++;
  console.log(`🚨 Error handler sending response with CORS headers: ${status} ${message}`);
  /* istanbul ignore next */
  cov_1ugyrthvvt().s[44]++;
  res.status(status).json(response);
};
/* istanbul ignore next */
cov_1ugyrthvvt().s[45]++;
module.exports = errorHandler;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,