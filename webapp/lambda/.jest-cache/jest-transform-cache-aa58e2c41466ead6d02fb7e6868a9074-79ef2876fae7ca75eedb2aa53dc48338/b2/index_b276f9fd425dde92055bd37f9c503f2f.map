{"version":3,"names":["console","log","serverless","require","express","globalErrorHandler","asyncErrorHandler","errorMonitoringMiddleware","databaseErrorHandler","apiErrorHandler","networkErrorHandler","configErrorHandler","comprehensiveErrorHandler","app","use","set","req","res","next","method","path","headers","origin","allowedOrigins","includes","header","status","end","json","limit","urlencoded","extended","inputValidation","rateLimiting","enhancedAuth","getInputValidation","InputValidationMiddleware","error","message","getSecurityMiddleware","sanitizeInput","validateRateLimit","preventSqlInjection","getRateLimiting","RateLimitingMiddleware","adaptiveRateLimit","abuseDetection","rateLimit","getStats","totalRecords","blacklistedIPs","getEnhancedAuth","EnhancedAuthMiddleware","requireAuth","requireRole","requirePermission","activeSessions","failedAttempts","logger","databaseManager","responseFormatter","securityService","complianceMiddleware","performanceMiddleware","getLogger","createLogger","requestLoggingMiddleware","info","msg","data","warn","debug","getCorrelationId","Math","random","toString","substr","getDatabaseManager","query","rows","rowCount","healthCheck","healthy","getResponseFormatter","responseFormatterMiddleware","success","timestamp","Date","toISOString","statusCode","getSecurityService","SecurityService","on","event","eventType","severity","sourceIP","alert","alertType","details","change","from","to","checkRateLimit","allowed","validateInput","input","valid","sanitized","getSecurityHeaders","logSecurityEvent","createSecurityMiddleware","securityHeaders","getSecurityDashboard","threatLevel","getMetrics","totalEvents","getComplianceMiddleware","ComplianceMiddleware","auditMiddleware","dataProcessingMiddleware","consentValidationMiddleware","retentionCleanupMiddleware","getComplianceService","getPerformanceMiddleware","PerformanceMonitoringMiddleware","requestTrackingMiddleware","systemHealthMiddleware","errorTrackingMiddleware","getPerformanceService","getActiveRequestsCount","formatter","correlationId","locals","rateLimitingMiddleware","authMiddleware","inputValidationMiddleware","SQLInjectionProtection","sqlProtection","middleware","securityMiddleware","middlewareIndex","runNextMiddleware","length","setHeader","removeHeader","performance","compliance","startsWith","safeRouteLoader","routePath","routeName","mountPath","route","errorRouter","Router","all","correlation_id","routes","name","mount","loadedRoutes","failedRoutes","forEach","get","version","environment","process","env","NODE_ENV","loaded","failed","total","dbManager","dbHealth","database","environment_vars","AWS_REGION","DB_SECRET_ARN","API_KEY_ENCRYPTION_SECRET_ARN","userId","user","id","result","timeout","retries","count","post","provider","keyId","secretKey","body","maskedKey","slice","delete","params","preferences","email","push","sms","updated_at","fallback","put","note","dark_mode","primary_color","darkMode","primaryColor","system_status","route_loading","all_routes_loaded","total_routes","loaded_routes","failed_routes","success_rate","round","configuration","database_configured","api_keys_configured","aws_region","WEBAPP_AWS_REGION","missing_critical_vars","DB_ENDPOINT","filter","Boolean","request_info","system_info","node_version","memory","memoryUsage","uptime","features","url","originalUrl","stats","getErrorStats","module","exports","handler"],"sources":["index.js"],"sourcesContent":["// FINANCIAL DASHBOARD API - FULL VERSION WITH COMPREHENSIVE ERROR HANDLING\nconsole.log('🚀 Financial Dashboard API Lambda starting - FULL VERSION WITH ERROR HANDLING...');\n\nconst serverless = require('serverless-http');\nconst express = require('express');\nconst { \n    globalErrorHandler, \n    asyncErrorHandler, \n    errorMonitoringMiddleware,\n    databaseErrorHandler,\n    apiErrorHandler,\n    networkErrorHandler,\n    configErrorHandler\n} = require('./middleware/comprehensiveErrorMiddleware');\nconst comprehensiveErrorHandler = require('./utils/comprehensiveErrorHandler');\n\nconst app = express();\n\n// Initialize comprehensive error tracking\napp.use(errorMonitoringMiddleware);\n\n// Trust proxy when running behind API Gateway/CloudFront\napp.set('trust proxy', true);\n\n// CRITICAL: CORS middleware must be FIRST - based on working version\napp.use((req, res, next) => {\n  console.log(`📡 ${req.method} ${req.path} - Origin: ${req.headers.origin}`);\n  \n  const origin = req.headers.origin;\n  const allowedOrigins = [\n    'https://d1zb7knau41vl9.cloudfront.net',\n    'http://localhost:3000',\n    'http://localhost:5173'\n  ];\n  \n  if (!origin || allowedOrigins.includes(origin)) {\n    res.header('Access-Control-Allow-Origin', origin || 'https://d1zb7knau41vl9.cloudfront.net');\n  }\n  \n  res.header('Access-Control-Allow-Credentials', 'true');\n  res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS, HEAD, PATCH');\n  res.header('Access-Control-Allow-Headers', 'Content-Type, Authorization, X-Requested-With, X-Session-ID, Accept, Origin, Cache-Control, Pragma');\n  res.header('Access-Control-Expose-Headers', 'Content-Length, Content-Type, X-Request-ID');\n  \n  if (req.method === 'OPTIONS') {\n    console.log('🔧 CORS preflight handled');\n    return res.status(200).end();\n  }\n  \n  next();\n});\n\n// Enhanced middleware with security\napp.use(express.json({ limit: '2mb' }));\napp.use(express.urlencoded({ extended: true, limit: '2mb' }));\n\n// Initialize security middleware early\nlet inputValidation = null;\nlet rateLimiting = null;\nlet enhancedAuth = null;\n\nconst getInputValidation = () => {\n  if (!inputValidation) {\n    try {\n      const InputValidationMiddleware = require('./middleware/inputValidation');\n      inputValidation = new InputValidationMiddleware();\n      console.log('✅ Input validation middleware initialized');\n    } catch (error) {\n      console.error('⚠️ Input validation middleware initialization failed:', error.message);\n      inputValidation = {\n        getSecurityMiddleware: () => [(req, res, next) => next()],\n        sanitizeInput: () => (req, res, next) => next(),\n        validateRateLimit: () => (req, res, next) => next(),\n        preventSqlInjection: () => (req, res, next) => next()\n      };\n    }\n  }\n  return inputValidation;\n};\n\nconst getRateLimiting = () => {\n  if (!rateLimiting) {\n    try {\n      const RateLimitingMiddleware = require('./middleware/rateLimiting');\n      rateLimiting = new RateLimitingMiddleware();\n      console.log('✅ Rate limiting middleware initialized');\n    } catch (error) {\n      console.error('⚠️ Rate limiting middleware initialization failed:', error.message);\n      rateLimiting = {\n        adaptiveRateLimit: () => (req, res, next) => next(),\n        abuseDetection: () => (req, res, next) => next(),\n        rateLimit: () => (req, res, next) => next(),\n        getStats: () => ({ totalRecords: 0, blacklistedIPs: 0 })\n      };\n    }\n  }\n  return rateLimiting;\n};\n\nconst getEnhancedAuth = () => {\n  if (!enhancedAuth) {\n    try {\n      const EnhancedAuthMiddleware = require('./middleware/enhancedAuth');\n      enhancedAuth = new EnhancedAuthMiddleware();\n      console.log('✅ Enhanced auth middleware initialized');\n    } catch (error) {\n      console.error('⚠️ Enhanced auth middleware initialization failed:', error.message);\n      enhancedAuth = {\n        requireAuth: () => (req, res, next) => next(),\n        requireRole: () => (req, res, next) => next(),\n        requirePermission: () => (req, res, next) => next(),\n        getStats: () => ({ activeSessions: 0, failedAttempts: 0 })\n      };\n    }\n  }\n  return enhancedAuth;\n};\n\n// Global services - lazy loaded to avoid initialization crashes\nlet logger = null;\nlet databaseManager = null;\nlet responseFormatter = null;\nlet securityService = null;\nlet complianceMiddleware = null;\nlet performanceMiddleware = null;\n\n// Lazy load logger with fallback\nconst getLogger = () => {\n  if (!logger) {\n    try {\n      const { createLogger, requestLoggingMiddleware } = require('./utils/structuredLogger');\n      logger = createLogger('financial-platform', 'main');\n      console.log('✅ Logger initialized');\n    } catch (error) {\n      console.error('⚠️ Logger initialization failed:', error.message);\n      // Fallback logger\n      logger = {\n        info: (msg, data) => console.log(`[INFO] ${msg}`, data || ''),\n        error: (msg, error, data) => console.error(`[ERROR] ${msg}`, error?.message || error, data || ''),\n        warn: (msg, data) => console.warn(`[WARN] ${msg}`, data || ''),\n        debug: (msg, data) => console.debug(`[DEBUG] ${msg}`, data || ''),\n        getCorrelationId: () => Math.random().toString(36).substr(2, 9)\n      };\n    }\n  }\n  return logger;\n};\n\n// Lazy load database manager with fallback\nconst getDatabaseManager = () => {\n  if (!databaseManager) {\n    try {\n      databaseManager = require('./utils/databaseConnectionManager');\n      console.log('✅ Database manager initialized');\n    } catch (error) {\n      console.error('⚠️ Database manager initialization failed:', error.message);\n      // Fallback database manager\n      databaseManager = {\n        query: async () => ({ rows: [], rowCount: 0 }),\n        healthCheck: async () => ({ healthy: false, error: 'Database unavailable' })\n      };\n    }\n  }\n  return databaseManager;\n};\n\n// Lazy load response formatter with fallback\nconst getResponseFormatter = () => {\n  if (!responseFormatter) {\n    try {\n      const { responseFormatterMiddleware } = require('./utils/responseFormatter');\n      responseFormatter = responseFormatterMiddleware;\n      console.log('✅ Response formatter initialized');\n    } catch (error) {\n      console.error('⚠️ Response formatter initialization failed:', error.message);\n      // Fallback response formatter\n      responseFormatter = (req, res, next) => {\n        res.success = (data, message = 'Success') => {\n          res.json({ success: true, data, message, timestamp: new Date().toISOString() });\n        };\n        res.error = (message, statusCode = 500) => {\n          res.status(statusCode).json({ success: false, error: message, timestamp: new Date().toISOString() });\n        };\n        next();\n      };\n    }\n  }\n  return responseFormatter;\n};\n\n// Lazy load security service with fallback\nconst getSecurityService = () => {\n  if (!securityService) {\n    try {\n      const SecurityService = require('./services/securityService');\n      securityService = new SecurityService();\n      console.log('✅ Security service initialized');\n      \n      // Set up security event listeners\n      securityService.on('securityEvent', (event) => {\n        console.log(`🔒 Security event: ${event.eventType} [${event.severity}] from ${event.sourceIP}`);\n      });\n      \n      securityService.on('securityAlert', (alert) => {\n        console.warn(`🚨 Security alert: ${alert.alertType}`, alert.details);\n      });\n      \n      securityService.on('threatLevelChanged', (change) => {\n        console.warn(`🎯 Threat level changed: ${change.from} → ${change.to}`);\n      });\n      \n    } catch (error) {\n      console.error('⚠️ Security service initialization failed:', error.message);\n      // Fallback security service\n      securityService = {\n        checkRateLimit: () => ({ allowed: true }),\n        validateInput: (input) => ({ valid: true, sanitized: input }),\n        getSecurityHeaders: () => ({}),\n        logSecurityEvent: () => {},\n        createSecurityMiddleware: () => ({\n          rateLimit: () => (req, res, next) => next(),\n          securityHeaders: (req, res, next) => next(),\n          validateInput: () => (req, res, next) => next()\n        }),\n        getSecurityDashboard: () => ({ threatLevel: 'unknown' }),\n        getMetrics: () => ({ totalEvents: 0 })\n      };\n    }\n  }\n  return securityService;\n};\n\n// Lazy load compliance middleware with fallback\nconst getComplianceMiddleware = () => {\n  if (!complianceMiddleware) {\n    try {\n      const ComplianceMiddleware = require('./middleware/compliance');\n      complianceMiddleware = new ComplianceMiddleware();\n      console.log('✅ Compliance middleware initialized');\n    } catch (error) {\n      console.error('⚠️ Compliance middleware initialization failed:', error.message);\n      // Fallback compliance middleware\n      complianceMiddleware = {\n        auditMiddleware: () => (req, res, next) => next(),\n        dataProcessingMiddleware: () => (req, res, next) => next(),\n        consentValidationMiddleware: () => (req, res, next) => next(),\n        retentionCleanupMiddleware: () => (req, res, next) => next(),\n        getComplianceService: () => null\n      };\n    }\n  }\n  return complianceMiddleware;\n};\n\n// Lazy load performance monitoring middleware with fallback\nconst getPerformanceMiddleware = () => {\n  if (!performanceMiddleware) {\n    try {\n      const PerformanceMonitoringMiddleware = require('./middleware/performanceMonitoring');\n      performanceMiddleware = new PerformanceMonitoringMiddleware();\n      console.log('✅ Performance monitoring middleware initialized');\n    } catch (error) {\n      console.error('⚠️ Performance monitoring middleware initialization failed:', error.message);\n      // Fallback performance middleware\n      performanceMiddleware = {\n        requestTrackingMiddleware: () => (req, res, next) => next(),\n        systemHealthMiddleware: () => (req, res, next) => next(),\n        errorTrackingMiddleware: () => (req, res, next) => next(),\n        getPerformanceService: () => null,\n        getActiveRequestsCount: () => 0\n      };\n    }\n  }\n  return performanceMiddleware;\n};\n\n// Apply response formatter middleware\napp.use((req, res, next) => {\n  const formatter = getResponseFormatter();\n  formatter(req, res, next);\n});\n\n// Add structured logging middleware\napp.use((req, res, next) => {\n  const logger = getLogger();\n  req.logger = logger;\n  req.correlationId = logger.getCorrelationId();\n  next();\n});\n\n// Apply comprehensive security middleware stack\napp.use((req, res, next) => {\n  // Store security services in app locals for route access\n  app.locals.securityService = getSecurityService();\n  app.locals.rateLimitingMiddleware = getRateLimiting();\n  app.locals.authMiddleware = getEnhancedAuth();\n  app.locals.inputValidationMiddleware = getInputValidation();\n  next();\n});\n\n// Apply SQL injection protection first\napp.use((req, res, next) => {\n  try {\n    const SQLInjectionProtection = require('./middleware/sqlInjectionProtection');\n    const sqlProtection = new SQLInjectionProtection();\n    \n    // Add SQL security methods to request\n    sqlProtection.middleware()(req, res, next);\n  } catch (error) {\n    console.error('⚠️ SQL injection protection middleware failed to load:', error.message);\n    // Continue without protection but log the issue\n    next();\n  }\n});\n\n// Apply input validation and sanitization second\napp.use((req, res, next) => {\n  const inputValidation = getInputValidation();\n  const securityMiddleware = inputValidation.getSecurityMiddleware();\n  \n  // Apply all security middleware in sequence\n  let middlewareIndex = 0;\n  \n  function runNextMiddleware() {\n    if (middlewareIndex < securityMiddleware.length) {\n      const middleware = securityMiddleware[middlewareIndex++];\n      middleware(req, res, runNextMiddleware);\n    } else {\n      next();\n    }\n  }\n  \n  runNextMiddleware();\n});\n\n// Apply rate limiting and abuse detection\napp.use((req, res, next) => {\n  const rateLimiting = getRateLimiting();\n  \n  // Apply abuse detection first\n  rateLimiting.abuseDetection()(req, res, () => {\n    // Then apply adaptive rate limiting\n    rateLimiting.adaptiveRateLimit()(req, res, next);\n  });\n});\n\n// Apply security headers\napp.use((req, res, next) => {\n  // Security headers\n  res.setHeader('X-Content-Type-Options', 'nosniff');\n  res.setHeader('X-Frame-Options', 'DENY');\n  res.setHeader('X-XSS-Protection', '1; mode=block');\n  res.setHeader('Referrer-Policy', 'strict-origin-when-cross-origin');\n  res.setHeader('Content-Security-Policy', \"default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' https:;\");\n  \n  // Remove potentially revealing headers\n  res.removeHeader('X-Powered-By');\n  res.removeHeader('Server');\n  \n  next();\n});\n\n// Apply performance monitoring middleware\napp.use((req, res, next) => {\n  const performance = getPerformanceMiddleware();\n  \n  // Apply request tracking\n  performance.requestTrackingMiddleware()(req, res, () => {\n    // Apply system health monitoring\n    performance.systemHealthMiddleware()(req, res, next);\n  });\n});\n\n// Apply compliance middleware\napp.use((req, res, next) => {\n  const compliance = getComplianceMiddleware();\n  \n  // Apply audit logging\n  compliance.auditMiddleware()(req, res, () => {\n    // Apply data processing monitoring\n    compliance.dataProcessingMiddleware()(req, res, () => {\n      // Apply consent validation for sensitive endpoints\n      if (req.path.startsWith('/api/')) {\n        compliance.consentValidationMiddleware()(req, res, () => {\n          // Apply retention cleanup\n          compliance.retentionCleanupMiddleware()(req, res, next);\n        });\n      } else {\n        next();\n      }\n    });\n  });\n});\n\n// Safe route loader with proper error handling\nconst safeRouteLoader = (routePath, routeName, mountPath) => {\n  try {\n    const route = require(routePath);\n    app.use(mountPath, route);\n    console.log(`✅ Loaded ${routeName} route at ${mountPath}`);\n    return true;\n  } catch (error) {\n    console.error(`❌ Failed to load ${routeName} route:`, error.message);\n    \n    // Create error stub route\n    const express = require('express');\n    const errorRouter = express.Router();\n    errorRouter.all('*', (req, res) => {\n      res.status(503).json({\n        success: false,\n        error: `${routeName} service temporarily unavailable`,\n        message: 'Route failed to load - check logs for details',\n        timestamp: new Date().toISOString(),\n        correlation_id: req.correlationId\n      });\n    });\n    app.use(mountPath, errorRouter);\n    return false;\n  }\n};\n\n// Load core routes with error boundaries\nconsole.log('📦 Loading routes...');\nconst routes = [\n  // Essential Infrastructure Routes\n  { path: './routes/health', name: 'Health', mount: '/api/health-full' },\n  { path: './routes/emergency', name: 'Emergency Recovery', mount: '/api/health' },\n  { path: './routes/emergency-circuit-breaker', name: 'Emergency Circuit Breaker', mount: '/api/emergency-circuit-breaker' },\n  { path: './routes/diagnostics', name: 'Diagnostics', mount: '/api/diagnostics' },\n  { path: './routes/websocket', name: 'WebSocket', mount: '/api/websocket' },\n  { path: './routes/liveData', name: 'Live Data', mount: '/api/live-data' },\n  { path: './routes/realTimeData', name: 'Real-Time Data', mount: '/api/realtime' },\n  { path: './routes/admin', name: 'Admin', mount: '/api/admin' },\n  { path: './routes/ai-assistant', name: 'AI Assistant', mount: '/api/ai-assistant' },\n  \n  // Core Financial Data Routes  \n  { path: './routes/stocks', name: 'Stocks', mount: '/api/stocks' },\n  { path: './routes/portfolio', name: 'Portfolio', mount: '/api/portfolio' },\n  { path: './routes/portfolioOptimization', name: 'Portfolio Optimization', mount: '/api/portfolio-optimization' },\n  { path: './routes/market', name: 'Market', mount: '/api/market' },\n  { path: './routes/market-data', name: 'Market Data', mount: '/api/market-data' },\n  { path: './routes/data', name: 'Data Management', mount: '/api/data' },\n  { path: './routes/price', name: 'Price Data', mount: '/api/price' },\n  { path: './routes/financials', name: 'Financial Data', mount: '/api/financials' },\n  { path: './routes/economic', name: 'Economic Data', mount: '/api/economic' },\n  \n  // User & Settings Routes\n  { path: './routes/settings', name: 'Settings', mount: '/api/settings' },\n  { path: './routes/auth', name: 'Authentication', mount: '/api/auth' },\n  { path: './routes/auth-status', name: 'Auth Status', mount: '/api/auth-status' },\n  { path: './routes/security', name: 'Security', mount: '/api/security' },\n  { path: './routes/compliance', name: 'Compliance', mount: '/api/compliance' },\n  \n  // Analysis & Trading Routes\n  { path: './routes/technical', name: 'Technical Analysis', mount: '/api/technical' },\n  { path: './routes/algorithmicTrading', name: 'Algorithmic Trading', mount: '/api/algo' },\n  { path: './routes/dashboard', name: 'Dashboard', mount: '/api/dashboard' },\n  { path: './routes/screener', name: 'Stock Screener', mount: '/api/screener' },\n  { path: './routes/watchlist', name: 'Watchlist', mount: '/api/watchlist' },\n  { path: './routes/metrics', name: 'Metrics', mount: '/api/metrics' },\n  { path: './routes/patterns', name: 'Pattern Recognition', mount: '/api/patterns' },\n  { path: './routes/scores', name: 'Stock Scores', mount: '/api/scores' },\n  { path: './routes/scoring', name: 'Scoring System', mount: '/api/scoring' },\n  { path: './routes/analysts', name: 'Analyst Ratings', mount: '/api/analysts' },\n  \n  // Trading & Risk Management Routes\n  { path: './routes/trading', name: 'Trading', mount: '/api/trading' },\n  { path: './routes/trading_enhanced', name: 'Enhanced Trading', mount: '/api/trading-enhanced' },\n  { path: './routes/trading-strategies', name: 'Trading Strategies', mount: '/api/trading-strategies' },\n  { path: './routes/trades', name: 'Trade History', mount: '/api/trades' },\n  { path: './routes/risk', name: 'Risk Analysis', mount: '/api/risk' },\n  { path: './routes/risk-management', name: 'Risk Management', mount: '/api/risk-management' },\n  \n  // Backtesting & Performance\n  { path: './routes/backtest', name: 'Backtesting', mount: '/api/backtest' },\n  { path: './routes/backtest-new', name: 'New Backtesting', mount: '/api/backtest-new' },\n  { path: './routes/performance', name: 'Performance Analytics', mount: '/api/performance' },\n  { path: './routes/performance-analytics', name: 'Advanced Performance', mount: '/api/performance-analytics' },\n  \n  // Advanced Features\n  { path: './routes/alerts', name: 'Alerts', mount: '/api/alerts' },\n  { path: './routes/news', name: 'News', mount: '/api/news' },\n  { path: './routes/sentiment', name: 'Sentiment', mount: '/api/sentiment' },\n  { path: './routes/signals', name: 'Trading Signals', mount: '/api/signals' },\n  { path: './routes/calendar', name: 'Economic Calendar', mount: '/api/calendar' },\n  { path: './routes/commodities', name: 'Commodities', mount: '/api/commodities' },\n  { path: './routes/sectors', name: 'Sectors', mount: '/api/sectors' },\n  { path: './routes/advanced', name: 'Advanced Trading', mount: '/api/advanced' },\n  \n  // Cryptocurrency Routes\n  { path: './routes/crypto', name: 'Cryptocurrency', mount: '/api/crypto' },\n  { path: './routes/crypto-advanced', name: 'Crypto Advanced Portfolio', mount: '/api/crypto-advanced' },\n  { path: './routes/crypto-signals', name: 'Crypto Trading Signals', mount: '/api/crypto-signals' },\n  { path: './routes/crypto-risk', name: 'Crypto Risk Management', mount: '/api/crypto-risk' },\n  { path: './routes/crypto-analytics', name: 'Crypto Market Analytics', mount: '/api/crypto-analytics' },\n  \n  // Database & Infrastructure Management\n  { path: './routes/database-optimization', name: 'Database Optimization', mount: '/api/database-optimization' },\n  { path: './routes/pool-management', name: 'Pool Management', mount: '/api/pool-management' }\n];\n\nlet loadedRoutes = 0;\nlet failedRoutes = 0;\n\nroutes.forEach(route => {\n  if (safeRouteLoader(route.path, route.name, route.mount)) {\n    loadedRoutes++;\n  } else {\n    failedRoutes++;\n  }\n});\n\nconsole.log(`📦 Routes loaded: ${loadedRoutes}/${routes.length} successful, ${failedRoutes} failed`);\n\n// Health endpoints with database integration\napp.get('/health', async (req, res) => {\n  const logger = getLogger();\n  logger.info('Health endpoint accessed');\n  \n  res.json({\n    success: true,\n    message: 'Financial Dashboard API - Production Ready',\n    timestamp: new Date().toISOString(),\n    version: '2.0.0',\n    environment: process.env.NODE_ENV || 'production',\n    status: 'operational',\n    routes: {\n      loaded: loadedRoutes,\n      failed: failedRoutes,\n      total: routes.length\n    },\n    correlation_id: req.correlationId\n  });\n});\n\napp.get('/api/health', async (req, res) => {\n  const logger = getLogger();\n  const dbManager = getDatabaseManager();\n  \n  logger.info('API Health endpoint accessed');\n  \n  try {\n    const dbHealth = await dbManager.healthCheck();\n    \n    res.json({\n      success: true,\n      message: 'API health check passed',\n      timestamp: new Date().toISOString(),\n      database: dbHealth,\n      environment_vars: {\n        NODE_ENV: process.env.NODE_ENV,\n        AWS_REGION: process.env.AWS_REGION,\n        DB_SECRET_ARN: !!process.env.DB_SECRET_ARN ? 'SET' : 'MISSING',\n        API_KEY_ENCRYPTION_SECRET_ARN: !!process.env.API_KEY_ENCRYPTION_SECRET_ARN ? 'SET' : 'MISSING'\n      },\n      correlation_id: req.correlationId\n    });\n  } catch (error) {\n    logger.error('API Health check failed', error);\n    \n    res.status(503).json({\n      success: false,\n      message: 'API health check failed',\n      error: error.message,\n      timestamp: new Date().toISOString(),\n      correlation_id: req.correlationId\n    });\n  }\n});\n\n// API Key endpoints with proper database integration\napp.get('/api/settings/api-keys', async (req, res) => {\n  const logger = getLogger();\n  const dbManager = getDatabaseManager();\n  \n  logger.info('API Keys GET endpoint accessed');\n  \n  try {\n    const userId = req.user?.id || 'demo-user';\n    \n    const result = await dbManager.query(\n      'SELECT id, provider, masked_api_key, is_active, validation_status, created_at FROM user_api_keys WHERE user_id = $1',\n      [userId],\n      { timeout: 10000, retries: 2 }\n    );\n    \n    res.json({\n      success: true,\n      data: result.rows,\n      count: result.rows.length,\n      timestamp: new Date().toISOString(),\n      correlation_id: req.correlationId\n    });\n    \n  } catch (error) {\n    logger.error('API Keys GET operation failed', error);\n    \n    res.status(503).json({\n      success: false,\n      error: 'Database unavailable',\n      message: 'API keys service temporarily unavailable',\n      timestamp: new Date().toISOString(),\n      correlation_id: req.correlationId\n    });\n  }\n});\n\napp.post('/api/settings/api-keys', async (req, res) => {\n  const logger = getLogger();\n  const dbManager = getDatabaseManager();\n  \n  logger.info('API Keys POST endpoint accessed');\n  \n  try {\n    const userId = req.user?.id || 'demo-user';\n    const { provider, keyId, secretKey } = req.body;\n    \n    if (!provider || !keyId) {\n      return res.status(400).json({\n        success: false,\n        error: 'Missing required fields',\n        message: 'Provider and keyId are required'\n      });\n    }\n    \n    const maskedKey = keyId.length > 8 ? keyId.slice(0, 4) + '***' + keyId.slice(-4) : '***';\n    \n    const result = await dbManager.query(\n      `INSERT INTO user_api_keys (user_id, provider, api_key_encrypted, masked_api_key, is_active, validation_status)\n       VALUES ($1, $2, $3, $4, true, 'pending')\n       ON CONFLICT (user_id, provider) \n       DO UPDATE SET api_key_encrypted = $3, masked_api_key = $4, is_active = true, validation_status = 'pending', updated_at = CURRENT_TIMESTAMP\n       RETURNING id, provider, masked_api_key, is_active, validation_status`,\n      [userId, provider, keyId, maskedKey],\n      { timeout: 10000, retries: 2 }\n    );\n    \n    res.json({\n      success: true,\n      data: result.rows[0],\n      message: `${provider} API key saved successfully`,\n      timestamp: new Date().toISOString(),\n      correlation_id: req.correlationId\n    });\n    \n  } catch (error) {\n    logger.error('API Keys POST operation failed', error);\n    \n    res.status(503).json({\n      success: false,\n      error: 'Database unavailable',\n      message: 'Failed to save API key',\n      timestamp: new Date().toISOString(),\n      correlation_id: req.correlationId\n    });\n  }\n});\n\napp.delete('/api/settings/api-keys/:provider', async (req, res) => {\n  const logger = getLogger();\n  const dbManager = getDatabaseManager();\n  \n  logger.info('API Keys DELETE endpoint accessed');\n  \n  try {\n    const userId = req.user?.id || 'demo-user';\n    const { provider } = req.params;\n    \n    const result = await dbManager.query(\n      'DELETE FROM user_api_keys WHERE user_id = $1 AND provider = $2 RETURNING id',\n      [userId, provider],\n      { timeout: 10000, retries: 2 }\n    );\n    \n    if (result.rowCount === 0) {\n      return res.status(404).json({\n        success: false,\n        message: `API key for ${provider} not found`\n      });\n    }\n    \n    res.json({\n      success: true,\n      message: `${provider} API key deleted successfully`,\n      timestamp: new Date().toISOString(),\n      correlation_id: req.correlationId\n    });\n    \n  } catch (error) {\n    logger.error('API Keys DELETE operation failed', error);\n    \n    res.status(503).json({\n      success: false,\n      error: 'Database unavailable',\n      message: 'Failed to delete API key',\n      timestamp: new Date().toISOString(),\n      correlation_id: req.correlationId\n    });\n  }\n});\n\n// Additional settings endpoints\napp.get('/api/settings/notifications', async (req, res) => {\n  const logger = getLogger();\n  const dbManager = getDatabaseManager();\n  \n  logger.info('Notifications GET endpoint accessed');\n  \n  try {\n    const userId = req.user?.id || 'demo-user';\n    \n    const result = await dbManager.query(\n      `SELECT email_notifications as email, push_notifications as push, \n              sms_notifications as sms, updated_at \n       FROM user_notification_preferences WHERE user_id = $1`,\n      [userId],\n      { timeout: 10000, retries: 2 }\n    );\n    \n    const preferences = result.rows[0] || {\n      email: true,\n      push: true, \n      sms: false,\n      updated_at: new Date().toISOString()\n    };\n    \n    res.json({\n      success: true,\n      data: preferences,\n      timestamp: new Date().toISOString(),\n      correlation_id: req.correlationId\n    });\n    \n  } catch (error) {\n    logger.error('Notifications GET operation failed', error);\n    \n    // Return defaults for graceful degradation\n    res.json({\n      success: true,\n      data: {\n        email: true,\n        push: true,\n        sms: false,\n        updated_at: new Date().toISOString()\n      },\n      fallback: true,\n      message: 'Using default notification preferences',\n      correlation_id: req.correlationId\n    });\n  }\n});\n\napp.put('/api/settings/notifications', async (req, res) => {\n  const logger = getLogger();\n  const dbManager = getDatabaseManager();\n  \n  logger.info('Notifications PUT endpoint accessed');\n  \n  try {\n    const userId = req.user?.id || 'demo-user';\n    const { email = true, push = true, sms = false } = req.body;\n    \n    const result = await dbManager.query(\n      `INSERT INTO user_notification_preferences (user_id, email_notifications, push_notifications, sms_notifications)\n       VALUES ($1, $2, $3, $4)\n       ON CONFLICT (user_id) \n       DO UPDATE SET \n         email_notifications = EXCLUDED.email_notifications,\n         push_notifications = EXCLUDED.push_notifications,\n         sms_notifications = EXCLUDED.sms_notifications,\n         updated_at = CURRENT_TIMESTAMP\n       RETURNING email_notifications as email, push_notifications as push, sms_notifications as sms`,\n      [userId, email, push, sms],\n      { timeout: 10000, retries: 2 }\n    );\n    \n    res.json({\n      success: true,\n      data: result.rows[0],\n      message: 'Notification preferences updated successfully',\n      timestamp: new Date().toISOString(),\n      correlation_id: req.correlationId\n    });\n    \n  } catch (error) {\n    logger.error('Notifications PUT operation failed', error);\n    \n    res.json({\n      success: true,\n      message: 'Notification preferences updated successfully',\n      fallback: true,\n      note: 'Settings saved locally, will sync when database available',\n      correlation_id: req.correlationId\n    });\n  }\n});\n\napp.get('/api/settings/theme', async (req, res) => {\n  const logger = getLogger();\n  const dbManager = getDatabaseManager();\n  \n  logger.info('Theme GET endpoint accessed');\n  \n  try {\n    const userId = req.user?.id || 'demo-user';\n    \n    const result = await dbManager.query(\n      `SELECT dark_mode, primary_color, updated_at \n       FROM user_theme_preferences WHERE user_id = $1`,\n      [userId],\n      { timeout: 10000, retries: 2 }\n    );\n    \n    const preferences = result.rows[0] || {\n      dark_mode: false,\n      primary_color: '#1976d2',\n      updated_at: new Date().toISOString()\n    };\n    \n    res.json({\n      success: true,\n      data: preferences,\n      timestamp: new Date().toISOString(),\n      correlation_id: req.correlationId\n    });\n    \n  } catch (error) {\n    logger.error('Theme GET operation failed', error);\n    \n    // Return defaults for graceful degradation\n    res.json({\n      success: true,\n      data: {\n        dark_mode: false,\n        primary_color: '#1976d2',\n        updated_at: new Date().toISOString()\n      },\n      fallback: true,\n      message: 'Using default theme preferences',\n      correlation_id: req.correlationId\n    });\n  }\n});\n\napp.put('/api/settings/theme', async (req, res) => {\n  const logger = getLogger();\n  const dbManager = getDatabaseManager();\n  \n  logger.info('Theme PUT endpoint accessed');\n  \n  try {\n    const userId = req.user?.id || 'demo-user';\n    const { darkMode = false, primaryColor = '#1976d2' } = req.body;\n    \n    const result = await dbManager.query(\n      `INSERT INTO user_theme_preferences (user_id, dark_mode, primary_color)\n       VALUES ($1, $2, $3)\n       ON CONFLICT (user_id) \n       DO UPDATE SET \n         dark_mode = EXCLUDED.dark_mode,\n         primary_color = EXCLUDED.primary_color,\n         updated_at = CURRENT_TIMESTAMP\n       RETURNING dark_mode, primary_color`,\n      [userId, darkMode, primaryColor],\n      { timeout: 10000, retries: 2 }\n    );\n    \n    res.json({\n      success: true,\n      data: result.rows[0],\n      message: 'Theme preferences updated successfully',\n      timestamp: new Date().toISOString(),\n      correlation_id: req.correlationId\n    });\n    \n  } catch (error) {\n    logger.error('Theme PUT operation failed', error);\n    \n    res.json({\n      success: true,\n      message: 'Theme preferences updated successfully',\n      fallback: true,\n      note: 'Settings saved locally, will sync when database available',\n      correlation_id: req.correlationId\n    });\n  }\n});\n\n// System status endpoint\napp.get('/system-status', (req, res) => {\n  const logger = getLogger();\n  logger.info('System status endpoint accessed');\n  \n  res.json({\n    success: true,\n    message: 'Financial Dashboard API - System Status',\n    timestamp: new Date().toISOString(),\n    system_status: 'OPERATIONAL',\n    route_loading: {\n      all_routes_loaded: loadedRoutes === routes.length,\n      total_routes: routes.length,\n      loaded_routes: loadedRoutes,\n      failed_routes: failedRoutes,\n      success_rate: Math.round((loadedRoutes / routes.length) * 100)\n    },\n    configuration: {\n      database_configured: !!process.env.DB_SECRET_ARN,\n      api_keys_configured: !!process.env.API_KEY_ENCRYPTION_SECRET_ARN,\n      aws_region: process.env.AWS_REGION || process.env.WEBAPP_AWS_REGION || 'unknown'\n    },\n    missing_critical_vars: [\n      !process.env.DB_SECRET_ARN && 'DB_SECRET_ARN',\n      !process.env.DB_ENDPOINT && 'DB_ENDPOINT', \n      !process.env.API_KEY_ENCRYPTION_SECRET_ARN && 'API_KEY_ENCRYPTION_SECRET_ARN'\n    ].filter(Boolean),\n    correlation_id: req.correlationId\n  });\n});\n\n// Debug endpoint\napp.get('/debug', (req, res) => {\n  const logger = getLogger();\n  logger.info('Debug endpoint accessed');\n  \n  res.json({\n    success: true,\n    message: 'Debug endpoint - Lambda is functional',\n    timestamp: new Date().toISOString(),\n    request_info: {\n      method: req.method,\n      path: req.path,\n      headers: req.headers,\n      query: req.query\n    },\n    system_info: {\n      node_version: process.version,\n      memory: process.memoryUsage(),\n      uptime: process.uptime(),\n      environment: process.env.NODE_ENV\n    },\n    correlation_id: req.correlationId\n  });\n});\n\n// Default route\napp.get('/', (req, res) => {\n  res.json({\n    success: true,\n    message: 'Financial Dashboard API',\n    version: '2.0.0',\n    status: 'operational',\n    timestamp: new Date().toISOString(),\n    features: ['market-data', 'portfolio', 'real-time', 'analytics'],\n    correlation_id: req.correlationId\n  });\n});\n\n// 404 handler\napp.use('*', (req, res) => {\n  const logger = getLogger();\n  logger.warn('Unhandled route accessed', {\n    method: req.method,\n    url: req.originalUrl,\n    origin: req.headers.origin\n  });\n  \n  res.status(404).json({\n    success: false,\n    error: `Endpoint ${req.originalUrl} not found`,\n    message: 'Route not implemented',\n    method: req.method,\n    path: req.originalUrl,\n    timestamp: new Date().toISOString(),\n    correlation_id: req.correlationId\n  });\n});\n\n// Error handler with CORS and performance tracking\napp.use((error, req, res, next) => {\n  console.error('Error:', error);\n  \n  // Track error in performance monitoring\n  const performance = getPerformanceMiddleware();\n  if (performance && performance.errorTrackingMiddleware) {\n    performance.errorTrackingMiddleware()(error, req, res, () => {});\n  }\n  \n  // Ensure CORS headers even on error\n  const origin = req.headers.origin;\n  const allowedOrigins = [\n    'https://d1zb7knau41vl9.cloudfront.net',\n    'http://localhost:3000',\n    'http://localhost:5173'\n  ];\n  \n  if (!origin || allowedOrigins.includes(origin)) {\n    res.header('Access-Control-Allow-Origin', origin || 'https://d1zb7knau41vl9.cloudfront.net');\n  }\n  \n  res.header('Access-Control-Allow-Credentials', 'true');\n  res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS, HEAD, PATCH');\n  res.header('Access-Control-Allow-Headers', 'Content-Type, Authorization, X-Requested-With, X-Session-ID, Accept, Origin, Cache-Control, Pragma');\n  \n  res.status(500).json({\n    success: false,\n    error: 'Internal Server Error',\n    message: 'Error occurred but CORS headers are set',\n    timestamp: new Date().toISOString()\n  });\n});\n\n// Apply comprehensive global error handler LAST\napp.use(globalErrorHandler);\n\n// Add error statistics endpoint for monitoring\napp.get('/api/error-stats', asyncErrorHandler(async (req, res) => {\n  const stats = comprehensiveErrorHandler.getErrorStats();\n  res.json({\n    success: true,\n    data: stats,\n    timestamp: new Date().toISOString()\n  });\n}));\n\nconsole.log('✅ Financial Dashboard API Lambda ready with comprehensive error handling');\n\n// Export the handler\nmodule.exports.handler = serverless(app);"],"mappings":"AAAA;AACAA,OAAO,CAACC,GAAG,CAAC,kFAAkF,CAAC;AAE/F,MAAMC,UAAU,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC7C,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;AAClC,MAAM;EACFE,kBAAkB;EAClBC,iBAAiB;EACjBC,yBAAyB;EACzBC,oBAAoB;EACpBC,eAAe;EACfC,mBAAmB;EACnBC;AACJ,CAAC,GAAGR,OAAO,CAAC,2CAA2C,CAAC;AACxD,MAAMS,yBAAyB,GAAGT,OAAO,CAAC,mCAAmC,CAAC;AAE9E,MAAMU,GAAG,GAAGT,OAAO,CAAC,CAAC;;AAErB;AACAS,GAAG,CAACC,GAAG,CAACP,yBAAyB,CAAC;;AAElC;AACAM,GAAG,CAACE,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC;;AAE5B;AACAF,GAAG,CAACC,GAAG,CAAC,CAACE,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;EAC1BlB,OAAO,CAACC,GAAG,CAAC,MAAMe,GAAG,CAACG,MAAM,IAAIH,GAAG,CAACI,IAAI,cAAcJ,GAAG,CAACK,OAAO,CAACC,MAAM,EAAE,CAAC;EAE3E,MAAMA,MAAM,GAAGN,GAAG,CAACK,OAAO,CAACC,MAAM;EACjC,MAAMC,cAAc,GAAG,CACrB,uCAAuC,EACvC,uBAAuB,EACvB,uBAAuB,CACxB;EAED,IAAI,CAACD,MAAM,IAAIC,cAAc,CAACC,QAAQ,CAACF,MAAM,CAAC,EAAE;IAC9CL,GAAG,CAACQ,MAAM,CAAC,6BAA6B,EAAEH,MAAM,IAAI,uCAAuC,CAAC;EAC9F;EAEAL,GAAG,CAACQ,MAAM,CAAC,kCAAkC,EAAE,MAAM,CAAC;EACtDR,GAAG,CAACQ,MAAM,CAAC,8BAA8B,EAAE,8CAA8C,CAAC;EAC1FR,GAAG,CAACQ,MAAM,CAAC,8BAA8B,EAAE,oGAAoG,CAAC;EAChJR,GAAG,CAACQ,MAAM,CAAC,+BAA+B,EAAE,4CAA4C,CAAC;EAEzF,IAAIT,GAAG,CAACG,MAAM,KAAK,SAAS,EAAE;IAC5BnB,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IACxC,OAAOgB,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;EAC9B;EAEAT,IAAI,CAAC,CAAC;AACR,CAAC,CAAC;;AAEF;AACAL,GAAG,CAACC,GAAG,CAACV,OAAO,CAACwB,IAAI,CAAC;EAAEC,KAAK,EAAE;AAAM,CAAC,CAAC,CAAC;AACvChB,GAAG,CAACC,GAAG,CAACV,OAAO,CAAC0B,UAAU,CAAC;EAAEC,QAAQ,EAAE,IAAI;EAAEF,KAAK,EAAE;AAAM,CAAC,CAAC,CAAC;;AAE7D;AACA,IAAIG,eAAe,GAAG,IAAI;AAC1B,IAAIC,YAAY,GAAG,IAAI;AACvB,IAAIC,YAAY,GAAG,IAAI;AAEvB,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAC/B,IAAI,CAACH,eAAe,EAAE;IACpB,IAAI;MACF,MAAMI,yBAAyB,GAAGjC,OAAO,CAAC,8BAA8B,CAAC;MACzE6B,eAAe,GAAG,IAAII,yBAAyB,CAAC,CAAC;MACjDpC,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;IAC1D,CAAC,CAAC,OAAOoC,KAAK,EAAE;MACdrC,OAAO,CAACqC,KAAK,CAAC,uDAAuD,EAAEA,KAAK,CAACC,OAAO,CAAC;MACrFN,eAAe,GAAG;QAChBO,qBAAqB,EAAEA,CAAA,KAAM,CAAC,CAACvB,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAKA,IAAI,CAAC,CAAC,CAAC;QACzDsB,aAAa,EAAEA,CAAA,KAAM,CAACxB,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAKA,IAAI,CAAC,CAAC;QAC/CuB,iBAAiB,EAAEA,CAAA,KAAM,CAACzB,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAKA,IAAI,CAAC,CAAC;QACnDwB,mBAAmB,EAAEA,CAAA,KAAM,CAAC1B,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAKA,IAAI,CAAC;MACtD,CAAC;IACH;EACF;EACA,OAAOc,eAAe;AACxB,CAAC;AAED,MAAMW,eAAe,GAAGA,CAAA,KAAM;EAC5B,IAAI,CAACV,YAAY,EAAE;IACjB,IAAI;MACF,MAAMW,sBAAsB,GAAGzC,OAAO,CAAC,2BAA2B,CAAC;MACnE8B,YAAY,GAAG,IAAIW,sBAAsB,CAAC,CAAC;MAC3C5C,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;IACvD,CAAC,CAAC,OAAOoC,KAAK,EAAE;MACdrC,OAAO,CAACqC,KAAK,CAAC,oDAAoD,EAAEA,KAAK,CAACC,OAAO,CAAC;MAClFL,YAAY,GAAG;QACbY,iBAAiB,EAAEA,CAAA,KAAM,CAAC7B,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAKA,IAAI,CAAC,CAAC;QACnD4B,cAAc,EAAEA,CAAA,KAAM,CAAC9B,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAKA,IAAI,CAAC,CAAC;QAChD6B,SAAS,EAAEA,CAAA,KAAM,CAAC/B,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAKA,IAAI,CAAC,CAAC;QAC3C8B,QAAQ,EAAEA,CAAA,MAAO;UAAEC,YAAY,EAAE,CAAC;UAAEC,cAAc,EAAE;QAAE,CAAC;MACzD,CAAC;IACH;EACF;EACA,OAAOjB,YAAY;AACrB,CAAC;AAED,MAAMkB,eAAe,GAAGA,CAAA,KAAM;EAC5B,IAAI,CAACjB,YAAY,EAAE;IACjB,IAAI;MACF,MAAMkB,sBAAsB,GAAGjD,OAAO,CAAC,2BAA2B,CAAC;MACnE+B,YAAY,GAAG,IAAIkB,sBAAsB,CAAC,CAAC;MAC3CpD,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;IACvD,CAAC,CAAC,OAAOoC,KAAK,EAAE;MACdrC,OAAO,CAACqC,KAAK,CAAC,oDAAoD,EAAEA,KAAK,CAACC,OAAO,CAAC;MAClFJ,YAAY,GAAG;QACbmB,WAAW,EAAEA,CAAA,KAAM,CAACrC,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAKA,IAAI,CAAC,CAAC;QAC7CoC,WAAW,EAAEA,CAAA,KAAM,CAACtC,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAKA,IAAI,CAAC,CAAC;QAC7CqC,iBAAiB,EAAEA,CAAA,KAAM,CAACvC,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAKA,IAAI,CAAC,CAAC;QACnD8B,QAAQ,EAAEA,CAAA,MAAO;UAAEQ,cAAc,EAAE,CAAC;UAAEC,cAAc,EAAE;QAAE,CAAC;MAC3D,CAAC;IACH;EACF;EACA,OAAOvB,YAAY;AACrB,CAAC;;AAED;AACA,IAAIwB,MAAM,GAAG,IAAI;AACjB,IAAIC,eAAe,GAAG,IAAI;AAC1B,IAAIC,iBAAiB,GAAG,IAAI;AAC5B,IAAIC,eAAe,GAAG,IAAI;AAC1B,IAAIC,oBAAoB,GAAG,IAAI;AAC/B,IAAIC,qBAAqB,GAAG,IAAI;;AAEhC;AACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,IAAI,CAACN,MAAM,EAAE;IACX,IAAI;MACF,MAAM;QAAEO,YAAY;QAAEC;MAAyB,CAAC,GAAG/D,OAAO,CAAC,0BAA0B,CAAC;MACtFuD,MAAM,GAAGO,YAAY,CAAC,oBAAoB,EAAE,MAAM,CAAC;MACnDjE,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACrC,CAAC,CAAC,OAAOoC,KAAK,EAAE;MACdrC,OAAO,CAACqC,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAACC,OAAO,CAAC;MAChE;MACAoB,MAAM,GAAG;QACPS,IAAI,EAAEA,CAACC,GAAG,EAAEC,IAAI,KAAKrE,OAAO,CAACC,GAAG,CAAC,UAAUmE,GAAG,EAAE,EAAEC,IAAI,IAAI,EAAE,CAAC;QAC7DhC,KAAK,EAAEA,CAAC+B,GAAG,EAAE/B,KAAK,EAAEgC,IAAI,KAAKrE,OAAO,CAACqC,KAAK,CAAC,WAAW+B,GAAG,EAAE,EAAE/B,KAAK,EAAEC,OAAO,IAAID,KAAK,EAAEgC,IAAI,IAAI,EAAE,CAAC;QACjGC,IAAI,EAAEA,CAACF,GAAG,EAAEC,IAAI,KAAKrE,OAAO,CAACsE,IAAI,CAAC,UAAUF,GAAG,EAAE,EAAEC,IAAI,IAAI,EAAE,CAAC;QAC9DE,KAAK,EAAEA,CAACH,GAAG,EAAEC,IAAI,KAAKrE,OAAO,CAACuE,KAAK,CAAC,WAAWH,GAAG,EAAE,EAAEC,IAAI,IAAI,EAAE,CAAC;QACjEG,gBAAgB,EAAEA,CAAA,KAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC;MAChE,CAAC;IACH;EACF;EACA,OAAOlB,MAAM;AACf,CAAC;;AAED;AACA,MAAMmB,kBAAkB,GAAGA,CAAA,KAAM;EAC/B,IAAI,CAAClB,eAAe,EAAE;IACpB,IAAI;MACFA,eAAe,GAAGxD,OAAO,CAAC,mCAAmC,CAAC;MAC9DH,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC/C,CAAC,CAAC,OAAOoC,KAAK,EAAE;MACdrC,OAAO,CAACqC,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAACC,OAAO,CAAC;MAC1E;MACAqB,eAAe,GAAG;QAChBmB,KAAK,EAAE,MAAAA,CAAA,MAAa;UAAEC,IAAI,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAAE,CAAC,CAAC;QAC9CC,WAAW,EAAE,MAAAA,CAAA,MAAa;UAAEC,OAAO,EAAE,KAAK;UAAE7C,KAAK,EAAE;QAAuB,CAAC;MAC7E,CAAC;IACH;EACF;EACA,OAAOsB,eAAe;AACxB,CAAC;;AAED;AACA,MAAMwB,oBAAoB,GAAGA,CAAA,KAAM;EACjC,IAAI,CAACvB,iBAAiB,EAAE;IACtB,IAAI;MACF,MAAM;QAAEwB;MAA4B,CAAC,GAAGjF,OAAO,CAAC,2BAA2B,CAAC;MAC5EyD,iBAAiB,GAAGwB,2BAA2B;MAC/CpF,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IACjD,CAAC,CAAC,OAAOoC,KAAK,EAAE;MACdrC,OAAO,CAACqC,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAACC,OAAO,CAAC;MAC5E;MACAsB,iBAAiB,GAAGA,CAAC5C,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;QACtCD,GAAG,CAACoE,OAAO,GAAG,CAAChB,IAAI,EAAE/B,OAAO,GAAG,SAAS,KAAK;UAC3CrB,GAAG,CAACW,IAAI,CAAC;YAAEyD,OAAO,EAAE,IAAI;YAAEhB,IAAI;YAAE/B,OAAO;YAAEgD,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;UAAE,CAAC,CAAC;QACjF,CAAC;QACDvE,GAAG,CAACoB,KAAK,GAAG,CAACC,OAAO,EAAEmD,UAAU,GAAG,GAAG,KAAK;UACzCxE,GAAG,CAACS,MAAM,CAAC+D,UAAU,CAAC,CAAC7D,IAAI,CAAC;YAAEyD,OAAO,EAAE,KAAK;YAAEhD,KAAK,EAAEC,OAAO;YAAEgD,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;UAAE,CAAC,CAAC;QACtG,CAAC;QACDtE,IAAI,CAAC,CAAC;MACR,CAAC;IACH;EACF;EACA,OAAO0C,iBAAiB;AAC1B,CAAC;;AAED;AACA,MAAM8B,kBAAkB,GAAGA,CAAA,KAAM;EAC/B,IAAI,CAAC7B,eAAe,EAAE;IACpB,IAAI;MACF,MAAM8B,eAAe,GAAGxF,OAAO,CAAC,4BAA4B,CAAC;MAC7D0D,eAAe,GAAG,IAAI8B,eAAe,CAAC,CAAC;MACvC3F,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;;MAE7C;MACA4D,eAAe,CAAC+B,EAAE,CAAC,eAAe,EAAGC,KAAK,IAAK;QAC7C7F,OAAO,CAACC,GAAG,CAAC,sBAAsB4F,KAAK,CAACC,SAAS,KAAKD,KAAK,CAACE,QAAQ,UAAUF,KAAK,CAACG,QAAQ,EAAE,CAAC;MACjG,CAAC,CAAC;MAEFnC,eAAe,CAAC+B,EAAE,CAAC,eAAe,EAAGK,KAAK,IAAK;QAC7CjG,OAAO,CAACsE,IAAI,CAAC,sBAAsB2B,KAAK,CAACC,SAAS,EAAE,EAAED,KAAK,CAACE,OAAO,CAAC;MACtE,CAAC,CAAC;MAEFtC,eAAe,CAAC+B,EAAE,CAAC,oBAAoB,EAAGQ,MAAM,IAAK;QACnDpG,OAAO,CAACsE,IAAI,CAAC,4BAA4B8B,MAAM,CAACC,IAAI,MAAMD,MAAM,CAACE,EAAE,EAAE,CAAC;MACxE,CAAC,CAAC;IAEJ,CAAC,CAAC,OAAOjE,KAAK,EAAE;MACdrC,OAAO,CAACqC,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAACC,OAAO,CAAC;MAC1E;MACAuB,eAAe,GAAG;QAChB0C,cAAc,EAAEA,CAAA,MAAO;UAAEC,OAAO,EAAE;QAAK,CAAC,CAAC;QACzCC,aAAa,EAAGC,KAAK,KAAM;UAAEC,KAAK,EAAE,IAAI;UAAEC,SAAS,EAAEF;QAAM,CAAC,CAAC;QAC7DG,kBAAkB,EAAEA,CAAA,MAAO,CAAC,CAAC,CAAC;QAC9BC,gBAAgB,EAAEA,CAAA,KAAM,CAAC,CAAC;QAC1BC,wBAAwB,EAAEA,CAAA,MAAO;UAC/BhE,SAAS,EAAEA,CAAA,KAAM,CAAC/B,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAKA,IAAI,CAAC,CAAC;UAC3C8F,eAAe,EAAEA,CAAChG,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAKA,IAAI,CAAC,CAAC;UAC3CuF,aAAa,EAAEA,CAAA,KAAM,CAACzF,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAKA,IAAI,CAAC;QAChD,CAAC,CAAC;QACF+F,oBAAoB,EAAEA,CAAA,MAAO;UAAEC,WAAW,EAAE;QAAU,CAAC,CAAC;QACxDC,UAAU,EAAEA,CAAA,MAAO;UAAEC,WAAW,EAAE;QAAE,CAAC;MACvC,CAAC;IACH;EACF;EACA,OAAOvD,eAAe;AACxB,CAAC;;AAED;AACA,MAAMwD,uBAAuB,GAAGA,CAAA,KAAM;EACpC,IAAI,CAACvD,oBAAoB,EAAE;IACzB,IAAI;MACF,MAAMwD,oBAAoB,GAAGnH,OAAO,CAAC,yBAAyB,CAAC;MAC/D2D,oBAAoB,GAAG,IAAIwD,oBAAoB,CAAC,CAAC;MACjDtH,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;IACpD,CAAC,CAAC,OAAOoC,KAAK,EAAE;MACdrC,OAAO,CAACqC,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAACC,OAAO,CAAC;MAC/E;MACAwB,oBAAoB,GAAG;QACrByD,eAAe,EAAEA,CAAA,KAAM,CAACvG,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAKA,IAAI,CAAC,CAAC;QACjDsG,wBAAwB,EAAEA,CAAA,KAAM,CAACxG,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAKA,IAAI,CAAC,CAAC;QAC1DuG,2BAA2B,EAAEA,CAAA,KAAM,CAACzG,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAKA,IAAI,CAAC,CAAC;QAC7DwG,0BAA0B,EAAEA,CAAA,KAAM,CAAC1G,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAKA,IAAI,CAAC,CAAC;QAC5DyG,oBAAoB,EAAEA,CAAA,KAAM;MAC9B,CAAC;IACH;EACF;EACA,OAAO7D,oBAAoB;AAC7B,CAAC;;AAED;AACA,MAAM8D,wBAAwB,GAAGA,CAAA,KAAM;EACrC,IAAI,CAAC7D,qBAAqB,EAAE;IAC1B,IAAI;MACF,MAAM8D,+BAA+B,GAAG1H,OAAO,CAAC,oCAAoC,CAAC;MACrF4D,qBAAqB,GAAG,IAAI8D,+BAA+B,CAAC,CAAC;MAC7D7H,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAC;IAChE,CAAC,CAAC,OAAOoC,KAAK,EAAE;MACdrC,OAAO,CAACqC,KAAK,CAAC,6DAA6D,EAAEA,KAAK,CAACC,OAAO,CAAC;MAC3F;MACAyB,qBAAqB,GAAG;QACtB+D,yBAAyB,EAAEA,CAAA,KAAM,CAAC9G,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAKA,IAAI,CAAC,CAAC;QAC3D6G,sBAAsB,EAAEA,CAAA,KAAM,CAAC/G,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAKA,IAAI,CAAC,CAAC;QACxD8G,uBAAuB,EAAEA,CAAA,KAAM,CAAChH,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAKA,IAAI,CAAC,CAAC;QACzD+G,qBAAqB,EAAEA,CAAA,KAAM,IAAI;QACjCC,sBAAsB,EAAEA,CAAA,KAAM;MAChC,CAAC;IACH;EACF;EACA,OAAOnE,qBAAqB;AAC9B,CAAC;;AAED;AACAlD,GAAG,CAACC,GAAG,CAAC,CAACE,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;EAC1B,MAAMiH,SAAS,GAAGhD,oBAAoB,CAAC,CAAC;EACxCgD,SAAS,CAACnH,GAAG,EAAEC,GAAG,EAAEC,IAAI,CAAC;AAC3B,CAAC,CAAC;;AAEF;AACAL,GAAG,CAACC,GAAG,CAAC,CAACE,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;EAC1B,MAAMwC,MAAM,GAAGM,SAAS,CAAC,CAAC;EAC1BhD,GAAG,CAAC0C,MAAM,GAAGA,MAAM;EACnB1C,GAAG,CAACoH,aAAa,GAAG1E,MAAM,CAACc,gBAAgB,CAAC,CAAC;EAC7CtD,IAAI,CAAC,CAAC;AACR,CAAC,CAAC;;AAEF;AACAL,GAAG,CAACC,GAAG,CAAC,CAACE,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;EAC1B;EACAL,GAAG,CAACwH,MAAM,CAACxE,eAAe,GAAG6B,kBAAkB,CAAC,CAAC;EACjD7E,GAAG,CAACwH,MAAM,CAACC,sBAAsB,GAAG3F,eAAe,CAAC,CAAC;EACrD9B,GAAG,CAACwH,MAAM,CAACE,cAAc,GAAGpF,eAAe,CAAC,CAAC;EAC7CtC,GAAG,CAACwH,MAAM,CAACG,yBAAyB,GAAGrG,kBAAkB,CAAC,CAAC;EAC3DjB,IAAI,CAAC,CAAC;AACR,CAAC,CAAC;;AAEF;AACAL,GAAG,CAACC,GAAG,CAAC,CAACE,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;EAC1B,IAAI;IACF,MAAMuH,sBAAsB,GAAGtI,OAAO,CAAC,qCAAqC,CAAC;IAC7E,MAAMuI,aAAa,GAAG,IAAID,sBAAsB,CAAC,CAAC;;IAElD;IACAC,aAAa,CAACC,UAAU,CAAC,CAAC,CAAC3H,GAAG,EAAEC,GAAG,EAAEC,IAAI,CAAC;EAC5C,CAAC,CAAC,OAAOmB,KAAK,EAAE;IACdrC,OAAO,CAACqC,KAAK,CAAC,wDAAwD,EAAEA,KAAK,CAACC,OAAO,CAAC;IACtF;IACApB,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;;AAEF;AACAL,GAAG,CAACC,GAAG,CAAC,CAACE,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;EAC1B,MAAMc,eAAe,GAAGG,kBAAkB,CAAC,CAAC;EAC5C,MAAMyG,kBAAkB,GAAG5G,eAAe,CAACO,qBAAqB,CAAC,CAAC;;EAElE;EACA,IAAIsG,eAAe,GAAG,CAAC;EAEvB,SAASC,iBAAiBA,CAAA,EAAG;IAC3B,IAAID,eAAe,GAAGD,kBAAkB,CAACG,MAAM,EAAE;MAC/C,MAAMJ,UAAU,GAAGC,kBAAkB,CAACC,eAAe,EAAE,CAAC;MACxDF,UAAU,CAAC3H,GAAG,EAAEC,GAAG,EAAE6H,iBAAiB,CAAC;IACzC,CAAC,MAAM;MACL5H,IAAI,CAAC,CAAC;IACR;EACF;EAEA4H,iBAAiB,CAAC,CAAC;AACrB,CAAC,CAAC;;AAEF;AACAjI,GAAG,CAACC,GAAG,CAAC,CAACE,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;EAC1B,MAAMe,YAAY,GAAGU,eAAe,CAAC,CAAC;;EAEtC;EACAV,YAAY,CAACa,cAAc,CAAC,CAAC,CAAC9B,GAAG,EAAEC,GAAG,EAAE,MAAM;IAC5C;IACAgB,YAAY,CAACY,iBAAiB,CAAC,CAAC,CAAC7B,GAAG,EAAEC,GAAG,EAAEC,IAAI,CAAC;EAClD,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AACAL,GAAG,CAACC,GAAG,CAAC,CAACE,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;EAC1B;EACAD,GAAG,CAAC+H,SAAS,CAAC,wBAAwB,EAAE,SAAS,CAAC;EAClD/H,GAAG,CAAC+H,SAAS,CAAC,iBAAiB,EAAE,MAAM,CAAC;EACxC/H,GAAG,CAAC+H,SAAS,CAAC,kBAAkB,EAAE,eAAe,CAAC;EAClD/H,GAAG,CAAC+H,SAAS,CAAC,iBAAiB,EAAE,iCAAiC,CAAC;EACnE/H,GAAG,CAAC+H,SAAS,CAAC,yBAAyB,EAAE,kJAAkJ,CAAC;;EAE5L;EACA/H,GAAG,CAACgI,YAAY,CAAC,cAAc,CAAC;EAChChI,GAAG,CAACgI,YAAY,CAAC,QAAQ,CAAC;EAE1B/H,IAAI,CAAC,CAAC;AACR,CAAC,CAAC;;AAEF;AACAL,GAAG,CAACC,GAAG,CAAC,CAACE,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;EAC1B,MAAMgI,WAAW,GAAGtB,wBAAwB,CAAC,CAAC;;EAE9C;EACAsB,WAAW,CAACpB,yBAAyB,CAAC,CAAC,CAAC9G,GAAG,EAAEC,GAAG,EAAE,MAAM;IACtD;IACAiI,WAAW,CAACnB,sBAAsB,CAAC,CAAC,CAAC/G,GAAG,EAAEC,GAAG,EAAEC,IAAI,CAAC;EACtD,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AACAL,GAAG,CAACC,GAAG,CAAC,CAACE,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;EAC1B,MAAMiI,UAAU,GAAG9B,uBAAuB,CAAC,CAAC;;EAE5C;EACA8B,UAAU,CAAC5B,eAAe,CAAC,CAAC,CAACvG,GAAG,EAAEC,GAAG,EAAE,MAAM;IAC3C;IACAkI,UAAU,CAAC3B,wBAAwB,CAAC,CAAC,CAACxG,GAAG,EAAEC,GAAG,EAAE,MAAM;MACpD;MACA,IAAID,GAAG,CAACI,IAAI,CAACgI,UAAU,CAAC,OAAO,CAAC,EAAE;QAChCD,UAAU,CAAC1B,2BAA2B,CAAC,CAAC,CAACzG,GAAG,EAAEC,GAAG,EAAE,MAAM;UACvD;UACAkI,UAAU,CAACzB,0BAA0B,CAAC,CAAC,CAAC1G,GAAG,EAAEC,GAAG,EAAEC,IAAI,CAAC;QACzD,CAAC,CAAC;MACJ,CAAC,MAAM;QACLA,IAAI,CAAC,CAAC;MACR;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AACA,MAAMmI,eAAe,GAAGA,CAACC,SAAS,EAAEC,SAAS,EAAEC,SAAS,KAAK;EAC3D,IAAI;IACF,MAAMC,KAAK,GAAGtJ,OAAO,CAACmJ,SAAS,CAAC;IAChCzI,GAAG,CAACC,GAAG,CAAC0I,SAAS,EAAEC,KAAK,CAAC;IACzBzJ,OAAO,CAACC,GAAG,CAAC,YAAYsJ,SAAS,aAAaC,SAAS,EAAE,CAAC;IAC1D,OAAO,IAAI;EACb,CAAC,CAAC,OAAOnH,KAAK,EAAE;IACdrC,OAAO,CAACqC,KAAK,CAAC,oBAAoBkH,SAAS,SAAS,EAAElH,KAAK,CAACC,OAAO,CAAC;;IAEpE;IACA,MAAMlC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;IAClC,MAAMuJ,WAAW,GAAGtJ,OAAO,CAACuJ,MAAM,CAAC,CAAC;IACpCD,WAAW,CAACE,GAAG,CAAC,GAAG,EAAE,CAAC5I,GAAG,EAAEC,GAAG,KAAK;MACjCA,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACE,IAAI,CAAC;QACnByD,OAAO,EAAE,KAAK;QACdhD,KAAK,EAAE,GAAGkH,SAAS,kCAAkC;QACrDjH,OAAO,EAAE,+CAA+C;QACxDgD,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QACnCqE,cAAc,EAAE7I,GAAG,CAACoH;MACtB,CAAC,CAAC;IACJ,CAAC,CAAC;IACFvH,GAAG,CAACC,GAAG,CAAC0I,SAAS,EAAEE,WAAW,CAAC;IAC/B,OAAO,KAAK;EACd;AACF,CAAC;;AAED;AACA1J,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;AACnC,MAAM6J,MAAM,GAAG;AACb;AACA;EAAE1I,IAAI,EAAE,iBAAiB;EAAE2I,IAAI,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAmB,CAAC,EACtE;EAAE5I,IAAI,EAAE,oBAAoB;EAAE2I,IAAI,EAAE,oBAAoB;EAAEC,KAAK,EAAE;AAAc,CAAC,EAChF;EAAE5I,IAAI,EAAE,oCAAoC;EAAE2I,IAAI,EAAE,2BAA2B;EAAEC,KAAK,EAAE;AAAiC,CAAC,EAC1H;EAAE5I,IAAI,EAAE,sBAAsB;EAAE2I,IAAI,EAAE,aAAa;EAAEC,KAAK,EAAE;AAAmB,CAAC,EAChF;EAAE5I,IAAI,EAAE,oBAAoB;EAAE2I,IAAI,EAAE,WAAW;EAAEC,KAAK,EAAE;AAAiB,CAAC,EAC1E;EAAE5I,IAAI,EAAE,mBAAmB;EAAE2I,IAAI,EAAE,WAAW;EAAEC,KAAK,EAAE;AAAiB,CAAC,EACzE;EAAE5I,IAAI,EAAE,uBAAuB;EAAE2I,IAAI,EAAE,gBAAgB;EAAEC,KAAK,EAAE;AAAgB,CAAC,EACjF;EAAE5I,IAAI,EAAE,gBAAgB;EAAE2I,IAAI,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAa,CAAC,EAC9D;EAAE5I,IAAI,EAAE,uBAAuB;EAAE2I,IAAI,EAAE,cAAc;EAAEC,KAAK,EAAE;AAAoB,CAAC;AAEnF;AACA;EAAE5I,IAAI,EAAE,iBAAiB;EAAE2I,IAAI,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAc,CAAC,EACjE;EAAE5I,IAAI,EAAE,oBAAoB;EAAE2I,IAAI,EAAE,WAAW;EAAEC,KAAK,EAAE;AAAiB,CAAC,EAC1E;EAAE5I,IAAI,EAAE,gCAAgC;EAAE2I,IAAI,EAAE,wBAAwB;EAAEC,KAAK,EAAE;AAA8B,CAAC,EAChH;EAAE5I,IAAI,EAAE,iBAAiB;EAAE2I,IAAI,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAc,CAAC,EACjE;EAAE5I,IAAI,EAAE,sBAAsB;EAAE2I,IAAI,EAAE,aAAa;EAAEC,KAAK,EAAE;AAAmB,CAAC,EAChF;EAAE5I,IAAI,EAAE,eAAe;EAAE2I,IAAI,EAAE,iBAAiB;EAAEC,KAAK,EAAE;AAAY,CAAC,EACtE;EAAE5I,IAAI,EAAE,gBAAgB;EAAE2I,IAAI,EAAE,YAAY;EAAEC,KAAK,EAAE;AAAa,CAAC,EACnE;EAAE5I,IAAI,EAAE,qBAAqB;EAAE2I,IAAI,EAAE,gBAAgB;EAAEC,KAAK,EAAE;AAAkB,CAAC,EACjF;EAAE5I,IAAI,EAAE,mBAAmB;EAAE2I,IAAI,EAAE,eAAe;EAAEC,KAAK,EAAE;AAAgB,CAAC;AAE5E;AACA;EAAE5I,IAAI,EAAE,mBAAmB;EAAE2I,IAAI,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAgB,CAAC,EACvE;EAAE5I,IAAI,EAAE,eAAe;EAAE2I,IAAI,EAAE,gBAAgB;EAAEC,KAAK,EAAE;AAAY,CAAC,EACrE;EAAE5I,IAAI,EAAE,sBAAsB;EAAE2I,IAAI,EAAE,aAAa;EAAEC,KAAK,EAAE;AAAmB,CAAC,EAChF;EAAE5I,IAAI,EAAE,mBAAmB;EAAE2I,IAAI,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAgB,CAAC,EACvE;EAAE5I,IAAI,EAAE,qBAAqB;EAAE2I,IAAI,EAAE,YAAY;EAAEC,KAAK,EAAE;AAAkB,CAAC;AAE7E;AACA;EAAE5I,IAAI,EAAE,oBAAoB;EAAE2I,IAAI,EAAE,oBAAoB;EAAEC,KAAK,EAAE;AAAiB,CAAC,EACnF;EAAE5I,IAAI,EAAE,6BAA6B;EAAE2I,IAAI,EAAE,qBAAqB;EAAEC,KAAK,EAAE;AAAY,CAAC,EACxF;EAAE5I,IAAI,EAAE,oBAAoB;EAAE2I,IAAI,EAAE,WAAW;EAAEC,KAAK,EAAE;AAAiB,CAAC,EAC1E;EAAE5I,IAAI,EAAE,mBAAmB;EAAE2I,IAAI,EAAE,gBAAgB;EAAEC,KAAK,EAAE;AAAgB,CAAC,EAC7E;EAAE5I,IAAI,EAAE,oBAAoB;EAAE2I,IAAI,EAAE,WAAW;EAAEC,KAAK,EAAE;AAAiB,CAAC,EAC1E;EAAE5I,IAAI,EAAE,kBAAkB;EAAE2I,IAAI,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAe,CAAC,EACpE;EAAE5I,IAAI,EAAE,mBAAmB;EAAE2I,IAAI,EAAE,qBAAqB;EAAEC,KAAK,EAAE;AAAgB,CAAC,EAClF;EAAE5I,IAAI,EAAE,iBAAiB;EAAE2I,IAAI,EAAE,cAAc;EAAEC,KAAK,EAAE;AAAc,CAAC,EACvE;EAAE5I,IAAI,EAAE,kBAAkB;EAAE2I,IAAI,EAAE,gBAAgB;EAAEC,KAAK,EAAE;AAAe,CAAC,EAC3E;EAAE5I,IAAI,EAAE,mBAAmB;EAAE2I,IAAI,EAAE,iBAAiB;EAAEC,KAAK,EAAE;AAAgB,CAAC;AAE9E;AACA;EAAE5I,IAAI,EAAE,kBAAkB;EAAE2I,IAAI,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAe,CAAC,EACpE;EAAE5I,IAAI,EAAE,2BAA2B;EAAE2I,IAAI,EAAE,kBAAkB;EAAEC,KAAK,EAAE;AAAwB,CAAC,EAC/F;EAAE5I,IAAI,EAAE,6BAA6B;EAAE2I,IAAI,EAAE,oBAAoB;EAAEC,KAAK,EAAE;AAA0B,CAAC,EACrG;EAAE5I,IAAI,EAAE,iBAAiB;EAAE2I,IAAI,EAAE,eAAe;EAAEC,KAAK,EAAE;AAAc,CAAC,EACxE;EAAE5I,IAAI,EAAE,eAAe;EAAE2I,IAAI,EAAE,eAAe;EAAEC,KAAK,EAAE;AAAY,CAAC,EACpE;EAAE5I,IAAI,EAAE,0BAA0B;EAAE2I,IAAI,EAAE,iBAAiB;EAAEC,KAAK,EAAE;AAAuB,CAAC;AAE5F;AACA;EAAE5I,IAAI,EAAE,mBAAmB;EAAE2I,IAAI,EAAE,aAAa;EAAEC,KAAK,EAAE;AAAgB,CAAC,EAC1E;EAAE5I,IAAI,EAAE,uBAAuB;EAAE2I,IAAI,EAAE,iBAAiB;EAAEC,KAAK,EAAE;AAAoB,CAAC,EACtF;EAAE5I,IAAI,EAAE,sBAAsB;EAAE2I,IAAI,EAAE,uBAAuB;EAAEC,KAAK,EAAE;AAAmB,CAAC,EAC1F;EAAE5I,IAAI,EAAE,gCAAgC;EAAE2I,IAAI,EAAE,sBAAsB;EAAEC,KAAK,EAAE;AAA6B,CAAC;AAE7G;AACA;EAAE5I,IAAI,EAAE,iBAAiB;EAAE2I,IAAI,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAc,CAAC,EACjE;EAAE5I,IAAI,EAAE,eAAe;EAAE2I,IAAI,EAAE,MAAM;EAAEC,KAAK,EAAE;AAAY,CAAC,EAC3D;EAAE5I,IAAI,EAAE,oBAAoB;EAAE2I,IAAI,EAAE,WAAW;EAAEC,KAAK,EAAE;AAAiB,CAAC,EAC1E;EAAE5I,IAAI,EAAE,kBAAkB;EAAE2I,IAAI,EAAE,iBAAiB;EAAEC,KAAK,EAAE;AAAe,CAAC,EAC5E;EAAE5I,IAAI,EAAE,mBAAmB;EAAE2I,IAAI,EAAE,mBAAmB;EAAEC,KAAK,EAAE;AAAgB,CAAC,EAChF;EAAE5I,IAAI,EAAE,sBAAsB;EAAE2I,IAAI,EAAE,aAAa;EAAEC,KAAK,EAAE;AAAmB,CAAC,EAChF;EAAE5I,IAAI,EAAE,kBAAkB;EAAE2I,IAAI,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAe,CAAC,EACpE;EAAE5I,IAAI,EAAE,mBAAmB;EAAE2I,IAAI,EAAE,kBAAkB;EAAEC,KAAK,EAAE;AAAgB,CAAC;AAE/E;AACA;EAAE5I,IAAI,EAAE,iBAAiB;EAAE2I,IAAI,EAAE,gBAAgB;EAAEC,KAAK,EAAE;AAAc,CAAC,EACzE;EAAE5I,IAAI,EAAE,0BAA0B;EAAE2I,IAAI,EAAE,2BAA2B;EAAEC,KAAK,EAAE;AAAuB,CAAC,EACtG;EAAE5I,IAAI,EAAE,yBAAyB;EAAE2I,IAAI,EAAE,wBAAwB;EAAEC,KAAK,EAAE;AAAsB,CAAC,EACjG;EAAE5I,IAAI,EAAE,sBAAsB;EAAE2I,IAAI,EAAE,wBAAwB;EAAEC,KAAK,EAAE;AAAmB,CAAC,EAC3F;EAAE5I,IAAI,EAAE,2BAA2B;EAAE2I,IAAI,EAAE,yBAAyB;EAAEC,KAAK,EAAE;AAAwB,CAAC;AAEtG;AACA;EAAE5I,IAAI,EAAE,gCAAgC;EAAE2I,IAAI,EAAE,uBAAuB;EAAEC,KAAK,EAAE;AAA6B,CAAC,EAC9G;EAAE5I,IAAI,EAAE,0BAA0B;EAAE2I,IAAI,EAAE,iBAAiB;EAAEC,KAAK,EAAE;AAAuB,CAAC,CAC7F;AAED,IAAIC,YAAY,GAAG,CAAC;AACpB,IAAIC,YAAY,GAAG,CAAC;AAEpBJ,MAAM,CAACK,OAAO,CAACV,KAAK,IAAI;EACtB,IAAIJ,eAAe,CAACI,KAAK,CAACrI,IAAI,EAAEqI,KAAK,CAACM,IAAI,EAAEN,KAAK,CAACO,KAAK,CAAC,EAAE;IACxDC,YAAY,EAAE;EAChB,CAAC,MAAM;IACLC,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEFlK,OAAO,CAACC,GAAG,CAAC,qBAAqBgK,YAAY,IAAIH,MAAM,CAACf,MAAM,gBAAgBmB,YAAY,SAAS,CAAC;;AAEpG;AACArJ,GAAG,CAACuJ,GAAG,CAAC,SAAS,EAAE,OAAOpJ,GAAG,EAAEC,GAAG,KAAK;EACrC,MAAMyC,MAAM,GAAGM,SAAS,CAAC,CAAC;EAC1BN,MAAM,CAACS,IAAI,CAAC,0BAA0B,CAAC;EAEvClD,GAAG,CAACW,IAAI,CAAC;IACPyD,OAAO,EAAE,IAAI;IACb/C,OAAO,EAAE,4CAA4C;IACrDgD,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACnC6E,OAAO,EAAE,OAAO;IAChBC,WAAW,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,IAAI,YAAY;IACjD/I,MAAM,EAAE,aAAa;IACrBoI,MAAM,EAAE;MACNY,MAAM,EAAET,YAAY;MACpBU,MAAM,EAAET,YAAY;MACpBU,KAAK,EAAEd,MAAM,CAACf;IAChB,CAAC;IACDc,cAAc,EAAE7I,GAAG,CAACoH;EACtB,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFvH,GAAG,CAACuJ,GAAG,CAAC,aAAa,EAAE,OAAOpJ,GAAG,EAAEC,GAAG,KAAK;EACzC,MAAMyC,MAAM,GAAGM,SAAS,CAAC,CAAC;EAC1B,MAAM6G,SAAS,GAAGhG,kBAAkB,CAAC,CAAC;EAEtCnB,MAAM,CAACS,IAAI,CAAC,8BAA8B,CAAC;EAE3C,IAAI;IACF,MAAM2G,QAAQ,GAAG,MAAMD,SAAS,CAAC5F,WAAW,CAAC,CAAC;IAE9ChE,GAAG,CAACW,IAAI,CAAC;MACPyD,OAAO,EAAE,IAAI;MACb/C,OAAO,EAAE,yBAAyB;MAClCgD,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACnCuF,QAAQ,EAAED,QAAQ;MAClBE,gBAAgB,EAAE;QAChBP,QAAQ,EAAEF,OAAO,CAACC,GAAG,CAACC,QAAQ;QAC9BQ,UAAU,EAAEV,OAAO,CAACC,GAAG,CAACS,UAAU;QAClCC,aAAa,EAAE,CAAC,CAACX,OAAO,CAACC,GAAG,CAACU,aAAa,GAAG,KAAK,GAAG,SAAS;QAC9DC,6BAA6B,EAAE,CAAC,CAACZ,OAAO,CAACC,GAAG,CAACW,6BAA6B,GAAG,KAAK,GAAG;MACvF,CAAC;MACDtB,cAAc,EAAE7I,GAAG,CAACoH;IACtB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAO/F,KAAK,EAAE;IACdqB,MAAM,CAACrB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAE9CpB,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACE,IAAI,CAAC;MACnByD,OAAO,EAAE,KAAK;MACd/C,OAAO,EAAE,yBAAyB;MAClCD,KAAK,EAAEA,KAAK,CAACC,OAAO;MACpBgD,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACnCqE,cAAc,EAAE7I,GAAG,CAACoH;IACtB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;AACAvH,GAAG,CAACuJ,GAAG,CAAC,wBAAwB,EAAE,OAAOpJ,GAAG,EAAEC,GAAG,KAAK;EACpD,MAAMyC,MAAM,GAAGM,SAAS,CAAC,CAAC;EAC1B,MAAM6G,SAAS,GAAGhG,kBAAkB,CAAC,CAAC;EAEtCnB,MAAM,CAACS,IAAI,CAAC,gCAAgC,CAAC;EAE7C,IAAI;IACF,MAAMiH,MAAM,GAAGpK,GAAG,CAACqK,IAAI,EAAEC,EAAE,IAAI,WAAW;IAE1C,MAAMC,MAAM,GAAG,MAAMV,SAAS,CAAC/F,KAAK,CAClC,qHAAqH,EACrH,CAACsG,MAAM,CAAC,EACR;MAAEI,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAE,CAC/B,CAAC;IAEDxK,GAAG,CAACW,IAAI,CAAC;MACPyD,OAAO,EAAE,IAAI;MACbhB,IAAI,EAAEkH,MAAM,CAACxG,IAAI;MACjB2G,KAAK,EAAEH,MAAM,CAACxG,IAAI,CAACgE,MAAM;MACzBzD,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACnCqE,cAAc,EAAE7I,GAAG,CAACoH;IACtB,CAAC,CAAC;EAEJ,CAAC,CAAC,OAAO/F,KAAK,EAAE;IACdqB,MAAM,CAACrB,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IAEpDpB,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACE,IAAI,CAAC;MACnByD,OAAO,EAAE,KAAK;MACdhD,KAAK,EAAE,sBAAsB;MAC7BC,OAAO,EAAE,0CAA0C;MACnDgD,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACnCqE,cAAc,EAAE7I,GAAG,CAACoH;IACtB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEFvH,GAAG,CAAC8K,IAAI,CAAC,wBAAwB,EAAE,OAAO3K,GAAG,EAAEC,GAAG,KAAK;EACrD,MAAMyC,MAAM,GAAGM,SAAS,CAAC,CAAC;EAC1B,MAAM6G,SAAS,GAAGhG,kBAAkB,CAAC,CAAC;EAEtCnB,MAAM,CAACS,IAAI,CAAC,iCAAiC,CAAC;EAE9C,IAAI;IACF,MAAMiH,MAAM,GAAGpK,GAAG,CAACqK,IAAI,EAAEC,EAAE,IAAI,WAAW;IAC1C,MAAM;MAAEM,QAAQ;MAAEC,KAAK;MAAEC;IAAU,CAAC,GAAG9K,GAAG,CAAC+K,IAAI;IAE/C,IAAI,CAACH,QAAQ,IAAI,CAACC,KAAK,EAAE;MACvB,OAAO5K,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACE,IAAI,CAAC;QAC1ByD,OAAO,EAAE,KAAK;QACdhD,KAAK,EAAE,yBAAyB;QAChCC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;IAEA,MAAM0J,SAAS,GAAGH,KAAK,CAAC9C,MAAM,GAAG,CAAC,GAAG8C,KAAK,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,GAAGJ,KAAK,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK;IAExF,MAAMV,MAAM,GAAG,MAAMV,SAAS,CAAC/F,KAAK,CAClC;AACN;AACA;AACA;AACA,4EAA4E,EACtE,CAACsG,MAAM,EAAEQ,QAAQ,EAAEC,KAAK,EAAEG,SAAS,CAAC,EACpC;MAAER,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAE,CAC/B,CAAC;IAEDxK,GAAG,CAACW,IAAI,CAAC;MACPyD,OAAO,EAAE,IAAI;MACbhB,IAAI,EAAEkH,MAAM,CAACxG,IAAI,CAAC,CAAC,CAAC;MACpBzC,OAAO,EAAE,GAAGsJ,QAAQ,6BAA6B;MACjDtG,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACnCqE,cAAc,EAAE7I,GAAG,CAACoH;IACtB,CAAC,CAAC;EAEJ,CAAC,CAAC,OAAO/F,KAAK,EAAE;IACdqB,MAAM,CAACrB,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IAErDpB,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACE,IAAI,CAAC;MACnByD,OAAO,EAAE,KAAK;MACdhD,KAAK,EAAE,sBAAsB;MAC7BC,OAAO,EAAE,wBAAwB;MACjCgD,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACnCqE,cAAc,EAAE7I,GAAG,CAACoH;IACtB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEFvH,GAAG,CAACqL,MAAM,CAAC,kCAAkC,EAAE,OAAOlL,GAAG,EAAEC,GAAG,KAAK;EACjE,MAAMyC,MAAM,GAAGM,SAAS,CAAC,CAAC;EAC1B,MAAM6G,SAAS,GAAGhG,kBAAkB,CAAC,CAAC;EAEtCnB,MAAM,CAACS,IAAI,CAAC,mCAAmC,CAAC;EAEhD,IAAI;IACF,MAAMiH,MAAM,GAAGpK,GAAG,CAACqK,IAAI,EAAEC,EAAE,IAAI,WAAW;IAC1C,MAAM;MAAEM;IAAS,CAAC,GAAG5K,GAAG,CAACmL,MAAM;IAE/B,MAAMZ,MAAM,GAAG,MAAMV,SAAS,CAAC/F,KAAK,CAClC,6EAA6E,EAC7E,CAACsG,MAAM,EAAEQ,QAAQ,CAAC,EAClB;MAAEJ,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAE,CAC/B,CAAC;IAED,IAAIF,MAAM,CAACvG,QAAQ,KAAK,CAAC,EAAE;MACzB,OAAO/D,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACE,IAAI,CAAC;QAC1ByD,OAAO,EAAE,KAAK;QACd/C,OAAO,EAAE,eAAesJ,QAAQ;MAClC,CAAC,CAAC;IACJ;IAEA3K,GAAG,CAACW,IAAI,CAAC;MACPyD,OAAO,EAAE,IAAI;MACb/C,OAAO,EAAE,GAAGsJ,QAAQ,+BAA+B;MACnDtG,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACnCqE,cAAc,EAAE7I,GAAG,CAACoH;IACtB,CAAC,CAAC;EAEJ,CAAC,CAAC,OAAO/F,KAAK,EAAE;IACdqB,MAAM,CAACrB,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAEvDpB,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACE,IAAI,CAAC;MACnByD,OAAO,EAAE,KAAK;MACdhD,KAAK,EAAE,sBAAsB;MAC7BC,OAAO,EAAE,0BAA0B;MACnCgD,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACnCqE,cAAc,EAAE7I,GAAG,CAACoH;IACtB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;AACAvH,GAAG,CAACuJ,GAAG,CAAC,6BAA6B,EAAE,OAAOpJ,GAAG,EAAEC,GAAG,KAAK;EACzD,MAAMyC,MAAM,GAAGM,SAAS,CAAC,CAAC;EAC1B,MAAM6G,SAAS,GAAGhG,kBAAkB,CAAC,CAAC;EAEtCnB,MAAM,CAACS,IAAI,CAAC,qCAAqC,CAAC;EAElD,IAAI;IACF,MAAMiH,MAAM,GAAGpK,GAAG,CAACqK,IAAI,EAAEC,EAAE,IAAI,WAAW;IAE1C,MAAMC,MAAM,GAAG,MAAMV,SAAS,CAAC/F,KAAK,CAClC;AACN;AACA,6DAA6D,EACvD,CAACsG,MAAM,CAAC,EACR;MAAEI,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAE,CAC/B,CAAC;IAED,MAAMW,WAAW,GAAGb,MAAM,CAACxG,IAAI,CAAC,CAAC,CAAC,IAAI;MACpCsH,KAAK,EAAE,IAAI;MACXC,IAAI,EAAE,IAAI;MACVC,GAAG,EAAE,KAAK;MACVC,UAAU,EAAE,IAAIjH,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACrC,CAAC;IAEDvE,GAAG,CAACW,IAAI,CAAC;MACPyD,OAAO,EAAE,IAAI;MACbhB,IAAI,EAAE+H,WAAW;MACjB9G,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACnCqE,cAAc,EAAE7I,GAAG,CAACoH;IACtB,CAAC,CAAC;EAEJ,CAAC,CAAC,OAAO/F,KAAK,EAAE;IACdqB,MAAM,CAACrB,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;;IAEzD;IACApB,GAAG,CAACW,IAAI,CAAC;MACPyD,OAAO,EAAE,IAAI;MACbhB,IAAI,EAAE;QACJgI,KAAK,EAAE,IAAI;QACXC,IAAI,EAAE,IAAI;QACVC,GAAG,EAAE,KAAK;QACVC,UAAU,EAAE,IAAIjH,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACrC,CAAC;MACDiH,QAAQ,EAAE,IAAI;MACdnK,OAAO,EAAE,wCAAwC;MACjDuH,cAAc,EAAE7I,GAAG,CAACoH;IACtB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEFvH,GAAG,CAAC6L,GAAG,CAAC,6BAA6B,EAAE,OAAO1L,GAAG,EAAEC,GAAG,KAAK;EACzD,MAAMyC,MAAM,GAAGM,SAAS,CAAC,CAAC;EAC1B,MAAM6G,SAAS,GAAGhG,kBAAkB,CAAC,CAAC;EAEtCnB,MAAM,CAACS,IAAI,CAAC,qCAAqC,CAAC;EAElD,IAAI;IACF,MAAMiH,MAAM,GAAGpK,GAAG,CAACqK,IAAI,EAAEC,EAAE,IAAI,WAAW;IAC1C,MAAM;MAAEe,KAAK,GAAG,IAAI;MAAEC,IAAI,GAAG,IAAI;MAAEC,GAAG,GAAG;IAAM,CAAC,GAAGvL,GAAG,CAAC+K,IAAI;IAE3D,MAAMR,MAAM,GAAG,MAAMV,SAAS,CAAC/F,KAAK,CAClC;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG,EAC9F,CAACsG,MAAM,EAAEiB,KAAK,EAAEC,IAAI,EAAEC,GAAG,CAAC,EAC1B;MAAEf,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAE,CAC/B,CAAC;IAEDxK,GAAG,CAACW,IAAI,CAAC;MACPyD,OAAO,EAAE,IAAI;MACbhB,IAAI,EAAEkH,MAAM,CAACxG,IAAI,CAAC,CAAC,CAAC;MACpBzC,OAAO,EAAE,+CAA+C;MACxDgD,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACnCqE,cAAc,EAAE7I,GAAG,CAACoH;IACtB,CAAC,CAAC;EAEJ,CAAC,CAAC,OAAO/F,KAAK,EAAE;IACdqB,MAAM,CAACrB,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAEzDpB,GAAG,CAACW,IAAI,CAAC;MACPyD,OAAO,EAAE,IAAI;MACb/C,OAAO,EAAE,+CAA+C;MACxDmK,QAAQ,EAAE,IAAI;MACdE,IAAI,EAAE,2DAA2D;MACjE9C,cAAc,EAAE7I,GAAG,CAACoH;IACtB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEFvH,GAAG,CAACuJ,GAAG,CAAC,qBAAqB,EAAE,OAAOpJ,GAAG,EAAEC,GAAG,KAAK;EACjD,MAAMyC,MAAM,GAAGM,SAAS,CAAC,CAAC;EAC1B,MAAM6G,SAAS,GAAGhG,kBAAkB,CAAC,CAAC;EAEtCnB,MAAM,CAACS,IAAI,CAAC,6BAA6B,CAAC;EAE1C,IAAI;IACF,MAAMiH,MAAM,GAAGpK,GAAG,CAACqK,IAAI,EAAEC,EAAE,IAAI,WAAW;IAE1C,MAAMC,MAAM,GAAG,MAAMV,SAAS,CAAC/F,KAAK,CAClC;AACN,sDAAsD,EAChD,CAACsG,MAAM,CAAC,EACR;MAAEI,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAE,CAC/B,CAAC;IAED,MAAMW,WAAW,GAAGb,MAAM,CAACxG,IAAI,CAAC,CAAC,CAAC,IAAI;MACpC6H,SAAS,EAAE,KAAK;MAChBC,aAAa,EAAE,SAAS;MACxBL,UAAU,EAAE,IAAIjH,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACrC,CAAC;IAEDvE,GAAG,CAACW,IAAI,CAAC;MACPyD,OAAO,EAAE,IAAI;MACbhB,IAAI,EAAE+H,WAAW;MACjB9G,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACnCqE,cAAc,EAAE7I,GAAG,CAACoH;IACtB,CAAC,CAAC;EAEJ,CAAC,CAAC,OAAO/F,KAAK,EAAE;IACdqB,MAAM,CAACrB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;;IAEjD;IACApB,GAAG,CAACW,IAAI,CAAC;MACPyD,OAAO,EAAE,IAAI;MACbhB,IAAI,EAAE;QACJuI,SAAS,EAAE,KAAK;QAChBC,aAAa,EAAE,SAAS;QACxBL,UAAU,EAAE,IAAIjH,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACrC,CAAC;MACDiH,QAAQ,EAAE,IAAI;MACdnK,OAAO,EAAE,iCAAiC;MAC1CuH,cAAc,EAAE7I,GAAG,CAACoH;IACtB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEFvH,GAAG,CAAC6L,GAAG,CAAC,qBAAqB,EAAE,OAAO1L,GAAG,EAAEC,GAAG,KAAK;EACjD,MAAMyC,MAAM,GAAGM,SAAS,CAAC,CAAC;EAC1B,MAAM6G,SAAS,GAAGhG,kBAAkB,CAAC,CAAC;EAEtCnB,MAAM,CAACS,IAAI,CAAC,6BAA6B,CAAC;EAE1C,IAAI;IACF,MAAMiH,MAAM,GAAGpK,GAAG,CAACqK,IAAI,EAAEC,EAAE,IAAI,WAAW;IAC1C,MAAM;MAAEwB,QAAQ,GAAG,KAAK;MAAEC,YAAY,GAAG;IAAU,CAAC,GAAG/L,GAAG,CAAC+K,IAAI;IAE/D,MAAMR,MAAM,GAAG,MAAMV,SAAS,CAAC/F,KAAK,CAClC;AACN;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,EACpC,CAACsG,MAAM,EAAE0B,QAAQ,EAAEC,YAAY,CAAC,EAChC;MAAEvB,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAE,CAC/B,CAAC;IAEDxK,GAAG,CAACW,IAAI,CAAC;MACPyD,OAAO,EAAE,IAAI;MACbhB,IAAI,EAAEkH,MAAM,CAACxG,IAAI,CAAC,CAAC,CAAC;MACpBzC,OAAO,EAAE,wCAAwC;MACjDgD,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACnCqE,cAAc,EAAE7I,GAAG,CAACoH;IACtB,CAAC,CAAC;EAEJ,CAAC,CAAC,OAAO/F,KAAK,EAAE;IACdqB,MAAM,CAACrB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAEjDpB,GAAG,CAACW,IAAI,CAAC;MACPyD,OAAO,EAAE,IAAI;MACb/C,OAAO,EAAE,wCAAwC;MACjDmK,QAAQ,EAAE,IAAI;MACdE,IAAI,EAAE,2DAA2D;MACjE9C,cAAc,EAAE7I,GAAG,CAACoH;IACtB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;AACAvH,GAAG,CAACuJ,GAAG,CAAC,gBAAgB,EAAE,CAACpJ,GAAG,EAAEC,GAAG,KAAK;EACtC,MAAMyC,MAAM,GAAGM,SAAS,CAAC,CAAC;EAC1BN,MAAM,CAACS,IAAI,CAAC,iCAAiC,CAAC;EAE9ClD,GAAG,CAACW,IAAI,CAAC;IACPyD,OAAO,EAAE,IAAI;IACb/C,OAAO,EAAE,yCAAyC;IAClDgD,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACnCwH,aAAa,EAAE,aAAa;IAC5BC,aAAa,EAAE;MACbC,iBAAiB,EAAEjD,YAAY,KAAKH,MAAM,CAACf,MAAM;MACjDoE,YAAY,EAAErD,MAAM,CAACf,MAAM;MAC3BqE,aAAa,EAAEnD,YAAY;MAC3BoD,aAAa,EAAEnD,YAAY;MAC3BoD,YAAY,EAAE7I,IAAI,CAAC8I,KAAK,CAAEtD,YAAY,GAAGH,MAAM,CAACf,MAAM,GAAI,GAAG;IAC/D,CAAC;IACDyE,aAAa,EAAE;MACbC,mBAAmB,EAAE,CAAC,CAAClD,OAAO,CAACC,GAAG,CAACU,aAAa;MAChDwC,mBAAmB,EAAE,CAAC,CAACnD,OAAO,CAACC,GAAG,CAACW,6BAA6B;MAChEwC,UAAU,EAAEpD,OAAO,CAACC,GAAG,CAACS,UAAU,IAAIV,OAAO,CAACC,GAAG,CAACoD,iBAAiB,IAAI;IACzE,CAAC;IACDC,qBAAqB,EAAE,CACrB,CAACtD,OAAO,CAACC,GAAG,CAACU,aAAa,IAAI,eAAe,EAC7C,CAACX,OAAO,CAACC,GAAG,CAACsD,WAAW,IAAI,aAAa,EACzC,CAACvD,OAAO,CAACC,GAAG,CAACW,6BAA6B,IAAI,+BAA+B,CAC9E,CAAC4C,MAAM,CAACC,OAAO,CAAC;IACjBnE,cAAc,EAAE7I,GAAG,CAACoH;EACtB,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AACAvH,GAAG,CAACuJ,GAAG,CAAC,QAAQ,EAAE,CAACpJ,GAAG,EAAEC,GAAG,KAAK;EAC9B,MAAMyC,MAAM,GAAGM,SAAS,CAAC,CAAC;EAC1BN,MAAM,CAACS,IAAI,CAAC,yBAAyB,CAAC;EAEtClD,GAAG,CAACW,IAAI,CAAC;IACPyD,OAAO,EAAE,IAAI;IACb/C,OAAO,EAAE,uCAAuC;IAChDgD,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACnCyI,YAAY,EAAE;MACZ9M,MAAM,EAAEH,GAAG,CAACG,MAAM;MAClBC,IAAI,EAAEJ,GAAG,CAACI,IAAI;MACdC,OAAO,EAAEL,GAAG,CAACK,OAAO;MACpByD,KAAK,EAAE9D,GAAG,CAAC8D;IACb,CAAC;IACDoJ,WAAW,EAAE;MACXC,YAAY,EAAE5D,OAAO,CAACF,OAAO;MAC7B+D,MAAM,EAAE7D,OAAO,CAAC8D,WAAW,CAAC,CAAC;MAC7BC,MAAM,EAAE/D,OAAO,CAAC+D,MAAM,CAAC,CAAC;MACxBhE,WAAW,EAAEC,OAAO,CAACC,GAAG,CAACC;IAC3B,CAAC;IACDZ,cAAc,EAAE7I,GAAG,CAACoH;EACtB,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AACAvH,GAAG,CAACuJ,GAAG,CAAC,GAAG,EAAE,CAACpJ,GAAG,EAAEC,GAAG,KAAK;EACzBA,GAAG,CAACW,IAAI,CAAC;IACPyD,OAAO,EAAE,IAAI;IACb/C,OAAO,EAAE,yBAAyB;IAClC+H,OAAO,EAAE,OAAO;IAChB3I,MAAM,EAAE,aAAa;IACrB4D,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACnC+I,QAAQ,EAAE,CAAC,aAAa,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,CAAC;IAChE1E,cAAc,EAAE7I,GAAG,CAACoH;EACtB,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AACAvH,GAAG,CAACC,GAAG,CAAC,GAAG,EAAE,CAACE,GAAG,EAAEC,GAAG,KAAK;EACzB,MAAMyC,MAAM,GAAGM,SAAS,CAAC,CAAC;EAC1BN,MAAM,CAACY,IAAI,CAAC,0BAA0B,EAAE;IACtCnD,MAAM,EAAEH,GAAG,CAACG,MAAM;IAClBqN,GAAG,EAAExN,GAAG,CAACyN,WAAW;IACpBnN,MAAM,EAAEN,GAAG,CAACK,OAAO,CAACC;EACtB,CAAC,CAAC;EAEFL,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACE,IAAI,CAAC;IACnByD,OAAO,EAAE,KAAK;IACdhD,KAAK,EAAE,YAAYrB,GAAG,CAACyN,WAAW,YAAY;IAC9CnM,OAAO,EAAE,uBAAuB;IAChCnB,MAAM,EAAEH,GAAG,CAACG,MAAM;IAClBC,IAAI,EAAEJ,GAAG,CAACyN,WAAW;IACrBnJ,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACnCqE,cAAc,EAAE7I,GAAG,CAACoH;EACtB,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AACAvH,GAAG,CAACC,GAAG,CAAC,CAACuB,KAAK,EAAErB,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;EACjClB,OAAO,CAACqC,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;;EAE9B;EACA,MAAM6G,WAAW,GAAGtB,wBAAwB,CAAC,CAAC;EAC9C,IAAIsB,WAAW,IAAIA,WAAW,CAAClB,uBAAuB,EAAE;IACtDkB,WAAW,CAAClB,uBAAuB,CAAC,CAAC,CAAC3F,KAAK,EAAErB,GAAG,EAAEC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC;EAClE;;EAEA;EACA,MAAMK,MAAM,GAAGN,GAAG,CAACK,OAAO,CAACC,MAAM;EACjC,MAAMC,cAAc,GAAG,CACrB,uCAAuC,EACvC,uBAAuB,EACvB,uBAAuB,CACxB;EAED,IAAI,CAACD,MAAM,IAAIC,cAAc,CAACC,QAAQ,CAACF,MAAM,CAAC,EAAE;IAC9CL,GAAG,CAACQ,MAAM,CAAC,6BAA6B,EAAEH,MAAM,IAAI,uCAAuC,CAAC;EAC9F;EAEAL,GAAG,CAACQ,MAAM,CAAC,kCAAkC,EAAE,MAAM,CAAC;EACtDR,GAAG,CAACQ,MAAM,CAAC,8BAA8B,EAAE,8CAA8C,CAAC;EAC1FR,GAAG,CAACQ,MAAM,CAAC,8BAA8B,EAAE,oGAAoG,CAAC;EAEhJR,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACE,IAAI,CAAC;IACnByD,OAAO,EAAE,KAAK;IACdhD,KAAK,EAAE,uBAAuB;IAC9BC,OAAO,EAAE,yCAAyC;IAClDgD,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;EACpC,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AACA3E,GAAG,CAACC,GAAG,CAACT,kBAAkB,CAAC;;AAE3B;AACAQ,GAAG,CAACuJ,GAAG,CAAC,kBAAkB,EAAE9J,iBAAiB,CAAC,OAAOU,GAAG,EAAEC,GAAG,KAAK;EAChE,MAAMyN,KAAK,GAAG9N,yBAAyB,CAAC+N,aAAa,CAAC,CAAC;EACvD1N,GAAG,CAACW,IAAI,CAAC;IACPyD,OAAO,EAAE,IAAI;IACbhB,IAAI,EAAEqK,KAAK;IACXpJ,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;EACpC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;AAEHxF,OAAO,CAACC,GAAG,CAAC,0EAA0E,CAAC;;AAEvF;AACA2O,MAAM,CAACC,OAAO,CAACC,OAAO,GAAG5O,UAAU,CAACW,GAAG,CAAC","ignoreList":[]}