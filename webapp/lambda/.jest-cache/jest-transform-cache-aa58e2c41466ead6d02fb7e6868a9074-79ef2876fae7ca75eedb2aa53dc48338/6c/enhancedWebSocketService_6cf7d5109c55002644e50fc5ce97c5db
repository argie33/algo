7cd32ac4781c597e63415545f71a6ac3
/* istanbul ignore next */
function cov_1lugbwhenf() {
  var path = "/home/stocks/algo/webapp/lambda/utils/enhancedWebSocketService.js";
  var hash = "c6dd9bdd0524204c2ab5b43a510927b3e8da51ad";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/utils/enhancedWebSocketService.js",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 33
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "1": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 51
        }
      },
      "2": {
        start: {
          line: 8,
          column: 23
        },
        end: {
          line: 8,
          column: 50
        }
      },
      "3": {
        start: {
          line: 9,
          column: 22
        },
        end: {
          line: 9,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 27,
          column: 6
        }
      },
      "5": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 81
        }
      },
      "6": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 33
        }
      },
      "7": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 37
        }
      },
      "8": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 39
        }
      },
      "9": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 46,
          column: 6
        }
      },
      "10": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 59
        }
      },
      "11": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 80
        }
      },
      "12": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 32
        }
      },
      "13": {
        start: {
          line: 59,
          column: 25
        },
        end: {
          line: 59,
          column: 98
        }
      },
      "14": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 149,
          column: 5
        }
      },
      "15": {
        start: {
          line: 62,
          column: 6
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "16": {
        start: {
          line: 70,
          column: 6
        },
        end: {
          line: 72,
          column: 7
        }
      },
      "17": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 56
        }
      },
      "18": {
        start: {
          line: 75,
          column: 25
        },
        end: {
          line: 92,
          column: 7
        }
      },
      "19": {
        start: {
          line: 95,
          column: 6
        },
        end: {
          line: 95,
          column: 53
        }
      },
      "20": {
        start: {
          line: 97,
          column: 6
        },
        end: {
          line: 99,
          column: 7
        }
      },
      "21": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 52
        }
      },
      "22": {
        start: {
          line: 100,
          column: 6
        },
        end: {
          line: 100,
          column: 57
        }
      },
      "23": {
        start: {
          line: 103,
          column: 29
        },
        end: {
          line: 108,
          column: 7
        }
      },
      "24": {
        start: {
          line: 109,
          column: 6
        },
        end: {
          line: 109,
          column: 49
        }
      },
      "25": {
        start: {
          line: 112,
          column: 6
        },
        end: {
          line: 112,
          column: 63
        }
      },
      "26": {
        start: {
          line: 115,
          column: 6
        },
        end: {
          line: 115,
          column: 40
        }
      },
      "27": {
        start: {
          line: 118,
          column: 6
        },
        end: {
          line: 118,
          column: 38
        }
      },
      "28": {
        start: {
          line: 119,
          column: 6
        },
        end: {
          line: 119,
          column: 39
        }
      },
      "29": {
        start: {
          line: 120,
          column: 6
        },
        end: {
          line: 120,
          column: 40
        }
      },
      "30": {
        start: {
          line: 122,
          column: 6
        },
        end: {
          line: 122,
          column: 38
        }
      },
      "31": {
        start: {
          line: 124,
          column: 6
        },
        end: {
          line: 128,
          column: 9
        }
      },
      "32": {
        start: {
          line: 130,
          column: 6
        },
        end: {
          line: 136,
          column: 8
        }
      },
      "33": {
        start: {
          line: 139,
          column: 6
        },
        end: {
          line: 139,
          column: 32
        }
      },
      "34": {
        start: {
          line: 140,
          column: 6
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "35": {
        start: {
          line: 147,
          column: 6
        },
        end: {
          line: 147,
          column: 49
        }
      },
      "36": {
        start: {
          line: 148,
          column: 6
        },
        end: {
          line: 148,
          column: 18
        }
      },
      "37": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 201,
          column: 5
        }
      },
      "38": {
        start: {
          line: 158,
          column: 6
        },
        end: {
          line: 164,
          column: 7
        }
      },
      "39": {
        start: {
          line: 159,
          column: 35
        },
        end: {
          line: 159,
          column: 69
        }
      },
      "40": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 88
        }
      },
      "41": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 57
        }
      },
      "42": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 15
        }
      },
      "43": {
        start: {
          line: 167,
          column: 28
        },
        end: {
          line: 167,
          column: 54
        }
      },
      "44": {
        start: {
          line: 168,
          column: 26
        },
        end: {
          line: 168,
          column: 82
        }
      },
      "45": {
        start: {
          line: 170,
          column: 6
        },
        end: {
          line: 172,
          column: 7
        }
      },
      "46": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 69
        }
      },
      "47": {
        start: {
          line: 175,
          column: 28
        },
        end: {
          line: 179,
          column: 7
        }
      },
      "48": {
        start: {
          line: 182,
          column: 23
        },
        end: {
          line: 182,
          column: 57
        }
      },
      "49": {
        start: {
          line: 183,
          column: 23
        },
        end: {
          line: 183,
          column: 93
        }
      },
      "50": {
        start: {
          line: 186,
          column: 6
        },
        end: {
          line: 186,
          column: 51
        }
      },
      "51": {
        start: {
          line: 187,
          column: 6
        },
        end: {
          line: 187,
          column: 45
        }
      },
      "52": {
        start: {
          line: 189,
          column: 6
        },
        end: {
          line: 193,
          column: 9
        }
      },
      "53": {
        start: {
          line: 196,
          column: 6
        },
        end: {
          line: 199,
          column: 9
        }
      },
      "54": {
        start: {
          line: 200,
          column: 6
        },
        end: {
          line: 200,
          column: 18
        }
      },
      "55": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 251,
          column: 7
        }
      },
      "56": {
        start: {
          line: 209,
          column: 6
        },
        end: {
          line: 250,
          column: 7
        }
      },
      "57": {
        start: {
          line: 212,
          column: 23
        },
        end: {
          line: 241,
          column: 9
        }
      },
      "58": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 49
        }
      },
      "59": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 225,
          column: 69
        }
      },
      "60": {
        start: {
          line: 225,
          column: 41
        },
        end: {
          line: 225,
          column: 67
        }
      },
      "61": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 83
        }
      },
      "62": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 230,
          column: 75
        }
      },
      "63": {
        start: {
          line: 230,
          column: 44
        },
        end: {
          line: 230,
          column: 73
        }
      },
      "64": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 86
        }
      },
      "65": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 237,
          column: 13
        }
      },
      "66": {
        start: {
          line: 236,
          column: 14
        },
        end: {
          line: 236,
          column: 50
        }
      },
      "67": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 37
        }
      },
      "68": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 59
        }
      },
      "69": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 244,
          column: 45
        }
      },
      "70": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 246,
          column: 24
        }
      },
      "71": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 22
        }
      },
      "72": {
        start: {
          line: 260,
          column: 4
        },
        end: {
          line: 262,
          column: 7
        }
      },
      "73": {
        start: {
          line: 269,
          column: 16
        },
        end: {
          line: 269,
          column: 26
        }
      },
      "74": {
        start: {
          line: 271,
          column: 4
        },
        end: {
          line: 299,
          column: 7
        }
      },
      "75": {
        start: {
          line: 273,
          column: 24
        },
        end: {
          line: 280,
          column: 7
        }
      },
      "76": {
        start: {
          line: 281,
          column: 6
        },
        end: {
          line: 281,
          column: 60
        }
      },
      "77": {
        start: {
          line: 284,
          column: 6
        },
        end: {
          line: 284,
          column: 64
        }
      },
      "78": {
        start: {
          line: 287,
          column: 6
        },
        end: {
          line: 298,
          column: 7
        }
      },
      "79": {
        start: {
          line: 288,
          column: 26
        },
        end: {
          line: 295,
          column: 9
        }
      },
      "80": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 297,
          column: 66
        }
      },
      "81": {
        start: {
          line: 306,
          column: 4
        },
        end: {
          line: 325,
          column: 5
        }
      },
      "82": {
        start: {
          line: 307,
          column: 27
        },
        end: {
          line: 309,
          column: 7
        }
      },
      "83": {
        start: {
          line: 308,
          column: 18
        },
        end: {
          line: 308,
          column: 55
        }
      },
      "84": {
        start: {
          line: 311,
          column: 6
        },
        end: {
          line: 317,
          column: 7
        }
      },
      "85": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 312,
          column: 49
        }
      },
      "86": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 316,
          column: 11
        }
      },
      "87": {
        start: {
          line: 320,
          column: 6
        },
        end: {
          line: 323,
          column: 9
        }
      },
      "88": {
        start: {
          line: 324,
          column: 6
        },
        end: {
          line: 324,
          column: 18
        }
      },
      "89": {
        start: {
          line: 332,
          column: 23
        },
        end: {
          line: 332,
          column: 57
        }
      },
      "90": {
        start: {
          line: 333,
          column: 4
        },
        end: {
          line: 333,
          column: 28
        }
      },
      "91": {
        start: {
          line: 333,
          column: 21
        },
        end: {
          line: 333,
          column: 28
        }
      },
      "92": {
        start: {
          line: 335,
          column: 4
        },
        end: {
          line: 337,
          column: 39
        }
      },
      "93": {
        start: {
          line: 336,
          column: 6
        },
        end: {
          line: 336,
          column: 39
        }
      },
      "94": {
        start: {
          line: 344,
          column: 23
        },
        end: {
          line: 344,
          column: 57
        }
      },
      "95": {
        start: {
          line: 345,
          column: 4
        },
        end: {
          line: 345,
          column: 28
        }
      },
      "96": {
        start: {
          line: 345,
          column: 21
        },
        end: {
          line: 345,
          column: 28
        }
      },
      "97": {
        start: {
          line: 347,
          column: 26
        },
        end: {
          line: 352,
          column: 5
        }
      },
      "98": {
        start: {
          line: 355,
          column: 4
        },
        end: {
          line: 355,
          column: 58
        }
      },
      "99": {
        start: {
          line: 356,
          column: 4
        },
        end: {
          line: 356,
          column: 41
        }
      },
      "100": {
        start: {
          line: 363,
          column: 23
        },
        end: {
          line: 363,
          column: 57
        }
      },
      "101": {
        start: {
          line: 364,
          column: 4
        },
        end: {
          line: 364,
          column: 28
        }
      },
      "102": {
        start: {
          line: 364,
          column: 21
        },
        end: {
          line: 364,
          column: 28
        }
      },
      "103": {
        start: {
          line: 366,
          column: 4
        },
        end: {
          line: 399,
          column: 5
        }
      },
      "104": {
        start: {
          line: 367,
          column: 6
        },
        end: {
          line: 371,
          column: 9
        }
      },
      "105": {
        start: {
          line: 374,
          column: 6
        },
        end: {
          line: 376,
          column: 7
        }
      },
      "106": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 375,
          column: 49
        }
      },
      "107": {
        start: {
          line: 379,
          column: 6
        },
        end: {
          line: 381,
          column: 7
        }
      },
      "108": {
        start: {
          line: 380,
          column: 8
        },
        end: {
          line: 380,
          column: 72
        }
      },
      "109": {
        start: {
          line: 384,
          column: 6
        },
        end: {
          line: 384,
          column: 49
        }
      },
      "110": {
        start: {
          line: 387,
          column: 6
        },
        end: {
          line: 387,
          column: 39
        }
      },
      "111": {
        start: {
          line: 389,
          column: 6
        },
        end: {
          line: 392,
          column: 9
        }
      },
      "112": {
        start: {
          line: 395,
          column: 6
        },
        end: {
          line: 398,
          column: 9
        }
      },
      "113": {
        start: {
          line: 406,
          column: 23
        },
        end: {
          line: 406,
          column: 57
        }
      },
      "114": {
        start: {
          line: 407,
          column: 4
        },
        end: {
          line: 407,
          column: 28
        }
      },
      "115": {
        start: {
          line: 407,
          column: 21
        },
        end: {
          line: 407,
          column: 28
        }
      },
      "116": {
        start: {
          line: 410,
          column: 4
        },
        end: {
          line: 410,
          column: 42
        }
      },
      "117": {
        start: {
          line: 413,
          column: 30
        },
        end: {
          line: 413,
          column: 73
        }
      },
      "118": {
        start: {
          line: 414,
          column: 4
        },
        end: {
          line: 422,
          column: 5
        }
      },
      "119": {
        start: {
          line: 415,
          column: 6
        },
        end: {
          line: 415,
          column: 45
        }
      },
      "120": {
        start: {
          line: 418,
          column: 6
        },
        end: {
          line: 421,
          column: 7
        }
      },
      "121": {
        start: {
          line: 419,
          column: 8
        },
        end: {
          line: 419,
          column: 55
        }
      },
      "122": {
        start: {
          line: 420,
          column: 8
        },
        end: {
          line: 420,
          column: 62
        }
      },
      "123": {
        start: {
          line: 429,
          column: 29
        },
        end: {
          line: 429,
          column: 63
        }
      },
      "124": {
        start: {
          line: 430,
          column: 4
        },
        end: {
          line: 444,
          column: 5
        }
      },
      "125": {
        start: {
          line: 431,
          column: 6
        },
        end: {
          line: 443,
          column: 7
        }
      },
      "126": {
        start: {
          line: 432,
          column: 8
        },
        end: {
          line: 432,
          column: 33
        }
      },
      "127": {
        start: {
          line: 433,
          column: 8
        },
        end: {
          line: 433,
          column: 46
        }
      },
      "128": {
        start: {
          line: 435,
          column: 8
        },
        end: {
          line: 437,
          column: 11
        }
      },
      "129": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 442,
          column: 11
        }
      },
      "130": {
        start: {
          line: 451,
          column: 4
        },
        end: {
          line: 453,
          column: 14
        }
      },
      "131": {
        start: {
          line: 452,
          column: 6
        },
        end: {
          line: 452,
          column: 37
        }
      },
      "132": {
        start: {
          line: 460,
          column: 16
        },
        end: {
          line: 460,
          column: 26
        }
      },
      "133": {
        start: {
          line: 461,
          column: 29
        },
        end: {
          line: 461,
          column: 31
        }
      },
      "134": {
        start: {
          line: 463,
          column: 4
        },
        end: {
          line: 470,
          column: 5
        }
      },
      "135": {
        start: {
          line: 464,
          column: 27
        },
        end: {
          line: 464,
          column: 56
        }
      },
      "136": {
        start: {
          line: 467,
          column: 6
        },
        end: {
          line: 469,
          column: 7
        }
      },
      "137": {
        start: {
          line: 468,
          column: 8
        },
        end: {
          line: 468,
          column: 44
        }
      },
      "138": {
        start: {
          line: 472,
          column: 4
        },
        end: {
          line: 481,
          column: 5
        }
      },
      "139": {
        start: {
          line: 473,
          column: 6
        },
        end: {
          line: 476,
          column: 9
        }
      },
      "140": {
        start: {
          line: 478,
          column: 6
        },
        end: {
          line: 480,
          column: 9
        }
      },
      "141": {
        start: {
          line: 479,
          column: 8
        },
        end: {
          line: 479,
          column: 63
        }
      },
      "142": {
        start: {
          line: 488,
          column: 16
        },
        end: {
          line: 488,
          column: 26
        }
      },
      "143": {
        start: {
          line: 489,
          column: 26
        },
        end: {
          line: 489,
          column: 63
        }
      },
      "144": {
        start: {
          line: 491,
          column: 4
        },
        end: {
          line: 513,
          column: 6
        }
      },
      "145": {
        start: {
          line: 520,
          column: 18
        },
        end: {
          line: 520,
          column: 44
        }
      },
      "146": {
        start: {
          line: 521,
          column: 20
        },
        end: {
          line: 521,
          column: 53
        }
      },
      "147": {
        start: {
          line: 522,
          column: 17
        },
        end: {
          line: 522,
          column: 41
        }
      },
      "148": {
        start: {
          line: 524,
          column: 4
        },
        end: {
          line: 524,
          column: 44
        }
      },
      "149": {
        start: {
          line: 531,
          column: 4
        },
        end: {
          line: 531,
          column: 68
        }
      },
      "150": {
        start: {
          line: 534,
          column: 26
        },
        end: {
          line: 534,
          column: 61
        }
      },
      "151": {
        start: {
          line: 535,
          column: 4
        },
        end: {
          line: 537,
          column: 6
        }
      },
      "152": {
        start: {
          line: 536,
          column: 30
        },
        end: {
          line: 536,
          column: 74
        }
      },
      "153": {
        start: {
          line: 540,
          column: 4
        },
        end: {
          line: 540,
          column: 33
        }
      },
      "154": {
        start: {
          line: 543,
          column: 4
        },
        end: {
          line: 545,
          column: 5
        }
      },
      "155": {
        start: {
          line: 544,
          column: 6
        },
        end: {
          line: 544,
          column: 49
        }
      },
      "156": {
        start: {
          line: 547,
          column: 4
        },
        end: {
          line: 547,
          column: 72
        }
      },
      "157": {
        start: {
          line: 551,
          column: 0
        },
        end: {
          line: 551,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 2
          },
          end: {
            line: 12,
            column: 3
          }
        },
        loc: {
          start: {
            line: 12,
            column: 28
          },
          end: {
            line: 53,
            column: 3
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 58,
            column: 2
          },
          end: {
            line: 58,
            column: 3
          }
        },
        loc: {
          start: {
            line: 58,
            column: 56
          },
          end: {
            line: 150,
            column: 3
          }
        },
        line: 58
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 155,
            column: 2
          },
          end: {
            line: 155,
            column: 3
          }
        },
        loc: {
          start: {
            line: 155,
            column: 54
          },
          end: {
            line: 202,
            column: 3
          }
        },
        line: 155
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 207,
            column: 2
          },
          end: {
            line: 207,
            column: 3
          }
        },
        loc: {
          start: {
            line: 207,
            column: 57
          },
          end: {
            line: 252,
            column: 3
          }
        },
        line: 207
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 208,
            column: 23
          },
          end: {
            line: 208,
            column: 24
          }
        },
        loc: {
          start: {
            line: 208,
            column: 44
          },
          end: {
            line: 251,
            column: 5
          }
        },
        line: 208
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 219,
            column: 37
          },
          end: {
            line: 219,
            column: 38
          }
        },
        loc: {
          start: {
            line: 219,
            column: 43
          },
          end: {
            line: 221,
            column: 11
          }
        },
        line: 219
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 224,
            column: 21
          },
          end: {
            line: 224,
            column: 22
          }
        },
        loc: {
          start: {
            line: 224,
            column: 37
          },
          end: {
            line: 227,
            column: 11
          }
        },
        line: 224
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 225,
            column: 31
          },
          end: {
            line: 225,
            column: 32
          }
        },
        loc: {
          start: {
            line: 225,
            column: 41
          },
          end: {
            line: 225,
            column: 67
          }
        },
        line: 225
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 229,
            column: 23
          },
          end: {
            line: 229,
            column: 24
          }
        },
        loc: {
          start: {
            line: 229,
            column: 42
          },
          end: {
            line: 232,
            column: 11
          }
        },
        line: 229
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 230,
            column: 34
          },
          end: {
            line: 230,
            column: 35
          }
        },
        loc: {
          start: {
            line: 230,
            column: 44
          },
          end: {
            line: 230,
            column: 73
          }
        },
        line: 230
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 234,
            column: 17
          },
          end: {
            line: 234,
            column: 18
          }
        },
        loc: {
          start: {
            line: 234,
            column: 23
          },
          end: {
            line: 240,
            column: 11
          }
        },
        line: 234
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 257,
            column: 2
          },
          end: {
            line: 257,
            column: 3
          }
        },
        loc: {
          start: {
            line: 257,
            column: 36
          },
          end: {
            line: 263,
            column: 3
          }
        },
        line: 257
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 268,
            column: 2
          },
          end: {
            line: 268,
            column: 3
          }
        },
        loc: {
          start: {
            line: 268,
            column: 34
          },
          end: {
            line: 300,
            column: 3
          }
        },
        line: 268
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 271,
            column: 32
          },
          end: {
            line: 271,
            column: 33
          }
        },
        loc: {
          start: {
            line: 271,
            column: 42
          },
          end: {
            line: 299,
            column: 5
          }
        },
        line: 271
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 305,
            column: 2
          },
          end: {
            line: 305,
            column: 3
          }
        },
        loc: {
          start: {
            line: 305,
            column: 67
          },
          end: {
            line: 326,
            column: 3
          }
        },
        line: 305
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 308,
            column: 8
          },
          end: {
            line: 308,
            column: 9
          }
        },
        loc: {
          start: {
            line: 308,
            column: 18
          },
          end: {
            line: 308,
            column: 55
          }
        },
        line: 308
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 331,
            column: 2
          },
          end: {
            line: 331,
            column: 3
          }
        },
        loc: {
          start: {
            line: 331,
            column: 31
          },
          end: {
            line: 338,
            column: 3
          }
        },
        line: 331
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 335,
            column: 44
          },
          end: {
            line: 335,
            column: 45
          }
        },
        loc: {
          start: {
            line: 335,
            column: 50
          },
          end: {
            line: 337,
            column: 5
          }
        },
        line: 335
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 343,
            column: 2
          },
          end: {
            line: 343,
            column: 3
          }
        },
        loc: {
          start: {
            line: 343,
            column: 30
          },
          end: {
            line: 357,
            column: 3
          }
        },
        line: 343
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 362,
            column: 2
          },
          end: {
            line: 362,
            column: 3
          }
        },
        loc: {
          start: {
            line: 362,
            column: 65
          },
          end: {
            line: 400,
            column: 3
          }
        },
        line: 362
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 405,
            column: 2
          },
          end: {
            line: 405,
            column: 3
          }
        },
        loc: {
          start: {
            line: 405,
            column: 40
          },
          end: {
            line: 423,
            column: 3
          }
        },
        line: 405
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 428,
            column: 2
          },
          end: {
            line: 428,
            column: 3
          }
        },
        loc: {
          start: {
            line: 428,
            column: 40
          },
          end: {
            line: 445,
            column: 3
          }
        },
        line: 428
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 450,
            column: 2
          },
          end: {
            line: 450,
            column: 3
          }
        },
        loc: {
          start: {
            line: 450,
            column: 25
          },
          end: {
            line: 454,
            column: 3
          }
        },
        line: 450
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 451,
            column: 16
          },
          end: {
            line: 451,
            column: 17
          }
        },
        loc: {
          start: {
            line: 451,
            column: 22
          },
          end: {
            line: 453,
            column: 5
          }
        },
        line: 451
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 459,
            column: 2
          },
          end: {
            line: 459,
            column: 3
          }
        },
        loc: {
          start: {
            line: 459,
            column: 28
          },
          end: {
            line: 482,
            column: 3
          }
        },
        line: 459
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 478,
            column: 31
          },
          end: {
            line: 478,
            column: 32
          }
        },
        loc: {
          start: {
            line: 478,
            column: 47
          },
          end: {
            line: 480,
            column: 7
          }
        },
        line: 478
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 487,
            column: 2
          },
          end: {
            line: 487,
            column: 3
          }
        },
        loc: {
          start: {
            line: 487,
            column: 14
          },
          end: {
            line: 514,
            column: 3
          }
        },
        line: 487
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 519,
            column: 2
          },
          end: {
            line: 519,
            column: 3
          }
        },
        loc: {
          start: {
            line: 519,
            column: 24
          },
          end: {
            line: 525,
            column: 3
          }
        },
        line: 519
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 530,
            column: 2
          },
          end: {
            line: 530,
            column: 3
          }
        },
        loc: {
          start: {
            line: 530,
            column: 19
          },
          end: {
            line: 548,
            column: 3
          }
        },
        line: 530
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 536,
            column: 24
          },
          end: {
            line: 536,
            column: 25
          }
        },
        loc: {
          start: {
            line: 536,
            column: 30
          },
          end: {
            line: 536,
            column: 74
          }
        },
        line: 536
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 14
          },
          end: {
            line: 12,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 12,
            column: 24
          },
          end: {
            line: 12,
            column: 26
          }
        }],
        line: 12
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 22
          },
          end: {
            line: 14,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 22
          },
          end: {
            line: 14,
            column: 44
          }
        }, {
          start: {
            line: 14,
            column: 48
          },
          end: {
            line: 14,
            column: 52
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 15,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 15,
            column: 50
          }
        }, {
          start: {
            line: 15,
            column: 54
          },
          end: {
            line: 15,
            column: 59
          }
        }],
        line: 15
      },
      "3": {
        loc: {
          start: {
            line: 16,
            column: 25
          },
          end: {
            line: 16,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 25
          },
          end: {
            line: 16,
            column: 50
          }
        }, {
          start: {
            line: 16,
            column: 54
          },
          end: {
            line: 16,
            column: 59
          }
        }],
        line: 16
      },
      "4": {
        loc: {
          start: {
            line: 17,
            column: 25
          },
          end: {
            line: 17,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 25
          },
          end: {
            line: 17,
            column: 50
          }
        }, {
          start: {
            line: 17,
            column: 54
          },
          end: {
            line: 17,
            column: 55
          }
        }],
        line: 17
      },
      "5": {
        loc: {
          start: {
            line: 18,
            column: 22
          },
          end: {
            line: 18,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 22
          },
          end: {
            line: 18,
            column: 44
          }
        }, {
          start: {
            line: 18,
            column: 48
          },
          end: {
            line: 18,
            column: 52
          }
        }],
        line: 18
      },
      "6": {
        loc: {
          start: {
            line: 58,
            column: 42
          },
          end: {
            line: 58,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 58,
            column: 52
          },
          end: {
            line: 58,
            column: 54
          }
        }],
        line: 58
      },
      "7": {
        loc: {
          start: {
            line: 70,
            column: 6
          },
          end: {
            line: 72,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 6
          },
          end: {
            line: 72,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "8": {
        loc: {
          start: {
            line: 97,
            column: 6
          },
          end: {
            line: 99,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 6
          },
          end: {
            line: 99,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "9": {
        loc: {
          start: {
            line: 158,
            column: 6
          },
          end: {
            line: 164,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 6
          },
          end: {
            line: 164,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "10": {
        loc: {
          start: {
            line: 170,
            column: 6
          },
          end: {
            line: 172,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 6
          },
          end: {
            line: 172,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "11": {
        loc: {
          start: {
            line: 191,
            column: 21
          },
          end: {
            line: 191,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 191,
            column: 45
          },
          end: {
            line: 191,
            column: 54
          }
        }, {
          start: {
            line: 191,
            column: 57
          },
          end: {
            line: 191,
            column: 63
          }
        }],
        line: 191
      },
      "12": {
        loc: {
          start: {
            line: 235,
            column: 12
          },
          end: {
            line: 237,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 12
          },
          end: {
            line: 237,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "13": {
        loc: {
          start: {
            line: 287,
            column: 6
          },
          end: {
            line: 298,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 6
          },
          end: {
            line: 298,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 287
      },
      "14": {
        loc: {
          start: {
            line: 311,
            column: 6
          },
          end: {
            line: 317,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 6
          },
          end: {
            line: 317,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 311
      },
      "15": {
        loc: {
          start: {
            line: 333,
            column: 4
          },
          end: {
            line: 333,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 333,
            column: 4
          },
          end: {
            line: 333,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 333
      },
      "16": {
        loc: {
          start: {
            line: 345,
            column: 4
          },
          end: {
            line: 345,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 345,
            column: 4
          },
          end: {
            line: 345,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 345
      },
      "17": {
        loc: {
          start: {
            line: 362,
            column: 38
          },
          end: {
            line: 362,
            column: 63
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 362,
            column: 47
          },
          end: {
            line: 362,
            column: 63
          }
        }],
        line: 362
      },
      "18": {
        loc: {
          start: {
            line: 364,
            column: 4
          },
          end: {
            line: 364,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 364,
            column: 4
          },
          end: {
            line: 364,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 364
      },
      "19": {
        loc: {
          start: {
            line: 374,
            column: 6
          },
          end: {
            line: 376,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 374,
            column: 6
          },
          end: {
            line: 376,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 374
      },
      "20": {
        loc: {
          start: {
            line: 379,
            column: 6
          },
          end: {
            line: 381,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 379,
            column: 6
          },
          end: {
            line: 381,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 379
      },
      "21": {
        loc: {
          start: {
            line: 407,
            column: 4
          },
          end: {
            line: 407,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 407,
            column: 4
          },
          end: {
            line: 407,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 407
      },
      "22": {
        loc: {
          start: {
            line: 414,
            column: 4
          },
          end: {
            line: 422,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 414,
            column: 4
          },
          end: {
            line: 422,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 414
      },
      "23": {
        loc: {
          start: {
            line: 418,
            column: 6
          },
          end: {
            line: 421,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 418,
            column: 6
          },
          end: {
            line: 421,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 418
      },
      "24": {
        loc: {
          start: {
            line: 430,
            column: 4
          },
          end: {
            line: 444,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 430,
            column: 4
          },
          end: {
            line: 444,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 430
      },
      "25": {
        loc: {
          start: {
            line: 467,
            column: 6
          },
          end: {
            line: 469,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 467,
            column: 6
          },
          end: {
            line: 469,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 467
      },
      "26": {
        loc: {
          start: {
            line: 472,
            column: 4
          },
          end: {
            line: 481,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 472,
            column: 4
          },
          end: {
            line: 481,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 472
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c6dd9bdd0524204c2ab5b43a510927b3e8da51ad"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1lugbwhenf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1lugbwhenf();
/**
 * Enhanced WebSocket Service
 * Provides high-performance real-time market data streaming with the optimized pipeline
 */

const {
  RealtimeDataPipeline
} =
/* istanbul ignore next */
(cov_1lugbwhenf().s[0]++, require('./realtimeDataPipeline'));
const {
  createRequestLogger
} =
/* istanbul ignore next */
(cov_1lugbwhenf().s[1]++, require('./logger'));
const {
  getTimeout
} =
/* istanbul ignore next */
(cov_1lugbwhenf().s[2]++, require('./timeoutManager'));
const AlpacaService =
/* istanbul ignore next */
(cov_1lugbwhenf().s[3]++, require('./alpacaService'));
class EnhancedWebSocketService {
  constructor(options =
  /* istanbul ignore next */
  (cov_1lugbwhenf().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_1lugbwhenf().f[0]++;
    cov_1lugbwhenf().s[4]++;
    this.options = {
      maxConnections:
      /* istanbul ignore next */
      (cov_1lugbwhenf().b[1][0]++, options.maxConnections) ||
      /* istanbul ignore next */
      (cov_1lugbwhenf().b[1][1]++, 1000),
      connectionTimeout:
      /* istanbul ignore next */
      (cov_1lugbwhenf().b[2][0]++, options.connectionTimeout) ||
      /* istanbul ignore next */
      (cov_1lugbwhenf().b[2][1]++, 30000),
      heartbeatInterval:
      /* istanbul ignore next */
      (cov_1lugbwhenf().b[3][0]++, options.heartbeatInterval) ||
      /* istanbul ignore next */
      (cov_1lugbwhenf().b[3][1]++, 30000),
      reconnectAttempts:
      /* istanbul ignore next */
      (cov_1lugbwhenf().b[4][0]++, options.reconnectAttempts) ||
      /* istanbul ignore next */
      (cov_1lugbwhenf().b[4][1]++, 5),
      reconnectDelay:
      /* istanbul ignore next */
      (cov_1lugbwhenf().b[5][0]++, options.reconnectDelay) ||
      /* istanbul ignore next */
      (cov_1lugbwhenf().b[5][1]++, 1000),
      dataSourceOptions: {
        bufferSize: 2000,
        flushInterval: 500,
        // More aggressive flushing for real-time
        batchSize: 200,
        compressionEnabled: true,
        performanceMonitoring: true
      },
      ...options
    };

    // Initialize the real-time data pipeline
    /* istanbul ignore next */
    cov_1lugbwhenf().s[5]++;
    this.dataPipeline = new RealtimeDataPipeline(this.options.dataSourceOptions);

    // Connection management
    /* istanbul ignore next */
    cov_1lugbwhenf().s[6]++;
    this.connections = new Map(); // connectionId -> connection details
    /* istanbul ignore next */
    cov_1lugbwhenf().s[7]++;
    this.userConnections = new Map(); // userId -> Set of connectionIds
    /* istanbul ignore next */
    cov_1lugbwhenf().s[8]++;
    this.alpacaConnections = new Map(); // userId -> AlpacaWebSocket instance

    // Service metrics
    /* istanbul ignore next */
    cov_1lugbwhenf().s[9]++;
    this.metrics = {
      totalConnections: 0,
      activeConnections: 0,
      totalSubscriptions: 0,
      dataMessages: 0,
      errorCount: 0,
      reconnectCount: 0,
      startTime: Date.now()
    };
    /* istanbul ignore next */
    cov_1lugbwhenf().s[10]++;
    this.logger = createRequestLogger('websocket-service');
    /* istanbul ignore next */
    cov_1lugbwhenf().s[11]++;
    this.logger.info('🚀 Enhanced WebSocket Service initialized', this.options);

    // Start periodic cleanup
    /* istanbul ignore next */
    cov_1lugbwhenf().s[12]++;
    this.startPeriodicCleanup();
  }

  /**
   * Create a new connection for a user
   */
  async createConnection(userId, symbols, options =
  /* istanbul ignore next */
  (cov_1lugbwhenf().b[6][0]++, {})) {
    /* istanbul ignore next */
    cov_1lugbwhenf().f[1]++;
    const connectionId =
    /* istanbul ignore next */
    (cov_1lugbwhenf().s[13]++, `conn_${userId}_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);
    /* istanbul ignore next */
    cov_1lugbwhenf().s[14]++;
    try {
      /* istanbul ignore next */
      cov_1lugbwhenf().s[15]++;
      this.logger.info('📡 Creating new connection', {
        connectionId,
        userId: `${userId.substring(0, 8)}...`,
        symbols,
        options
      });

      // Validate connection limits
      /* istanbul ignore next */
      cov_1lugbwhenf().s[16]++;
      if (this.connections.size >= this.options.maxConnections) {
        /* istanbul ignore next */
        cov_1lugbwhenf().b[7][0]++;
        cov_1lugbwhenf().s[17]++;
        throw new Error('Maximum connections exceeded');
      } else
      /* istanbul ignore next */
      {
        cov_1lugbwhenf().b[7][1]++;
      }

      // Create connection record
      const connection =
      /* istanbul ignore next */
      (cov_1lugbwhenf().s[18]++, {
        id: connectionId,
        userId,
        symbols: new Set(symbols),
        options: {
          dataTypes: ['quotes', 'trades', 'bars'],
          compression: true,
          throttle: 100,
          ...options
        },
        status: 'connecting',
        createdAt: Date.now(),
        lastActivity: Date.now(),
        subscriptionId: null,
        alpacaConnection: null,
        heartbeatTimer: null,
        reconnectAttempts: 0
      });

      // Add to connection maps
      /* istanbul ignore next */
      cov_1lugbwhenf().s[19]++;
      this.connections.set(connectionId, connection);
      /* istanbul ignore next */
      cov_1lugbwhenf().s[20]++;
      if (!this.userConnections.has(userId)) {
        /* istanbul ignore next */
        cov_1lugbwhenf().b[8][0]++;
        cov_1lugbwhenf().s[21]++;
        this.userConnections.set(userId, new Set());
      } else
      /* istanbul ignore next */
      {
        cov_1lugbwhenf().b[8][1]++;
      }
      cov_1lugbwhenf().s[22]++;
      this.userConnections.get(userId).add(connectionId);

      // Create subscription in data pipeline
      const subscriptionId =
      /* istanbul ignore next */
      (cov_1lugbwhenf().s[23]++, this.dataPipeline.addSubscription(userId, symbols, connection.options.dataTypes, connection.options));
      /* istanbul ignore next */
      cov_1lugbwhenf().s[24]++;
      connection.subscriptionId = subscriptionId;

      // Establish Alpaca connection if needed
      /* istanbul ignore next */
      cov_1lugbwhenf().s[25]++;
      await this.establishAlpacaConnection(userId, connection);

      // Start heartbeat
      /* istanbul ignore next */
      cov_1lugbwhenf().s[26]++;
      this.startHeartbeat(connectionId);

      // Update metrics
      /* istanbul ignore next */
      cov_1lugbwhenf().s[27]++;
      this.metrics.totalConnections++;
      /* istanbul ignore next */
      cov_1lugbwhenf().s[28]++;
      this.metrics.activeConnections++;
      /* istanbul ignore next */
      cov_1lugbwhenf().s[29]++;
      this.metrics.totalSubscriptions++;
      /* istanbul ignore next */
      cov_1lugbwhenf().s[30]++;
      connection.status = 'connected';
      /* istanbul ignore next */
      cov_1lugbwhenf().s[31]++;
      this.logger.info('✅ Connection established successfully', {
        connectionId,
        subscriptionId,
        activeConnections: this.metrics.activeConnections
      });
      /* istanbul ignore next */
      cov_1lugbwhenf().s[32]++;
      return {
        connectionId,
        subscriptionId,
        status: 'connected',
        symbols: Array.from(symbols),
        dataTypes: connection.options.dataTypes
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1lugbwhenf().s[33]++;
      this.metrics.errorCount++;
      /* istanbul ignore next */
      cov_1lugbwhenf().s[34]++;
      this.logger.error('❌ Failed to create connection', {
        connectionId,
        userId: `${userId.substring(0, 8)}...`,
        error: error.message
      });

      // Cleanup partial connection
      /* istanbul ignore next */
      cov_1lugbwhenf().s[35]++;
      await this.cleanupConnection(connectionId);
      /* istanbul ignore next */
      cov_1lugbwhenf().s[36]++;
      throw error;
    }
  }

  /**
   * Establish Alpaca WebSocket connection for user
   */
  async establishAlpacaConnection(userId, connection) {
    /* istanbul ignore next */
    cov_1lugbwhenf().f[2]++;
    cov_1lugbwhenf().s[37]++;
    try {
      /* istanbul ignore next */
      cov_1lugbwhenf().s[38]++;
      // Check if user already has an Alpaca connection
      if (this.alpacaConnections.has(userId)) {
        /* istanbul ignore next */
        cov_1lugbwhenf().b[9][0]++;
        const existingConnection =
        /* istanbul ignore next */
        (cov_1lugbwhenf().s[39]++, this.alpacaConnections.get(userId));
        // Reuse existing connection and add symbols
        /* istanbul ignore next */
        cov_1lugbwhenf().s[40]++;
        await this.addSymbolsToAlpacaConnection(existingConnection, connection.symbols);
        /* istanbul ignore next */
        cov_1lugbwhenf().s[41]++;
        connection.alpacaConnection = existingConnection;
        /* istanbul ignore next */
        cov_1lugbwhenf().s[42]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1lugbwhenf().b[9][1]++;
      }

      // Get user's Alpaca credentials
      const apiKeyService =
      /* istanbul ignore next */
      (cov_1lugbwhenf().s[43]++, require('./apiKeyService'));
      const credentials =
      /* istanbul ignore next */
      (cov_1lugbwhenf().s[44]++, await apiKeyService.getDecryptedApiKey(userId, 'alpaca'));
      /* istanbul ignore next */
      cov_1lugbwhenf().s[45]++;
      if (!credentials) {
        /* istanbul ignore next */
        cov_1lugbwhenf().b[10][0]++;
        cov_1lugbwhenf().s[46]++;
        throw new Error('Alpaca API credentials not found for user');
      } else
      /* istanbul ignore next */
      {
        cov_1lugbwhenf().b[10][1]++;
      }

      // Create new Alpaca service instance
      const alpacaService =
      /* istanbul ignore next */
      (cov_1lugbwhenf().s[47]++, new AlpacaService(credentials.apiKey, credentials.apiSecret, credentials.isSandbox));

      // Create WebSocket connection
      const wsConfig =
      /* istanbul ignore next */
      (cov_1lugbwhenf().s[48]++, alpacaService.getWebSocketConfig());
      const alpacaWS =
      /* istanbul ignore next */
      (cov_1lugbwhenf().s[49]++, await this.createAlpacaWebSocket(wsConfig, userId, connection.symbols));

      // Store connection
      /* istanbul ignore next */
      cov_1lugbwhenf().s[50]++;
      this.alpacaConnections.set(userId, alpacaWS);
      /* istanbul ignore next */
      cov_1lugbwhenf().s[51]++;
      connection.alpacaConnection = alpacaWS;
      /* istanbul ignore next */
      cov_1lugbwhenf().s[52]++;
      this.logger.info('✅ Alpaca WebSocket connection established', {
        userId: `${userId.substring(0, 8)}...`,
        environment: credentials.isSandbox ?
        /* istanbul ignore next */
        (cov_1lugbwhenf().b[11][0]++, 'sandbox') :
        /* istanbul ignore next */
        (cov_1lugbwhenf().b[11][1]++, 'live'),
        symbols: Array.from(connection.symbols)
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1lugbwhenf().s[53]++;
      this.logger.error('❌ Failed to establish Alpaca connection', {
        userId: `${userId.substring(0, 8)}...`,
        error: error.message
      });
      /* istanbul ignore next */
      cov_1lugbwhenf().s[54]++;
      throw error;
    }
  }

  /**
   * Create Alpaca WebSocket connection with enhanced error handling
   */
  async createAlpacaWebSocket(wsConfig, userId, symbols) {
    /* istanbul ignore next */
    cov_1lugbwhenf().f[3]++;
    cov_1lugbwhenf().s[55]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_1lugbwhenf().f[4]++;
      cov_1lugbwhenf().s[56]++;
      try {
        // This would be your actual Alpaca WebSocket implementation
        // For now, we'll create a mock connection that generates test data
        const mockWS =
        /* istanbul ignore next */
        (cov_1lugbwhenf().s[57]++, {
          userId,
          symbols: new Set(symbols),
          status: 'connected',
          lastMessage: Date.now(),
          // Mock data generation
          dataGenerator: setInterval(() => {
            /* istanbul ignore next */
            cov_1lugbwhenf().f[5]++;
            cov_1lugbwhenf().s[58]++;
            this.generateMockMarketData(symbols);
          }, 1000),
          // Generate data every second

          // Mock methods
          subscribe: newSymbols => {
            /* istanbul ignore next */
            cov_1lugbwhenf().f[6]++;
            cov_1lugbwhenf().s[59]++;
            newSymbols.forEach(symbol => {
              /* istanbul ignore next */
              cov_1lugbwhenf().f[7]++;
              cov_1lugbwhenf().s[60]++;
              return mockWS.symbols.add(symbol);
            });
            /* istanbul ignore next */
            cov_1lugbwhenf().s[61]++;
            this.logger.debug('Mock WS subscribed to new symbols', {
              newSymbols
            });
          },
          unsubscribe: removeSymbols => {
            /* istanbul ignore next */
            cov_1lugbwhenf().f[8]++;
            cov_1lugbwhenf().s[62]++;
            removeSymbols.forEach(symbol => {
              /* istanbul ignore next */
              cov_1lugbwhenf().f[9]++;
              cov_1lugbwhenf().s[63]++;
              return mockWS.symbols.delete(symbol);
            });
            /* istanbul ignore next */
            cov_1lugbwhenf().s[64]++;
            this.logger.debug('Mock WS unsubscribed from symbols', {
              removeSymbols
            });
          },
          close: () => {
            /* istanbul ignore next */
            cov_1lugbwhenf().f[10]++;
            cov_1lugbwhenf().s[65]++;
            if (mockWS.dataGenerator) {
              /* istanbul ignore next */
              cov_1lugbwhenf().b[12][0]++;
              cov_1lugbwhenf().s[66]++;
              clearInterval(mockWS.dataGenerator);
            } else
            /* istanbul ignore next */
            {
              cov_1lugbwhenf().b[12][1]++;
            }
            cov_1lugbwhenf().s[67]++;
            mockWS.status = 'closed';
            /* istanbul ignore next */
            cov_1lugbwhenf().s[68]++;
            this.logger.debug('Mock WS connection closed');
          }
        });

        // Set up data handlers
        /* istanbul ignore next */
        cov_1lugbwhenf().s[69]++;
        this.setupAlpacaDataHandlers(mockWS);
        /* istanbul ignore next */
        cov_1lugbwhenf().s[70]++;
        resolve(mockWS);
      } catch (error) {
        /* istanbul ignore next */
        cov_1lugbwhenf().s[71]++;
        reject(error);
      }
    });
  }

  /**
   * Setup data handlers for Alpaca WebSocket
   */
  setupAlpacaDataHandlers(alpacaWS) {
    /* istanbul ignore next */
    cov_1lugbwhenf().f[11]++;
    cov_1lugbwhenf().s[72]++;
    // In a real implementation, you'd set up event handlers for the actual WebSocket
    // For now, we'll just log that handlers are set up
    this.logger.debug('Alpaca WebSocket data handlers configured', {
      userId: `${alpacaWS.userId.substring(0, 8)}...`
    });
  }

  /**
   * Generate mock market data for testing
   */
  generateMockMarketData(symbols) {
    /* istanbul ignore next */
    cov_1lugbwhenf().f[12]++;
    const now =
    /* istanbul ignore next */
    (cov_1lugbwhenf().s[73]++, Date.now());
    /* istanbul ignore next */
    cov_1lugbwhenf().s[74]++;
    Array.from(symbols).forEach(symbol => {
      /* istanbul ignore next */
      cov_1lugbwhenf().f[13]++;
      // Generate mock quote data
      const mockQuote =
      /* istanbul ignore next */
      (cov_1lugbwhenf().s[75]++, {
        symbol,
        bid: 100 + Math.random() * 50,
        ask: 100 + Math.random() * 50 + 0.01,
        bidSize: Math.floor(Math.random() * 1000) + 100,
        askSize: Math.floor(Math.random() * 1000) + 100,
        timestamp: now
      });
      /* istanbul ignore next */
      cov_1lugbwhenf().s[76]++;
      mockQuote.price = (mockQuote.bid + mockQuote.ask) / 2;

      // Send to data pipeline
      /* istanbul ignore next */
      cov_1lugbwhenf().s[77]++;
      this.dataPipeline.processIncomingData('quote', mockQuote);

      // Occasionally generate trade data
      /* istanbul ignore next */
      cov_1lugbwhenf().s[78]++;
      if (Math.random() < 0.3) {
        /* istanbul ignore next */
        cov_1lugbwhenf().b[13][0]++;
        const mockTrade =
        /* istanbul ignore next */
        (cov_1lugbwhenf().s[79]++, {
          symbol,
          price: mockQuote.price + (Math.random() - 0.5) * 0.1,
          size: Math.floor(Math.random() * 500) + 100,
          timestamp: now,
          conditions: ['@'],
          exchange: 'NASDAQ'
        });
        /* istanbul ignore next */
        cov_1lugbwhenf().s[80]++;
        this.dataPipeline.processIncomingData('trade', mockTrade);
      } else
      /* istanbul ignore next */
      {
        cov_1lugbwhenf().b[13][1]++;
      }
    });
  }

  /**
   * Add symbols to existing Alpaca connection
   */
  async addSymbolsToAlpacaConnection(alpacaConnection, newSymbols) {
    /* istanbul ignore next */
    cov_1lugbwhenf().f[14]++;
    cov_1lugbwhenf().s[81]++;
    try {
      const symbolsToAdd =
      /* istanbul ignore next */
      (cov_1lugbwhenf().s[82]++, Array.from(newSymbols).filter(symbol => {
        /* istanbul ignore next */
        cov_1lugbwhenf().f[15]++;
        cov_1lugbwhenf().s[83]++;
        return !alpacaConnection.symbols.has(symbol);
      }));
      /* istanbul ignore next */
      cov_1lugbwhenf().s[84]++;
      if (symbolsToAdd.length > 0) {
        /* istanbul ignore next */
        cov_1lugbwhenf().b[14][0]++;
        cov_1lugbwhenf().s[85]++;
        alpacaConnection.subscribe(symbolsToAdd);
        /* istanbul ignore next */
        cov_1lugbwhenf().s[86]++;
        this.logger.debug('Added symbols to existing Alpaca connection', {
          symbolsToAdd,
          totalSymbols: alpacaConnection.symbols.size
        });
      } else
      /* istanbul ignore next */
      {
        cov_1lugbwhenf().b[14][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1lugbwhenf().s[87]++;
      this.logger.error('Error adding symbols to Alpaca connection', {
        error: error.message,
        newSymbols: Array.from(newSymbols)
      });
      /* istanbul ignore next */
      cov_1lugbwhenf().s[88]++;
      throw error;
    }
  }

  /**
   * Start heartbeat for connection
   */
  startHeartbeat(connectionId) {
    /* istanbul ignore next */
    cov_1lugbwhenf().f[16]++;
    const connection =
    /* istanbul ignore next */
    (cov_1lugbwhenf().s[89]++, this.connections.get(connectionId));
    /* istanbul ignore next */
    cov_1lugbwhenf().s[90]++;
    if (!connection) {
      /* istanbul ignore next */
      cov_1lugbwhenf().b[15][0]++;
      cov_1lugbwhenf().s[91]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1lugbwhenf().b[15][1]++;
    }
    cov_1lugbwhenf().s[92]++;
    connection.heartbeatTimer = setInterval(() => {
      /* istanbul ignore next */
      cov_1lugbwhenf().f[17]++;
      cov_1lugbwhenf().s[93]++;
      this.sendHeartbeat(connectionId);
    }, this.options.heartbeatInterval);
  }

  /**
   * Send heartbeat to connection
   */
  sendHeartbeat(connectionId) {
    /* istanbul ignore next */
    cov_1lugbwhenf().f[18]++;
    const connection =
    /* istanbul ignore next */
    (cov_1lugbwhenf().s[94]++, this.connections.get(connectionId));
    /* istanbul ignore next */
    cov_1lugbwhenf().s[95]++;
    if (!connection) {
      /* istanbul ignore next */
      cov_1lugbwhenf().b[16][0]++;
      cov_1lugbwhenf().s[96]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1lugbwhenf().b[16][1]++;
    }
    const heartbeatData =
    /* istanbul ignore next */
    (cov_1lugbwhenf().s[97]++, {
      type: 'heartbeat',
      timestamp: Date.now(),
      connectionId,
      status: 'alive'
    });

    // In a real implementation, this would send via WebSocket
    /* istanbul ignore next */
    cov_1lugbwhenf().s[98]++;
    this.logger.debug('Heartbeat sent', {
      connectionId
    });
    /* istanbul ignore next */
    cov_1lugbwhenf().s[99]++;
    connection.lastActivity = Date.now();
  }

  /**
   * Close a connection
   */
  async closeConnection(connectionId, reason =
  /* istanbul ignore next */
  (cov_1lugbwhenf().b[17][0]++, 'client_request')) {
    /* istanbul ignore next */
    cov_1lugbwhenf().f[19]++;
    const connection =
    /* istanbul ignore next */
    (cov_1lugbwhenf().s[100]++, this.connections.get(connectionId));
    /* istanbul ignore next */
    cov_1lugbwhenf().s[101]++;
    if (!connection) {
      /* istanbul ignore next */
      cov_1lugbwhenf().b[18][0]++;
      cov_1lugbwhenf().s[102]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1lugbwhenf().b[18][1]++;
    }
    cov_1lugbwhenf().s[103]++;
    try {
      /* istanbul ignore next */
      cov_1lugbwhenf().s[104]++;
      this.logger.info('🔌 Closing connection', {
        connectionId,
        reason,
        userId: `${connection.userId.substring(0, 8)}...`
      });

      // Clean up heartbeat
      /* istanbul ignore next */
      cov_1lugbwhenf().s[105]++;
      if (connection.heartbeatTimer) {
        /* istanbul ignore next */
        cov_1lugbwhenf().b[19][0]++;
        cov_1lugbwhenf().s[106]++;
        clearInterval(connection.heartbeatTimer);
      } else
      /* istanbul ignore next */
      {
        cov_1lugbwhenf().b[19][1]++;
      }

      // Remove subscription from data pipeline
      cov_1lugbwhenf().s[107]++;
      if (connection.subscriptionId) {
        /* istanbul ignore next */
        cov_1lugbwhenf().b[20][0]++;
        cov_1lugbwhenf().s[108]++;
        this.dataPipeline.removeSubscription(connection.subscriptionId);
      } else
      /* istanbul ignore next */
      {
        cov_1lugbwhenf().b[20][1]++;
      }

      // Clean up connection maps
      cov_1lugbwhenf().s[109]++;
      await this.cleanupConnection(connectionId);

      // Update metrics
      /* istanbul ignore next */
      cov_1lugbwhenf().s[110]++;
      this.metrics.activeConnections--;
      /* istanbul ignore next */
      cov_1lugbwhenf().s[111]++;
      this.logger.info('✅ Connection closed successfully', {
        connectionId,
        activeConnections: this.metrics.activeConnections
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1lugbwhenf().s[112]++;
      this.logger.error('❌ Error closing connection', {
        connectionId,
        error: error.message
      });
    }
  }

  /**
   * Cleanup connection from all maps
   */
  async cleanupConnection(connectionId) {
    /* istanbul ignore next */
    cov_1lugbwhenf().f[20]++;
    const connection =
    /* istanbul ignore next */
    (cov_1lugbwhenf().s[113]++, this.connections.get(connectionId));
    /* istanbul ignore next */
    cov_1lugbwhenf().s[114]++;
    if (!connection) {
      /* istanbul ignore next */
      cov_1lugbwhenf().b[21][0]++;
      cov_1lugbwhenf().s[115]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1lugbwhenf().b[21][1]++;
    }

    // Remove from connections map
    cov_1lugbwhenf().s[116]++;
    this.connections.delete(connectionId);

    // Remove from user connections map
    const userConnectionSet =
    /* istanbul ignore next */
    (cov_1lugbwhenf().s[117]++, this.userConnections.get(connection.userId));
    /* istanbul ignore next */
    cov_1lugbwhenf().s[118]++;
    if (userConnectionSet) {
      /* istanbul ignore next */
      cov_1lugbwhenf().b[22][0]++;
      cov_1lugbwhenf().s[119]++;
      userConnectionSet.delete(connectionId);

      // If user has no more connections, cleanup Alpaca connection
      /* istanbul ignore next */
      cov_1lugbwhenf().s[120]++;
      if (userConnectionSet.size === 0) {
        /* istanbul ignore next */
        cov_1lugbwhenf().b[23][0]++;
        cov_1lugbwhenf().s[121]++;
        this.userConnections.delete(connection.userId);
        /* istanbul ignore next */
        cov_1lugbwhenf().s[122]++;
        await this.cleanupAlpacaConnection(connection.userId);
      } else
      /* istanbul ignore next */
      {
        cov_1lugbwhenf().b[23][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1lugbwhenf().b[22][1]++;
    }
  }

  /**
   * Cleanup Alpaca connection for user
   */
  async cleanupAlpacaConnection(userId) {
    /* istanbul ignore next */
    cov_1lugbwhenf().f[21]++;
    const alpacaConnection =
    /* istanbul ignore next */
    (cov_1lugbwhenf().s[123]++, this.alpacaConnections.get(userId));
    /* istanbul ignore next */
    cov_1lugbwhenf().s[124]++;
    if (alpacaConnection) {
      /* istanbul ignore next */
      cov_1lugbwhenf().b[24][0]++;
      cov_1lugbwhenf().s[125]++;
      try {
        /* istanbul ignore next */
        cov_1lugbwhenf().s[126]++;
        alpacaConnection.close();
        /* istanbul ignore next */
        cov_1lugbwhenf().s[127]++;
        this.alpacaConnections.delete(userId);
        /* istanbul ignore next */
        cov_1lugbwhenf().s[128]++;
        this.logger.info('🔌 Alpaca connection cleaned up', {
          userId: `${userId.substring(0, 8)}...`
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_1lugbwhenf().s[129]++;
        this.logger.error('❌ Error cleaning up Alpaca connection', {
          userId: `${userId.substring(0, 8)}...`,
          error: error.message
        });
      }
    } else
    /* istanbul ignore next */
    {
      cov_1lugbwhenf().b[24][1]++;
    }
  }

  /**
   * Start periodic cleanup of stale connections
   */
  startPeriodicCleanup() {
    /* istanbul ignore next */
    cov_1lugbwhenf().f[22]++;
    cov_1lugbwhenf().s[130]++;
    setInterval(() => {
      /* istanbul ignore next */
      cov_1lugbwhenf().f[23]++;
      cov_1lugbwhenf().s[131]++;
      this.cleanupStaleConnections();
    }, 60000); // Every minute
  }

  /**
   * Clean up stale connections
   */
  cleanupStaleConnections() {
    /* istanbul ignore next */
    cov_1lugbwhenf().f[24]++;
    const now =
    /* istanbul ignore next */
    (cov_1lugbwhenf().s[132]++, Date.now());
    const staleConnections =
    /* istanbul ignore next */
    (cov_1lugbwhenf().s[133]++, []);
    /* istanbul ignore next */
    cov_1lugbwhenf().s[134]++;
    for (const [connectionId, connection] of this.connections) {
      const inactiveTime =
      /* istanbul ignore next */
      (cov_1lugbwhenf().s[135]++, now - connection.lastActivity);

      // Consider connection stale if inactive for more than 5 minutes
      /* istanbul ignore next */
      cov_1lugbwhenf().s[136]++;
      if (inactiveTime > 300000) {
        /* istanbul ignore next */
        cov_1lugbwhenf().b[25][0]++;
        cov_1lugbwhenf().s[137]++;
        staleConnections.push(connectionId);
      } else
      /* istanbul ignore next */
      {
        cov_1lugbwhenf().b[25][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1lugbwhenf().s[138]++;
    if (staleConnections.length > 0) {
      /* istanbul ignore next */
      cov_1lugbwhenf().b[26][0]++;
      cov_1lugbwhenf().s[139]++;
      this.logger.info('🧹 Cleaning up stale connections', {
        staleConnections: staleConnections.length,
        totalConnections: this.connections.size
      });
      /* istanbul ignore next */
      cov_1lugbwhenf().s[140]++;
      staleConnections.forEach(connectionId => {
        /* istanbul ignore next */
        cov_1lugbwhenf().f[25]++;
        cov_1lugbwhenf().s[141]++;
        this.closeConnection(connectionId, 'stale_connection');
      });
    } else
    /* istanbul ignore next */
    {
      cov_1lugbwhenf().b[26][1]++;
    }
  }

  /**
   * Get service status and metrics
   */
  getStatus() {
    /* istanbul ignore next */
    cov_1lugbwhenf().f[26]++;
    const now =
    /* istanbul ignore next */
    (cov_1lugbwhenf().s[142]++, Date.now());
    const uptimeSeconds =
    /* istanbul ignore next */
    (cov_1lugbwhenf().s[143]++, (now - this.metrics.startTime) / 1000);
    /* istanbul ignore next */
    cov_1lugbwhenf().s[144]++;
    return {
      status: 'active',
      uptime: {
        seconds: uptimeSeconds,
        formatted: this.formatUptime(uptimeSeconds)
      },
      connections: {
        total: this.metrics.totalConnections,
        active: this.metrics.activeConnections,
        byUser: this.userConnections.size
      },
      subscriptions: {
        total: this.metrics.totalSubscriptions,
        active: this.dataPipeline.subscriptions.size
      },
      metrics: {
        ...this.metrics,
        errorsPerHour: this.metrics.errorCount / (uptimeSeconds / 3600),
        connectionsPerHour: this.metrics.totalConnections / (uptimeSeconds / 3600)
      },
      dataPipeline: this.dataPipeline.getStatus(),
      alpacaConnections: this.alpacaConnections.size
    };
  }

  /**
   * Format uptime in human-readable format
   */
  formatUptime(seconds) {
    /* istanbul ignore next */
    cov_1lugbwhenf().f[27]++;
    const hours =
    /* istanbul ignore next */
    (cov_1lugbwhenf().s[145]++, Math.floor(seconds / 3600));
    const minutes =
    /* istanbul ignore next */
    (cov_1lugbwhenf().s[146]++, Math.floor(seconds % 3600 / 60));
    const secs =
    /* istanbul ignore next */
    (cov_1lugbwhenf().s[147]++, Math.floor(seconds % 60));
    /* istanbul ignore next */
    cov_1lugbwhenf().s[148]++;
    return `${hours}h ${minutes}m ${secs}s`;
  }

  /**
   * Shutdown the service
   */
  async shutdown() {
    /* istanbul ignore next */
    cov_1lugbwhenf().f[28]++;
    cov_1lugbwhenf().s[149]++;
    this.logger.info('🛑 Shutting down Enhanced WebSocket Service');

    // Close all connections
    const connectionIds =
    /* istanbul ignore next */
    (cov_1lugbwhenf().s[150]++, Array.from(this.connections.keys()));
    /* istanbul ignore next */
    cov_1lugbwhenf().s[151]++;
    await Promise.all(connectionIds.map(id => {
      /* istanbul ignore next */
      cov_1lugbwhenf().f[29]++;
      cov_1lugbwhenf().s[152]++;
      return this.closeConnection(id, 'service_shutdown');
    }));

    // Shutdown data pipeline
    /* istanbul ignore next */
    cov_1lugbwhenf().s[153]++;
    this.dataPipeline.shutdown();

    // Clean up Alpaca connections
    /* istanbul ignore next */
    cov_1lugbwhenf().s[154]++;
    for (const userId of this.alpacaConnections.keys()) {
      /* istanbul ignore next */
      cov_1lugbwhenf().s[155]++;
      await this.cleanupAlpacaConnection(userId);
    }
    /* istanbul ignore next */
    cov_1lugbwhenf().s[156]++;
    this.logger.info('✅ Enhanced WebSocket Service shutdown completed');
  }
}
/* istanbul ignore next */
cov_1lugbwhenf().s[157]++;
module.exports = {
  EnhancedWebSocketService
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,