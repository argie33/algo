1ba3f7a26018005df3768a316409924f
/* istanbul ignore next */
function cov_1bkwy6jtfw() {
  var path = "/home/stocks/algo/webapp/lambda/routes/database-optimization.js";
  var hash = "2c6f16325c8bcf3dd5703ced811434aa02ae4d1b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/routes/database-optimization.js",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 16
        },
        end: {
          line: 6,
          column: 34
        }
      },
      "1": {
        start: {
          line: 7,
          column: 30
        },
        end: {
          line: 7,
          column: 59
        }
      },
      "2": {
        start: {
          line: 8,
          column: 51
        },
        end: {
          line: 8,
          column: 86
        }
      },
      "3": {
        start: {
          line: 9,
          column: 30
        },
        end: {
          line: 9,
          column: 67
        }
      },
      "4": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 32
        }
      },
      "5": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 31
        }
      },
      "6": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 30
        }
      },
      "7": {
        start: {
          line: 18,
          column: 38
        },
        end: {
          line: 59,
          column: 1
        }
      },
      "8": {
        start: {
          line: 22,
          column: 28
        },
        end: {
          line: 22,
          column: 77
        }
      },
      "9": {
        start: {
          line: 23,
          column: 28
        },
        end: {
          line: 23,
          column: 54
        }
      },
      "10": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 28,
          column: 77
        }
      },
      "11": {
        start: {
          line: 29,
          column: 28
        },
        end: {
          line: 29,
          column: 54
        }
      },
      "12": {
        start: {
          line: 34,
          column: 28
        },
        end: {
          line: 34,
          column: 77
        }
      },
      "13": {
        start: {
          line: 35,
          column: 28
        },
        end: {
          line: 35,
          column: 54
        }
      },
      "14": {
        start: {
          line: 43,
          column: 28
        },
        end: {
          line: 43,
          column: 77
        }
      },
      "15": {
        start: {
          line: 44,
          column: 28
        },
        end: {
          line: 44,
          column: 54
        }
      },
      "16": {
        start: {
          line: 49,
          column: 28
        },
        end: {
          line: 49,
          column: 91
        }
      },
      "17": {
        start: {
          line: 50,
          column: 28
        },
        end: {
          line: 50,
          column: 53
        }
      },
      "18": {
        start: {
          line: 55,
          column: 28
        },
        end: {
          line: 55,
          column: 93
        }
      },
      "19": {
        start: {
          line: 55,
          column: 70
        },
        end: {
          line: 55,
          column: 92
        }
      },
      "20": {
        start: {
          line: 64,
          column: 0
        },
        end: {
          line: 148,
          column: 3
        }
      },
      "21": {
        start: {
          line: 65,
          column: 20
        },
        end: {
          line: 65,
          column: 53
        }
      },
      "22": {
        start: {
          line: 66,
          column: 23
        },
        end: {
          line: 66,
          column: 33
        }
      },
      "23": {
        start: {
          line: 68,
          column: 2
        },
        end: {
          line: 147,
          column: 3
        }
      },
      "24": {
        start: {
          line: 69,
          column: 76
        },
        end: {
          line: 69,
          column: 84
        }
      },
      "25": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 76,
          column: 7
        }
      },
      "26": {
        start: {
          line: 79,
          column: 22
        },
        end: {
          line: 83,
          column: 6
        }
      },
      "27": {
        start: {
          line: 86,
          column: 21
        },
        end: {
          line: 86,
          column: 57
        }
      },
      "28": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 91,
          column: 5
        }
      },
      "29": {
        start: {
          line: 90,
          column: 6
        },
        end: {
          line: 90,
          column: 32
        }
      },
      "30": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 94,
          column: 5
        }
      },
      "31": {
        start: {
          line: 93,
          column: 6
        },
        end: {
          line: 93,
          column: 35
        }
      },
      "32": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "33": {
        start: {
          line: 96,
          column: 6
        },
        end: {
          line: 96,
          column: 84
        }
      },
      "34": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 104,
          column: 8
        }
      },
      "35": {
        start: {
          line: 100,
          column: 77
        },
        end: {
          line: 104,
          column: 5
        }
      },
      "36": {
        start: {
          line: 106,
          column: 26
        },
        end: {
          line: 106,
          column: 51
        }
      },
      "37": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 113,
          column: 7
        }
      },
      "38": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 133,
          column: 7
        }
      },
      "39": {
        start: {
          line: 123,
          column: 76
        },
        end: {
          line: 123,
          column: 97
        }
      },
      "40": {
        start: {
          line: 136,
          column: 26
        },
        end: {
          line: 136,
          column: 51
        }
      },
      "41": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 140,
          column: 7
        }
      },
      "42": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 146,
          column: 7
        }
      },
      "43": {
        start: {
          line: 153,
          column: 0
        },
        end: {
          line: 242,
          column: 3
        }
      },
      "44": {
        start: {
          line: 154,
          column: 20
        },
        end: {
          line: 154,
          column: 53
        }
      },
      "45": {
        start: {
          line: 155,
          column: 23
        },
        end: {
          line: 155,
          column: 33
        }
      },
      "46": {
        start: {
          line: 157,
          column: 2
        },
        end: {
          line: 241,
          column: 3
        }
      },
      "47": {
        start: {
          line: 158,
          column: 57
        },
        end: {
          line: 158,
          column: 65
        }
      },
      "48": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 165,
          column: 7
        }
      },
      "49": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 173,
          column: 5
        }
      },
      "50": {
        start: {
          line: 169,
          column: 6
        },
        end: {
          line: 172,
          column: 9
        }
      },
      "51": {
        start: {
          line: 176,
          column: 22
        },
        end: {
          line: 179,
          column: 6
        }
      },
      "52": {
        start: {
          line: 182,
          column: 21
        },
        end: {
          line: 182,
          column: 57
        }
      },
      "53": {
        start: {
          line: 185,
          column: 37
        },
        end: {
          line: 188,
          column: 6
        }
      },
      "54": {
        start: {
          line: 186,
          column: 20
        },
        end: {
          line: 186,
          column: 81
        }
      },
      "55": {
        start: {
          line: 187,
          column: 6
        },
        end: {
          line: 187,
          column: 50
        }
      },
      "56": {
        start: {
          line: 190,
          column: 4
        },
        end: {
          line: 195,
          column: 5
        }
      },
      "57": {
        start: {
          line: 191,
          column: 6
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "58": {
        start: {
          line: 198,
          column: 32
        },
        end: {
          line: 201,
          column: 6
        }
      },
      "59": {
        start: {
          line: 203,
          column: 26
        },
        end: {
          line: 203,
          column: 51
        }
      },
      "60": {
        start: {
          line: 205,
          column: 4
        },
        end: {
          line: 210,
          column: 7
        }
      },
      "61": {
        start: {
          line: 212,
          column: 4
        },
        end: {
          line: 227,
          column: 7
        }
      },
      "62": {
        start: {
          line: 230,
          column: 26
        },
        end: {
          line: 230,
          column: 51
        }
      },
      "63": {
        start: {
          line: 231,
          column: 4
        },
        end: {
          line: 234,
          column: 7
        }
      },
      "64": {
        start: {
          line: 236,
          column: 4
        },
        end: {
          line: 240,
          column: 7
        }
      },
      "65": {
        start: {
          line: 247,
          column: 0
        },
        end: {
          line: 277,
          column: 3
        }
      },
      "66": {
        start: {
          line: 248,
          column: 20
        },
        end: {
          line: 248,
          column: 53
        }
      },
      "67": {
        start: {
          line: 250,
          column: 2
        },
        end: {
          line: 276,
          column: 3
        }
      },
      "68": {
        start: {
          line: 251,
          column: 4
        },
        end: {
          line: 253,
          column: 7
        }
      },
      "69": {
        start: {
          line: 255,
          column: 22
        },
        end: {
          line: 255,
          column: 45
        }
      },
      "70": {
        start: {
          line: 256,
          column: 31
        },
        end: {
          line: 256,
          column: 76
        }
      },
      "71": {
        start: {
          line: 257,
          column: 28
        },
        end: {
          line: 257,
          column: 49
        }
      },
      "72": {
        start: {
          line: 259,
          column: 4
        },
        end: {
          line: 265,
          column: 7
        }
      },
      "73": {
        start: {
          line: 268,
          column: 4
        },
        end: {
          line: 270,
          column: 7
        }
      },
      "74": {
        start: {
          line: 272,
          column: 4
        },
        end: {
          line: 275,
          column: 7
        }
      },
      "75": {
        start: {
          line: 282,
          column: 0
        },
        end: {
          line: 319,
          column: 3
        }
      },
      "76": {
        start: {
          line: 283,
          column: 20
        },
        end: {
          line: 283,
          column: 53
        }
      },
      "77": {
        start: {
          line: 285,
          column: 2
        },
        end: {
          line: 318,
          column: 3
        }
      },
      "78": {
        start: {
          line: 286,
          column: 4
        },
        end: {
          line: 288,
          column: 7
        }
      },
      "79": {
        start: {
          line: 291,
          column: 39
        },
        end: {
          line: 291,
          column: 67
        }
      },
      "80": {
        start: {
          line: 294,
          column: 29
        },
        end: {
          line: 294,
          column: 68
        }
      },
      "81": {
        start: {
          line: 296,
          column: 4
        },
        end: {
          line: 307,
          column: 7
        }
      },
      "82": {
        start: {
          line: 310,
          column: 4
        },
        end: {
          line: 312,
          column: 7
        }
      },
      "83": {
        start: {
          line: 314,
          column: 4
        },
        end: {
          line: 317,
          column: 7
        }
      },
      "84": {
        start: {
          line: 324,
          column: 0
        },
        end: {
          line: 358,
          column: 3
        }
      },
      "85": {
        start: {
          line: 325,
          column: 20
        },
        end: {
          line: 325,
          column: 53
        }
      },
      "86": {
        start: {
          line: 327,
          column: 2
        },
        end: {
          line: 357,
          column: 3
        }
      },
      "87": {
        start: {
          line: 328,
          column: 28
        },
        end: {
          line: 328,
          column: 56
        }
      },
      "88": {
        start: {
          line: 330,
          column: 25
        },
        end: {
          line: 330,
          column: 44
        }
      },
      "89": {
        start: {
          line: 331,
          column: 22
        },
        end: {
          line: 331,
          column: 45
        }
      },
      "90": {
        start: {
          line: 332,
          column: 20
        },
        end: {
          line: 332,
          column: 65
        }
      },
      "91": {
        start: {
          line: 334,
          column: 25
        },
        end: {
          line: 344,
          column: 5
        }
      },
      "92": {
        start: {
          line: 338,
          column: 74
        },
        end: {
          line: 338,
          column: 91
        }
      },
      "93": {
        start: {
          line: 346,
          column: 4
        },
        end: {
          line: 346,
          column: 45
        }
      },
      "94": {
        start: {
          line: 349,
          column: 4
        },
        end: {
          line: 351,
          column: 7
        }
      },
      "95": {
        start: {
          line: 353,
          column: 4
        },
        end: {
          line: 356,
          column: 7
        }
      },
      "96": {
        start: {
          line: 360,
          column: 0
        },
        end: {
          line: 360,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 22,
            column: 17
          },
          end: {
            line: 22,
            column: 18
          }
        },
        loc: {
          start: {
            line: 22,
            column: 28
          },
          end: {
            line: 22,
            column: 77
          }
        },
        line: 22
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 17
          },
          end: {
            line: 23,
            column: 18
          }
        },
        loc: {
          start: {
            line: 23,
            column: 28
          },
          end: {
            line: 23,
            column: 54
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 28,
            column: 17
          },
          end: {
            line: 28,
            column: 18
          }
        },
        loc: {
          start: {
            line: 28,
            column: 28
          },
          end: {
            line: 28,
            column: 77
          }
        },
        line: 28
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 29,
            column: 17
          },
          end: {
            line: 29,
            column: 18
          }
        },
        loc: {
          start: {
            line: 29,
            column: 28
          },
          end: {
            line: 29,
            column: 54
          }
        },
        line: 29
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 34,
            column: 17
          },
          end: {
            line: 34,
            column: 18
          }
        },
        loc: {
          start: {
            line: 34,
            column: 28
          },
          end: {
            line: 34,
            column: 77
          }
        },
        line: 34
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 35,
            column: 17
          },
          end: {
            line: 35,
            column: 18
          }
        },
        loc: {
          start: {
            line: 35,
            column: 28
          },
          end: {
            line: 35,
            column: 54
          }
        },
        line: 35
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 43,
            column: 17
          },
          end: {
            line: 43,
            column: 18
          }
        },
        loc: {
          start: {
            line: 43,
            column: 28
          },
          end: {
            line: 43,
            column: 77
          }
        },
        line: 43
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 44,
            column: 17
          },
          end: {
            line: 44,
            column: 18
          }
        },
        loc: {
          start: {
            line: 44,
            column: 28
          },
          end: {
            line: 44,
            column: 54
          }
        },
        line: 44
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 49,
            column: 17
          },
          end: {
            line: 49,
            column: 18
          }
        },
        loc: {
          start: {
            line: 49,
            column: 28
          },
          end: {
            line: 49,
            column: 91
          }
        },
        line: 49
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 50,
            column: 17
          },
          end: {
            line: 50,
            column: 18
          }
        },
        loc: {
          start: {
            line: 50,
            column: 28
          },
          end: {
            line: 50,
            column: 53
          }
        },
        line: 50
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 55,
            column: 17
          },
          end: {
            line: 55,
            column: 18
          }
        },
        loc: {
          start: {
            line: 55,
            column: 28
          },
          end: {
            line: 55,
            column: 93
          }
        },
        line: 55
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 55,
            column: 64
          },
          end: {
            line: 55,
            column: 65
          }
        },
        loc: {
          start: {
            line: 55,
            column: 70
          },
          end: {
            line: 55,
            column: 92
          }
        },
        line: 55
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 64,
            column: 92
          },
          end: {
            line: 64,
            column: 93
          }
        },
        loc: {
          start: {
            line: 64,
            column: 112
          },
          end: {
            line: 148,
            column: 1
          }
        },
        line: 64
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 100,
            column: 60
          },
          end: {
            line: 100,
            column: 61
          }
        },
        loc: {
          start: {
            line: 100,
            column: 77
          },
          end: {
            line: 104,
            column: 5
          }
        },
        line: 100
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 123,
            column: 71
          },
          end: {
            line: 123,
            column: 72
          }
        },
        loc: {
          start: {
            line: 123,
            column: 76
          },
          end: {
            line: 123,
            column: 97
          }
        },
        line: 123
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 153,
            column: 93
          },
          end: {
            line: 153,
            column: 94
          }
        },
        loc: {
          start: {
            line: 153,
            column: 113
          },
          end: {
            line: 242,
            column: 1
          }
        },
        line: 153
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 185,
            column: 69
          },
          end: {
            line: 185,
            column: 70
          }
        },
        loc: {
          start: {
            line: 185,
            column: 76
          },
          end: {
            line: 188,
            column: 5
          }
        },
        line: 185
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 247,
            column: 23
          },
          end: {
            line: 247,
            column: 24
          }
        },
        loc: {
          start: {
            line: 247,
            column: 43
          },
          end: {
            line: 277,
            column: 1
          }
        },
        line: 247
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 282,
            column: 22
          },
          end: {
            line: 282,
            column: 23
          }
        },
        loc: {
          start: {
            line: 282,
            column: 42
          },
          end: {
            line: 319,
            column: 1
          }
        },
        line: 282
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 324,
            column: 22
          },
          end: {
            line: 324,
            column: 23
          }
        },
        loc: {
          start: {
            line: 324,
            column: 42
          },
          end: {
            line: 358,
            column: 1
          }
        },
        line: 324
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 338,
            column: 58
          },
          end: {
            line: 338,
            column: 59
          }
        },
        loc: {
          start: {
            line: 338,
            column: 74
          },
          end: {
            line: 338,
            column: 91
          }
        },
        line: 338
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 50,
            column: 28
          },
          end: {
            line: 50,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 28
          },
          end: {
            line: 50,
            column: 38
          }
        }, {
          start: {
            line: 50,
            column: 42
          },
          end: {
            line: 50,
            column: 53
          }
        }],
        line: 50
      },
      "1": {
        loc: {
          start: {
            line: 55,
            column: 28
          },
          end: {
            line: 55,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 28
          },
          end: {
            line: 55,
            column: 48
          }
        }, {
          start: {
            line: 55,
            column: 52
          },
          end: {
            line: 55,
            column: 93
          }
        }],
        line: 55
      },
      "2": {
        loc: {
          start: {
            line: 72,
            column: 14
          },
          end: {
            line: 72,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 72,
            column: 30
          },
          end: {
            line: 72,
            column: 66
          }
        }, {
          start: {
            line: 72,
            column: 69
          },
          end: {
            line: 72,
            column: 80
          }
        }],
        line: 72
      },
      "3": {
        loc: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "4": {
        loc: {
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 94,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 94,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "5": {
        loc: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "6": {
        loc: {
          start: {
            line: 145,
            column: 21
          },
          end: {
            line: 145,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 145,
            column: 62
          },
          end: {
            line: 145,
            column: 75
          }
        }, {
          start: {
            line: 145,
            column: 78
          },
          end: {
            line: 145,
            column: 87
          }
        }],
        line: 145
      },
      "7": {
        loc: {
          start: {
            line: 161,
            column: 14
          },
          end: {
            line: 161,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 161,
            column: 30
          },
          end: {
            line: 161,
            column: 66
          }
        }, {
          start: {
            line: 161,
            column: 69
          },
          end: {
            line: 161,
            column: 80
          }
        }],
        line: 161
      },
      "8": {
        loc: {
          start: {
            line: 164,
            column: 30
          },
          end: {
            line: 164,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 30
          },
          end: {
            line: 164,
            column: 58
          }
        }, {
          start: {
            line: 164,
            column: 62
          },
          end: {
            line: 164,
            column: 63
          }
        }],
        line: 164
      },
      "9": {
        loc: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 173,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 173,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "10": {
        loc: {
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 168,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 168,
            column: 29
          }
        }, {
          start: {
            line: 168,
            column: 33
          },
          end: {
            line: 168,
            column: 66
          }
        }],
        line: 168
      },
      "11": {
        loc: {
          start: {
            line: 190,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "12": {
        loc: {
          start: {
            line: 222,
            column: 18
          },
          end: {
            line: 222,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 222,
            column: 27
          },
          end: {
            line: 222,
            column: 79
          }
        }, {
          start: {
            line: 222,
            column: 82
          },
          end: {
            line: 222,
            column: 84
          }
        }],
        line: 222
      },
      "13": {
        loc: {
          start: {
            line: 239,
            column: 21
          },
          end: {
            line: 239,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 239,
            column: 62
          },
          end: {
            line: 239,
            column: 75
          }
        }, {
          start: {
            line: 239,
            column: 78
          },
          end: {
            line: 239,
            column: 87
          }
        }],
        line: 239
      },
      "14": {
        loc: {
          start: {
            line: 252,
            column: 14
          },
          end: {
            line: 252,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 252,
            column: 30
          },
          end: {
            line: 252,
            column: 66
          }
        }, {
          start: {
            line: 252,
            column: 69
          },
          end: {
            line: 252,
            column: 80
          }
        }],
        line: 252
      },
      "15": {
        loc: {
          start: {
            line: 274,
            column: 21
          },
          end: {
            line: 274,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 274,
            column: 62
          },
          end: {
            line: 274,
            column: 75
          }
        }, {
          start: {
            line: 274,
            column: 78
          },
          end: {
            line: 274,
            column: 87
          }
        }],
        line: 274
      },
      "16": {
        loc: {
          start: {
            line: 287,
            column: 14
          },
          end: {
            line: 287,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 287,
            column: 30
          },
          end: {
            line: 287,
            column: 66
          }
        }, {
          start: {
            line: 287,
            column: 69
          },
          end: {
            line: 287,
            column: 80
          }
        }],
        line: 287
      },
      "17": {
        loc: {
          start: {
            line: 303,
            column: 25
          },
          end: {
            line: 303,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 303,
            column: 25
          },
          end: {
            line: 303,
            column: 65
          }
        }, {
          start: {
            line: 303,
            column: 69
          },
          end: {
            line: 303,
            column: 70
          }
        }],
        line: 303
      },
      "18": {
        loc: {
          start: {
            line: 316,
            column: 21
          },
          end: {
            line: 316,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 316,
            column: 62
          },
          end: {
            line: 316,
            column: 75
          }
        }, {
          start: {
            line: 316,
            column: 78
          },
          end: {
            line: 316,
            column: 87
          }
        }],
        line: 316
      },
      "19": {
        loc: {
          start: {
            line: 338,
            column: 25
          },
          end: {
            line: 338,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 338,
            column: 25
          },
          end: {
            line: 338,
            column: 95
          }
        }, {
          start: {
            line: 338,
            column: 99
          },
          end: {
            line: 338,
            column: 100
          }
        }],
        line: 338
      },
      "20": {
        loc: {
          start: {
            line: 341,
            column: 14
          },
          end: {
            line: 342,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 342,
            column: 55
          },
          end: {
            line: 342,
            column: 64
          }
        }, {
          start: {
            line: 342,
            column: 67
          },
          end: {
            line: 342,
            column: 77
          }
        }],
        line: 341
      },
      "21": {
        loc: {
          start: {
            line: 341,
            column: 14
          },
          end: {
            line: 342,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 341,
            column: 14
          },
          end: {
            line: 341,
            column: 47
          }
        }, {
          start: {
            line: 342,
            column: 14
          },
          end: {
            line: 342,
            column: 52
          }
        }],
        line: 341
      },
      "22": {
        loc: {
          start: {
            line: 355,
            column: 21
          },
          end: {
            line: 355,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 355,
            column: 62
          },
          end: {
            line: 355,
            column: 75
          }
        }, {
          start: {
            line: 355,
            column: 78
          },
          end: {
            line: 355,
            column: 87
          }
        }],
        line: 355
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2c6f16325c8bcf3dd5703ced811434aa02ae4d1b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1bkwy6jtfw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1bkwy6jtfw();
/**
 * Database Optimization API Routes
 * Provides endpoints for database performance analysis and optimization
 */

const express =
/* istanbul ignore next */
(cov_1bkwy6jtfw().s[0]++, require('express'));
const {
  authenticateToken
} =
/* istanbul ignore next */
(cov_1bkwy6jtfw().s[1]++, require('../middleware/auth'));
const {
  createValidationMiddleware,
  sanitizers
} =
/* istanbul ignore next */
(cov_1bkwy6jtfw().s[2]++, require('../middleware/validation'));
const {
  DatabaseOptimizer
} =
/* istanbul ignore next */
(cov_1bkwy6jtfw().s[3]++, require('../utils/databaseOptimizer'));
const crypto =
/* istanbul ignore next */
(cov_1bkwy6jtfw().s[4]++, require('crypto'));
const router =
/* istanbul ignore next */
(cov_1bkwy6jtfw().s[5]++, express.Router());

// Apply authentication to all routes (admin-level functionality)
/* istanbul ignore next */
cov_1bkwy6jtfw().s[6]++;
router.use(authenticateToken);

// Validation schemas
const optimizationValidationSchemas =
/* istanbul ignore next */
(cov_1bkwy6jtfw().s[7]++, {
  analysis: {
    includeSlowQueries: {
      type: 'boolean',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_1bkwy6jtfw().f[0]++;
        cov_1bkwy6jtfw().s[8]++;
        return sanitizers.boolean(value, {
          defaultValue: true
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_1bkwy6jtfw().f[1]++;
        cov_1bkwy6jtfw().s[9]++;
        return typeof value === 'boolean';
      },
      errorMessage: 'includeSlowQueries must be true or false'
    },
    includeIndexAnalysis: {
      type: 'boolean',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_1bkwy6jtfw().f[2]++;
        cov_1bkwy6jtfw().s[10]++;
        return sanitizers.boolean(value, {
          defaultValue: true
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_1bkwy6jtfw().f[3]++;
        cov_1bkwy6jtfw().s[11]++;
        return typeof value === 'boolean';
      },
      errorMessage: 'includeIndexAnalysis must be true or false'
    },
    includeTableStats: {
      type: 'boolean',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_1bkwy6jtfw().f[4]++;
        cov_1bkwy6jtfw().s[12]++;
        return sanitizers.boolean(value, {
          defaultValue: true
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_1bkwy6jtfw().f[5]++;
        cov_1bkwy6jtfw().s[13]++;
        return typeof value === 'boolean';
      },
      errorMessage: 'includeTableStats must be true or false'
    }
  },
  optimize: {
    dryRun: {
      type: 'boolean',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_1bkwy6jtfw().f[6]++;
        cov_1bkwy6jtfw().s[14]++;
        return sanitizers.boolean(value, {
          defaultValue: true
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_1bkwy6jtfw().f[7]++;
        cov_1bkwy6jtfw().s[15]++;
        return typeof value === 'boolean';
      },
      errorMessage: 'dryRun must be true or false'
    },
    maxIndexes: {
      type: 'integer',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_1bkwy6jtfw().f[8]++;
        cov_1bkwy6jtfw().s[16]++;
        return sanitizers.integer(value, {
          min: 1,
          max: 20,
          defaultValue: 5
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_1bkwy6jtfw().f[9]++;
        cov_1bkwy6jtfw().s[17]++;
        return /* istanbul ignore next */(cov_1bkwy6jtfw().b[0][0]++, value >= 1) &&
        /* istanbul ignore next */
        (cov_1bkwy6jtfw().b[0][1]++, value <= 20);
      },
      errorMessage: 'maxIndexes must be between 1 and 20'
    },
    applyRecommendations: {
      type: 'array',
      validator: value => {
        /* istanbul ignore next */
        cov_1bkwy6jtfw().f[10]++;
        cov_1bkwy6jtfw().s[18]++;
        return /* istanbul ignore next */(cov_1bkwy6jtfw().b[1][0]++, Array.isArray(value)) &&
        /* istanbul ignore next */
        (cov_1bkwy6jtfw().b[1][1]++, value.every(id => {
          /* istanbul ignore next */
          cov_1bkwy6jtfw().f[11]++;
          cov_1bkwy6jtfw().s[19]++;
          return typeof id === 'string';
        }));
      },
      errorMessage: 'applyRecommendations must be an array of recommendation IDs'
    }
  }
});

/**
 * Analyze database performance
 */
/* istanbul ignore next */
cov_1bkwy6jtfw().s[20]++;
router.post('/analyze', createValidationMiddleware(optimizationValidationSchemas.analysis), async (req, res) => {
  /* istanbul ignore next */
  cov_1bkwy6jtfw().f[12]++;
  const requestId =
  /* istanbul ignore next */
  (cov_1bkwy6jtfw().s[21]++, crypto.randomUUID().split('-')[0]);
  const requestStart =
  /* istanbul ignore next */
  (cov_1bkwy6jtfw().s[22]++, Date.now());
  /* istanbul ignore next */
  cov_1bkwy6jtfw().s[23]++;
  try {
    const {
      includeSlowQueries,
      includeIndexAnalysis,
      includeTableStats
    } =
    /* istanbul ignore next */
    (cov_1bkwy6jtfw().s[24]++, req.body);
    /* istanbul ignore next */
    cov_1bkwy6jtfw().s[25]++;
    console.log(`🔍 [${requestId}] Database performance analysis initiated`, {
      userId: req.user?.sub ?
      /* istanbul ignore next */
      (cov_1bkwy6jtfw().b[2][0]++, `${req.user.sub.substring(0, 8)}...`) :
      /* istanbul ignore next */
      (cov_1bkwy6jtfw().b[2][1]++, 'undefined'),
      options: {
        includeSlowQueries,
        includeIndexAnalysis,
        includeTableStats
      },
      userAgent: req.headers['user-agent'],
      ip: req.ip
    });

    // Initialize optimizer
    const optimizer =
    /* istanbul ignore next */
    (cov_1bkwy6jtfw().s[26]++, new DatabaseOptimizer({
      slowQueryThreshold: 1000,
      enableAutoIndexing: false,
      maxAnalysisQueries: 50
    }));

    // Perform analysis
    const analysis =
    /* istanbul ignore next */
    (cov_1bkwy6jtfw().s[27]++, await optimizer.analyzePerformance());

    // Filter results based on request options
    /* istanbul ignore next */
    cov_1bkwy6jtfw().s[28]++;
    if (!includeSlowQueries) {
      /* istanbul ignore next */
      cov_1bkwy6jtfw().b[3][0]++;
      cov_1bkwy6jtfw().s[29]++;
      analysis.slowQueries = [];
    } else
    /* istanbul ignore next */
    {
      cov_1bkwy6jtfw().b[3][1]++;
    }
    cov_1bkwy6jtfw().s[30]++;
    if (!includeIndexAnalysis) {
      /* istanbul ignore next */
      cov_1bkwy6jtfw().b[4][0]++;
      cov_1bkwy6jtfw().s[31]++;
      analysis.missingIndexes = [];
    } else
    /* istanbul ignore next */
    {
      cov_1bkwy6jtfw().b[4][1]++;
    }
    cov_1bkwy6jtfw().s[32]++;
    if (!includeTableStats) {
      /* istanbul ignore next */
      cov_1bkwy6jtfw().b[5][0]++;
      cov_1bkwy6jtfw().s[33]++;
      analysis.tableStatistics = {
        tableStats: [],
        tableSizes: [],
        indexUsage: []
      };
    } else
    /* istanbul ignore next */
    {
      cov_1bkwy6jtfw().b[5][1]++;
    }

    // Add recommendation IDs for tracking
    cov_1bkwy6jtfw().s[34]++;
    analysis.recommendations = analysis.recommendations.map((rec, index) => {
      /* istanbul ignore next */
      cov_1bkwy6jtfw().f[13]++;
      cov_1bkwy6jtfw().s[35]++;
      return {
        ...rec,
        id: `rec_${analysis.id}_${index}`,
        analysisId: analysis.id
      };
    });
    const totalDuration =
    /* istanbul ignore next */
    (cov_1bkwy6jtfw().s[36]++, Date.now() - requestStart);
    /* istanbul ignore next */
    cov_1bkwy6jtfw().s[37]++;
    console.log(`✅ [${requestId}] Database analysis completed in ${totalDuration}ms`, {
      analysisId: analysis.id,
      slowQueries: analysis.slowQueries.length,
      missingIndexes: analysis.missingIndexes.length,
      recommendations: analysis.recommendations.length
    });
    /* istanbul ignore next */
    cov_1bkwy6jtfw().s[38]++;
    res.success({
      analysis: {
        id: analysis.id,
        timestamp: analysis.timestamp,
        summary: {
          slowQueriesFound: analysis.slowQueries.length,
          missingIndexesFound: analysis.missingIndexes.length,
          recommendationsGenerated: analysis.recommendations.length,
          highPriorityRecommendations: analysis.recommendations.filter(r => {
            /* istanbul ignore next */
            cov_1bkwy6jtfw().f[14]++;
            cov_1bkwy6jtfw().s[39]++;
            return r.priority === 'high';
          }).length
        },
        slowQueries: analysis.slowQueries.slice(0, 20),
        // Limit for response size
        missingIndexes: analysis.missingIndexes,
        recommendations: analysis.recommendations,
        performance: analysis.performance
      }
    }, {
      requestId,
      analysisDuration: `${totalDuration}ms`
    });
  } catch (error) {
    const errorDuration =
    /* istanbul ignore next */
    (cov_1bkwy6jtfw().s[40]++, Date.now() - requestStart);
    /* istanbul ignore next */
    cov_1bkwy6jtfw().s[41]++;
    console.error(`❌ [${requestId}] Database analysis FAILED after ${errorDuration}ms:`, {
      error: error.message,
      errorStack: error.stack
    });
    /* istanbul ignore next */
    cov_1bkwy6jtfw().s[42]++;
    res.serverError('Database performance analysis failed', {
      requestId,
      duration: `${errorDuration}ms`,
      originalError: process.env.NODE_ENV === 'development' ?
      /* istanbul ignore next */
      (cov_1bkwy6jtfw().b[6][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1bkwy6jtfw().b[6][1]++, undefined)
    });
  }
});

/**
 * Apply database optimizations
 */
/* istanbul ignore next */
cov_1bkwy6jtfw().s[43]++;
router.post('/optimize', createValidationMiddleware(optimizationValidationSchemas.optimize), async (req, res) => {
  /* istanbul ignore next */
  cov_1bkwy6jtfw().f[15]++;
  const requestId =
  /* istanbul ignore next */
  (cov_1bkwy6jtfw().s[44]++, crypto.randomUUID().split('-')[0]);
  const requestStart =
  /* istanbul ignore next */
  (cov_1bkwy6jtfw().s[45]++, Date.now());
  /* istanbul ignore next */
  cov_1bkwy6jtfw().s[46]++;
  try {
    const {
      dryRun,
      maxIndexes,
      applyRecommendations
    } =
    /* istanbul ignore next */
    (cov_1bkwy6jtfw().s[47]++, req.body);
    /* istanbul ignore next */
    cov_1bkwy6jtfw().s[48]++;
    console.log(`🔧 [${requestId}] Database optimization initiated`, {
      userId: req.user?.sub ?
      /* istanbul ignore next */
      (cov_1bkwy6jtfw().b[7][0]++, `${req.user.sub.substring(0, 8)}...`) :
      /* istanbul ignore next */
      (cov_1bkwy6jtfw().b[7][1]++, 'undefined'),
      dryRun,
      maxIndexes,
      recommendationsToApply:
      /* istanbul ignore next */
      (cov_1bkwy6jtfw().b[8][0]++, applyRecommendations?.length) ||
      /* istanbul ignore next */
      (cov_1bkwy6jtfw().b[8][1]++, 0)
    });

    // For production safety, always require explicit recommendations
    /* istanbul ignore next */
    cov_1bkwy6jtfw().s[49]++;
    if (
    /* istanbul ignore next */
    (cov_1bkwy6jtfw().b[10][0]++, !applyRecommendations) ||
    /* istanbul ignore next */
    (cov_1bkwy6jtfw().b[10][1]++, applyRecommendations.length === 0)) {
      /* istanbul ignore next */
      cov_1bkwy6jtfw().b[9][0]++;
      cov_1bkwy6jtfw().s[50]++;
      return res.badRequest('No recommendations specified for optimization', {
        requestId,
        message: 'You must specify which recommendations to apply for safety'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1bkwy6jtfw().b[9][1]++;
    }

    // Initialize optimizer
    const optimizer =
    /* istanbul ignore next */
    (cov_1bkwy6jtfw().s[51]++, new DatabaseOptimizer({
      enableAutoIndexing: !dryRun,
      maxAnalysisQueries: 50
    }));

    // Get fresh analysis to ensure recommendations are current
    const analysis =
    /* istanbul ignore next */
    (cov_1bkwy6jtfw().s[52]++, await optimizer.analyzePerformance());

    // Filter recommendations to only those requested
    const requestedRecommendations =
    /* istanbul ignore next */
    (cov_1bkwy6jtfw().s[53]++, analysis.recommendations.filter(rec => {
      /* istanbul ignore next */
      cov_1bkwy6jtfw().f[16]++;
      const recId =
      /* istanbul ignore next */
      (cov_1bkwy6jtfw().s[54]++, `rec_${analysis.id}_${analysis.recommendations.indexOf(rec)}`);
      /* istanbul ignore next */
      cov_1bkwy6jtfw().s[55]++;
      return applyRecommendations.includes(recId);
    }));
    /* istanbul ignore next */
    cov_1bkwy6jtfw().s[56]++;
    if (requestedRecommendations.length === 0) {
      /* istanbul ignore next */
      cov_1bkwy6jtfw().b[11][0]++;
      cov_1bkwy6jtfw().s[57]++;
      return res.badRequest('No valid recommendations found to apply', {
        requestId,
        availableRecommendations: analysis.recommendations.length
      });
    } else
    /* istanbul ignore next */
    {
      cov_1bkwy6jtfw().b[11][1]++;
    }

    // Apply optimizations
    const optimizationResults =
    /* istanbul ignore next */
    (cov_1bkwy6jtfw().s[58]++, await optimizer.applyOptimizations(requestedRecommendations, {
      dryRun,
      maxIndexes
    }));
    const totalDuration =
    /* istanbul ignore next */
    (cov_1bkwy6jtfw().s[59]++, Date.now() - requestStart);
    /* istanbul ignore next */
    cov_1bkwy6jtfw().s[60]++;
    console.log(`✅ [${requestId}] Database optimization completed in ${totalDuration}ms`, {
      dryRun,
      applied: optimizationResults.applied.length,
      failed: optimizationResults.failed.length,
      skipped: optimizationResults.skipped.length
    });
    /* istanbul ignore next */
    cov_1bkwy6jtfw().s[61]++;
    res.success({
      optimization: {
        dryRun,
        requestedRecommendations: requestedRecommendations.length,
        results: {
          applied: optimizationResults.applied.length,
          failed: optimizationResults.failed.length,
          skipped: optimizationResults.skipped.length
        },
        details: optimizationResults,
        warnings: dryRun ?
        /* istanbul ignore next */
        (cov_1bkwy6jtfw().b[12][0]++, ['This was a dry run - no actual changes were made']) :
        /* istanbul ignore next */
        (cov_1bkwy6jtfw().b[12][1]++, [])
      }
    }, {
      requestId,
      optimizationDuration: `${totalDuration}ms`
    });
  } catch (error) {
    const errorDuration =
    /* istanbul ignore next */
    (cov_1bkwy6jtfw().s[62]++, Date.now() - requestStart);
    /* istanbul ignore next */
    cov_1bkwy6jtfw().s[63]++;
    console.error(`❌ [${requestId}] Database optimization FAILED after ${errorDuration}ms:`, {
      error: error.message,
      errorStack: error.stack
    });
    /* istanbul ignore next */
    cov_1bkwy6jtfw().s[64]++;
    res.serverError('Database optimization failed', {
      requestId,
      duration: `${errorDuration}ms`,
      originalError: process.env.NODE_ENV === 'development' ?
      /* istanbul ignore next */
      (cov_1bkwy6jtfw().b[13][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1bkwy6jtfw().b[13][1]++, undefined)
    });
  }
});

/**
 * Get database performance metrics and status
 */
/* istanbul ignore next */
cov_1bkwy6jtfw().s[65]++;
router.get('/metrics', async (req, res) => {
  /* istanbul ignore next */
  cov_1bkwy6jtfw().f[17]++;
  const requestId =
  /* istanbul ignore next */
  (cov_1bkwy6jtfw().s[66]++, crypto.randomUUID().split('-')[0]);
  /* istanbul ignore next */
  cov_1bkwy6jtfw().s[67]++;
  try {
    /* istanbul ignore next */
    cov_1bkwy6jtfw().s[68]++;
    console.log(`📊 [${requestId}] Database metrics request`, {
      userId: req.user?.sub ?
      /* istanbul ignore next */
      (cov_1bkwy6jtfw().b[14][0]++, `${req.user.sub.substring(0, 8)}...`) :
      /* istanbul ignore next */
      (cov_1bkwy6jtfw().b[14][1]++, 'undefined')
    });
    const optimizer =
    /* istanbul ignore next */
    (cov_1bkwy6jtfw().s[69]++, new DatabaseOptimizer());
    const performanceMetrics =
    /* istanbul ignore next */
    (cov_1bkwy6jtfw().s[70]++, await optimizer.calculatePerformanceMetrics());
    const optimizerStatus =
    /* istanbul ignore next */
    (cov_1bkwy6jtfw().s[71]++, optimizer.getStatus());
    /* istanbul ignore next */
    cov_1bkwy6jtfw().s[72]++;
    res.success({
      metrics: performanceMetrics,
      optimizer: optimizerStatus,
      timestamp: new Date().toISOString()
    }, {
      requestId
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1bkwy6jtfw().s[73]++;
    console.error(`❌ [${requestId}] Database metrics request failed:`, {
      error: error.message
    });
    /* istanbul ignore next */
    cov_1bkwy6jtfw().s[74]++;
    res.serverError('Failed to get database metrics', {
      requestId,
      originalError: process.env.NODE_ENV === 'development' ?
      /* istanbul ignore next */
      (cov_1bkwy6jtfw().b[15][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1bkwy6jtfw().b[15][1]++, undefined)
    });
  }
});

/**
 * Get current database schema information
 */
/* istanbul ignore next */
cov_1bkwy6jtfw().s[75]++;
router.get('/schema', async (req, res) => {
  /* istanbul ignore next */
  cov_1bkwy6jtfw().f[18]++;
  const requestId =
  /* istanbul ignore next */
  (cov_1bkwy6jtfw().s[76]++, crypto.randomUUID().split('-')[0]);
  /* istanbul ignore next */
  cov_1bkwy6jtfw().s[77]++;
  try {
    /* istanbul ignore next */
    cov_1bkwy6jtfw().s[78]++;
    console.log(`📋 [${requestId}] Database schema request`, {
      userId: req.user?.sub ?
      /* istanbul ignore next */
      (cov_1bkwy6jtfw().b[16][0]++, `${req.user.sub.substring(0, 8)}...`) :
      /* istanbul ignore next */
      (cov_1bkwy6jtfw().b[16][1]++, 'undefined')
    });

    // Import database utility
    const {
      validateDatabaseSchema
    } =
    /* istanbul ignore next */
    (cov_1bkwy6jtfw().s[79]++, require('../utils/database'));

    // Get comprehensive schema validation
    const schemaValidation =
    /* istanbul ignore next */
    (cov_1bkwy6jtfw().s[80]++, await validateDatabaseSchema(requestId));
    /* istanbul ignore next */
    cov_1bkwy6jtfw().s[81]++;
    res.success({
      schema: schemaValidation,
      summary: {
        valid: schemaValidation.valid,
        healthPercentage: schemaValidation.healthPercentage,
        totalRequired: schemaValidation.totalRequired,
        totalExisting: schemaValidation.totalExisting,
        criticalMissing:
        /* istanbul ignore next */
        (cov_1bkwy6jtfw().b[17][0]++, schemaValidation.criticalMissing?.length) ||
        /* istanbul ignore next */
        (cov_1bkwy6jtfw().b[17][1]++, 0)
      }
    }, {
      requestId
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1bkwy6jtfw().s[82]++;
    console.error(`❌ [${requestId}] Database schema request failed:`, {
      error: error.message
    });
    /* istanbul ignore next */
    cov_1bkwy6jtfw().s[83]++;
    res.serverError('Failed to get database schema information', {
      requestId,
      originalError: process.env.NODE_ENV === 'development' ?
      /* istanbul ignore next */
      (cov_1bkwy6jtfw().b[18][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1bkwy6jtfw().b[18][1]++, undefined)
    });
  }
});

/**
 * Database health check with performance indicators
 */
/* istanbul ignore next */
cov_1bkwy6jtfw().s[84]++;
router.get('/health', async (req, res) => {
  /* istanbul ignore next */
  cov_1bkwy6jtfw().f[19]++;
  const requestId =
  /* istanbul ignore next */
  (cov_1bkwy6jtfw().s[85]++, crypto.randomUUID().split('-')[0]);
  /* istanbul ignore next */
  cov_1bkwy6jtfw().s[86]++;
  try {
    const {
      healthCheck
    } =
    /* istanbul ignore next */
    (cov_1bkwy6jtfw().s[87]++, require('../utils/database'));
    const healthResult =
    /* istanbul ignore next */
    (cov_1bkwy6jtfw().s[88]++, await healthCheck());
    const optimizer =
    /* istanbul ignore next */
    (cov_1bkwy6jtfw().s[89]++, new DatabaseOptimizer());
    const metrics =
    /* istanbul ignore next */
    (cov_1bkwy6jtfw().s[90]++, await optimizer.calculatePerformanceMetrics());
    const healthStatus =
    /* istanbul ignore next */
    (cov_1bkwy6jtfw().s[91]++, {
      database: healthResult,
      performance: {
        cacheHitRatio: parseFloat(metrics.cacheHitRatio),
        connectionCount:
        /* istanbul ignore next */
        (cov_1bkwy6jtfw().b[19][0]++, metrics.connectionStates?.reduce((sum, state) => {
          /* istanbul ignore next */
          cov_1bkwy6jtfw().f[20]++;
          cov_1bkwy6jtfw().s[92]++;
          return sum + state.count;
        }, 0)) ||
        /* istanbul ignore next */
        (cov_1bkwy6jtfw().b[19][1]++, 0),
        databaseSize: metrics.databaseSize
      },
      status:
      /* istanbul ignore next */
      (cov_1bkwy6jtfw().b[21][0]++, healthResult.status === 'healthy') &&
      /* istanbul ignore next */
      (cov_1bkwy6jtfw().b[21][1]++, parseFloat(metrics.cacheHitRatio) > 90) ?
      /* istanbul ignore next */
      (cov_1bkwy6jtfw().b[20][0]++, 'healthy') :
      /* istanbul ignore next */
      (cov_1bkwy6jtfw().b[20][1]++, 'degraded'),
      timestamp: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_1bkwy6jtfw().s[93]++;
    res.success(healthStatus, {
      requestId
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1bkwy6jtfw().s[94]++;
    console.error(`❌ [${requestId}] Database health check failed:`, {
      error: error.message
    });
    /* istanbul ignore next */
    cov_1bkwy6jtfw().s[95]++;
    res.serverError('Database health check failed', {
      requestId,
      originalError: process.env.NODE_ENV === 'development' ?
      /* istanbul ignore next */
      (cov_1bkwy6jtfw().b[22][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1bkwy6jtfw().b[22][1]++, undefined)
    });
  }
});
/* istanbul ignore next */
cov_1bkwy6jtfw().s[96]++;
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,