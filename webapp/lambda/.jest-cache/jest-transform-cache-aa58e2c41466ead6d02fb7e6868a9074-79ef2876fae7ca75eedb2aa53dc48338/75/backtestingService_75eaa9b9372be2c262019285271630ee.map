{"version":3,"names":["TechnicalAnalysisService","require","BacktestingService","constructor","technicalAnalysis","strategies","rsiStrategy","bind","macdStrategy","bollingerStrategy","multiIndicatorStrategy","meanReversionStrategy","momentumStrategy","runBacktest","data","strategy","options","initialCapital","commission","slippage","maxPositionSize","riskPerTrade","stopLoss","takeProfit","startDate","endDate","length","Error","filteredData","filterDataByDate","state","capital","position","trades","portfolio","cash","holdings","totalValue","metrics","totalTrades","winningTrades","losingTrades","totalReturn","maxDrawdown","sharpeRatio","winRate","avgWin","avgLoss","profitFactor","dailyReturns","portfolioHistory","i","currentData","slice","currentPrice","close","currentDate","timestamp","date","exitSignal","checkExitConditions","executeExit","reason","signal","action","executeEntry","portfolioValue","calculatePortfolioValue","prevValue","value","dailyReturn","push","finalPrice","finalDate","calculateMetrics","parameters","finalValue","summary","generateSummary","period","start","end","days","rsiResult","calculateRSI","currentRSI","current","toFixed","confidence","Math","min","indicator","macdResult","calculateMACD","crossover","error","bbResult","calculateBollingerBands","generateTradingSignal","overallSignal","recommendation","prices","map","d","mean","reduce","sum","price","deviation","abs","sma10","calculateSMA","sma20","values","sma10Current","sma20Current","adjustedPrice","availableCash","maxInvestment","shares","floor","investmentAmount","commissionCost","totalCost","type","entryPrice","entryDate","console","log","proceeds","netProceeds","pnl","trade","exitDate","exitPrice","pnlPercent","duration","calculateTradeDuration","entryReason","exitReason","priceChange","entry","Date","exit","returns","filter","t","peak","forEach","snapshot","drawdown","meanReturn","r","variance","pow","stdDev","sqrt","performance","profitability","risk","generateRecommendation","keyStats","item","getAvailableStrategies","Object","keys","key","id","name","replace","toLowerCase","l","toUpperCase","description","getStrategyDescription","descriptions","module","exports"],"sources":["backtestingService.js"],"sourcesContent":["// Backtesting Service\n// Framework for testing trading strategies against historical data\n\nconst TechnicalAnalysisService = require('./technicalAnalysisService');\n\nclass BacktestingService {\n  constructor() {\n    this.technicalAnalysis = new TechnicalAnalysisService();\n    this.strategies = {\n      'RSI_STRATEGY': this.rsiStrategy.bind(this),\n      'MACD_STRATEGY': this.macdStrategy.bind(this),\n      'BOLLINGER_STRATEGY': this.bollingerStrategy.bind(this),\n      'MULTI_INDICATOR': this.multiIndicatorStrategy.bind(this),\n      'MEAN_REVERSION': this.meanReversionStrategy.bind(this),\n      'MOMENTUM': this.momentumStrategy.bind(this)\n    };\n  }\n\n  // Main backtesting method\n  async runBacktest(data, strategy, options = {}) {\n    const {\n      initialCapital = 10000,\n      commission = 0.001, // 0.1%\n      slippage = 0.001,   // 0.1%\n      maxPositionSize = 1.0, // 100% of capital\n      riskPerTrade = 0.02,   // 2% risk per trade\n      stopLoss = 0.05,       // 5% stop loss\n      takeProfit = 0.15,     // 15% take profit\n      startDate = null,\n      endDate = null\n    } = options;\n\n    // Validate inputs\n    if (!data || data.length === 0) {\n      throw new Error('No historical data provided');\n    }\n\n    if (!this.strategies[strategy]) {\n      throw new Error(`Unknown strategy: ${strategy}`);\n    }\n\n    // Filter data by date range if specified\n    let filteredData = data;\n    if (startDate || endDate) {\n      filteredData = this.filterDataByDate(data, startDate, endDate);\n    }\n\n    if (filteredData.length < 50) {\n      throw new Error('Insufficient data for backtesting (minimum 50 data points required)');\n    }\n\n    // Initialize backtest state\n    const state = {\n      capital: initialCapital,\n      position: null, // { type: 'LONG'|'SHORT', size, entryPrice, entryDate, stopLoss, takeProfit }\n      trades: [],\n      portfolio: {\n        cash: initialCapital,\n        holdings: 0,\n        totalValue: initialCapital\n      },\n      metrics: {\n        totalTrades: 0,\n        winningTrades: 0,\n        losingTrades: 0,\n        totalReturn: 0,\n        maxDrawdown: 0,\n        sharpeRatio: 0,\n        winRate: 0,\n        avgWin: 0,\n        avgLoss: 0,\n        profitFactor: 0\n      },\n      dailyReturns: [],\n      portfolioHistory: []\n    };\n\n    // Run strategy on each data point\n    for (let i = 50; i < filteredData.length; i++) {\n      const currentData = filteredData.slice(0, i + 1);\n      const currentPrice = filteredData[i].close;\n      const currentDate = filteredData[i].timestamp || filteredData[i].date;\n\n      // Check for stop loss or take profit\n      if (state.position) {\n        const exitSignal = this.checkExitConditions(state.position, currentPrice, {\n          stopLoss,\n          takeProfit\n        });\n\n        if (exitSignal) {\n          this.executeExit(state, currentPrice, currentDate, exitSignal.reason, {\n            commission,\n            slippage\n          });\n        }\n      }\n\n      // Generate trading signal\n      const signal = this.strategies[strategy](currentData, state, {\n        riskPerTrade,\n        maxPositionSize,\n        stopLoss,\n        takeProfit\n      });\n\n      // Execute trades based on signal\n      if (signal && !state.position) {\n        if (signal.action === 'BUY' || signal.action === 'SELL') {\n          this.executeEntry(state, signal, currentPrice, currentDate, {\n            commission,\n            slippage,\n            maxPositionSize\n          });\n        }\n      }\n\n      // Update portfolio value\n      const portfolioValue = this.calculatePortfolioValue(state, currentPrice);\n      state.portfolio.totalValue = portfolioValue;\n\n      // Record daily return\n      if (i > 50) {\n        const prevValue = state.portfolioHistory[state.portfolioHistory.length - 1]?.value || initialCapital;\n        const dailyReturn = (portfolioValue - prevValue) / prevValue;\n        state.dailyReturns.push(dailyReturn);\n      }\n\n      // Save portfolio snapshot\n      state.portfolioHistory.push({\n        date: currentDate,\n        value: portfolioValue,\n        cash: state.portfolio.cash,\n        holdings: state.portfolio.holdings,\n        position: state.position ? { ...state.position } : null\n      });\n    }\n\n    // Close any open position at the end\n    if (state.position) {\n      const finalPrice = filteredData[filteredData.length - 1].close;\n      const finalDate = filteredData[filteredData.length - 1].timestamp;\n      this.executeExit(state, finalPrice, finalDate, 'END_OF_BACKTEST', {\n        commission,\n        slippage\n      });\n    }\n\n    // Calculate final metrics\n    this.calculateMetrics(state, initialCapital);\n\n    return {\n      strategy,\n      parameters: options,\n      initialCapital,\n      finalValue: state.portfolio.totalValue,\n      totalReturn: ((state.portfolio.totalValue - initialCapital) / initialCapital) * 100,\n      trades: state.trades,\n      metrics: state.metrics,\n      portfolioHistory: state.portfolioHistory,\n      summary: this.generateSummary(state, initialCapital),\n      period: {\n        start: filteredData[0].timestamp || filteredData[0].date,\n        end: filteredData[filteredData.length - 1].timestamp || filteredData[filteredData.length - 1].date,\n        days: filteredData.length\n      }\n    };\n  }\n\n  // RSI Strategy\n  rsiStrategy(data, state, options) {\n    const rsiResult = this.technicalAnalysis.calculateRSI(data, 14);\n    const currentRSI = rsiResult.current.value;\n\n    if (currentRSI < 30) {\n      return {\n        action: 'BUY',\n        reason: `RSI oversold at ${currentRSI.toFixed(2)}`,\n        confidence: Math.min(((30 - currentRSI) / 10) * 100, 100),\n        indicator: 'RSI',\n        value: currentRSI\n      };\n    } else if (currentRSI > 70) {\n      return {\n        action: 'SELL',\n        reason: `RSI overbought at ${currentRSI.toFixed(2)}`,\n        confidence: Math.min(((currentRSI - 70) / 10) * 100, 100),\n        indicator: 'RSI',\n        value: currentRSI\n      };\n    }\n\n    return null;\n  }\n\n  // MACD Strategy\n  macdStrategy(data, state, options) {\n    try {\n      const macdResult = this.technicalAnalysis.calculateMACD(data);\n      const current = macdResult.current;\n\n      if (current.crossover === 'BULLISH_CROSSOVER') {\n        return {\n          action: 'BUY',\n          reason: 'MACD bullish crossover',\n          confidence: 80,\n          indicator: 'MACD',\n          value: current\n        };\n      } else if (current.crossover === 'BEARISH_CROSSOVER') {\n        return {\n          action: 'SELL',\n          reason: 'MACD bearish crossover',\n          confidence: 80,\n          indicator: 'MACD',\n          value: current\n        };\n      }\n    } catch (error) {\n      // Not enough data for MACD yet\n      return null;\n    }\n\n    return null;\n  }\n\n  // Bollinger Bands Strategy\n  bollingerStrategy(data, state, options) {\n    const bbResult = this.technicalAnalysis.calculateBollingerBands(data, 20, 2);\n    const current = bbResult.current;\n\n    if (current.position === 'BELOW_LOWER') {\n      return {\n        action: 'BUY',\n        reason: 'Price below lower Bollinger Band',\n        confidence: 70,\n        indicator: 'BOLLINGER_BANDS',\n        value: current\n      };\n    } else if (current.position === 'ABOVE_UPPER') {\n      return {\n        action: 'SELL',\n        reason: 'Price above upper Bollinger Band',\n        confidence: 70,\n        indicator: 'BOLLINGER_BANDS',\n        value: current\n      };\n    }\n\n    return null;\n  }\n\n  // Multi-Indicator Strategy\n  multiIndicatorStrategy(data, state, options) {\n    const signal = this.technicalAnalysis.generateTradingSignal(data, ['RSI', 'MACD', 'BOLLINGER_BANDS']);\n    \n    if (signal.confidence > 60) {\n      if (signal.overallSignal === 'BUY') {\n        return {\n          action: 'BUY',\n          reason: signal.recommendation,\n          confidence: signal.confidence,\n          indicator: 'MULTI',\n          value: signal\n        };\n      } else if (signal.overallSignal === 'SELL') {\n        return {\n          action: 'SELL',\n          reason: signal.recommendation,\n          confidence: signal.confidence,\n          indicator: 'MULTI',\n          value: signal\n        };\n      }\n    }\n\n    return null;\n  }\n\n  // Mean Reversion Strategy\n  meanReversionStrategy(data, state, options) {\n    if (data.length < 50) return null;\n\n    const prices = data.slice(-50).map(d => d.close);\n    const mean = prices.reduce((sum, price) => sum + price, 0) / prices.length;\n    const currentPrice = data[data.length - 1].close;\n    const deviation = Math.abs(currentPrice - mean) / mean;\n\n    if (deviation > 0.05) { // 5% deviation from mean\n      if (currentPrice < mean) {\n        return {\n          action: 'BUY',\n          reason: `Price ${(deviation * 100).toFixed(1)}% below 50-period mean`,\n          confidence: Math.min(deviation * 1000, 100),\n          indicator: 'MEAN_REVERSION',\n          value: { currentPrice, mean, deviation }\n        };\n      } else {\n        return {\n          action: 'SELL',\n          reason: `Price ${(deviation * 100).toFixed(1)}% above 50-period mean`,\n          confidence: Math.min(deviation * 1000, 100),\n          indicator: 'MEAN_REVERSION',\n          value: { currentPrice, mean, deviation }\n        };\n      }\n    }\n\n    return null;\n  }\n\n  // Momentum Strategy\n  momentumStrategy(data, state, options) {\n    if (data.length < 20) return null;\n\n    const sma10 = this.technicalAnalysis.calculateSMA(data.slice(-20), 10);\n    const sma20 = this.technicalAnalysis.calculateSMA(data.slice(-20), 20);\n\n    if (sma10.values.length > 0 && sma20.values.length > 0) {\n      const sma10Current = sma10.current.value;\n      const sma20Current = sma20.current.value;\n\n      if (sma10Current > sma20Current * 1.02) { // 2% above\n        return {\n          action: 'BUY',\n          reason: 'SMA10 above SMA20 - momentum signal',\n          confidence: 65,\n          indicator: 'MOMENTUM',\n          value: { sma10: sma10Current, sma20: sma20Current }\n        };\n      } else if (sma10Current < sma20Current * 0.98) { // 2% below\n        return {\n          action: 'SELL',\n          reason: 'SMA10 below SMA20 - momentum signal',\n          confidence: 65,\n          indicator: 'MOMENTUM',\n          value: { sma10: sma10Current, sma20: sma20Current }\n        };\n      }\n    }\n\n    return null;\n  }\n\n  // Execute entry trade\n  executeEntry(state, signal, price, date, options) {\n    const { commission, slippage, maxPositionSize } = options;\n    const adjustedPrice = signal.action === 'BUY' ? price * (1 + slippage) : price * (1 - slippage);\n    \n    // Calculate position size based on available capital\n    const availableCash = state.portfolio.cash;\n    const maxInvestment = availableCash * maxPositionSize;\n    const shares = Math.floor(maxInvestment / adjustedPrice);\n    const investmentAmount = shares * adjustedPrice;\n    const commissionCost = investmentAmount * commission;\n    const totalCost = investmentAmount + commissionCost;\n\n    if (totalCost > availableCash || shares === 0) {\n      return; // Not enough capital\n    }\n\n    // Create position\n    state.position = {\n      type: signal.action === 'BUY' ? 'LONG' : 'SHORT',\n      shares,\n      entryPrice: adjustedPrice,\n      entryDate: date,\n      signal: signal.reason,\n      confidence: signal.confidence,\n      indicator: signal.indicator\n    };\n\n    // Update portfolio\n    if (signal.action === 'BUY') {\n      state.portfolio.cash -= totalCost;\n      state.portfolio.holdings += shares;\n    } else {\n      // For short position, we receive cash but owe shares\n      state.portfolio.cash += investmentAmount - commissionCost;\n      state.portfolio.holdings -= shares;\n    }\n\n    console.log(`Entry: ${signal.action} ${shares} shares at $${adjustedPrice.toFixed(2)} (${signal.reason})`);\n  }\n\n  // Execute exit trade\n  executeExit(state, price, date, reason, options) {\n    if (!state.position) return;\n\n    const { commission, slippage } = options;\n    const adjustedPrice = state.position.type === 'LONG' ? price * (1 - slippage) : price * (1 + slippage);\n    const shares = Math.abs(state.position.shares);\n    const proceeds = shares * adjustedPrice;\n    const commissionCost = proceeds * commission;\n    const netProceeds = proceeds - commissionCost;\n\n    // Calculate P&L\n    let pnl;\n    if (state.position.type === 'LONG') {\n      pnl = (adjustedPrice - state.position.entryPrice) * shares - (commissionCost * 2);\n      state.portfolio.cash += netProceeds;\n      state.portfolio.holdings -= shares;\n    } else {\n      pnl = (state.position.entryPrice - adjustedPrice) * shares - (commissionCost * 2);\n      state.portfolio.cash -= proceeds + commissionCost;\n      state.portfolio.holdings += shares;\n    }\n\n    // Record trade\n    const trade = {\n      entryDate: state.position.entryDate,\n      exitDate: date,\n      type: state.position.type,\n      shares,\n      entryPrice: state.position.entryPrice,\n      exitPrice: adjustedPrice,\n      pnl,\n      pnlPercent: (pnl / (state.position.entryPrice * shares)) * 100,\n      duration: this.calculateTradeDuration(state.position.entryDate, date),\n      entryReason: state.position.signal,\n      exitReason: reason,\n      confidence: state.position.confidence,\n      indicator: state.position.indicator\n    };\n\n    state.trades.push(trade);\n    state.metrics.totalTrades++;\n\n    if (pnl > 0) {\n      state.metrics.winningTrades++;\n    } else {\n      state.metrics.losingTrades++;\n    }\n\n    console.log(`Exit: ${state.position.type} ${shares} shares at $${adjustedPrice.toFixed(2)} (${reason}) - P&L: $${pnl.toFixed(2)}`);\n\n    // Clear position\n    state.position = null;\n  }\n\n  // Check exit conditions\n  checkExitConditions(position, currentPrice, options) {\n    const { stopLoss, takeProfit } = options;\n\n    if (position.type === 'LONG') {\n      const priceChange = (currentPrice - position.entryPrice) / position.entryPrice;\n      \n      if (priceChange <= -stopLoss) {\n        return { reason: 'STOP_LOSS', priceChange };\n      } else if (priceChange >= takeProfit) {\n        return { reason: 'TAKE_PROFIT', priceChange };\n      }\n    } else { // SHORT\n      const priceChange = (position.entryPrice - currentPrice) / position.entryPrice;\n      \n      if (priceChange <= -stopLoss) {\n        return { reason: 'STOP_LOSS', priceChange };\n      } else if (priceChange >= takeProfit) {\n        return { reason: 'TAKE_PROFIT', priceChange };\n      }\n    }\n\n    return null;\n  }\n\n  // Calculate portfolio value\n  calculatePortfolioValue(state, currentPrice) {\n    let totalValue = state.portfolio.cash;\n    \n    if (state.position) {\n      if (state.position.type === 'LONG') {\n        totalValue += state.portfolio.holdings * currentPrice;\n      } else {\n        // For short positions, we owe shares\n        totalValue -= Math.abs(state.portfolio.holdings) * currentPrice;\n      }\n    }\n\n    return totalValue;\n  }\n\n  // Calculate trade duration\n  calculateTradeDuration(entryDate, exitDate) {\n    const entry = new Date(entryDate);\n    const exit = new Date(exitDate);\n    return Math.floor((exit - entry) / (1000 * 60 * 60 * 24)); // Days\n  }\n\n  // Calculate performance metrics\n  calculateMetrics(state, initialCapital) {\n    const trades = state.trades;\n    const returns = state.dailyReturns;\n\n    if (trades.length === 0) {\n      return;\n    }\n\n    // Basic metrics\n    state.metrics.winRate = (state.metrics.winningTrades / state.metrics.totalTrades) * 100;\n    \n    const winningTrades = trades.filter(t => t.pnl > 0);\n    const losingTrades = trades.filter(t => t.pnl < 0);\n    \n    state.metrics.avgWin = winningTrades.length > 0 ? \n      winningTrades.reduce((sum, t) => sum + t.pnl, 0) / winningTrades.length : 0;\n    \n    state.metrics.avgLoss = losingTrades.length > 0 ? \n      Math.abs(losingTrades.reduce((sum, t) => sum + t.pnl, 0) / losingTrades.length) : 0;\n    \n    state.metrics.profitFactor = state.metrics.avgLoss > 0 ? \n      Math.abs(state.metrics.avgWin / state.metrics.avgLoss) : 0;\n\n    // Total return\n    state.metrics.totalReturn = ((state.portfolio.totalValue - initialCapital) / initialCapital) * 100;\n\n    // Max drawdown\n    let peak = initialCapital;\n    let maxDrawdown = 0;\n    \n    state.portfolioHistory.forEach(snapshot => {\n      if (snapshot.value > peak) {\n        peak = snapshot.value;\n      }\n      const drawdown = (peak - snapshot.value) / peak;\n      if (drawdown > maxDrawdown) {\n        maxDrawdown = drawdown;\n      }\n    });\n    \n    state.metrics.maxDrawdown = maxDrawdown * 100;\n\n    // Sharpe ratio (simplified)\n    if (returns.length > 0) {\n      const meanReturn = returns.reduce((sum, r) => sum + r, 0) / returns.length;\n      const variance = returns.reduce((sum, r) => sum + Math.pow(r - meanReturn, 2), 0) / returns.length;\n      const stdDev = Math.sqrt(variance);\n      state.metrics.sharpeRatio = stdDev > 0 ? (meanReturn / stdDev) * Math.sqrt(252) : 0; // Annualized\n    }\n  }\n\n  // Generate summary\n  generateSummary(state, initialCapital) {\n    const finalValue = state.portfolio.totalValue;\n    const totalReturn = ((finalValue - initialCapital) / initialCapital) * 100;\n\n    return {\n      performance: totalReturn > 0 ? 'POSITIVE' : 'NEGATIVE',\n      profitability: state.metrics.winRate > 50 ? 'PROFITABLE' : 'UNPROFITABLE',\n      risk: state.metrics.maxDrawdown < 10 ? 'LOW' : \n            state.metrics.maxDrawdown < 20 ? 'MODERATE' : 'HIGH',\n      recommendation: this.generateRecommendation(state.metrics),\n      keyStats: {\n        totalReturn: `${totalReturn.toFixed(2)}%`,\n        winRate: `${state.metrics.winRate.toFixed(1)}%`,\n        maxDrawdown: `${state.metrics.maxDrawdown.toFixed(2)}%`,\n        sharpeRatio: state.metrics.sharpeRatio.toFixed(2),\n        totalTrades: state.metrics.totalTrades,\n        profitFactor: state.metrics.profitFactor.toFixed(2)\n      }\n    };\n  }\n\n  generateRecommendation(metrics) {\n    const { totalReturn, winRate, maxDrawdown, sharpeRatio, profitFactor } = metrics;\n\n    if (totalReturn > 15 && winRate > 60 && maxDrawdown < 15 && sharpeRatio > 1) {\n      return 'STRONG BUY - Excellent risk-adjusted returns';\n    } else if (totalReturn > 10 && winRate > 55 && maxDrawdown < 20) {\n      return 'BUY - Good performance with acceptable risk';\n    } else if (totalReturn > 5 && winRate > 50) {\n      return 'HOLD - Modest positive returns';\n    } else if (totalReturn > 0) {\n      return 'WEAK HOLD - Marginal performance';\n    } else {\n      return 'AVOID - Poor performance';\n    }\n  }\n\n  // Utility method to filter data by date\n  filterDataByDate(data, startDate, endDate) {\n    return data.filter(item => {\n      const date = new Date(item.timestamp || item.date);\n      const start = startDate ? new Date(startDate) : new Date(0);\n      const end = endDate ? new Date(endDate) : new Date();\n      return date >= start && date <= end;\n    });\n  }\n\n  // Get available strategies\n  getAvailableStrategies() {\n    return Object.keys(this.strategies).map(key => ({\n      id: key,\n      name: key.replace(/_/g, ' ').toLowerCase().replace(/\\b\\w/g, l => l.toUpperCase()),\n      description: this.getStrategyDescription(key)\n    }));\n  }\n\n  getStrategyDescription(strategy) {\n    const descriptions = {\n      'RSI_STRATEGY': 'Buys when RSI < 30 (oversold) and sells when RSI > 70 (overbought)',\n      'MACD_STRATEGY': 'Trades on MACD line crossovers with signal line',\n      'BOLLINGER_STRATEGY': 'Mean reversion strategy using Bollinger Band extremes',\n      'MULTI_INDICATOR': 'Combines RSI, MACD, and Bollinger Bands for signal consensus',\n      'MEAN_REVERSION': 'Trades when price deviates significantly from moving average',\n      'MOMENTUM': 'Follows trend using SMA crossovers'\n    };\n    return descriptions[strategy] || 'Custom trading strategy';\n  }\n}\n\nmodule.exports = BacktestingService;"],"mappings":"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","ignoreList":[]}