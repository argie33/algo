a982afb6da371e5faf7fed491eca1fec
/* istanbul ignore next */
function cov_2erqkwbfze() {
  var path = "/home/stocks/algo/webapp/lambda/routes/market-data.js";
  var hash = "d25bdbdcdcdb055c6e335d1ea4113fd05a6816a1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/routes/market-data.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 34
        }
      },
      "1": {
        start: {
          line: 2,
          column: 30
        },
        end: {
          line: 2,
          column: 59
        }
      },
      "2": {
        start: {
          line: 3,
          column: 22
        },
        end: {
          line: 3,
          column: 61
        }
      },
      "3": {
        start: {
          line: 4,
          column: 22
        },
        end: {
          line: 4,
          column: 55
        }
      },
      "4": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 39
        }
      },
      "5": {
        start: {
          line: 12,
          column: 18
        },
        end: {
          line: 12,
          column: 38
        }
      },
      "6": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 14,
          column: 31
        }
      },
      "7": {
        start: {
          line: 17,
          column: 36
        },
        end: {
          line: 118,
          column: 1
        }
      },
      "8": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 49
        }
      },
      "9": {
        start: {
          line: 23,
          column: 39
        },
        end: {
          line: 23,
          column: 49
        }
      },
      "10": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 29,
          column: 21
        }
      },
      "11": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 26,
          column: 47
        }
      },
      "12": {
        start: {
          line: 27,
          column: 23
        },
        end: {
          line: 27,
          column: 35
        }
      },
      "13": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 33
        }
      },
      "14": {
        start: {
          line: 32,
          column: 20
        },
        end: {
          line: 32,
          column: 33
        }
      },
      "15": {
        start: {
          line: 33,
          column: 24
        },
        end: {
          line: 33,
          column: 40
        }
      },
      "16": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 36,
          column: 66
        }
      },
      "17": {
        start: {
          line: 36,
          column: 34
        },
        end: {
          line: 36,
          column: 64
        }
      },
      "18": {
        start: {
          line: 47,
          column: 28
        },
        end: {
          line: 47,
          column: 55
        }
      },
      "19": {
        start: {
          line: 52,
          column: 28
        },
        end: {
          line: 52,
          column: 92
        }
      },
      "20": {
        start: {
          line: 53,
          column: 28
        },
        end: {
          line: 53,
          column: 124
        }
      },
      "21": {
        start: {
          line: 58,
          column: 28
        },
        end: {
          line: 58,
          column: 71
        }
      },
      "22": {
        start: {
          line: 59,
          column: 28
        },
        end: {
          line: 59,
          column: 64
        }
      },
      "23": {
        start: {
          line: 64,
          column: 28
        },
        end: {
          line: 64,
          column: 71
        }
      },
      "24": {
        start: {
          line: 65,
          column: 28
        },
        end: {
          line: 65,
          column: 64
        }
      },
      "25": {
        start: {
          line: 70,
          column: 28
        },
        end: {
          line: 70,
          column: 95
        }
      },
      "26": {
        start: {
          line: 71,
          column: 28
        },
        end: {
          line: 71,
          column: 67
        }
      },
      "27": {
        start: {
          line: 81,
          column: 28
        },
        end: {
          line: 81,
          column: 55
        }
      },
      "28": {
        start: {
          line: 86,
          column: 28
        },
        end: {
          line: 86,
          column: 71
        }
      },
      "29": {
        start: {
          line: 87,
          column: 28
        },
        end: {
          line: 87,
          column: 64
        }
      },
      "30": {
        start: {
          line: 92,
          column: 28
        },
        end: {
          line: 92,
          column: 71
        }
      },
      "31": {
        start: {
          line: 93,
          column: 28
        },
        end: {
          line: 93,
          column: 64
        }
      },
      "32": {
        start: {
          line: 98,
          column: 28
        },
        end: {
          line: 98,
          column: 95
        }
      },
      "33": {
        start: {
          line: 99,
          column: 28
        },
        end: {
          line: 99,
          column: 67
        }
      },
      "34": {
        start: {
          line: 107,
          column: 28
        },
        end: {
          line: 107,
          column: 71
        }
      },
      "35": {
        start: {
          line: 108,
          column: 28
        },
        end: {
          line: 108,
          column: 87
        }
      },
      "36": {
        start: {
          line: 113,
          column: 28
        },
        end: {
          line: 113,
          column: 71
        }
      },
      "37": {
        start: {
          line: 114,
          column: 28
        },
        end: {
          line: 114,
          column: 87
        }
      },
      "38": {
        start: {
          line: 121,
          column: 0
        },
        end: {
          line: 121,
          column: 83
        }
      },
      "39": {
        start: {
          line: 122,
          column: 0
        },
        end: {
          line: 122,
          column: 81
        }
      },
      "40": {
        start: {
          line: 123,
          column: 0
        },
        end: {
          line: 123,
          column: 83
        }
      },
      "41": {
        start: {
          line: 124,
          column: 0
        },
        end: {
          line: 124,
          column: 85
        }
      },
      "42": {
        start: {
          line: 127,
          column: 0
        },
        end: {
          line: 141,
          column: 3
        }
      },
      "43": {
        start: {
          line: 128,
          column: 2
        },
        end: {
          line: 140,
          column: 5
        }
      },
      "44": {
        start: {
          line: 144,
          column: 0
        },
        end: {
          line: 403,
          column: 3
        }
      },
      "45": {
        start: {
          line: 145,
          column: 20
        },
        end: {
          line: 145,
          column: 64
        }
      },
      "46": {
        start: {
          line: 146,
          column: 23
        },
        end: {
          line: 146,
          column: 33
        }
      },
      "47": {
        start: {
          line: 148,
          column: 2
        },
        end: {
          line: 402,
          column: 3
        }
      },
      "48": {
        start: {
          line: 149,
          column: 19
        },
        end: {
          line: 149,
          column: 32
        }
      },
      "49": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 152,
          column: 5
        }
      },
      "50": {
        start: {
          line: 151,
          column: 6
        },
        end: {
          line: 151,
          column: 54
        }
      },
      "51": {
        start: {
          line: 153,
          column: 4
        },
        end: {
          line: 158,
          column: 7
        }
      },
      "52": {
        start: {
          line: 161,
          column: 4
        },
        end: {
          line: 161,
          column: 89
        }
      },
      "53": {
        start: {
          line: 162,
          column: 29
        },
        end: {
          line: 162,
          column: 39
        }
      },
      "54": {
        start: {
          line: 163,
          column: 24
        },
        end: {
          line: 163,
          column: 61
        }
      },
      "55": {
        start: {
          line: 164,
          column: 32
        },
        end: {
          line: 164,
          column: 61
        }
      },
      "56": {
        start: {
          line: 166,
          column: 25
        },
        end: {
          line: 176,
          column: 5
        }
      },
      "57": {
        start: {
          line: 179,
          column: 4
        },
        end: {
          line: 351,
          column: 5
        }
      },
      "58": {
        start: {
          line: 180,
          column: 6
        },
        end: {
          line: 184,
          column: 9
        }
      },
      "59": {
        start: {
          line: 186,
          column: 6
        },
        end: {
          line: 186,
          column: 47
        }
      },
      "60": {
        start: {
          line: 187,
          column: 6
        },
        end: {
          line: 192,
          column: 8
        }
      },
      "61": {
        start: {
          line: 194,
          column: 6
        },
        end: {
          line: 199,
          column: 9
        }
      },
      "62": {
        start: {
          line: 201,
          column: 6
        },
        end: {
          line: 207,
          column: 8
        }
      },
      "63": {
        start: {
          line: 210,
          column: 6
        },
        end: {
          line: 210,
          column: 75
        }
      },
      "64": {
        start: {
          line: 211,
          column: 30
        },
        end: {
          line: 211,
          column: 40
        }
      },
      "65": {
        start: {
          line: 213,
          column: 6
        },
        end: {
          line: 350,
          column: 7
        }
      },
      "66": {
        start: {
          line: 214,
          column: 23
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "67": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 221,
          column: 70
        }
      },
      "68": {
        start: {
          line: 222,
          column: 33
        },
        end: {
          line: 222,
          column: 43
        }
      },
      "69": {
        start: {
          line: 223,
          column: 24
        },
        end: {
          line: 228,
          column: 10
        }
      },
      "70": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 78
        }
      },
      "71": {
        start: {
          line: 226,
          column: 29
        },
        end: {
          line: 226,
          column: 70
        }
      },
      "72": {
        start: {
          line: 229,
          column: 36
        },
        end: {
          line: 229,
          column: 65
        }
      },
      "73": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 245,
          column: 9
        }
      },
      "74": {
        start: {
          line: 232,
          column: 10
        },
        end: {
          line: 236,
          column: 13
        }
      },
      "75": {
        start: {
          line: 238,
          column: 10
        },
        end: {
          line: 244,
          column: 12
        }
      },
      "76": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 74
        }
      },
      "77": {
        start: {
          line: 249,
          column: 31
        },
        end: {
          line: 249,
          column: 41
        }
      },
      "78": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 297,
          column: 9
        }
      },
      "79": {
        start: {
          line: 252,
          column: 28
        },
        end: {
          line: 257,
          column: 12
        }
      },
      "80": {
        start: {
          line: 255,
          column: 14
        },
        end: {
          line: 255,
          column: 77
        }
      },
      "81": {
        start: {
          line: 255,
          column: 31
        },
        end: {
          line: 255,
          column: 70
        }
      },
      "82": {
        start: {
          line: 258,
          column: 36
        },
        end: {
          line: 258,
          column: 63
        }
      },
      "83": {
        start: {
          line: 260,
          column: 10
        },
        end: {
          line: 279,
          column: 11
        }
      },
      "84": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 266,
          column: 15
        }
      },
      "85": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 278,
          column: 14
        }
      },
      "86": {
        start: {
          line: 281,
          column: 36
        },
        end: {
          line: 281,
          column: 63
        }
      },
      "87": {
        start: {
          line: 282,
          column: 10
        },
        end: {
          line: 285,
          column: 13
        }
      },
      "88": {
        start: {
          line: 287,
          column: 10
        },
        end: {
          line: 292,
          column: 12
        }
      },
      "89": {
        start: {
          line: 294,
          column: 10
        },
        end: {
          line: 296,
          column: 11
        }
      },
      "90": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 295,
          column: 53
        }
      },
      "91": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 300,
          column: 78
        }
      },
      "92": {
        start: {
          line: 301,
          column: 34
        },
        end: {
          line: 301,
          column: 44
        }
      },
      "93": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 330,
          column: 9
        }
      },
      "94": {
        start: {
          line: 304,
          column: 33
        },
        end: {
          line: 309,
          column: 12
        }
      },
      "95": {
        start: {
          line: 307,
          column: 14
        },
        end: {
          line: 307,
          column: 80
        }
      },
      "96": {
        start: {
          line: 307,
          column: 31
        },
        end: {
          line: 307,
          column: 73
        }
      },
      "97": {
        start: {
          line: 310,
          column: 39
        },
        end: {
          line: 310,
          column: 69
        }
      },
      "98": {
        start: {
          line: 312,
          column: 10
        },
        end: {
          line: 312,
          column: 112
        }
      },
      "99": {
        start: {
          line: 314,
          column: 10
        },
        end: {
          line: 318,
          column: 12
        }
      },
      "100": {
        start: {
          line: 320,
          column: 39
        },
        end: {
          line: 320,
          column: 69
        }
      },
      "101": {
        start: {
          line: 321,
          column: 10
        },
        end: {
          line: 323,
          column: 13
        }
      },
      "102": {
        start: {
          line: 325,
          column: 10
        },
        end: {
          line: 329,
          column: 12
        }
      },
      "103": {
        start: {
          line: 332,
          column: 35
        },
        end: {
          line: 332,
          column: 63
        }
      },
      "104": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 333,
          column: 70
        }
      },
      "105": {
        start: {
          line: 336,
          column: 35
        },
        end: {
          line: 336,
          column: 63
        }
      },
      "106": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 341,
          column: 11
        }
      },
      "107": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 343,
          column: 50
        }
      },
      "108": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 349,
          column: 10
        }
      },
      "109": {
        start: {
          line: 354,
          column: 4
        },
        end: {
          line: 358,
          column: 6
        }
      },
      "110": {
        start: {
          line: 360,
          column: 26
        },
        end: {
          line: 360,
          column: 51
        }
      },
      "111": {
        start: {
          line: 361,
          column: 4
        },
        end: {
          line: 361,
          column: 63
        }
      },
      "112": {
        start: {
          line: 363,
          column: 4
        },
        end: {
          line: 369,
          column: 7
        }
      },
      "113": {
        start: {
          line: 367,
          column: 79
        },
        end: {
          line: 367,
          column: 91
        }
      },
      "114": {
        start: {
          line: 372,
          column: 21
        },
        end: {
          line: 372,
          column: 24
        }
      },
      "115": {
        start: {
          line: 373,
          column: 4
        },
        end: {
          line: 377,
          column: 5
        }
      },
      "116": {
        start: {
          line: 374,
          column: 6
        },
        end: {
          line: 374,
          column: 23
        }
      },
      "117": {
        start: {
          line: 375,
          column: 11
        },
        end: {
          line: 377,
          column: 5
        }
      },
      "118": {
        start: {
          line: 376,
          column: 6
        },
        end: {
          line: 376,
          column: 23
        }
      },
      "119": {
        start: {
          line: 379,
          column: 4
        },
        end: {
          line: 382,
          column: 7
        }
      },
      "120": {
        start: {
          line: 385,
          column: 26
        },
        end: {
          line: 385,
          column: 51
        }
      },
      "121": {
        start: {
          line: 386,
          column: 4
        },
        end: {
          line: 390,
          column: 7
        }
      },
      "122": {
        start: {
          line: 392,
          column: 4
        },
        end: {
          line: 401,
          column: 7
        }
      },
      "123": {
        start: {
          line: 406,
          column: 0
        },
        end: {
          line: 406,
          column: 30
        }
      },
      "124": {
        start: {
          line: 409,
          column: 0
        },
        end: {
          line: 445,
          column: 3
        }
      },
      "125": {
        start: {
          line: 410,
          column: 2
        },
        end: {
          line: 444,
          column: 3
        }
      },
      "126": {
        start: {
          line: 411,
          column: 19
        },
        end: {
          line: 411,
          column: 32
        }
      },
      "127": {
        start: {
          line: 412,
          column: 4
        },
        end: {
          line: 414,
          column: 5
        }
      },
      "128": {
        start: {
          line: 413,
          column: 6
        },
        end: {
          line: 413,
          column: 54
        }
      },
      "129": {
        start: {
          line: 415,
          column: 24
        },
        end: {
          line: 415,
          column: 37
        }
      },
      "130": {
        start: {
          line: 417,
          column: 4
        },
        end: {
          line: 417,
          column: 91
        }
      },
      "131": {
        start: {
          line: 420,
          column: 24
        },
        end: {
          line: 420,
          column: 61
        }
      },
      "132": {
        start: {
          line: 422,
          column: 4
        },
        end: {
          line: 424,
          column: 5
        }
      },
      "133": {
        start: {
          line: 423,
          column: 6
        },
        end: {
          line: 423,
          column: 103
        }
      },
      "134": {
        start: {
          line: 427,
          column: 19
        },
        end: {
          line: 431,
          column: 5
        }
      },
      "135": {
        start: {
          line: 434,
          column: 25
        },
        end: {
          line: 434,
          column: 43
        }
      },
      "136": {
        start: {
          line: 435,
          column: 19
        },
        end: {
          line: 435,
          column: 60
        }
      },
      "137": {
        start: {
          line: 437,
          column: 4
        },
        end: {
          line: 440,
          column: 7
        }
      },
      "138": {
        start: {
          line: 442,
          column: 4
        },
        end: {
          line: 442,
          column: 54
        }
      },
      "139": {
        start: {
          line: 443,
          column: 4
        },
        end: {
          line: 443,
          column: 65
        }
      },
      "140": {
        start: {
          line: 448,
          column: 0
        },
        end: {
          line: 491,
          column: 3
        }
      },
      "141": {
        start: {
          line: 449,
          column: 2
        },
        end: {
          line: 490,
          column: 3
        }
      },
      "142": {
        start: {
          line: 450,
          column: 19
        },
        end: {
          line: 450,
          column: 32
        }
      },
      "143": {
        start: {
          line: 451,
          column: 4
        },
        end: {
          line: 453,
          column: 5
        }
      },
      "144": {
        start: {
          line: 452,
          column: 6
        },
        end: {
          line: 452,
          column: 54
        }
      },
      "145": {
        start: {
          line: 454,
          column: 53
        },
        end: {
          line: 454,
          column: 66
        }
      },
      "146": {
        start: {
          line: 457,
          column: 24
        },
        end: {
          line: 457,
          column: 61
        }
      },
      "147": {
        start: {
          line: 459,
          column: 4
        },
        end: {
          line: 461,
          column: 5
        }
      },
      "148": {
        start: {
          line: 460,
          column: 6
        },
        end: {
          line: 460,
          column: 103
        }
      },
      "149": {
        start: {
          line: 464,
          column: 19
        },
        end: {
          line: 468,
          column: 5
        }
      },
      "150": {
        start: {
          line: 471,
          column: 19
        },
        end: {
          line: 474,
          column: 5
        }
      },
      "151": {
        start: {
          line: 476,
          column: 4
        },
        end: {
          line: 476,
          column: 36
        }
      },
      "152": {
        start: {
          line: 476,
          column: 15
        },
        end: {
          line: 476,
          column: 36
        }
      },
      "153": {
        start: {
          line: 477,
          column: 4
        },
        end: {
          line: 477,
          column: 30
        }
      },
      "154": {
        start: {
          line: 477,
          column: 13
        },
        end: {
          line: 477,
          column: 30
        }
      },
      "155": {
        start: {
          line: 479,
          column: 17
        },
        end: {
          line: 479,
          column: 67
        }
      },
      "156": {
        start: {
          line: 481,
          column: 4
        },
        end: {
          line: 486,
          column: 7
        }
      },
      "157": {
        start: {
          line: 488,
          column: 4
        },
        end: {
          line: 488,
          column: 52
        }
      },
      "158": {
        start: {
          line: 489,
          column: 4
        },
        end: {
          line: 489,
          column: 63
        }
      },
      "159": {
        start: {
          line: 494,
          column: 0
        },
        end: {
          line: 529,
          column: 3
        }
      },
      "160": {
        start: {
          line: 495,
          column: 2
        },
        end: {
          line: 528,
          column: 3
        }
      },
      "161": {
        start: {
          line: 496,
          column: 19
        },
        end: {
          line: 496,
          column: 32
        }
      },
      "162": {
        start: {
          line: 497,
          column: 4
        },
        end: {
          line: 499,
          column: 5
        }
      },
      "163": {
        start: {
          line: 498,
          column: 6
        },
        end: {
          line: 498,
          column: 54
        }
      },
      "164": {
        start: {
          line: 500,
          column: 23
        },
        end: {
          line: 500,
          column: 33
        }
      },
      "165": {
        start: {
          line: 501,
          column: 27
        },
        end: {
          line: 501,
          column: 36
        }
      },
      "166": {
        start: {
          line: 504,
          column: 24
        },
        end: {
          line: 504,
          column: 61
        }
      },
      "167": {
        start: {
          line: 506,
          column: 4
        },
        end: {
          line: 508,
          column: 5
        }
      },
      "168": {
        start: {
          line: 507,
          column: 6
        },
        end: {
          line: 507,
          column: 103
        }
      },
      "169": {
        start: {
          line: 511,
          column: 19
        },
        end: {
          line: 515,
          column: 5
        }
      },
      "170": {
        start: {
          line: 518,
          column: 19
        },
        end: {
          line: 518,
          column: 91
        }
      },
      "171": {
        start: {
          line: 520,
          column: 4
        },
        end: {
          line: 524,
          column: 7
        }
      },
      "172": {
        start: {
          line: 526,
          column: 4
        },
        end: {
          line: 526,
          column: 54
        }
      },
      "173": {
        start: {
          line: 527,
          column: 4
        },
        end: {
          line: 527,
          column: 65
        }
      },
      "174": {
        start: {
          line: 532,
          column: 0
        },
        end: {
          line: 566,
          column: 3
        }
      },
      "175": {
        start: {
          line: 533,
          column: 2
        },
        end: {
          line: 565,
          column: 3
        }
      },
      "176": {
        start: {
          line: 534,
          column: 19
        },
        end: {
          line: 534,
          column: 32
        }
      },
      "177": {
        start: {
          line: 535,
          column: 4
        },
        end: {
          line: 537,
          column: 5
        }
      },
      "178": {
        start: {
          line: 536,
          column: 6
        },
        end: {
          line: 536,
          column: 54
        }
      },
      "179": {
        start: {
          line: 538,
          column: 27
        },
        end: {
          line: 538,
          column: 36
        }
      },
      "180": {
        start: {
          line: 541,
          column: 24
        },
        end: {
          line: 541,
          column: 61
        }
      },
      "181": {
        start: {
          line: 543,
          column: 4
        },
        end: {
          line: 545,
          column: 5
        }
      },
      "182": {
        start: {
          line: 544,
          column: 6
        },
        end: {
          line: 544,
          column: 103
        }
      },
      "183": {
        start: {
          line: 548,
          column: 19
        },
        end: {
          line: 552,
          column: 5
        }
      },
      "184": {
        start: {
          line: 555,
          column: 21
        },
        end: {
          line: 555,
          column: 57
        }
      },
      "185": {
        start: {
          line: 557,
          column: 4
        },
        end: {
          line: 561,
          column: 7
        }
      },
      "186": {
        start: {
          line: 563,
          column: 4
        },
        end: {
          line: 563,
          column: 51
        }
      },
      "187": {
        start: {
          line: 564,
          column: 4
        },
        end: {
          line: 564,
          column: 67
        }
      },
      "188": {
        start: {
          line: 569,
          column: 0
        },
        end: {
          line: 611,
          column: 3
        }
      },
      "189": {
        start: {
          line: 570,
          column: 2
        },
        end: {
          line: 610,
          column: 3
        }
      },
      "190": {
        start: {
          line: 571,
          column: 4
        },
        end: {
          line: 571,
          column: 77
        }
      },
      "191": {
        start: {
          line: 572,
          column: 19
        },
        end: {
          line: 572,
          column: 32
        }
      },
      "192": {
        start: {
          line: 574,
          column: 4
        },
        end: {
          line: 576,
          column: 5
        }
      },
      "193": {
        start: {
          line: 575,
          column: 6
        },
        end: {
          line: 575,
          column: 62
        }
      },
      "194": {
        start: {
          line: 578,
          column: 4
        },
        end: {
          line: 602,
          column: 5
        }
      },
      "195": {
        start: {
          line: 580,
          column: 26
        },
        end: {
          line: 580,
          column: 63
        }
      },
      "196": {
        start: {
          line: 582,
          column: 6
        },
        end: {
          line: 598,
          column: 7
        }
      },
      "197": {
        start: {
          line: 583,
          column: 8
        },
        end: {
          line: 583,
          column: 85
        }
      },
      "198": {
        start: {
          line: 586,
          column: 23
        },
        end: {
          line: 590,
          column: 9
        }
      },
      "199": {
        start: {
          line: 593,
          column: 23
        },
        end: {
          line: 593,
          column: 46
        }
      },
      "200": {
        start: {
          line: 595,
          column: 8
        },
        end: {
          line: 597,
          column: 11
        }
      },
      "201": {
        start: {
          line: 600,
          column: 6
        },
        end: {
          line: 600,
          column: 67
        }
      },
      "202": {
        start: {
          line: 601,
          column: 6
        },
        end: {
          line: 601,
          column: 78
        }
      },
      "203": {
        start: {
          line: 605,
          column: 4
        },
        end: {
          line: 605,
          column: 84
        }
      },
      "204": {
        start: {
          line: 608,
          column: 4
        },
        end: {
          line: 608,
          column: 51
        }
      },
      "205": {
        start: {
          line: 609,
          column: 4
        },
        end: {
          line: 609,
          column: 68
        }
      },
      "206": {
        start: {
          line: 614,
          column: 0
        },
        end: {
          line: 653,
          column: 3
        }
      },
      "207": {
        start: {
          line: 615,
          column: 2
        },
        end: {
          line: 652,
          column: 3
        }
      },
      "208": {
        start: {
          line: 616,
          column: 19
        },
        end: {
          line: 616,
          column: 32
        }
      },
      "209": {
        start: {
          line: 617,
          column: 4
        },
        end: {
          line: 619,
          column: 5
        }
      },
      "210": {
        start: {
          line: 618,
          column: 6
        },
        end: {
          line: 618,
          column: 54
        }
      },
      "211": {
        start: {
          line: 620,
          column: 23
        },
        end: {
          line: 620,
          column: 33
        }
      },
      "212": {
        start: {
          line: 623,
          column: 24
        },
        end: {
          line: 623,
          column: 61
        }
      },
      "213": {
        start: {
          line: 625,
          column: 4
        },
        end: {
          line: 627,
          column: 5
        }
      },
      "214": {
        start: {
          line: 626,
          column: 6
        },
        end: {
          line: 626,
          column: 103
        }
      },
      "215": {
        start: {
          line: 630,
          column: 19
        },
        end: {
          line: 634,
          column: 5
        }
      },
      "216": {
        start: {
          line: 637,
          column: 18
        },
        end: {
          line: 637,
          column: 61
        }
      },
      "217": {
        start: {
          line: 639,
          column: 4
        },
        end: {
          line: 644,
          column: 7
        }
      },
      "218": {
        start: {
          line: 646,
          column: 4
        },
        end: {
          line: 646,
          column: 53
        }
      },
      "219": {
        start: {
          line: 647,
          column: 4
        },
        end: {
          line: 651,
          column: 7
        }
      },
      "220": {
        start: {
          line: 656,
          column: 0
        },
        end: {
          line: 698,
          column: 3
        }
      },
      "221": {
        start: {
          line: 657,
          column: 2
        },
        end: {
          line: 697,
          column: 3
        }
      },
      "222": {
        start: {
          line: 658,
          column: 19
        },
        end: {
          line: 658,
          column: 32
        }
      },
      "223": {
        start: {
          line: 659,
          column: 4
        },
        end: {
          line: 661,
          column: 5
        }
      },
      "224": {
        start: {
          line: 660,
          column: 6
        },
        end: {
          line: 660,
          column: 54
        }
      },
      "225": {
        start: {
          line: 662,
          column: 61
        },
        end: {
          line: 662,
          column: 70
        }
      },
      "226": {
        start: {
          line: 665,
          column: 24
        },
        end: {
          line: 665,
          column: 61
        }
      },
      "227": {
        start: {
          line: 667,
          column: 4
        },
        end: {
          line: 669,
          column: 5
        }
      },
      "228": {
        start: {
          line: 668,
          column: 6
        },
        end: {
          line: 668,
          column: 103
        }
      },
      "229": {
        start: {
          line: 672,
          column: 19
        },
        end: {
          line: 676,
          column: 5
        }
      },
      "230": {
        start: {
          line: 679,
          column: 19
        },
        end: {
          line: 682,
          column: 6
        }
      },
      "231": {
        start: {
          line: 684,
          column: 4
        },
        end: {
          line: 689,
          column: 7
        }
      },
      "232": {
        start: {
          line: 691,
          column: 4
        },
        end: {
          line: 691,
          column: 42
        }
      },
      "233": {
        start: {
          line: 692,
          column: 4
        },
        end: {
          line: 696,
          column: 7
        }
      },
      "234": {
        start: {
          line: 701,
          column: 0
        },
        end: {
          line: 739,
          column: 3
        }
      },
      "235": {
        start: {
          line: 702,
          column: 2
        },
        end: {
          line: 738,
          column: 3
        }
      },
      "236": {
        start: {
          line: 703,
          column: 19
        },
        end: {
          line: 703,
          column: 32
        }
      },
      "237": {
        start: {
          line: 704,
          column: 4
        },
        end: {
          line: 706,
          column: 5
        }
      },
      "238": {
        start: {
          line: 705,
          column: 6
        },
        end: {
          line: 705,
          column: 54
        }
      },
      "239": {
        start: {
          line: 709,
          column: 24
        },
        end: {
          line: 709,
          column: 61
        }
      },
      "240": {
        start: {
          line: 711,
          column: 4
        },
        end: {
          line: 713,
          column: 5
        }
      },
      "241": {
        start: {
          line: 712,
          column: 6
        },
        end: {
          line: 712,
          column: 103
        }
      },
      "242": {
        start: {
          line: 716,
          column: 19
        },
        end: {
          line: 720,
          column: 5
        }
      },
      "243": {
        start: {
          line: 723,
          column: 21
        },
        end: {
          line: 723,
          column: 48
        }
      },
      "244": {
        start: {
          line: 725,
          column: 4
        },
        end: {
          line: 730,
          column: 7
        }
      },
      "245": {
        start: {
          line: 732,
          column: 4
        },
        end: {
          line: 732,
          column: 52
        }
      },
      "246": {
        start: {
          line: 733,
          column: 4
        },
        end: {
          line: 737,
          column: 7
        }
      },
      "247": {
        start: {
          line: 741,
          column: 0
        },
        end: {
          line: 741,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 22,
            column: 17
          },
          end: {
            line: 22,
            column: 18
          }
        },
        loc: {
          start: {
            line: 22,
            column: 28
          },
          end: {
            line: 30,
            column: 7
          }
        },
        line: 22
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 26,
            column: 15
          },
          end: {
            line: 26,
            column: 16
          }
        },
        loc: {
          start: {
            line: 26,
            column: 20
          },
          end: {
            line: 26,
            column: 47
          }
        },
        line: 26
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 19
          }
        },
        loc: {
          start: {
            line: 27,
            column: 23
          },
          end: {
            line: 27,
            column: 35
          }
        },
        line: 27
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 31,
            column: 17
          },
          end: {
            line: 31,
            column: 18
          }
        },
        loc: {
          start: {
            line: 31,
            column: 28
          },
          end: {
            line: 37,
            column: 7
          }
        },
        line: 31
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 36,
            column: 29
          },
          end: {
            line: 36,
            column: 30
          }
        },
        loc: {
          start: {
            line: 36,
            column: 34
          },
          end: {
            line: 36,
            column: 64
          }
        },
        line: 36
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 47,
            column: 17
          },
          end: {
            line: 47,
            column: 18
          }
        },
        loc: {
          start: {
            line: 47,
            column: 28
          },
          end: {
            line: 47,
            column: 55
          }
        },
        line: 47
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 52,
            column: 17
          },
          end: {
            line: 52,
            column: 18
          }
        },
        loc: {
          start: {
            line: 52,
            column: 28
          },
          end: {
            line: 52,
            column: 92
          }
        },
        line: 52
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 53,
            column: 17
          },
          end: {
            line: 53,
            column: 18
          }
        },
        loc: {
          start: {
            line: 53,
            column: 28
          },
          end: {
            line: 53,
            column: 124
          }
        },
        line: 53
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 58,
            column: 17
          },
          end: {
            line: 58,
            column: 18
          }
        },
        loc: {
          start: {
            line: 58,
            column: 28
          },
          end: {
            line: 58,
            column: 71
          }
        },
        line: 58
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 59,
            column: 17
          },
          end: {
            line: 59,
            column: 18
          }
        },
        loc: {
          start: {
            line: 59,
            column: 28
          },
          end: {
            line: 59,
            column: 64
          }
        },
        line: 59
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 64,
            column: 17
          },
          end: {
            line: 64,
            column: 18
          }
        },
        loc: {
          start: {
            line: 64,
            column: 28
          },
          end: {
            line: 64,
            column: 71
          }
        },
        line: 64
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 65,
            column: 17
          },
          end: {
            line: 65,
            column: 18
          }
        },
        loc: {
          start: {
            line: 65,
            column: 28
          },
          end: {
            line: 65,
            column: 64
          }
        },
        line: 65
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 70,
            column: 17
          },
          end: {
            line: 70,
            column: 18
          }
        },
        loc: {
          start: {
            line: 70,
            column: 28
          },
          end: {
            line: 70,
            column: 95
          }
        },
        line: 70
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 71,
            column: 17
          },
          end: {
            line: 71,
            column: 18
          }
        },
        loc: {
          start: {
            line: 71,
            column: 28
          },
          end: {
            line: 71,
            column: 67
          }
        },
        line: 71
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 81,
            column: 17
          },
          end: {
            line: 81,
            column: 18
          }
        },
        loc: {
          start: {
            line: 81,
            column: 28
          },
          end: {
            line: 81,
            column: 55
          }
        },
        line: 81
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 86,
            column: 17
          },
          end: {
            line: 86,
            column: 18
          }
        },
        loc: {
          start: {
            line: 86,
            column: 28
          },
          end: {
            line: 86,
            column: 71
          }
        },
        line: 86
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 87,
            column: 17
          },
          end: {
            line: 87,
            column: 18
          }
        },
        loc: {
          start: {
            line: 87,
            column: 28
          },
          end: {
            line: 87,
            column: 64
          }
        },
        line: 87
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 92,
            column: 17
          },
          end: {
            line: 92,
            column: 18
          }
        },
        loc: {
          start: {
            line: 92,
            column: 28
          },
          end: {
            line: 92,
            column: 71
          }
        },
        line: 92
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 93,
            column: 17
          },
          end: {
            line: 93,
            column: 18
          }
        },
        loc: {
          start: {
            line: 93,
            column: 28
          },
          end: {
            line: 93,
            column: 64
          }
        },
        line: 93
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 98,
            column: 17
          },
          end: {
            line: 98,
            column: 18
          }
        },
        loc: {
          start: {
            line: 98,
            column: 28
          },
          end: {
            line: 98,
            column: 95
          }
        },
        line: 98
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 99,
            column: 17
          },
          end: {
            line: 99,
            column: 18
          }
        },
        loc: {
          start: {
            line: 99,
            column: 28
          },
          end: {
            line: 99,
            column: 67
          }
        },
        line: 99
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 107,
            column: 17
          },
          end: {
            line: 107,
            column: 18
          }
        },
        loc: {
          start: {
            line: 107,
            column: 28
          },
          end: {
            line: 107,
            column: 71
          }
        },
        line: 107
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 108,
            column: 17
          },
          end: {
            line: 108,
            column: 18
          }
        },
        loc: {
          start: {
            line: 108,
            column: 28
          },
          end: {
            line: 108,
            column: 87
          }
        },
        line: 108
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 113,
            column: 17
          },
          end: {
            line: 113,
            column: 18
          }
        },
        loc: {
          start: {
            line: 113,
            column: 28
          },
          end: {
            line: 113,
            column: 71
          }
        },
        line: 113
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 114,
            column: 17
          },
          end: {
            line: 114,
            column: 18
          }
        },
        loc: {
          start: {
            line: 114,
            column: 28
          },
          end: {
            line: 114,
            column: 87
          }
        },
        line: 114
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 127,
            column: 16
          },
          end: {
            line: 127,
            column: 17
          }
        },
        loc: {
          start: {
            line: 127,
            column: 30
          },
          end: {
            line: 141,
            column: 1
          }
        },
        line: 127
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 144,
            column: 41
          },
          end: {
            line: 144,
            column: 42
          }
        },
        loc: {
          start: {
            line: 144,
            column: 61
          },
          end: {
            line: 403,
            column: 1
          }
        },
        line: 144
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 225,
            column: 22
          },
          end: {
            line: 225,
            column: 23
          }
        },
        loc: {
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 226,
            column: 78
          }
        },
        line: 226
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 226,
            column: 23
          },
          end: {
            line: 226,
            column: 24
          }
        },
        loc: {
          start: {
            line: 226,
            column: 29
          },
          end: {
            line: 226,
            column: 70
          }
        },
        line: 226
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 254,
            column: 24
          },
          end: {
            line: 254,
            column: 25
          }
        },
        loc: {
          start: {
            line: 255,
            column: 14
          },
          end: {
            line: 255,
            column: 77
          }
        },
        line: 255
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 255,
            column: 25
          },
          end: {
            line: 255,
            column: 26
          }
        },
        loc: {
          start: {
            line: 255,
            column: 31
          },
          end: {
            line: 255,
            column: 70
          }
        },
        line: 255
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 306,
            column: 24
          },
          end: {
            line: 306,
            column: 25
          }
        },
        loc: {
          start: {
            line: 307,
            column: 14
          },
          end: {
            line: 307,
            column: 80
          }
        },
        line: 307
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 307,
            column: 25
          },
          end: {
            line: 307,
            column: 26
          }
        },
        loc: {
          start: {
            line: 307,
            column: 31
          },
          end: {
            line: 307,
            column: 73
          }
        },
        line: 307
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 367,
            column: 74
          },
          end: {
            line: 367,
            column: 75
          }
        },
        loc: {
          start: {
            line: 367,
            column: 79
          },
          end: {
            line: 367,
            column: 91
          }
        },
        line: 367
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 409,
            column: 86
          },
          end: {
            line: 409,
            column: 87
          }
        },
        loc: {
          start: {
            line: 409,
            column: 106
          },
          end: {
            line: 445,
            column: 1
          }
        },
        line: 409
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 448,
            column: 90
          },
          end: {
            line: 448,
            column: 91
          }
        },
        loc: {
          start: {
            line: 448,
            column: 110
          },
          end: {
            line: 491,
            column: 1
          }
        },
        line: 448
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 494,
            column: 30
          },
          end: {
            line: 494,
            column: 31
          }
        },
        loc: {
          start: {
            line: 494,
            column: 50
          },
          end: {
            line: 529,
            column: 1
          }
        },
        line: 494
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 532,
            column: 24
          },
          end: {
            line: 532,
            column: 25
          }
        },
        loc: {
          start: {
            line: 532,
            column: 44
          },
          end: {
            line: 566,
            column: 1
          }
        },
        line: 532
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 569,
            column: 22
          },
          end: {
            line: 569,
            column: 23
          }
        },
        loc: {
          start: {
            line: 569,
            column: 42
          },
          end: {
            line: 611,
            column: 1
          }
        },
        line: 569
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 614,
            column: 30
          },
          end: {
            line: 614,
            column: 31
          }
        },
        loc: {
          start: {
            line: 614,
            column: 50
          },
          end: {
            line: 653,
            column: 1
          }
        },
        line: 614
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 656,
            column: 22
          },
          end: {
            line: 656,
            column: 23
          }
        },
        loc: {
          start: {
            line: 656,
            column: 42
          },
          end: {
            line: 698,
            column: 1
          }
        },
        line: 656
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 701,
            column: 32
          },
          end: {
            line: 701,
            column: 33
          }
        },
        loc: {
          start: {
            line: 701,
            column: 52
          },
          end: {
            line: 739,
            column: 1
          }
        },
        line: 701
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 23,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 23,
            column: 49
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 15
          },
          end: {
            line: 36,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 15
          },
          end: {
            line: 34,
            column: 33
          }
        }, {
          start: {
            line: 35,
            column: 15
          },
          end: {
            line: 35,
            column: 35
          }
        }, {
          start: {
            line: 36,
            column: 15
          },
          end: {
            line: 36,
            column: 65
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 53,
            column: 28
          },
          end: {
            line: 53,
            column: 124
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 28
          },
          end: {
            line: 53,
            column: 34
          }
        }, {
          start: {
            line: 53,
            column: 38
          },
          end: {
            line: 53,
            column: 124
          }
        }],
        line: 53
      },
      "4": {
        loc: {
          start: {
            line: 59,
            column: 28
          },
          end: {
            line: 59,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 28
          },
          end: {
            line: 59,
            column: 34
          }
        }, {
          start: {
            line: 59,
            column: 38
          },
          end: {
            line: 59,
            column: 64
          }
        }],
        line: 59
      },
      "5": {
        loc: {
          start: {
            line: 65,
            column: 28
          },
          end: {
            line: 65,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 28
          },
          end: {
            line: 65,
            column: 34
          }
        }, {
          start: {
            line: 65,
            column: 38
          },
          end: {
            line: 65,
            column: 64
          }
        }],
        line: 65
      },
      "6": {
        loc: {
          start: {
            line: 71,
            column: 28
          },
          end: {
            line: 71,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 28
          },
          end: {
            line: 71,
            column: 34
          }
        }, {
          start: {
            line: 71,
            column: 39
          },
          end: {
            line: 71,
            column: 49
          }
        }, {
          start: {
            line: 71,
            column: 53
          },
          end: {
            line: 71,
            column: 66
          }
        }],
        line: 71
      },
      "7": {
        loc: {
          start: {
            line: 87,
            column: 28
          },
          end: {
            line: 87,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 28
          },
          end: {
            line: 87,
            column: 34
          }
        }, {
          start: {
            line: 87,
            column: 38
          },
          end: {
            line: 87,
            column: 64
          }
        }],
        line: 87
      },
      "8": {
        loc: {
          start: {
            line: 93,
            column: 28
          },
          end: {
            line: 93,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 28
          },
          end: {
            line: 93,
            column: 34
          }
        }, {
          start: {
            line: 93,
            column: 38
          },
          end: {
            line: 93,
            column: 64
          }
        }],
        line: 93
      },
      "9": {
        loc: {
          start: {
            line: 99,
            column: 28
          },
          end: {
            line: 99,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 28
          },
          end: {
            line: 99,
            column: 34
          }
        }, {
          start: {
            line: 99,
            column: 39
          },
          end: {
            line: 99,
            column: 49
          }
        }, {
          start: {
            line: 99,
            column: 53
          },
          end: {
            line: 99,
            column: 66
          }
        }],
        line: 99
      },
      "10": {
        loc: {
          start: {
            line: 108,
            column: 28
          },
          end: {
            line: 108,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 28
          },
          end: {
            line: 108,
            column: 34
          }
        }, {
          start: {
            line: 108,
            column: 38
          },
          end: {
            line: 108,
            column: 87
          }
        }],
        line: 108
      },
      "11": {
        loc: {
          start: {
            line: 114,
            column: 28
          },
          end: {
            line: 114,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 28
          },
          end: {
            line: 114,
            column: 34
          }
        }, {
          start: {
            line: 114,
            column: 38
          },
          end: {
            line: 114,
            column: 87
          }
        }],
        line: 114
      },
      "12": {
        loc: {
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "13": {
        loc: {
          start: {
            line: 154,
            column: 14
          },
          end: {
            line: 154,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 154,
            column: 23
          },
          end: {
            line: 154,
            column: 53
          }
        }, {
          start: {
            line: 154,
            column: 56
          },
          end: {
            line: 154,
            column: 67
          }
        }],
        line: 154
      },
      "14": {
        loc: {
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 351,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 351,
            column: 5
          }
        }, {
          start: {
            line: 193,
            column: 11
          },
          end: {
            line: 351,
            column: 5
          }
        }],
        line: 179
      },
      "15": {
        loc: {
          start: {
            line: 197,
            column: 19
          },
          end: {
            line: 197,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 197,
            column: 40
          },
          end: {
            line: 197,
            column: 65
          }
        }, {
          start: {
            line: 197,
            column: 68
          },
          end: {
            line: 197,
            column: 69
          }
        }],
        line: 197
      },
      "16": {
        loc: {
          start: {
            line: 198,
            column: 22
          },
          end: {
            line: 198,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 198,
            column: 46
          },
          end: {
            line: 198,
            column: 74
          }
        }, {
          start: {
            line: 198,
            column: 77
          },
          end: {
            line: 198,
            column: 78
          }
        }],
        line: 198
      },
      "17": {
        loc: {
          start: {
            line: 204,
            column: 21
          },
          end: {
            line: 204,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 204,
            column: 45
          },
          end: {
            line: 204,
            column: 54
          }
        }, {
          start: {
            line: 204,
            column: 57
          },
          end: {
            line: 204,
            column: 63
          }
        }],
        line: 204
      },
      "18": {
        loc: {
          start: {
            line: 205,
            column: 20
          },
          end: {
            line: 205,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 205,
            column: 41
          },
          end: {
            line: 205,
            column: 66
          }
        }, {
          start: {
            line: 205,
            column: 69
          },
          end: {
            line: 205,
            column: 70
          }
        }],
        line: 205
      },
      "19": {
        loc: {
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 245,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 245,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 231
      },
      "20": {
        loc: {
          start: {
            line: 235,
            column: 28
          },
          end: {
            line: 235,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 235,
            column: 28
          },
          end: {
            line: 235,
            column: 51
          }
        }, {
          start: {
            line: 235,
            column: 55
          },
          end: {
            line: 235,
            column: 69
          }
        }],
        line: 235
      },
      "21": {
        loc: {
          start: {
            line: 243,
            column: 25
          },
          end: {
            line: 243,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 243,
            column: 49
          },
          end: {
            line: 243,
            column: 58
          }
        }, {
          start: {
            line: 243,
            column: 61
          },
          end: {
            line: 243,
            column: 67
          }
        }],
        line: 243
      },
      "22": {
        loc: {
          start: {
            line: 260,
            column: 10
          },
          end: {
            line: 279,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 10
          },
          end: {
            line: 279,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      },
      "23": {
        loc: {
          start: {
            line: 294,
            column: 10
          },
          end: {
            line: 296,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 294,
            column: 10
          },
          end: {
            line: 296,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 294
      },
      "24": {
        loc: {
          start: {
            line: 355,
            column: 25
          },
          end: {
            line: 355,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 355,
            column: 39
          },
          end: {
            line: 355,
            column: 45
          }
        }, {
          start: {
            line: 355,
            column: 48
          },
          end: {
            line: 355,
            column: 54
          }
        }],
        line: 355
      },
      "25": {
        loc: {
          start: {
            line: 356,
            column: 30
          },
          end: {
            line: 356,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 356,
            column: 95
          },
          end: {
            line: 356,
            column: 101
          }
        }, {
          start: {
            line: 356,
            column: 104
          },
          end: {
            line: 356,
            column: 110
          }
        }],
        line: 356
      },
      "26": {
        loc: {
          start: {
            line: 357,
            column: 26
          },
          end: {
            line: 357,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 357,
            column: 95
          },
          end: {
            line: 357,
            column: 101
          }
        }, {
          start: {
            line: 357,
            column: 104
          },
          end: {
            line: 357,
            column: 110
          }
        }],
        line: 357
      },
      "27": {
        loc: {
          start: {
            line: 373,
            column: 4
          },
          end: {
            line: 377,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 373,
            column: 4
          },
          end: {
            line: 377,
            column: 5
          }
        }, {
          start: {
            line: 375,
            column: 11
          },
          end: {
            line: 377,
            column: 5
          }
        }],
        line: 373
      },
      "28": {
        loc: {
          start: {
            line: 375,
            column: 11
          },
          end: {
            line: 377,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 375,
            column: 11
          },
          end: {
            line: 377,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 375
      },
      "29": {
        loc: {
          start: {
            line: 395,
            column: 15
          },
          end: {
            line: 395,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 395,
            column: 56
          },
          end: {
            line: 395,
            column: 69
          }
        }, {
          start: {
            line: 395,
            column: 72
          },
          end: {
            line: 395,
            column: 95
          }
        }],
        line: 395
      },
      "30": {
        loc: {
          start: {
            line: 412,
            column: 4
          },
          end: {
            line: 414,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 412,
            column: 4
          },
          end: {
            line: 414,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 412
      },
      "31": {
        loc: {
          start: {
            line: 422,
            column: 4
          },
          end: {
            line: 424,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 422,
            column: 4
          },
          end: {
            line: 424,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 422
      },
      "32": {
        loc: {
          start: {
            line: 438,
            column: 19
          },
          end: {
            line: 438,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 438,
            column: 43
          },
          end: {
            line: 438,
            column: 52
          }
        }, {
          start: {
            line: 438,
            column: 55
          },
          end: {
            line: 438,
            column: 61
          }
        }],
        line: 438
      },
      "33": {
        loc: {
          start: {
            line: 451,
            column: 4
          },
          end: {
            line: 453,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 451,
            column: 4
          },
          end: {
            line: 453,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 451
      },
      "34": {
        loc: {
          start: {
            line: 459,
            column: 4
          },
          end: {
            line: 461,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 459,
            column: 4
          },
          end: {
            line: 461,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 459
      },
      "35": {
        loc: {
          start: {
            line: 476,
            column: 4
          },
          end: {
            line: 476,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 476,
            column: 4
          },
          end: {
            line: 476,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 476
      },
      "36": {
        loc: {
          start: {
            line: 477,
            column: 4
          },
          end: {
            line: 477,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 477,
            column: 4
          },
          end: {
            line: 477,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 477
      },
      "37": {
        loc: {
          start: {
            line: 482,
            column: 19
          },
          end: {
            line: 482,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 482,
            column: 43
          },
          end: {
            line: 482,
            column: 52
          }
        }, {
          start: {
            line: 482,
            column: 55
          },
          end: {
            line: 482,
            column: 61
          }
        }],
        line: 482
      },
      "38": {
        loc: {
          start: {
            line: 484,
            column: 17
          },
          end: {
            line: 484,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 484,
            column: 17
          },
          end: {
            line: 484,
            column: 26
          }
        }, {
          start: {
            line: 484,
            column: 30
          },
          end: {
            line: 484,
            column: 36
          }
        }],
        line: 484
      },
      "39": {
        loc: {
          start: {
            line: 485,
            column: 18
          },
          end: {
            line: 485,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 485,
            column: 18
          },
          end: {
            line: 485,
            column: 30
          }
        }, {
          start: {
            line: 485,
            column: 34
          },
          end: {
            line: 485,
            column: 35
          }
        }],
        line: 485
      },
      "40": {
        loc: {
          start: {
            line: 497,
            column: 4
          },
          end: {
            line: 499,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 497,
            column: 4
          },
          end: {
            line: 499,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 497
      },
      "41": {
        loc: {
          start: {
            line: 501,
            column: 12
          },
          end: {
            line: 501,
            column: 22
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 501,
            column: 20
          },
          end: {
            line: 501,
            column: 22
          }
        }],
        line: 501
      },
      "42": {
        loc: {
          start: {
            line: 506,
            column: 4
          },
          end: {
            line: 508,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 506,
            column: 4
          },
          end: {
            line: 508,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 506
      },
      "43": {
        loc: {
          start: {
            line: 521,
            column: 19
          },
          end: {
            line: 521,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 521,
            column: 43
          },
          end: {
            line: 521,
            column: 52
          }
        }, {
          start: {
            line: 521,
            column: 55
          },
          end: {
            line: 521,
            column: 61
          }
        }],
        line: 521
      },
      "44": {
        loc: {
          start: {
            line: 523,
            column: 18
          },
          end: {
            line: 523,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 523,
            column: 18
          },
          end: {
            line: 523,
            column: 32
          }
        }, {
          start: {
            line: 523,
            column: 36
          },
          end: {
            line: 523,
            column: 37
          }
        }],
        line: 523
      },
      "45": {
        loc: {
          start: {
            line: 535,
            column: 4
          },
          end: {
            line: 537,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 535,
            column: 4
          },
          end: {
            line: 537,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 535
      },
      "46": {
        loc: {
          start: {
            line: 543,
            column: 4
          },
          end: {
            line: 545,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 543,
            column: 4
          },
          end: {
            line: 545,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 543
      },
      "47": {
        loc: {
          start: {
            line: 558,
            column: 19
          },
          end: {
            line: 558,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 558,
            column: 43
          },
          end: {
            line: 558,
            column: 52
          }
        }, {
          start: {
            line: 558,
            column: 55
          },
          end: {
            line: 558,
            column: 61
          }
        }],
        line: 558
      },
      "48": {
        loc: {
          start: {
            line: 560,
            column: 20
          },
          end: {
            line: 560,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 560,
            column: 20
          },
          end: {
            line: 560,
            column: 36
          }
        }, {
          start: {
            line: 560,
            column: 40
          },
          end: {
            line: 560,
            column: 41
          }
        }],
        line: 560
      },
      "49": {
        loc: {
          start: {
            line: 574,
            column: 4
          },
          end: {
            line: 576,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 574,
            column: 4
          },
          end: {
            line: 576,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 574
      },
      "50": {
        loc: {
          start: {
            line: 582,
            column: 6
          },
          end: {
            line: 598,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 582,
            column: 6
          },
          end: {
            line: 598,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 582
      },
      "51": {
        loc: {
          start: {
            line: 582,
            column: 10
          },
          end: {
            line: 582,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 582,
            column: 10
          },
          end: {
            line: 582,
            column: 21
          }
        }, {
          start: {
            line: 582,
            column: 25
          },
          end: {
            line: 582,
            column: 43
          }
        }, {
          start: {
            line: 582,
            column: 47
          },
          end: {
            line: 582,
            column: 68
          }
        }],
        line: 582
      },
      "52": {
        loc: {
          start: {
            line: 596,
            column: 23
          },
          end: {
            line: 596,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 596,
            column: 47
          },
          end: {
            line: 596,
            column: 56
          }
        }, {
          start: {
            line: 596,
            column: 59
          },
          end: {
            line: 596,
            column: 65
          }
        }],
        line: 596
      },
      "53": {
        loc: {
          start: {
            line: 617,
            column: 4
          },
          end: {
            line: 619,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 617,
            column: 4
          },
          end: {
            line: 619,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 617
      },
      "54": {
        loc: {
          start: {
            line: 625,
            column: 4
          },
          end: {
            line: 627,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 625,
            column: 4
          },
          end: {
            line: 627,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 625
      },
      "55": {
        loc: {
          start: {
            line: 643,
            column: 19
          },
          end: {
            line: 643,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 643,
            column: 43
          },
          end: {
            line: 643,
            column: 52
          }
        }, {
          start: {
            line: 643,
            column: 55
          },
          end: {
            line: 643,
            column: 61
          }
        }],
        line: 643
      },
      "56": {
        loc: {
          start: {
            line: 659,
            column: 4
          },
          end: {
            line: 661,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 659,
            column: 4
          },
          end: {
            line: 661,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 659
      },
      "57": {
        loc: {
          start: {
            line: 662,
            column: 12
          },
          end: {
            line: 662,
            column: 29
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 662,
            column: 21
          },
          end: {
            line: 662,
            column: 29
          }
        }],
        line: 662
      },
      "58": {
        loc: {
          start: {
            line: 662,
            column: 31
          },
          end: {
            line: 662,
            column: 56
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 662,
            column: 45
          },
          end: {
            line: 662,
            column: 56
          }
        }],
        line: 662
      },
      "59": {
        loc: {
          start: {
            line: 667,
            column: 4
          },
          end: {
            line: 669,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 667,
            column: 4
          },
          end: {
            line: 669,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 667
      },
      "60": {
        loc: {
          start: {
            line: 688,
            column: 19
          },
          end: {
            line: 688,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 688,
            column: 43
          },
          end: {
            line: 688,
            column: 52
          }
        }, {
          start: {
            line: 688,
            column: 55
          },
          end: {
            line: 688,
            column: 61
          }
        }],
        line: 688
      },
      "61": {
        loc: {
          start: {
            line: 704,
            column: 4
          },
          end: {
            line: 706,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 704,
            column: 4
          },
          end: {
            line: 706,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 704
      },
      "62": {
        loc: {
          start: {
            line: 711,
            column: 4
          },
          end: {
            line: 713,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 711,
            column: 4
          },
          end: {
            line: 713,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 711
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0],
      "58": [0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d25bdbdcdcdb055c6e335d1ea4113fd05a6816a1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2erqkwbfze = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2erqkwbfze();
const express =
/* istanbul ignore next */
(cov_2erqkwbfze().s[0]++, require('express'));
const {
  authenticateToken
} =
/* istanbul ignore next */
(cov_2erqkwbfze().s[1]++, require('../middleware/auth'));
const apiKeyService =
/* istanbul ignore next */
(cov_2erqkwbfze().s[2]++, require('../utils/simpleApiKeyService'));
const AlpacaService =
/* istanbul ignore next */
(cov_2erqkwbfze().s[3]++, require('../utils/alpacaService'));
const {
  createValidationMiddleware,
  rateLimitConfigs,
  sqlInjectionPrevention,
  xssPrevention,
  sanitizers
} =
/* istanbul ignore next */
(cov_2erqkwbfze().s[4]++, require('../middleware/validation'));
const validator =
/* istanbul ignore next */
(cov_2erqkwbfze().s[5]++, require('validator'));
const router =
/* istanbul ignore next */
(cov_2erqkwbfze().s[6]++, express.Router());

// Market data validation schemas
const marketDataValidationSchemas =
/* istanbul ignore next */
(cov_2erqkwbfze().s[7]++, {
  quotes: {
    symbols: {
      required: true,
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_2erqkwbfze().f[0]++;
        cov_2erqkwbfze().s[8]++;
        if (typeof value !== 'string') {
          /* istanbul ignore next */
          cov_2erqkwbfze().b[0][0]++;
          cov_2erqkwbfze().s[9]++;
          return '';
        } else
        /* istanbul ignore next */
        {
          cov_2erqkwbfze().b[0][1]++;
        }
        // Split by comma, clean each symbol, and rejoin
        cov_2erqkwbfze().s[10]++;
        return value.split(',').map(s => {
          /* istanbul ignore next */
          cov_2erqkwbfze().f[1]++;
          cov_2erqkwbfze().s[11]++;
          return sanitizers.symbol(s.trim());
        }).filter(s => {
          /* istanbul ignore next */
          cov_2erqkwbfze().f[2]++;
          cov_2erqkwbfze().s[12]++;
          return s.length > 0;
        }).slice(0, 50) // Limit to 50 symbols max
        .join(',');
      },
      validator: value => {
        /* istanbul ignore next */
        cov_2erqkwbfze().f[3]++;
        cov_2erqkwbfze().s[13]++;
        if (!value) {
          /* istanbul ignore next */
          cov_2erqkwbfze().b[1][0]++;
          cov_2erqkwbfze().s[14]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_2erqkwbfze().b[1][1]++;
        }
        const symbols =
        /* istanbul ignore next */
        (cov_2erqkwbfze().s[15]++, value.split(','));
        /* istanbul ignore next */
        cov_2erqkwbfze().s[16]++;
        return /* istanbul ignore next */(cov_2erqkwbfze().b[2][0]++, symbols.length > 0) &&
        /* istanbul ignore next */
        (cov_2erqkwbfze().b[2][1]++, symbols.length <= 50) &&
        /* istanbul ignore next */
        (cov_2erqkwbfze().b[2][2]++, symbols.every(s => {
          /* istanbul ignore next */
          cov_2erqkwbfze().f[4]++;
          cov_2erqkwbfze().s[17]++;
          return /^[A-Z]{1,10}$/.test(s.trim());
        }));
      },
      errorMessage: 'Symbols must be a comma-separated list of 1-50 valid stock symbols'
    }
  },
  bars: {
    symbol: {
      required: true,
      type: 'string',
      sanitizer: sanitizers.symbol,
      validator: value => {
        /* istanbul ignore next */
        cov_2erqkwbfze().f[5]++;
        cov_2erqkwbfze().s[18]++;
        return /^[A-Z]{1,10}$/.test(value);
      },
      errorMessage: 'Symbol must be 1-10 uppercase letters'
    },
    timeframe: {
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_2erqkwbfze().f[6]++;
        cov_2erqkwbfze().s[19]++;
        return sanitizers.string(value, {
          maxLength: 20,
          alphaNumOnly: false
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_2erqkwbfze().f[7]++;
        cov_2erqkwbfze().s[20]++;
        return /* istanbul ignore next */(cov_2erqkwbfze().b[3][0]++, !value) ||
        /* istanbul ignore next */
        (cov_2erqkwbfze().b[3][1]++, ['1Min', '5Min', '15Min', '30Min', '1Hour', '1Day', '1Week', '1Month'].includes(value));
      },
      errorMessage: 'Timeframe must be one of: 1Min, 5Min, 15Min, 30Min, 1Hour, 1Day, 1Week, 1Month'
    },
    start: {
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_2erqkwbfze().f[8]++;
        cov_2erqkwbfze().s[21]++;
        return sanitizers.string(value, {
          maxLength: 20
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_2erqkwbfze().f[9]++;
        cov_2erqkwbfze().s[22]++;
        return /* istanbul ignore next */(cov_2erqkwbfze().b[4][0]++, !value) ||
        /* istanbul ignore next */
        (cov_2erqkwbfze().b[4][1]++, validator.isISO8601(value));
      },
      errorMessage: 'Start date must be in ISO8601 format (YYYY-MM-DDTHH:mm:ssZ)'
    },
    end: {
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_2erqkwbfze().f[10]++;
        cov_2erqkwbfze().s[23]++;
        return sanitizers.string(value, {
          maxLength: 20
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_2erqkwbfze().f[11]++;
        cov_2erqkwbfze().s[24]++;
        return /* istanbul ignore next */(cov_2erqkwbfze().b[5][0]++, !value) ||
        /* istanbul ignore next */
        (cov_2erqkwbfze().b[5][1]++, validator.isISO8601(value));
      },
      errorMessage: 'End date must be in ISO8601 format (YYYY-MM-DDTHH:mm:ssZ)'
    },
    limit: {
      type: 'integer',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_2erqkwbfze().f[12]++;
        cov_2erqkwbfze().s[25]++;
        return sanitizers.integer(value, {
          min: 1,
          max: 1000,
          defaultValue: 100
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_2erqkwbfze().f[13]++;
        cov_2erqkwbfze().s[26]++;
        return /* istanbul ignore next */(cov_2erqkwbfze().b[6][0]++, !value) ||
        /* istanbul ignore next */
        (cov_2erqkwbfze().b[6][1]++, value >= 1) &&
        /* istanbul ignore next */
        (cov_2erqkwbfze().b[6][2]++, value <= 1000);
      },
      errorMessage: 'Limit must be between 1 and 1000'
    }
  },
  trades: {
    symbol: {
      required: true,
      type: 'string',
      sanitizer: sanitizers.symbol,
      validator: value => {
        /* istanbul ignore next */
        cov_2erqkwbfze().f[14]++;
        cov_2erqkwbfze().s[27]++;
        return /^[A-Z]{1,10}$/.test(value);
      },
      errorMessage: 'Symbol must be 1-10 uppercase letters'
    },
    start: {
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_2erqkwbfze().f[15]++;
        cov_2erqkwbfze().s[28]++;
        return sanitizers.string(value, {
          maxLength: 20
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_2erqkwbfze().f[16]++;
        cov_2erqkwbfze().s[29]++;
        return /* istanbul ignore next */(cov_2erqkwbfze().b[7][0]++, !value) ||
        /* istanbul ignore next */
        (cov_2erqkwbfze().b[7][1]++, validator.isISO8601(value));
      },
      errorMessage: 'Start date must be in ISO8601 format'
    },
    end: {
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_2erqkwbfze().f[17]++;
        cov_2erqkwbfze().s[30]++;
        return sanitizers.string(value, {
          maxLength: 20
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_2erqkwbfze().f[18]++;
        cov_2erqkwbfze().s[31]++;
        return /* istanbul ignore next */(cov_2erqkwbfze().b[8][0]++, !value) ||
        /* istanbul ignore next */
        (cov_2erqkwbfze().b[8][1]++, validator.isISO8601(value));
      },
      errorMessage: 'End date must be in ISO8601 format'
    },
    limit: {
      type: 'integer',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_2erqkwbfze().f[19]++;
        cov_2erqkwbfze().s[32]++;
        return sanitizers.integer(value, {
          min: 1,
          max: 1000,
          defaultValue: 100
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_2erqkwbfze().f[20]++;
        cov_2erqkwbfze().s[33]++;
        return /* istanbul ignore next */(cov_2erqkwbfze().b[9][0]++, !value) ||
        /* istanbul ignore next */
        (cov_2erqkwbfze().b[9][1]++, value >= 1) &&
        /* istanbul ignore next */
        (cov_2erqkwbfze().b[9][2]++, value <= 1000);
      },
      errorMessage: 'Limit must be between 1 and 1000'
    }
  },
  calendar: {
    start: {
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_2erqkwbfze().f[21]++;
        cov_2erqkwbfze().s[34]++;
        return sanitizers.string(value, {
          maxLength: 10
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_2erqkwbfze().f[22]++;
        cov_2erqkwbfze().s[35]++;
        return /* istanbul ignore next */(cov_2erqkwbfze().b[10][0]++, !value) ||
        /* istanbul ignore next */
        (cov_2erqkwbfze().b[10][1]++, validator.isDate(value, {
          format: 'YYYY-MM-DD'
        }));
      },
      errorMessage: 'Start date must be in YYYY-MM-DD format'
    },
    end: {
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_2erqkwbfze().f[23]++;
        cov_2erqkwbfze().s[36]++;
        return sanitizers.string(value, {
          maxLength: 10
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_2erqkwbfze().f[24]++;
        cov_2erqkwbfze().s[37]++;
        return /* istanbul ignore next */(cov_2erqkwbfze().b[11][0]++, !value) ||
        /* istanbul ignore next */
        (cov_2erqkwbfze().b[11][1]++, validator.isDate(value, {
          format: 'YYYY-MM-DD'
        }));
      },
      errorMessage: 'End date must be in YYYY-MM-DD format'
    }
  }
});

// Apply security middleware to authenticated routes
/* istanbul ignore next */
cov_2erqkwbfze().s[38]++;
router.use('/quotes', sqlInjectionPrevention, xssPrevention, rateLimitConfigs.api);
/* istanbul ignore next */
cov_2erqkwbfze().s[39]++;
router.use('/bars', sqlInjectionPrevention, xssPrevention, rateLimitConfigs.api);
/* istanbul ignore next */
cov_2erqkwbfze().s[40]++;
router.use('/trades', sqlInjectionPrevention, xssPrevention, rateLimitConfigs.api);
/* istanbul ignore next */
cov_2erqkwbfze().s[41]++;
router.use('/calendar', sqlInjectionPrevention, xssPrevention, rateLimitConfigs.api);

// Root market-data endpoint for health checks (no auth required)
/* istanbul ignore next */
cov_2erqkwbfze().s[42]++;
router.get('/', (req, res) => {
  /* istanbul ignore next */
  cov_2erqkwbfze().f[25]++;
  cov_2erqkwbfze().s[43]++;
  res.success({
    system: 'Market Data API',
    version: '1.0.0',
    status: 'operational',
    available_endpoints: ['GET /market-data/status - Market status and trading hours', 'GET /market-data/quotes - Real-time quotes for symbols', 'GET /market-data/bars/:symbol - Historical price bars', 'GET /market-data/trades/:symbol - Latest trades', 'GET /market-data/calendar - Market calendar', 'GET /market-data/assets - Tradeable assets']
  });
});

// Market Data Service Health Check - Tests API key functionality and external service connectivity
/* istanbul ignore next */
cov_2erqkwbfze().s[44]++;
router.get('/health', authenticateToken, async (req, res) => {
  /* istanbul ignore next */
  cov_2erqkwbfze().f[26]++;
  const requestId =
  /* istanbul ignore next */
  (cov_2erqkwbfze().s[45]++, require('crypto').randomUUID().split('-')[0]);
  const requestStart =
  /* istanbul ignore next */
  (cov_2erqkwbfze().s[46]++, Date.now());
  /* istanbul ignore next */
  cov_2erqkwbfze().s[47]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[48]++, req.user?.sub);
    /* istanbul ignore next */
    cov_2erqkwbfze().s[49]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2erqkwbfze().b[12][0]++;
      cov_2erqkwbfze().s[50]++;
      throw new Error('User authentication required');
    } else
    /* istanbul ignore next */
    {
      cov_2erqkwbfze().b[12][1]++;
    }
    cov_2erqkwbfze().s[51]++;
    console.log(`🚀 [${requestId}] Market data health check initiated`, {
      userId: userId ?
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[13][0]++, `${userId.substring(0, 8)}...`) :
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[13][1]++, 'undefined'),
      userAgent: req.headers['user-agent'],
      ip: req.ip,
      timestamp: new Date().toISOString()
    });

    // Test API key availability and functionality
    /* istanbul ignore next */
    cov_2erqkwbfze().s[52]++;
    console.log(`🔑 [${requestId}] Testing API key availability for market data access`);
    const credentialsStart =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[53]++, Date.now());
    const credentials =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[54]++, await getUserApiKey(userId, 'alpaca'));
    const credentialsDuration =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[55]++, Date.now() - credentialsStart);
    const healthResult =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[56]++, {
      overall_status: 'healthy',
      timestamp: new Date().toISOString(),
      request_id: requestId,
      api_key_status: {},
      external_services: {},
      functionality_tests: {},
      performance: {
        credential_check_ms: credentialsDuration
      }
    });

    // API Key Health Check
    /* istanbul ignore next */
    cov_2erqkwbfze().s[57]++;
    if (!credentials) {
      /* istanbul ignore next */
      cov_2erqkwbfze().b[14][0]++;
      cov_2erqkwbfze().s[58]++;
      console.error(`❌ [${requestId}] No API credentials found for market data access`, {
        userId: `${userId.substring(0, 8)}...`,
        impact: 'Market data functionality will not work',
        recommendation: 'User needs to configure Alpaca API keys'
      });
      /* istanbul ignore next */
      cov_2erqkwbfze().s[59]++;
      healthResult.overall_status = 'degraded';
      /* istanbul ignore next */
      cov_2erqkwbfze().s[60]++;
      healthResult.api_key_status = {
        status: 'missing',
        error: 'No Alpaca API credentials configured',
        impact: 'Market data services unavailable',
        recommendation: 'Configure Alpaca API keys in Settings'
      };
    } else {
      /* istanbul ignore next */
      cov_2erqkwbfze().b[14][1]++;
      cov_2erqkwbfze().s[61]++;
      console.log(`✅ [${requestId}] API credentials found`, {
        provider: 'alpaca',
        isSandbox: credentials.isSandbox,
        keyLength: credentials.apiKey ?
        /* istanbul ignore next */
        (cov_2erqkwbfze().b[15][0]++, credentials.apiKey.length) :
        /* istanbul ignore next */
        (cov_2erqkwbfze().b[15][1]++, 0),
        secretLength: credentials.apiSecret ?
        /* istanbul ignore next */
        (cov_2erqkwbfze().b[16][0]++, credentials.apiSecret.length) :
        /* istanbul ignore next */
        (cov_2erqkwbfze().b[16][1]++, 0)
      });
      /* istanbul ignore next */
      cov_2erqkwbfze().s[62]++;
      healthResult.api_key_status = {
        status: 'configured',
        provider: 'alpaca',
        environment: credentials.isSandbox ?
        /* istanbul ignore next */
        (cov_2erqkwbfze().b[17][0]++, 'sandbox') :
        /* istanbul ignore next */
        (cov_2erqkwbfze().b[17][1]++, 'live'),
        key_length: credentials.apiKey ?
        /* istanbul ignore next */
        (cov_2erqkwbfze().b[18][0]++, credentials.apiKey.length) :
        /* istanbul ignore next */
        (cov_2erqkwbfze().b[18][1]++, 0),
        has_secret: !!credentials.apiSecret
      };

      // Test external service connectivity
      /* istanbul ignore next */
      cov_2erqkwbfze().s[63]++;
      console.log(`📡 [${requestId}] Testing Alpaca service connectivity`);
      const alpacaTestStart =
      /* istanbul ignore next */
      (cov_2erqkwbfze().s[64]++, Date.now());
      /* istanbul ignore next */
      cov_2erqkwbfze().s[65]++;
      try {
        const alpaca =
        /* istanbul ignore next */
        (cov_2erqkwbfze().s[66]++, new AlpacaService(credentials.apiKey, credentials.apiSecret, credentials.isSandbox));

        // Test 1: Account connectivity
        /* istanbul ignore next */
        cov_2erqkwbfze().s[67]++;
        console.log(`🧪 [${requestId}] Testing account connectivity`);
        const accountTestStart =
        /* istanbul ignore next */
        (cov_2erqkwbfze().s[68]++, Date.now());
        const account =
        /* istanbul ignore next */
        (cov_2erqkwbfze().s[69]++, await Promise.race([alpaca.getAccount(), new Promise((_, reject) => {
          /* istanbul ignore next */
          cov_2erqkwbfze().f[27]++;
          cov_2erqkwbfze().s[70]++;
          return setTimeout(() => {
            /* istanbul ignore next */
            cov_2erqkwbfze().f[28]++;
            cov_2erqkwbfze().s[71]++;
            return reject(new Error('Account test timeout'));
          }, 10000);
        })]));
        const accountTestDuration =
        /* istanbul ignore next */
        (cov_2erqkwbfze().s[72]++, Date.now() - accountTestStart);
        /* istanbul ignore next */
        cov_2erqkwbfze().s[73]++;
        if (account) {
          /* istanbul ignore next */
          cov_2erqkwbfze().b[19][0]++;
          cov_2erqkwbfze().s[74]++;
          console.log(`✅ [${requestId}] Account connectivity test PASSED in ${accountTestDuration}ms`, {
            accountId: account.id,
            status: account.status,
            portfolioValue:
            /* istanbul ignore next */
            (cov_2erqkwbfze().b[20][0]++, account.portfolio_value) ||
            /* istanbul ignore next */
            (cov_2erqkwbfze().b[20][1]++, account.equity)
          });
          /* istanbul ignore next */
          cov_2erqkwbfze().s[75]++;
          healthResult.external_services.account = {
            status: 'connected',
            account_id: account.id,
            account_status: account.status,
            response_time_ms: accountTestDuration,
            environment: credentials.isSandbox ?
            /* istanbul ignore next */
            (cov_2erqkwbfze().b[21][0]++, 'sandbox') :
            /* istanbul ignore next */
            (cov_2erqkwbfze().b[21][1]++, 'live')
          };
        } else
        /* istanbul ignore next */
        {
          cov_2erqkwbfze().b[19][1]++;
        }

        // Test 2: Market data connectivity (basic quote)
        cov_2erqkwbfze().s[76]++;
        console.log(`🧪 [${requestId}] Testing market data connectivity`);
        const quoteTestStart =
        /* istanbul ignore next */
        (cov_2erqkwbfze().s[77]++, Date.now());
        /* istanbul ignore next */
        cov_2erqkwbfze().s[78]++;
        try {
          const testQuote =
          /* istanbul ignore next */
          (cov_2erqkwbfze().s[79]++, await Promise.race([alpaca.getLatestQuote('AAPL'), new Promise((_, reject) => {
            /* istanbul ignore next */
            cov_2erqkwbfze().f[29]++;
            cov_2erqkwbfze().s[80]++;
            return setTimeout(() => {
              /* istanbul ignore next */
              cov_2erqkwbfze().f[30]++;
              cov_2erqkwbfze().s[81]++;
              return reject(new Error('Quote test timeout'));
            }, 8000);
          })]));
          const quoteTestDuration =
          /* istanbul ignore next */
          (cov_2erqkwbfze().s[82]++, Date.now() - quoteTestStart);
          /* istanbul ignore next */
          cov_2erqkwbfze().s[83]++;
          if (testQuote) {
            /* istanbul ignore next */
            cov_2erqkwbfze().b[22][0]++;
            cov_2erqkwbfze().s[84]++;
            console.log(`✅ [${requestId}] Market data connectivity test PASSED in ${quoteTestDuration}ms`, {
              symbol: 'AAPL',
              bidPrice: testQuote.bidPrice,
              askPrice: testQuote.askPrice,
              hasData: !!testQuote.bidPrice
            });
            /* istanbul ignore next */
            cov_2erqkwbfze().s[85]++;
            healthResult.external_services.market_data = {
              status: 'connected',
              test_symbol: 'AAPL',
              response_time_ms: quoteTestDuration,
              data_available: !!testQuote.bidPrice,
              sample_data: {
                bid: testQuote.bidPrice,
                ask: testQuote.askPrice,
                timestamp: testQuote.timestamp
              }
            };
          } else
          /* istanbul ignore next */
          {
            cov_2erqkwbfze().b[22][1]++;
          }
        } catch (quoteError) {
          const quoteTestDuration =
          /* istanbul ignore next */
          (cov_2erqkwbfze().s[86]++, Date.now() - quoteTestStart);
          /* istanbul ignore next */
          cov_2erqkwbfze().s[87]++;
          console.warn(`⚠️ [${requestId}] Market data connectivity test FAILED after ${quoteTestDuration}ms:`, {
            error: quoteError.message,
            impact: 'Real-time quotes may not be available'
          });
          /* istanbul ignore next */
          cov_2erqkwbfze().s[88]++;
          healthResult.external_services.market_data = {
            status: 'error',
            error: quoteError.message,
            response_time_ms: quoteTestDuration,
            impact: 'Real-time market data may be limited'
          };
          /* istanbul ignore next */
          cov_2erqkwbfze().s[89]++;
          if (healthResult.overall_status === 'healthy') {
            /* istanbul ignore next */
            cov_2erqkwbfze().b[23][0]++;
            cov_2erqkwbfze().s[90]++;
            healthResult.overall_status = 'degraded';
          } else
          /* istanbul ignore next */
          {
            cov_2erqkwbfze().b[23][1]++;
          }
        }

        // Test 3: Market status/calendar
        /* istanbul ignore next */
        cov_2erqkwbfze().s[91]++;
        console.log(`🧪 [${requestId}] Testing market calendar connectivity`);
        const calendarTestStart =
        /* istanbul ignore next */
        (cov_2erqkwbfze().s[92]++, Date.now());
        /* istanbul ignore next */
        cov_2erqkwbfze().s[93]++;
        try {
          const marketCalendar =
          /* istanbul ignore next */
          (cov_2erqkwbfze().s[94]++, await Promise.race([alpaca.getMarketCalendar(), new Promise((_, reject) => {
            /* istanbul ignore next */
            cov_2erqkwbfze().f[31]++;
            cov_2erqkwbfze().s[95]++;
            return setTimeout(() => {
              /* istanbul ignore next */
              cov_2erqkwbfze().f[32]++;
              cov_2erqkwbfze().s[96]++;
              return reject(new Error('Calendar test timeout'));
            }, 5000);
          })]));
          const calendarTestDuration =
          /* istanbul ignore next */
          (cov_2erqkwbfze().s[97]++, Date.now() - calendarTestStart);
          /* istanbul ignore next */
          cov_2erqkwbfze().s[98]++;
          console.log(`✅ [${requestId}] Market calendar connectivity test PASSED in ${calendarTestDuration}ms`);
          /* istanbul ignore next */
          cov_2erqkwbfze().s[99]++;
          healthResult.external_services.market_calendar = {
            status: 'connected',
            response_time_ms: calendarTestDuration,
            data_available: !!marketCalendar
          };
        } catch (calendarError) {
          const calendarTestDuration =
          /* istanbul ignore next */
          (cov_2erqkwbfze().s[100]++, Date.now() - calendarTestStart);
          /* istanbul ignore next */
          cov_2erqkwbfze().s[101]++;
          console.warn(`⚠️ [${requestId}] Market calendar test FAILED after ${calendarTestDuration}ms:`, {
            error: calendarError.message
          });
          /* istanbul ignore next */
          cov_2erqkwbfze().s[102]++;
          healthResult.external_services.market_calendar = {
            status: 'error',
            error: calendarError.message,
            response_time_ms: calendarTestDuration
          };
        }
        const alpacaTestDuration =
        /* istanbul ignore next */
        (cov_2erqkwbfze().s[103]++, Date.now() - alpacaTestStart);
        /* istanbul ignore next */
        cov_2erqkwbfze().s[104]++;
        healthResult.performance.alpaca_tests_ms = alpacaTestDuration;
      } catch (alpacaError) {
        const alpacaTestDuration =
        /* istanbul ignore next */
        (cov_2erqkwbfze().s[105]++, Date.now() - alpacaTestStart);
        /* istanbul ignore next */
        cov_2erqkwbfze().s[106]++;
        console.error(`❌ [${requestId}] Alpaca service connectivity FAILED after ${alpacaTestDuration}ms:`, {
          error: alpacaError.message,
          errorStack: alpacaError.stack,
          impact: 'All market data functionality will be unavailable'
        });
        /* istanbul ignore next */
        cov_2erqkwbfze().s[107]++;
        healthResult.overall_status = 'unhealthy';
        /* istanbul ignore next */
        cov_2erqkwbfze().s[108]++;
        healthResult.external_services.alpaca = {
          status: 'error',
          error: alpacaError.message,
          response_time_ms: alpacaTestDuration,
          impact: 'Market data services unavailable'
        };
      }
    }

    // Functionality tests
    /* istanbul ignore next */
    cov_2erqkwbfze().s[109]++;
    healthResult.functionality_tests = {
      api_key_retrieval: credentials ?
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[24][0]++, 'pass') :
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[24][1]++, 'fail'),
      service_initialization: healthResult.external_services.account?.status === 'connected' ?
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[25][0]++, 'pass') :
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[25][1]++, 'fail'),
      market_data_access: healthResult.external_services.market_data?.status === 'connected' ?
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[26][0]++, 'pass') :
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[26][1]++, 'fail')
    };
    const totalDuration =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[110]++, Date.now() - requestStart);
    /* istanbul ignore next */
    cov_2erqkwbfze().s[111]++;
    healthResult.performance.total_duration_ms = totalDuration;
    /* istanbul ignore next */
    cov_2erqkwbfze().s[112]++;
    console.log(`✅ [${requestId}] Market data health check completed in ${totalDuration}ms`, {
      overallStatus: healthResult.overall_status,
      apiKeyStatus: healthResult.api_key_status.status,
      externalServices: Object.keys(healthResult.external_services).length,
      passedTests: Object.values(healthResult.functionality_tests).filter(t => {
        /* istanbul ignore next */
        cov_2erqkwbfze().f[33]++;
        cov_2erqkwbfze().s[113]++;
        return t === 'pass';
      }).length,
      totalTests: Object.keys(healthResult.functionality_tests).length
    });

    // Set appropriate HTTP status
    let statusCode =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[114]++, 200);
    /* istanbul ignore next */
    cov_2erqkwbfze().s[115]++;
    if (healthResult.overall_status === 'unhealthy') {
      /* istanbul ignore next */
      cov_2erqkwbfze().b[27][0]++;
      cov_2erqkwbfze().s[116]++;
      statusCode = 503;
    } else {
      /* istanbul ignore next */
      cov_2erqkwbfze().b[27][1]++;
      cov_2erqkwbfze().s[117]++;
      if (healthResult.overall_status === 'degraded') {
        /* istanbul ignore next */
        cov_2erqkwbfze().b[28][0]++;
        cov_2erqkwbfze().s[118]++;
        statusCode = 206;
      } else
      /* istanbul ignore next */
      {
        cov_2erqkwbfze().b[28][1]++;
      }
    }
    /* istanbul ignore next */
    cov_2erqkwbfze().s[119]++;
    res.status(statusCode).json({
      success: true,
      data: healthResult
    });
  } catch (error) {
    const errorDuration =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[120]++, Date.now() - requestStart);
    /* istanbul ignore next */
    cov_2erqkwbfze().s[121]++;
    console.error(`❌ [${requestId}] Market data health check FAILED after ${errorDuration}ms:`, {
      error: error.message,
      errorStack: error.stack,
      impact: 'Cannot determine market data service health'
    });
    /* istanbul ignore next */
    cov_2erqkwbfze().s[122]++;
    res.status(500).json({
      success: false,
      error: 'Market data health check failed',
      details: process.env.NODE_ENV === 'development' ?
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[29][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[29][1]++, 'Internal server error'),
      request_info: {
        request_id: requestId,
        error_duration_ms: errorDuration,
        timestamp: new Date().toISOString()
      }
    });
  }
});

// Apply authentication middleware to all other routes
/* istanbul ignore next */
cov_2erqkwbfze().s[123]++;
router.use(authenticateToken);

// Get real-time quotes for multiple symbols
/* istanbul ignore next */
cov_2erqkwbfze().s[124]++;
router.get('/quotes', createValidationMiddleware(marketDataValidationSchemas.quotes), async (req, res) => {
  /* istanbul ignore next */
  cov_2erqkwbfze().f[34]++;
  cov_2erqkwbfze().s[125]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[126]++, req.user?.sub);
    /* istanbul ignore next */
    cov_2erqkwbfze().s[127]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2erqkwbfze().b[30][0]++;
      cov_2erqkwbfze().s[128]++;
      throw new Error('User authentication required');
    } else
    /* istanbul ignore next */
    {
      cov_2erqkwbfze().b[30][1]++;
    }
    const {
      symbols
    } =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[129]++, req.validated);
    /* istanbul ignore next */
    cov_2erqkwbfze().s[130]++;
    console.log(`📊 [MARKET-DATA] Quotes request for user ${userId}, symbols: ${symbols}`);

    // Get user's API key
    const credentials =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[131]++, await getUserApiKey(userId, 'alpaca'));
    /* istanbul ignore next */
    cov_2erqkwbfze().s[132]++;
    if (!credentials) {
      /* istanbul ignore next */
      cov_2erqkwbfze().b[31][0]++;
      cov_2erqkwbfze().s[133]++;
      return res.notFound('API credentials', 'Please add your API credentials in Settings > API Keys');
    } else
    /* istanbul ignore next */
    {
      cov_2erqkwbfze().b[31][1]++;
    }

    // Initialize Alpaca service
    const alpaca =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[134]++, new AlpacaService(credentials.apiKey, credentials.apiSecret, credentials.isSandbox));

    // Get quotes for symbols (already validated and sanitized)
    const symbolsArray =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[135]++, symbols.split(','));
    const quotes =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[136]++, await alpaca.getMultiQuotes(symbolsArray));
    /* istanbul ignore next */
    cov_2erqkwbfze().s[137]++;
    res.financialSuccess(quotes, 'api', 'alpaca', {
      environment: credentials.isSandbox ?
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[32][0]++, 'sandbox') :
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[32][1]++, 'live'),
      symbolCount: symbolsArray.length
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2erqkwbfze().s[138]++;
    console.error('Market data quotes error:', error);
    /* istanbul ignore next */
    cov_2erqkwbfze().s[139]++;
    res.externalApiError(error, 'Alpaca API', 'fetching quotes');
  }
});

// Get historical bars for a symbol
/* istanbul ignore next */
cov_2erqkwbfze().s[140]++;
router.get('/bars/:symbol', createValidationMiddleware(marketDataValidationSchemas.bars), async (req, res) => {
  /* istanbul ignore next */
  cov_2erqkwbfze().f[35]++;
  cov_2erqkwbfze().s[141]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[142]++, req.user?.sub);
    /* istanbul ignore next */
    cov_2erqkwbfze().s[143]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2erqkwbfze().b[33][0]++;
      cov_2erqkwbfze().s[144]++;
      throw new Error('User authentication required');
    } else
    /* istanbul ignore next */
    {
      cov_2erqkwbfze().b[33][1]++;
    }
    const {
      symbol,
      timeframe,
      start,
      end,
      limit
    } =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[145]++, req.validated);

    // Get user's API key
    const credentials =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[146]++, await getUserApiKey(userId, 'alpaca'));
    /* istanbul ignore next */
    cov_2erqkwbfze().s[147]++;
    if (!credentials) {
      /* istanbul ignore next */
      cov_2erqkwbfze().b[34][0]++;
      cov_2erqkwbfze().s[148]++;
      return res.notFound('API credentials', 'Please add your API credentials in Settings > API Keys');
    } else
    /* istanbul ignore next */
    {
      cov_2erqkwbfze().b[34][1]++;
    }

    // Initialize Alpaca service
    const alpaca =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[149]++, new AlpacaService(credentials.apiKey, credentials.apiSecret, credentials.isSandbox));

    // Get historical bars
    const params =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[150]++, {
      timeframe,
      limit: parseInt(limit)
    });
    /* istanbul ignore next */
    cov_2erqkwbfze().s[151]++;
    if (start) {
      /* istanbul ignore next */
      cov_2erqkwbfze().b[35][0]++;
      cov_2erqkwbfze().s[152]++;
      params.start = start;
    } else
    /* istanbul ignore next */
    {
      cov_2erqkwbfze().b[35][1]++;
    }
    cov_2erqkwbfze().s[153]++;
    if (end) {
      /* istanbul ignore next */
      cov_2erqkwbfze().b[36][0]++;
      cov_2erqkwbfze().s[154]++;
      params.end = end;
    } else
    /* istanbul ignore next */
    {
      cov_2erqkwbfze().b[36][1]++;
    }
    const bars =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[155]++, await alpaca.getBars(symbol.toUpperCase(), params));
    /* istanbul ignore next */
    cov_2erqkwbfze().s[156]++;
    res.financialSuccess(bars, 'api', 'alpaca', {
      environment: credentials.isSandbox ?
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[37][0]++, 'sandbox') :
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[37][1]++, 'live'),
      symbol: symbol.toUpperCase(),
      timeframe:
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[38][0]++, timeframe) ||
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[38][1]++, '1Day'),
      dataPoints:
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[39][0]++, bars?.length) ||
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[39][1]++, 0)
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2erqkwbfze().s[157]++;
    console.error('Market data bars error:', error);
    /* istanbul ignore next */
    cov_2erqkwbfze().s[158]++;
    res.externalApiError(error, 'Alpaca API', 'fetching bars');
  }
});

// Get latest trade for a symbol
/* istanbul ignore next */
cov_2erqkwbfze().s[159]++;
router.get('/trades/:symbol', async (req, res) => {
  /* istanbul ignore next */
  cov_2erqkwbfze().f[36]++;
  cov_2erqkwbfze().s[160]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[161]++, req.user?.sub);
    /* istanbul ignore next */
    cov_2erqkwbfze().s[162]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2erqkwbfze().b[40][0]++;
      cov_2erqkwbfze().s[163]++;
      throw new Error('User authentication required');
    } else
    /* istanbul ignore next */
    {
      cov_2erqkwbfze().b[40][1]++;
    }
    const {
      symbol
    } =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[164]++, req.params);
    const {
      limit =
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[41][0]++, 10)
    } =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[165]++, req.query);

    // Get user's API key
    const credentials =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[166]++, await getUserApiKey(userId, 'alpaca'));
    /* istanbul ignore next */
    cov_2erqkwbfze().s[167]++;
    if (!credentials) {
      /* istanbul ignore next */
      cov_2erqkwbfze().b[42][0]++;
      cov_2erqkwbfze().s[168]++;
      return res.notFound('API credentials', 'Please add your API credentials in Settings > API Keys');
    } else
    /* istanbul ignore next */
    {
      cov_2erqkwbfze().b[42][1]++;
    }

    // Initialize Alpaca service
    const alpaca =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[169]++, new AlpacaService(credentials.apiKey, credentials.apiSecret, credentials.isSandbox));

    // Get trades
    const trades =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[170]++, await alpaca.getTrades(symbol.toUpperCase(), {
      limit: parseInt(limit)
    }));
    /* istanbul ignore next */
    cov_2erqkwbfze().s[171]++;
    res.financialSuccess(trades, 'api', 'alpaca', {
      environment: credentials.isSandbox ?
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[43][0]++, 'sandbox') :
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[43][1]++, 'live'),
      symbol: symbol.toUpperCase(),
      tradeCount:
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[44][0]++, trades?.length) ||
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[44][1]++, 0)
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2erqkwbfze().s[172]++;
    console.error('Market data trades error:', error);
    /* istanbul ignore next */
    cov_2erqkwbfze().s[173]++;
    res.externalApiError(error, 'Alpaca API', 'fetching trades');
  }
});

// Get market calendar
/* istanbul ignore next */
cov_2erqkwbfze().s[174]++;
router.get('/calendar', async (req, res) => {
  /* istanbul ignore next */
  cov_2erqkwbfze().f[37]++;
  cov_2erqkwbfze().s[175]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[176]++, req.user?.sub);
    /* istanbul ignore next */
    cov_2erqkwbfze().s[177]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2erqkwbfze().b[45][0]++;
      cov_2erqkwbfze().s[178]++;
      throw new Error('User authentication required');
    } else
    /* istanbul ignore next */
    {
      cov_2erqkwbfze().b[45][1]++;
    }
    const {
      start,
      end
    } =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[179]++, req.query);

    // Get user's API key
    const credentials =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[180]++, await getUserApiKey(userId, 'alpaca'));
    /* istanbul ignore next */
    cov_2erqkwbfze().s[181]++;
    if (!credentials) {
      /* istanbul ignore next */
      cov_2erqkwbfze().b[46][0]++;
      cov_2erqkwbfze().s[182]++;
      return res.notFound('API credentials', 'Please add your API credentials in Settings > API Keys');
    } else
    /* istanbul ignore next */
    {
      cov_2erqkwbfze().b[46][1]++;
    }

    // Initialize Alpaca service
    const alpaca =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[183]++, new AlpacaService(credentials.apiKey, credentials.apiSecret, credentials.isSandbox));

    // Get market calendar
    const calendar =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[184]++, await alpaca.getCalendar(start, end));
    /* istanbul ignore next */
    cov_2erqkwbfze().s[185]++;
    res.financialSuccess(calendar, 'api', 'alpaca', {
      environment: credentials.isSandbox ?
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[47][0]++, 'sandbox') :
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[47][1]++, 'live'),
      dateRange: {
        start,
        end
      },
      calendarDays:
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[48][0]++, calendar?.length) ||
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[48][1]++, 0)
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2erqkwbfze().s[186]++;
    console.error('Market calendar error:', error);
    /* istanbul ignore next */
    cov_2erqkwbfze().s[187]++;
    res.externalApiError(error, 'Alpaca API', 'fetching calendar');
  }
});

// Get market status
/* istanbul ignore next */
cov_2erqkwbfze().s[188]++;
router.get('/status', async (req, res) => {
  /* istanbul ignore next */
  cov_2erqkwbfze().f[38]++;
  cov_2erqkwbfze().s[189]++;
  try {
    /* istanbul ignore next */
    cov_2erqkwbfze().s[190]++;
    console.log('📈 Market status endpoint called for user:', req.user?.sub);
    const userId =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[191]++, req.user?.sub);
    /* istanbul ignore next */
    cov_2erqkwbfze().s[192]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2erqkwbfze().b[49][0]++;
      cov_2erqkwbfze().s[193]++;
      return res.unauthorized('User authentication required');
    } else
    /* istanbul ignore next */
    {
      cov_2erqkwbfze().b[49][1]++;
    }
    cov_2erqkwbfze().s[194]++;
    try {
      // Try to get user's API key
      const credentials =
      /* istanbul ignore next */
      (cov_2erqkwbfze().s[195]++, await getUserApiKey(userId, 'alpaca'));
      /* istanbul ignore next */
      cov_2erqkwbfze().s[196]++;
      if (
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[51][0]++, credentials) &&
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[51][1]++, credentials.apiKey) &&
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[51][2]++, credentials.apiSecret)) {
        /* istanbul ignore next */
        cov_2erqkwbfze().b[50][0]++;
        cov_2erqkwbfze().s[197]++;
        console.log('✅ Valid API credentials found, fetching real market status...');

        // Initialize Alpaca service
        const alpaca =
        /* istanbul ignore next */
        (cov_2erqkwbfze().s[198]++, new AlpacaService(credentials.apiKey, credentials.apiSecret, credentials.isSandbox));

        // Get market status from Alpaca
        const status =
        /* istanbul ignore next */
        (cov_2erqkwbfze().s[199]++, await alpaca.getClock());
        /* istanbul ignore next */
        cov_2erqkwbfze().s[200]++;
        return res.financialSuccess(status, 'api', 'alpaca', {
          environment: credentials.isSandbox ?
          /* istanbul ignore next */
          (cov_2erqkwbfze().b[52][0]++, 'sandbox') :
          /* istanbul ignore next */
          (cov_2erqkwbfze().b[52][1]++, 'live')
        });
      } else
      /* istanbul ignore next */
      {
        cov_2erqkwbfze().b[50][1]++;
      }
    } catch (apiError) {
      /* istanbul ignore next */
      cov_2erqkwbfze().s[201]++;
      console.error('❌ API credentials failed:', apiError.message);
      /* istanbul ignore next */
      cov_2erqkwbfze().s[202]++;
      throw new Error('Market status unavailable - API credentials required');
    }

    // No fallback - require proper API credentials
    /* istanbul ignore next */
    cov_2erqkwbfze().s[203]++;
    throw new Error('Market status unavailable - please configure API credentials');
  } catch (error) {
    /* istanbul ignore next */
    cov_2erqkwbfze().s[204]++;
    console.error('❌ Market status error:', error);
    /* istanbul ignore next */
    cov_2erqkwbfze().s[205]++;
    res.serverError('Failed to fetch market status', error.message);
  }
});

// Get asset information
/* istanbul ignore next */
cov_2erqkwbfze().s[206]++;
router.get('/assets/:symbol', async (req, res) => {
  /* istanbul ignore next */
  cov_2erqkwbfze().f[39]++;
  cov_2erqkwbfze().s[207]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[208]++, req.user?.sub);
    /* istanbul ignore next */
    cov_2erqkwbfze().s[209]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2erqkwbfze().b[53][0]++;
      cov_2erqkwbfze().s[210]++;
      throw new Error('User authentication required');
    } else
    /* istanbul ignore next */
    {
      cov_2erqkwbfze().b[53][1]++;
    }
    const {
      symbol
    } =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[211]++, req.params);

    // Get user's API key
    const credentials =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[212]++, await getUserApiKey(userId, 'alpaca'));
    /* istanbul ignore next */
    cov_2erqkwbfze().s[213]++;
    if (!credentials) {
      /* istanbul ignore next */
      cov_2erqkwbfze().b[54][0]++;
      cov_2erqkwbfze().s[214]++;
      return res.notFound('API credentials', 'Please add your API credentials in Settings > API Keys');
    } else
    /* istanbul ignore next */
    {
      cov_2erqkwbfze().b[54][1]++;
    }

    // Initialize Alpaca service
    const alpaca =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[215]++, new AlpacaService(credentials.apiKey, credentials.apiSecret, credentials.isSandbox));

    // Get asset information
    const asset =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[216]++, await alpaca.getAsset(symbol.toUpperCase()));
    /* istanbul ignore next */
    cov_2erqkwbfze().s[217]++;
    res.json({
      success: true,
      data: asset,
      provider: 'alpaca',
      environment: credentials.isSandbox ?
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[55][0]++, 'sandbox') :
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[55][1]++, 'live')
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2erqkwbfze().s[218]++;
    console.error('Asset information error:', error);
    /* istanbul ignore next */
    cov_2erqkwbfze().s[219]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch asset information',
      details: error.message
    });
  }
});

// Get all tradeable assets
/* istanbul ignore next */
cov_2erqkwbfze().s[220]++;
router.get('/assets', async (req, res) => {
  /* istanbul ignore next */
  cov_2erqkwbfze().f[40]++;
  cov_2erqkwbfze().s[221]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[222]++, req.user?.sub);
    /* istanbul ignore next */
    cov_2erqkwbfze().s[223]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2erqkwbfze().b[56][0]++;
      cov_2erqkwbfze().s[224]++;
      throw new Error('User authentication required');
    } else
    /* istanbul ignore next */
    {
      cov_2erqkwbfze().b[56][1]++;
    }
    const {
      status =
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[57][0]++, 'active'),
      asset_class =
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[58][0]++, 'us_equity')
    } =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[225]++, req.query);

    // Get user's API key
    const credentials =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[226]++, await getUserApiKey(userId, 'alpaca'));
    /* istanbul ignore next */
    cov_2erqkwbfze().s[227]++;
    if (!credentials) {
      /* istanbul ignore next */
      cov_2erqkwbfze().b[59][0]++;
      cov_2erqkwbfze().s[228]++;
      return res.notFound('API credentials', 'Please add your API credentials in Settings > API Keys');
    } else
    /* istanbul ignore next */
    {
      cov_2erqkwbfze().b[59][1]++;
    }

    // Initialize Alpaca service
    const alpaca =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[229]++, new AlpacaService(credentials.apiKey, credentials.apiSecret, credentials.isSandbox));

    // Get assets
    const assets =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[230]++, await alpaca.getAssets({
      status,
      asset_class
    }));
    /* istanbul ignore next */
    cov_2erqkwbfze().s[231]++;
    res.json({
      success: true,
      data: assets,
      provider: 'alpaca',
      environment: credentials.isSandbox ?
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[60][0]++, 'sandbox') :
      /* istanbul ignore next */
      (cov_2erqkwbfze().b[60][1]++, 'live')
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2erqkwbfze().s[232]++;
    console.error('Assets error:', error);
    /* istanbul ignore next */
    cov_2erqkwbfze().s[233]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch assets',
      details: error.message
    });
  }
});

// Get websocket configuration for real-time data
/* istanbul ignore next */
cov_2erqkwbfze().s[234]++;
router.get('/websocket-config', async (req, res) => {
  /* istanbul ignore next */
  cov_2erqkwbfze().f[41]++;
  cov_2erqkwbfze().s[235]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[236]++, req.user?.sub);
    /* istanbul ignore next */
    cov_2erqkwbfze().s[237]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2erqkwbfze().b[61][0]++;
      cov_2erqkwbfze().s[238]++;
      throw new Error('User authentication required');
    } else
    /* istanbul ignore next */
    {
      cov_2erqkwbfze().b[61][1]++;
    }

    // Get user's API key
    const credentials =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[239]++, await getUserApiKey(userId, 'alpaca'));
    /* istanbul ignore next */
    cov_2erqkwbfze().s[240]++;
    if (!credentials) {
      /* istanbul ignore next */
      cov_2erqkwbfze().b[62][0]++;
      cov_2erqkwbfze().s[241]++;
      return res.notFound('API credentials', 'Please add your API credentials in Settings > API Keys');
    } else
    /* istanbul ignore next */
    {
      cov_2erqkwbfze().b[62][1]++;
    }

    // Initialize Alpaca service
    const alpaca =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[242]++, new AlpacaService(credentials.apiKey, credentials.apiSecret, false // Always use live for data feed
    ));

    // Get websocket config
    const wsConfig =
    /* istanbul ignore next */
    (cov_2erqkwbfze().s[243]++, alpaca.getWebSocketConfig());
    /* istanbul ignore next */
    cov_2erqkwbfze().s[244]++;
    res.json({
      success: true,
      data: wsConfig,
      provider: 'alpaca',
      environment: 'live' // Data feed always uses live
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2erqkwbfze().s[245]++;
    console.error('Websocket config error:', error);
    /* istanbul ignore next */
    cov_2erqkwbfze().s[246]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get websocket configuration',
      details: error.message
    });
  }
});
/* istanbul ignore next */
cov_2erqkwbfze().s[247]++;
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,