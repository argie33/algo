d0a556abcede5a23e30aad62a171e484
/* istanbul ignore next */
function cov_21usdrxd5l() {
  var path = "/home/stocks/algo/webapp/lambda/routes/settings.js";
  var hash = "83c50ba557d8d143d83e5ad83cc155261765d4f7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/routes/settings.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 34
        }
      },
      "1": {
        start: {
          line: 2,
          column: 15
        },
        end: {
          line: 2,
          column: 32
        }
      },
      "2": {
        start: {
          line: 3,
          column: 18
        },
        end: {
          line: 3,
          column: 46
        }
      },
      "3": {
        start: {
          line: 4,
          column: 24
        },
        end: {
          line: 4,
          column: 59
        }
      },
      "4": {
        start: {
          line: 5,
          column: 30
        },
        end: {
          line: 5,
          column: 59
        }
      },
      "5": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 86
        }
      },
      "6": {
        start: {
          line: 7,
          column: 36
        },
        end: {
          line: 7,
          column: 76
        }
      },
      "7": {
        start: {
          line: 8,
          column: 22
        },
        end: {
          line: 8,
          column: 61
        }
      },
      "8": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 31
        }
      },
      "9": {
        start: {
          line: 13,
          column: 34
        },
        end: {
          line: 88,
          column: 1
        }
      },
      "10": {
        start: {
          line: 18,
          column: 28
        },
        end: {
          line: 18,
          column: 90
        }
      },
      "11": {
        start: {
          line: 19,
          column: 28
        },
        end: {
          line: 19,
          column: 72
        }
      },
      "12": {
        start: {
          line: 25,
          column: 28
        },
        end: {
          line: 25,
          column: 84
        }
      },
      "13": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 26,
          column: 104
        }
      },
      "14": {
        start: {
          line: 32,
          column: 28
        },
        end: {
          line: 32,
          column: 84
        }
      },
      "15": {
        start: {
          line: 33,
          column: 28
        },
        end: {
          line: 33,
          column: 69
        }
      },
      "16": {
        start: {
          line: 38,
          column: 28
        },
        end: {
          line: 38,
          column: 77
        }
      },
      "17": {
        start: {
          line: 39,
          column: 28
        },
        end: {
          line: 39,
          column: 54
        }
      },
      "18": {
        start: {
          line: 47,
          column: 28
        },
        end: {
          line: 47,
          column: 83
        }
      },
      "19": {
        start: {
          line: 48,
          column: 28
        },
        end: {
          line: 48,
          column: 79
        }
      },
      "20": {
        start: {
          line: 53,
          column: 28
        },
        end: {
          line: 53,
          column: 71
        }
      },
      "21": {
        start: {
          line: 54,
          column: 28
        },
        end: {
          line: 54,
          column: 65
        }
      },
      "22": {
        start: {
          line: 63,
          column: 28
        },
        end: {
          line: 63,
          column: 54
        }
      },
      "23": {
        start: {
          line: 69,
          column: 28
        },
        end: {
          line: 69,
          column: 54
        }
      },
      "24": {
        start: {
          line: 78,
          column: 28
        },
        end: {
          line: 78,
          column: 54
        }
      },
      "25": {
        start: {
          line: 83,
          column: 28
        },
        end: {
          line: 83,
          column: 70
        }
      },
      "26": {
        start: {
          line: 84,
          column: 28
        },
        end: {
          line: 84,
          column: 69
        }
      },
      "27": {
        start: {
          line: 92,
          column: 21
        },
        end: {
          line: 92,
          column: 61
        }
      },
      "28": {
        start: {
          line: 94,
          column: 2
        },
        end: {
          line: 163,
          column: 3
        }
      },
      "29": {
        start: {
          line: 97,
          column: 6
        },
        end: {
          line: 102,
          column: 7
        }
      },
      "30": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 76
        }
      },
      "31": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 63
        }
      },
      "32": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 69
        }
      },
      "33": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 26
        }
      },
      "34": {
        start: {
          line: 104,
          column: 6
        },
        end: {
          line: 108,
          column: 7
        }
      },
      "35": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 88
        }
      },
      "36": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 57
        }
      },
      "37": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 26
        }
      },
      "38": {
        start: {
          line: 111,
          column: 6
        },
        end: {
          line: 116,
          column: 7
        }
      },
      "39": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 79
        }
      },
      "40": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 69
        }
      },
      "41": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 65
        }
      },
      "42": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 26
        }
      },
      "43": {
        start: {
          line: 118,
          column: 6
        },
        end: {
          line: 122,
          column: 7
        }
      },
      "44": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 75
        }
      },
      "45": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 71
        }
      },
      "46": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 26
        }
      },
      "47": {
        start: {
          line: 123,
          column: 6
        },
        end: {
          line: 123,
          column: 12
        }
      },
      "48": {
        start: {
          line: 127,
          column: 6
        },
        end: {
          line: 132,
          column: 7
        }
      },
      "49": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 88
        }
      },
      "50": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 60
        }
      },
      "51": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 69
        }
      },
      "52": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 26
        }
      },
      "53": {
        start: {
          line: 134,
          column: 6
        },
        end: {
          line: 137,
          column: 7
        }
      },
      "54": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 100
        }
      },
      "55": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 26
        }
      },
      "56": {
        start: {
          line: 138,
          column: 6
        },
        end: {
          line: 138,
          column: 12
        }
      },
      "57": {
        start: {
          line: 143,
          column: 6
        },
        end: {
          line: 146,
          column: 7
        }
      },
      "58": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 89
        }
      },
      "59": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 26
        }
      },
      "60": {
        start: {
          line: 147,
          column: 6
        },
        end: {
          line: 147,
          column: 12
        }
      },
      "61": {
        start: {
          line: 151,
          column: 6
        },
        end: {
          line: 156,
          column: 7
        }
      },
      "62": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 81
        }
      },
      "63": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 63
        }
      },
      "64": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 69
        }
      },
      "65": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 26
        }
      },
      "66": {
        start: {
          line: 159,
          column: 6
        },
        end: {
          line: 162,
          column: 7
        }
      },
      "67": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 76
        }
      },
      "68": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 26
        }
      },
      "69": {
        start: {
          line: 165,
          column: 2
        },
        end: {
          line: 165,
          column: 26
        }
      },
      "70": {
        start: {
          line: 166,
          column: 2
        },
        end: {
          line: 166,
          column: 41
        }
      },
      "71": {
        start: {
          line: 167,
          column: 2
        },
        end: {
          line: 167,
          column: 47
        }
      },
      "72": {
        start: {
          line: 168,
          column: 2
        },
        end: {
          line: 168,
          column: 69
        }
      },
      "73": {
        start: {
          line: 170,
          column: 2
        },
        end: {
          line: 170,
          column: 20
        }
      },
      "74": {
        start: {
          line: 174,
          column: 0
        },
        end: {
          line: 192,
          column: 3
        }
      },
      "75": {
        start: {
          line: 175,
          column: 2
        },
        end: {
          line: 191,
          column: 5
        }
      },
      "76": {
        start: {
          line: 195,
          column: 0
        },
        end: {
          line: 195,
          column: 30
        }
      },
      "77": {
        start: {
          line: 198,
          column: 19
        },
        end: {
          line: 284,
          column: 1
        }
      },
      "78": {
        start: {
          line: 199,
          column: 17
        },
        end: {
          line: 199,
          column: 29
        }
      },
      "79": {
        start: {
          line: 200,
          column: 22
        },
        end: {
          line: 200,
          column: 33
        }
      },
      "80": {
        start: {
          line: 202,
          column: 2
        },
        end: {
          line: 283,
          column: 3
        }
      },
      "81": {
        start: {
          line: 204,
          column: 15
        },
        end: {
          line: 204,
          column: 19
        }
      },
      "82": {
        start: {
          line: 205,
          column: 4
        },
        end: {
          line: 220,
          column: 5
        }
      },
      "83": {
        start: {
          line: 206,
          column: 25
        },
        end: {
          line: 210,
          column: 18
        }
      },
      "84": {
        start: {
          line: 212,
          column: 6
        },
        end: {
          line: 214,
          column: 7
        }
      },
      "85": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 34
        }
      },
      "86": {
        start: {
          line: 216,
          column: 6
        },
        end: {
          line: 216,
          column: 91
        }
      },
      "87": {
        start: {
          line: 218,
          column: 6
        },
        end: {
          line: 218,
          column: 89
        }
      },
      "88": {
        start: {
          line: 219,
          column: 6
        },
        end: {
          line: 219,
          column: 20
        }
      },
      "89": {
        start: {
          line: 222,
          column: 4
        },
        end: {
          line: 225,
          column: 5
        }
      },
      "90": {
        start: {
          line: 223,
          column: 6
        },
        end: {
          line: 223,
          column: 89
        }
      },
      "91": {
        start: {
          line: 224,
          column: 6
        },
        end: {
          line: 224,
          column: 20
        }
      },
      "92": {
        start: {
          line: 228,
          column: 4
        },
        end: {
          line: 231,
          column: 5
        }
      },
      "93": {
        start: {
          line: 229,
          column: 6
        },
        end: {
          line: 229,
          column: 92
        }
      },
      "94": {
        start: {
          line: 230,
          column: 6
        },
        end: {
          line: 230,
          column: 20
        }
      },
      "95": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 241,
          column: 5
        }
      },
      "96": {
        start: {
          line: 235,
          column: 6
        },
        end: {
          line: 240,
          column: 9
        }
      },
      "97": {
        start: {
          line: 245,
          column: 4
        },
        end: {
          line: 261,
          column: 5
        }
      },
      "98": {
        start: {
          line: 246,
          column: 24
        },
        end: {
          line: 246,
          column: 44
        }
      },
      "99": {
        start: {
          line: 247,
          column: 6
        },
        end: {
          line: 252,
          column: 9
        }
      },
      "100": {
        start: {
          line: 254,
          column: 6
        },
        end: {
          line: 254,
          column: 70
        }
      },
      "101": {
        start: {
          line: 255,
          column: 6
        },
        end: {
          line: 260,
          column: 9
        }
      },
      "102": {
        start: {
          line: 263,
          column: 4
        },
        end: {
          line: 271,
          column: 5
        }
      },
      "103": {
        start: {
          line: 264,
          column: 6
        },
        end: {
          line: 270,
          column: 9
        }
      },
      "104": {
        start: {
          line: 273,
          column: 4
        },
        end: {
          line: 273,
          column: 69
        }
      },
      "105": {
        start: {
          line: 274,
          column: 4
        },
        end: {
          line: 274,
          column: 11
        }
      },
      "106": {
        start: {
          line: 277,
          column: 4
        },
        end: {
          line: 277,
          column: 68
        }
      },
      "107": {
        start: {
          line: 278,
          column: 4
        },
        end: {
          line: 282,
          column: 7
        }
      },
      "108": {
        start: {
          line: 290,
          column: 2
        },
        end: {
          line: 295,
          column: 3
        }
      },
      "109": {
        start: {
          line: 291,
          column: 4
        },
        end: {
          line: 291,
          column: 81
        }
      },
      "110": {
        start: {
          line: 293,
          column: 4
        },
        end: {
          line: 293,
          column: 59
        }
      },
      "111": {
        start: {
          line: 294,
          column: 4
        },
        end: {
          line: 294,
          column: 90
        }
      },
      "112": {
        start: {
          line: 301,
          column: 0
        },
        end: {
          line: 355,
          column: 3
        }
      },
      "113": {
        start: {
          line: 302,
          column: 2
        },
        end: {
          line: 354,
          column: 3
        }
      },
      "114": {
        start: {
          line: 303,
          column: 4
        },
        end: {
          line: 303,
          column: 72
        }
      },
      "115": {
        start: {
          line: 306,
          column: 24
        },
        end: {
          line: 306,
          column: 82
        }
      },
      "116": {
        start: {
          line: 308,
          column: 4
        },
        end: {
          line: 308,
          column: 49
        }
      },
      "117": {
        start: {
          line: 310,
          column: 4
        },
        end: {
          line: 344,
          column: 5
        }
      },
      "118": {
        start: {
          line: 312,
          column: 24
        },
        end: {
          line: 312,
          column: 77
        }
      },
      "119": {
        start: {
          line: 315,
          column: 20
        },
        end: {
          line: 319,
          column: 7
        }
      },
      "120": {
        start: {
          line: 322,
          column: 21
        },
        end: {
          line: 327,
          column: 8
        }
      },
      "121": {
        start: {
          line: 329,
          column: 6
        },
        end: {
          line: 336,
          column: 9
        }
      },
      "122": {
        start: {
          line: 338,
          column: 6
        },
        end: {
          line: 343,
          column: 9
        }
      },
      "123": {
        start: {
          line: 347,
          column: 4
        },
        end: {
          line: 347,
          column: 69
        }
      },
      "124": {
        start: {
          line: 348,
          column: 4
        },
        end: {
          line: 353,
          column: 7
        }
      },
      "125": {
        start: {
          line: 358,
          column: 0
        },
        end: {
          line: 455,
          column: 3
        }
      },
      "126": {
        start: {
          line: 359,
          column: 2
        },
        end: {
          line: 359,
          column: 45
        }
      },
      "127": {
        start: {
          line: 360,
          column: 2
        },
        end: {
          line: 364,
          column: 5
        }
      },
      "128": {
        start: {
          line: 367,
          column: 2
        },
        end: {
          line: 386,
          column: 3
        }
      },
      "129": {
        start: {
          line: 368,
          column: 4
        },
        end: {
          line: 368,
          column: 90
        }
      },
      "130": {
        start: {
          line: 369,
          column: 4
        },
        end: {
          line: 385,
          column: 7
        }
      },
      "131": {
        start: {
          line: 389,
          column: 2
        },
        end: {
          line: 396,
          column: 3
        }
      },
      "132": {
        start: {
          line: 390,
          column: 4
        },
        end: {
          line: 390,
          column: 73
        }
      },
      "133": {
        start: {
          line: 391,
          column: 4
        },
        end: {
          line: 395,
          column: 7
        }
      },
      "134": {
        start: {
          line: 398,
          column: 17
        },
        end: {
          line: 398,
          column: 29
        }
      },
      "135": {
        start: {
          line: 399,
          column: 2
        },
        end: {
          line: 399,
          column: 37
        }
      },
      "136": {
        start: {
          line: 400,
          column: 2
        },
        end: {
          line: 405,
          column: 5
        }
      },
      "137": {
        start: {
          line: 407,
          column: 2
        },
        end: {
          line: 414,
          column: 3
        }
      },
      "138": {
        start: {
          line: 408,
          column: 4
        },
        end: {
          line: 408,
          column: 64
        }
      },
      "139": {
        start: {
          line: 409,
          column: 4
        },
        end: {
          line: 413,
          column: 7
        }
      },
      "140": {
        start: {
          line: 416,
          column: 2
        },
        end: {
          line: 454,
          column: 3
        }
      },
      "141": {
        start: {
          line: 417,
          column: 4
        },
        end: {
          line: 417,
          column: 64
        }
      },
      "142": {
        start: {
          line: 420,
          column: 20
        },
        end: {
          line: 420,
          column: 59
        }
      },
      "143": {
        start: {
          line: 422,
          column: 4
        },
        end: {
          line: 422,
          column: 51
        }
      },
      "144": {
        start: {
          line: 423,
          column: 4
        },
        end: {
          line: 423,
          column: 75
        }
      },
      "145": {
        start: {
          line: 426,
          column: 29
        },
        end: {
          line: 435,
          column: 7
        }
      },
      "146": {
        start: {
          line: 426,
          column: 49
        },
        end: {
          line: 435,
          column: 5
        }
      },
      "147": {
        start: {
          line: 437,
          column: 4
        },
        end: {
          line: 437,
          column: 50
        }
      },
      "148": {
        start: {
          line: 438,
          column: 4
        },
        end: {
          line: 441,
          column: 7
        }
      },
      "149": {
        start: {
          line: 443,
          column: 4
        },
        end: {
          line: 443,
          column: 53
        }
      },
      "150": {
        start: {
          line: 446,
          column: 4
        },
        end: {
          line: 446,
          column: 79
        }
      },
      "151": {
        start: {
          line: 447,
          column: 4
        },
        end: {
          line: 453,
          column: 7
        }
      },
      "152": {
        start: {
          line: 458,
          column: 0
        },
        end: {
          line: 615,
          column: 3
        }
      },
      "153": {
        start: {
          line: 459,
          column: 20
        },
        end: {
          line: 459,
          column: 53
        }
      },
      "154": {
        start: {
          line: 460,
          column: 20
        },
        end: {
          line: 460,
          column: 30
        }
      },
      "155": {
        start: {
          line: 462,
          column: 2
        },
        end: {
          line: 462,
          column: 78
        }
      },
      "156": {
        start: {
          line: 463,
          column: 2
        },
        end: {
          line: 463,
          column: 75
        }
      },
      "157": {
        start: {
          line: 466,
          column: 2
        },
        end: {
          line: 473,
          column: 3
        }
      },
      "158": {
        start: {
          line: 467,
          column: 4
        },
        end: {
          line: 467,
          column: 66
        }
      },
      "159": {
        start: {
          line: 468,
          column: 4
        },
        end: {
          line: 472,
          column: 7
        }
      },
      "160": {
        start: {
          line: 475,
          column: 17
        },
        end: {
          line: 475,
          column: 30
        }
      },
      "161": {
        start: {
          line: 476,
          column: 73
        },
        end: {
          line: 476,
          column: 81
        }
      },
      "162": {
        start: {
          line: 478,
          column: 2
        },
        end: {
          line: 478,
          column: 52
        }
      },
      "163": {
        start: {
          line: 479,
          column: 2
        },
        end: {
          line: 479,
          column: 83
        }
      },
      "164": {
        start: {
          line: 480,
          column: 2
        },
        end: {
          line: 488,
          column: 15
        }
      },
      "165": {
        start: {
          line: 491,
          column: 2
        },
        end: {
          line: 498,
          column: 3
        }
      },
      "166": {
        start: {
          line: 492,
          column: 4
        },
        end: {
          line: 492,
          column: 100
        }
      },
      "167": {
        start: {
          line: 493,
          column: 4
        },
        end: {
          line: 497,
          column: 7
        }
      },
      "168": {
        start: {
          line: 500,
          column: 2
        },
        end: {
          line: 506,
          column: 3
        }
      },
      "169": {
        start: {
          line: 501,
          column: 4
        },
        end: {
          line: 501,
          column: 140
        }
      },
      "170": {
        start: {
          line: 502,
          column: 4
        },
        end: {
          line: 505,
          column: 7
        }
      },
      "171": {
        start: {
          line: 509,
          column: 27
        },
        end: {
          line: 509,
          column: 76
        }
      },
      "172": {
        start: {
          line: 510,
          column: 2
        },
        end: {
          line: 517,
          column: 3
        }
      },
      "173": {
        start: {
          line: 511,
          column: 4
        },
        end: {
          line: 511,
          column: 104
        }
      },
      "174": {
        start: {
          line: 512,
          column: 4
        },
        end: {
          line: 516,
          column: 7
        }
      },
      "175": {
        start: {
          line: 519,
          column: 2
        },
        end: {
          line: 614,
          column: 3
        }
      },
      "176": {
        start: {
          line: 520,
          column: 4
        },
        end: {
          line: 520,
          column: 112
        }
      },
      "177": {
        start: {
          line: 523,
          column: 23
        },
        end: {
          line: 523,
          column: 33
        }
      },
      "178": {
        start: {
          line: 524,
          column: 4
        },
        end: {
          line: 524,
          column: 73
        }
      },
      "179": {
        start: {
          line: 525,
          column: 4
        },
        end: {
          line: 525,
          column: 99
        }
      },
      "180": {
        start: {
          line: 528,
          column: 4
        },
        end: {
          line: 528,
          column: 108
        }
      },
      "181": {
        start: {
          line: 529,
          column: 4
        },
        end: {
          line: 535,
          column: 5
        }
      },
      "182": {
        start: {
          line: 530,
          column: 28
        },
        end: {
          line: 530,
          column: 107
        }
      },
      "183": {
        start: {
          line: 531,
          column: 6
        },
        end: {
          line: 531,
          column: 91
        }
      },
      "184": {
        start: {
          line: 533,
          column: 6
        },
        end: {
          line: 533,
          column: 108
        }
      },
      "185": {
        start: {
          line: 537,
          column: 4
        },
        end: {
          line: 537,
          column: 84
        }
      },
      "186": {
        start: {
          line: 539,
          column: 4
        },
        end: {
          line: 548,
          column: 7
        }
      },
      "187": {
        start: {
          line: 550,
          column: 4
        },
        end: {
          line: 550,
          column: 94
        }
      },
      "188": {
        start: {
          line: 551,
          column: 4
        },
        end: {
          line: 551,
          column: 60
        }
      },
      "189": {
        start: {
          line: 552,
          column: 4
        },
        end: {
          line: 562,
          column: 7
        }
      },
      "190": {
        start: {
          line: 564,
          column: 4
        },
        end: {
          line: 613,
          column: 5
        }
      },
      "191": {
        start: {
          line: 565,
          column: 6
        },
        end: {
          line: 568,
          column: 9
        }
      },
      "192": {
        start: {
          line: 569,
          column: 11
        },
        end: {
          line: 613,
          column: 5
        }
      },
      "193": {
        start: {
          line: 571,
          column: 6
        },
        end: {
          line: 585,
          column: 9
        }
      },
      "194": {
        start: {
          line: 588,
          column: 6
        },
        end: {
          line: 597,
          column: 9
        }
      },
      "195": {
        start: {
          line: 600,
          column: 6
        },
        end: {
          line: 612,
          column: 9
        }
      },
      "196": {
        start: {
          line: 618,
          column: 0
        },
        end: {
          line: 653,
          column: 3
        }
      },
      "197": {
        start: {
          line: 619,
          column: 17
        },
        end: {
          line: 619,
          column: 29
        }
      },
      "198": {
        start: {
          line: 620,
          column: 20
        },
        end: {
          line: 620,
          column: 30
        }
      },
      "199": {
        start: {
          line: 621,
          column: 37
        },
        end: {
          line: 621,
          column: 45
        }
      },
      "200": {
        start: {
          line: 623,
          column: 2
        },
        end: {
          line: 652,
          column: 3
        }
      },
      "201": {
        start: {
          line: 624,
          column: 19
        },
        end: {
          line: 632,
          column: 47
        }
      },
      "202": {
        start: {
          line: 634,
          column: 4
        },
        end: {
          line: 639,
          column: 5
        }
      },
      "203": {
        start: {
          line: 635,
          column: 6
        },
        end: {
          line: 638,
          column: 9
        }
      },
      "204": {
        start: {
          line: 641,
          column: 4
        },
        end: {
          line: 645,
          column: 7
        }
      },
      "205": {
        start: {
          line: 647,
          column: 4
        },
        end: {
          line: 647,
          column: 52
        }
      },
      "206": {
        start: {
          line: 648,
          column: 4
        },
        end: {
          line: 651,
          column: 7
        }
      },
      "207": {
        start: {
          line: 656,
          column: 0
        },
        end: {
          line: 682,
          column: 3
        }
      },
      "208": {
        start: {
          line: 657,
          column: 17
        },
        end: {
          line: 657,
          column: 29
        }
      },
      "209": {
        start: {
          line: 658,
          column: 23
        },
        end: {
          line: 658,
          column: 33
        }
      },
      "210": {
        start: {
          line: 660,
          column: 2
        },
        end: {
          line: 681,
          column: 3
        }
      },
      "211": {
        start: {
          line: 662,
          column: 4
        },
        end: {
          line: 662,
          column: 55
        }
      },
      "212": {
        start: {
          line: 664,
          column: 4
        },
        end: {
          line: 667,
          column: 7
        }
      },
      "213": {
        start: {
          line: 669,
          column: 4
        },
        end: {
          line: 669,
          column: 52
        }
      },
      "214": {
        start: {
          line: 670,
          column: 4
        },
        end: {
          line: 675,
          column: 5
        }
      },
      "215": {
        start: {
          line: 671,
          column: 6
        },
        end: {
          line: 674,
          column: 9
        }
      },
      "216": {
        start: {
          line: 676,
          column: 4
        },
        end: {
          line: 680,
          column: 7
        }
      },
      "217": {
        start: {
          line: 685,
          column: 0
        },
        end: {
          line: 717,
          column: 3
        }
      },
      "218": {
        start: {
          line: 686,
          column: 17
        },
        end: {
          line: 686,
          column: 29
        }
      },
      "219": {
        start: {
          line: 687,
          column: 23
        },
        end: {
          line: 687,
          column: 33
        }
      },
      "220": {
        start: {
          line: 689,
          column: 2
        },
        end: {
          line: 716,
          column: 3
        }
      },
      "221": {
        start: {
          line: 690,
          column: 19
        },
        end: {
          line: 690,
          column: 66
        }
      },
      "222": {
        start: {
          line: 692,
          column: 4
        },
        end: {
          line: 697,
          column: 5
        }
      },
      "223": {
        start: {
          line: 693,
          column: 6
        },
        end: {
          line: 696,
          column: 9
        }
      },
      "224": {
        start: {
          line: 699,
          column: 4
        },
        end: {
          line: 708,
          column: 7
        }
      },
      "225": {
        start: {
          line: 710,
          column: 4
        },
        end: {
          line: 710,
          column: 54
        }
      },
      "226": {
        start: {
          line: 711,
          column: 4
        },
        end: {
          line: 715,
          column: 7
        }
      },
      "227": {
        start: {
          line: 720,
          column: 0
        },
        end: {
          line: 833,
          column: 3
        }
      },
      "228": {
        start: {
          line: 721,
          column: 20
        },
        end: {
          line: 721,
          column: 53
        }
      },
      "229": {
        start: {
          line: 722,
          column: 23
        },
        end: {
          line: 722,
          column: 33
        }
      },
      "230": {
        start: {
          line: 723,
          column: 17
        },
        end: {
          line: 723,
          column: 29
        }
      },
      "231": {
        start: {
          line: 724,
          column: 23
        },
        end: {
          line: 724,
          column: 33
        }
      },
      "232": {
        start: {
          line: 726,
          column: 2
        },
        end: {
          line: 832,
          column: 3
        }
      },
      "233": {
        start: {
          line: 727,
          column: 4
        },
        end: {
          line: 731,
          column: 7
        }
      },
      "234": {
        start: {
          line: 733,
          column: 4
        },
        end: {
          line: 740,
          column: 5
        }
      },
      "235": {
        start: {
          line: 734,
          column: 6
        },
        end: {
          line: 739,
          column: 9
        }
      },
      "236": {
        start: {
          line: 743,
          column: 4
        },
        end: {
          line: 743,
          column: 77
        }
      },
      "237": {
        start: {
          line: 744,
          column: 24
        },
        end: {
          line: 744,
          column: 71
        }
      },
      "238": {
        start: {
          line: 746,
          column: 4
        },
        end: {
          line: 753,
          column: 5
        }
      },
      "239": {
        start: {
          line: 747,
          column: 6
        },
        end: {
          line: 752,
          column: 9
        }
      },
      "240": {
        start: {
          line: 755,
          column: 4
        },
        end: {
          line: 755,
          column: 76
        }
      },
      "241": {
        start: {
          line: 758,
          column: 4
        },
        end: {
          line: 758,
          column: 75
        }
      },
      "242": {
        start: {
          line: 759,
          column: 32
        },
        end: {
          line: 759,
          column: 42
        }
      },
      "243": {
        start: {
          line: 760,
          column: 27
        },
        end: {
          line: 760,
          column: 76
        }
      },
      "244": {
        start: {
          line: 762,
          column: 4
        },
        end: {
          line: 798,
          column: 5
        }
      },
      "245": {
        start: {
          line: 763,
          column: 28
        },
        end: {
          line: 763,
          column: 61
        }
      },
      "246": {
        start: {
          line: 765,
          column: 6
        },
        end: {
          line: 797,
          column: 7
        }
      },
      "247": {
        start: {
          line: 766,
          column: 23
        },
        end: {
          line: 766,
          column: 89
        }
      },
      "248": {
        start: {
          line: 767,
          column: 24
        },
        end: {
          line: 767,
          column: 49
        }
      },
      "249": {
        start: {
          line: 769,
          column: 8
        },
        end: {
          line: 788,
          column: 9
        }
      },
      "250": {
        start: {
          line: 770,
          column: 10
        },
        end: {
          line: 780,
          column: 12
        }
      },
      "251": {
        start: {
          line: 782,
          column: 10
        },
        end: {
          line: 782,
          column: 76
        }
      },
      "252": {
        start: {
          line: 784,
          column: 10
        },
        end: {
          line: 787,
          column: 12
        }
      },
      "253": {
        start: {
          line: 791,
          column: 8
        },
        end: {
          line: 791,
          column: 94
        }
      },
      "254": {
        start: {
          line: 792,
          column: 8
        },
        end: {
          line: 796,
          column: 10
        }
      },
      "255": {
        start: {
          line: 800,
          column: 35
        },
        end: {
          line: 800,
          column: 67
        }
      },
      "256": {
        start: {
          line: 801,
          column: 26
        },
        end: {
          line: 801,
          column: 51
        }
      },
      "257": {
        start: {
          line: 803,
          column: 4
        },
        end: {
          line: 816,
          column: 7
        }
      },
      "258": {
        start: {
          line: 819,
          column: 26
        },
        end: {
          line: 819,
          column: 51
        }
      },
      "259": {
        start: {
          line: 820,
          column: 4
        },
        end: {
          line: 820,
          column: 85
        }
      },
      "260": {
        start: {
          line: 822,
          column: 4
        },
        end: {
          line: 831,
          column: 7
        }
      },
      "261": {
        start: {
          line: 836,
          column: 0
        },
        end: {
          line: 864,
          column: 3
        }
      },
      "262": {
        start: {
          line: 837,
          column: 17
        },
        end: {
          line: 837,
          column: 29
        }
      },
      "263": {
        start: {
          line: 838,
          column: 23
        },
        end: {
          line: 838,
          column: 32
        }
      },
      "264": {
        start: {
          line: 840,
          column: 2
        },
        end: {
          line: 863,
          column: 3
        }
      },
      "265": {
        start: {
          line: 841,
          column: 24
        },
        end: {
          line: 841,
          column: 71
        }
      },
      "266": {
        start: {
          line: 843,
          column: 4
        },
        end: {
          line: 855,
          column: 7
        }
      },
      "267": {
        start: {
          line: 857,
          column: 4
        },
        end: {
          line: 857,
          column: 61
        }
      },
      "268": {
        start: {
          line: 858,
          column: 4
        },
        end: {
          line: 862,
          column: 7
        }
      },
      "269": {
        start: {
          line: 867,
          column: 0
        },
        end: {
          line: 904,
          column: 3
        }
      },
      "270": {
        start: {
          line: 868,
          column: 17
        },
        end: {
          line: 868,
          column: 29
        }
      },
      "271": {
        start: {
          line: 869,
          column: 23
        },
        end: {
          line: 869,
          column: 33
        }
      },
      "272": {
        start: {
          line: 871,
          column: 2
        },
        end: {
          line: 903,
          column: 3
        }
      },
      "273": {
        start: {
          line: 872,
          column: 24
        },
        end: {
          line: 872,
          column: 71
        }
      },
      "274": {
        start: {
          line: 874,
          column: 4
        },
        end: {
          line: 883,
          column: 5
        }
      },
      "275": {
        start: {
          line: 875,
          column: 6
        },
        end: {
          line: 882,
          column: 9
        }
      },
      "276": {
        start: {
          line: 885,
          column: 4
        },
        end: {
          line: 895,
          column: 7
        }
      },
      "277": {
        start: {
          line: 897,
          column: 4
        },
        end: {
          line: 897,
          column: 54
        }
      },
      "278": {
        start: {
          line: 898,
          column: 4
        },
        end: {
          line: 902,
          column: 7
        }
      },
      "279": {
        start: {
          line: 907,
          column: 0
        },
        end: {
          line: 951,
          column: 3
        }
      },
      "280": {
        start: {
          line: 908,
          column: 17
        },
        end: {
          line: 908,
          column: 29
        }
      },
      "281": {
        start: {
          line: 910,
          column: 2
        },
        end: {
          line: 950,
          column: 3
        }
      },
      "282": {
        start: {
          line: 911,
          column: 22
        },
        end: {
          line: 911,
          column: 61
        }
      },
      "283": {
        start: {
          line: 912,
          column: 20
        },
        end: {
          line: 912,
          column: 22
        }
      },
      "284": {
        start: {
          line: 914,
          column: 4
        },
        end: {
          line: 932,
          column: 5
        }
      },
      "285": {
        start: {
          line: 915,
          column: 6
        },
        end: {
          line: 931,
          column: 7
        }
      },
      "286": {
        start: {
          line: 916,
          column: 28
        },
        end: {
          line: 916,
          column: 75
        }
      },
      "287": {
        start: {
          line: 917,
          column: 8
        },
        end: {
          line: 928,
          column: 9
        }
      },
      "288": {
        start: {
          line: 918,
          column: 10
        },
        end: {
          line: 927,
          column: 13
        }
      },
      "289": {
        start: {
          line: 930,
          column: 8
        },
        end: {
          line: 930,
          column: 79
        }
      },
      "290": {
        start: {
          line: 934,
          column: 4
        },
        end: {
          line: 942,
          column: 7
        }
      },
      "291": {
        start: {
          line: 939,
          column: 39
        },
        end: {
          line: 939,
          column: 66
        }
      },
      "292": {
        start: {
          line: 944,
          column: 4
        },
        end: {
          line: 944,
          column: 59
        }
      },
      "293": {
        start: {
          line: 945,
          column: 4
        },
        end: {
          line: 949,
          column: 7
        }
      },
      "294": {
        start: {
          line: 954,
          column: 0
        },
        end: {
          line: 990,
          column: 3
        }
      },
      "295": {
        start: {
          line: 955,
          column: 17
        },
        end: {
          line: 955,
          column: 29
        }
      },
      "296": {
        start: {
          line: 956,
          column: 23
        },
        end: {
          line: 956,
          column: 33
        }
      },
      "297": {
        start: {
          line: 958,
          column: 2
        },
        end: {
          line: 989,
          column: 3
        }
      },
      "298": {
        start: {
          line: 960,
          column: 24
        },
        end: {
          line: 960,
          column: 71
        }
      },
      "299": {
        start: {
          line: 962,
          column: 4
        },
        end: {
          line: 968,
          column: 5
        }
      },
      "300": {
        start: {
          line: 963,
          column: 6
        },
        end: {
          line: 967,
          column: 9
        }
      },
      "301": {
        start: {
          line: 970,
          column: 4
        },
        end: {
          line: 970,
          column: 73
        }
      },
      "302": {
        start: {
          line: 972,
          column: 4
        },
        end: {
          line: 981,
          column: 7
        }
      },
      "303": {
        start: {
          line: 983,
          column: 4
        },
        end: {
          line: 983,
          column: 59
        }
      },
      "304": {
        start: {
          line: 984,
          column: 4
        },
        end: {
          line: 988,
          column: 7
        }
      },
      "305": {
        start: {
          line: 993,
          column: 0
        },
        end: {
          line: 1029,
          column: 3
        }
      },
      "306": {
        start: {
          line: 994,
          column: 17
        },
        end: {
          line: 994,
          column: 29
        }
      },
      "307": {
        start: {
          line: 996,
          column: 2
        },
        end: {
          line: 1028,
          column: 3
        }
      },
      "308": {
        start: {
          line: 997,
          column: 19
        },
        end: {
          line: 1009,
          column: 16
        }
      },
      "309": {
        start: {
          line: 1011,
          column: 4
        },
        end: {
          line: 1016,
          column: 5
        }
      },
      "310": {
        start: {
          line: 1012,
          column: 6
        },
        end: {
          line: 1015,
          column: 9
        }
      },
      "311": {
        start: {
          line: 1018,
          column: 4
        },
        end: {
          line: 1021,
          column: 7
        }
      },
      "312": {
        start: {
          line: 1023,
          column: 4
        },
        end: {
          line: 1023,
          column: 57
        }
      },
      "313": {
        start: {
          line: 1024,
          column: 4
        },
        end: {
          line: 1027,
          column: 7
        }
      },
      "314": {
        start: {
          line: 1032,
          column: 0
        },
        end: {
          line: 1255,
          column: 3
        }
      },
      "315": {
        start: {
          line: 1033,
          column: 17
        },
        end: {
          line: 1033,
          column: 29
        }
      },
      "316": {
        start: {
          line: 1034,
          column: 68
        },
        end: {
          line: 1034,
          column: 76
        }
      },
      "317": {
        start: {
          line: 1036,
          column: 2
        },
        end: {
          line: 1036,
          column: 61
        }
      },
      "318": {
        start: {
          line: 1037,
          column: 2
        },
        end: {
          line: 1037,
          column: 92
        }
      },
      "319": {
        start: {
          line: 1039,
          column: 2
        },
        end: {
          line: 1254,
          column: 3
        }
      },
      "320": {
        start: {
          line: 1041,
          column: 4
        },
        end: {
          line: 1041,
          column: 55
        }
      },
      "321": {
        start: {
          line: 1042,
          column: 4
        },
        end: {
          line: 1053,
          column: 5
        }
      },
      "322": {
        start: {
          line: 1043,
          column: 6
        },
        end: {
          line: 1043,
          column: 48
        }
      },
      "323": {
        start: {
          line: 1044,
          column: 6
        },
        end: {
          line: 1044,
          column: 54
        }
      },
      "324": {
        start: {
          line: 1046,
          column: 6
        },
        end: {
          line: 1046,
          column: 70
        }
      },
      "325": {
        start: {
          line: 1047,
          column: 6
        },
        end: {
          line: 1052,
          column: 9
        }
      },
      "326": {
        start: {
          line: 1056,
          column: 4
        },
        end: {
          line: 1056,
          column: 53
        }
      },
      "327": {
        start: {
          line: 1057,
          column: 26
        },
        end: {
          line: 1057,
          column: 28
        }
      },
      "328": {
        start: {
          line: 1058,
          column: 4
        },
        end: {
          line: 1100,
          column: 5
        }
      },
      "329": {
        start: {
          line: 1059,
          column: 26
        },
        end: {
          line: 1063,
          column: 18
        }
      },
      "330": {
        start: {
          line: 1065,
          column: 6
        },
        end: {
          line: 1065,
          column: 69
        }
      },
      "331": {
        start: {
          line: 1065,
          column: 52
        },
        end: {
          line: 1065,
          column: 67
        }
      },
      "332": {
        start: {
          line: 1066,
          column: 6
        },
        end: {
          line: 1066,
          column: 75
        }
      },
      "333": {
        start: {
          line: 1068,
          column: 6
        },
        end: {
          line: 1068,
          column: 67
        }
      },
      "334": {
        start: {
          line: 1071,
          column: 6
        },
        end: {
          line: 1095,
          column: 7
        }
      },
      "335": {
        start: {
          line: 1072,
          column: 28
        },
        end: {
          line: 1077,
          column: 20
        }
      },
      "336": {
        start: {
          line: 1079,
          column: 8
        },
        end: {
          line: 1086,
          column: 9
        }
      },
      "337": {
        start: {
          line: 1080,
          column: 10
        },
        end: {
          line: 1085,
          column: 13
        }
      },
      "338": {
        start: {
          line: 1088,
          column: 8
        },
        end: {
          line: 1088,
          column: 82
        }
      },
      "339": {
        start: {
          line: 1089,
          column: 8
        },
        end: {
          line: 1094,
          column: 11
        }
      },
      "340": {
        start: {
          line: 1098,
          column: 6
        },
        end: {
          line: 1098,
          column: 52
        }
      },
      "341": {
        start: {
          line: 1099,
          column: 6
        },
        end: {
          line: 1099,
          column: 69
        }
      },
      "342": {
        start: {
          line: 1103,
          column: 31
        },
        end: {
          line: 1103,
          column: 69
        }
      },
      "343": {
        start: {
          line: 1104,
          column: 25
        },
        end: {
          line: 1104,
          column: 49
        }
      },
      "344": {
        start: {
          line: 1107,
          column: 23
        },
        end: {
          line: 1107,
          column: 25
        }
      },
      "345": {
        start: {
          line: 1110,
          column: 4
        },
        end: {
          line: 1112,
          column: 5
        }
      },
      "346": {
        start: {
          line: 1111,
          column: 6
        },
        end: {
          line: 1111,
          column: 40
        }
      },
      "347": {
        start: {
          line: 1114,
          column: 4
        },
        end: {
          line: 1116,
          column: 5
        }
      },
      "348": {
        start: {
          line: 1115,
          column: 6
        },
        end: {
          line: 1115,
          column: 38
        }
      },
      "349": {
        start: {
          line: 1118,
          column: 4
        },
        end: {
          line: 1120,
          column: 5
        }
      },
      "350": {
        start: {
          line: 1119,
          column: 6
        },
        end: {
          line: 1119,
          column: 31
        }
      },
      "351": {
        start: {
          line: 1122,
          column: 4
        },
        end: {
          line: 1124,
          column: 5
        }
      },
      "352": {
        start: {
          line: 1123,
          column: 6
        },
        end: {
          line: 1123,
          column: 31
        }
      },
      "353": {
        start: {
          line: 1126,
          column: 4
        },
        end: {
          line: 1128,
          column: 5
        }
      },
      "354": {
        start: {
          line: 1127,
          column: 6
        },
        end: {
          line: 1127,
          column: 37
        }
      },
      "355": {
        start: {
          line: 1130,
          column: 4
        },
        end: {
          line: 1132,
          column: 5
        }
      },
      "356": {
        start: {
          line: 1131,
          column: 6
        },
        end: {
          line: 1131,
          column: 37
        }
      },
      "357": {
        start: {
          line: 1136,
          column: 4
        },
        end: {
          line: 1143,
          column: 5
        }
      },
      "358": {
        start: {
          line: 1137,
          column: 6
        },
        end: {
          line: 1142,
          column: 9
        }
      },
      "359": {
        start: {
          line: 1146,
          column: 56
        },
        end: {
          line: 1150,
          column: 6
        }
      },
      "360": {
        start: {
          line: 1152,
          column: 4
        },
        end: {
          line: 1152,
          column: 78
        }
      },
      "361": {
        start: {
          line: 1153,
          column: 4
        },
        end: {
          line: 1153,
          column: 65
        }
      },
      "362": {
        start: {
          line: 1156,
          column: 4
        },
        end: {
          line: 1212,
          column: 5
        }
      },
      "363": {
        start: {
          line: 1157,
          column: 6
        },
        end: {
          line: 1157,
          column: 60
        }
      },
      "364": {
        start: {
          line: 1158,
          column: 6
        },
        end: {
          line: 1158,
          column: 84
        }
      },
      "365": {
        start: {
          line: 1160,
          column: 6
        },
        end: {
          line: 1160,
          column: 69
        }
      },
      "366": {
        start: {
          line: 1161,
          column: 6
        },
        end: {
          line: 1168,
          column: 9
        }
      },
      "367": {
        start: {
          line: 1171,
          column: 6
        },
        end: {
          line: 1211,
          column: 7
        }
      },
      "368": {
        start: {
          line: 1172,
          column: 8
        },
        end: {
          line: 1178,
          column: 11
        }
      },
      "369": {
        start: {
          line: 1179,
          column: 13
        },
        end: {
          line: 1211,
          column: 7
        }
      },
      "370": {
        start: {
          line: 1180,
          column: 8
        },
        end: {
          line: 1186,
          column: 11
        }
      },
      "371": {
        start: {
          line: 1187,
          column: 13
        },
        end: {
          line: 1211,
          column: 7
        }
      },
      "372": {
        start: {
          line: 1188,
          column: 8
        },
        end: {
          line: 1193,
          column: 11
        }
      },
      "373": {
        start: {
          line: 1194,
          column: 13
        },
        end: {
          line: 1211,
          column: 7
        }
      },
      "374": {
        start: {
          line: 1195,
          column: 8
        },
        end: {
          line: 1200,
          column: 11
        }
      },
      "375": {
        start: {
          line: 1203,
          column: 8
        },
        end: {
          line: 1210,
          column: 11
        }
      },
      "376": {
        start: {
          line: 1214,
          column: 4
        },
        end: {
          line: 1223,
          column: 5
        }
      },
      "377": {
        start: {
          line: 1215,
          column: 6
        },
        end: {
          line: 1215,
          column: 58
        }
      },
      "378": {
        start: {
          line: 1216,
          column: 6
        },
        end: {
          line: 1222,
          column: 9
        }
      },
      "379": {
        start: {
          line: 1225,
          column: 4
        },
        end: {
          line: 1225,
          column: 47
        }
      },
      "380": {
        start: {
          line: 1226,
          column: 4
        },
        end: {
          line: 1233,
          column: 7
        }
      },
      "381": {
        start: {
          line: 1230,
          column: 41
        },
        end: {
          line: 1230,
          column: 66
        }
      },
      "382": {
        start: {
          line: 1235,
          column: 4
        },
        end: {
          line: 1235,
          column: 70
        }
      },
      "383": {
        start: {
          line: 1236,
          column: 4
        },
        end: {
          line: 1242,
          column: 7
        }
      },
      "384": {
        start: {
          line: 1245,
          column: 4
        },
        end: {
          line: 1253,
          column: 7
        }
      },
      "385": {
        start: {
          line: 1258,
          column: 0
        },
        end: {
          line: 1295,
          column: 3
        }
      },
      "386": {
        start: {
          line: 1259,
          column: 17
        },
        end: {
          line: 1259,
          column: 29
        }
      },
      "387": {
        start: {
          line: 1261,
          column: 2
        },
        end: {
          line: 1294,
          column: 3
        }
      },
      "388": {
        start: {
          line: 1262,
          column: 19
        },
        end: {
          line: 1272,
          column: 16
        }
      },
      "389": {
        start: {
          line: 1275,
          column: 24
        },
        end: {
          line: 1282,
          column: 5
        }
      },
      "390": {
        start: {
          line: 1284,
          column: 4
        },
        end: {
          line: 1287,
          column: 7
        }
      },
      "391": {
        start: {
          line: 1289,
          column: 4
        },
        end: {
          line: 1289,
          column: 69
        }
      },
      "392": {
        start: {
          line: 1290,
          column: 4
        },
        end: {
          line: 1293,
          column: 7
        }
      },
      "393": {
        start: {
          line: 1298,
          column: 0
        },
        end: {
          line: 1345,
          column: 3
        }
      },
      "394": {
        start: {
          line: 1299,
          column: 17
        },
        end: {
          line: 1299,
          column: 29
        }
      },
      "395": {
        start: {
          line: 1300,
          column: 84
        },
        end: {
          line: 1300,
          column: 92
        }
      },
      "396": {
        start: {
          line: 1302,
          column: 2
        },
        end: {
          line: 1344,
          column: 3
        }
      },
      "397": {
        start: {
          line: 1304,
          column: 19
        },
        end: {
          line: 1331,
          column: 87
        }
      },
      "398": {
        start: {
          line: 1333,
          column: 4
        },
        end: {
          line: 1337,
          column: 7
        }
      },
      "399": {
        start: {
          line: 1339,
          column: 4
        },
        end: {
          line: 1339,
          column: 69
        }
      },
      "400": {
        start: {
          line: 1340,
          column: 4
        },
        end: {
          line: 1343,
          column: 7
        }
      },
      "401": {
        start: {
          line: 1348,
          column: 0
        },
        end: {
          line: 1381,
          column: 3
        }
      },
      "402": {
        start: {
          line: 1349,
          column: 17
        },
        end: {
          line: 1349,
          column: 29
        }
      },
      "403": {
        start: {
          line: 1351,
          column: 2
        },
        end: {
          line: 1380,
          column: 3
        }
      },
      "404": {
        start: {
          line: 1352,
          column: 19
        },
        end: {
          line: 1360,
          column: 16
        }
      },
      "405": {
        start: {
          line: 1363,
          column: 24
        },
        end: {
          line: 1368,
          column: 5
        }
      },
      "406": {
        start: {
          line: 1370,
          column: 4
        },
        end: {
          line: 1373,
          column: 7
        }
      },
      "407": {
        start: {
          line: 1375,
          column: 4
        },
        end: {
          line: 1375,
          column: 62
        }
      },
      "408": {
        start: {
          line: 1376,
          column: 4
        },
        end: {
          line: 1379,
          column: 7
        }
      },
      "409": {
        start: {
          line: 1384,
          column: 0
        },
        end: {
          line: 1425,
          column: 3
        }
      },
      "410": {
        start: {
          line: 1385,
          column: 17
        },
        end: {
          line: 1385,
          column: 29
        }
      },
      "411": {
        start: {
          line: 1386,
          column: 57
        },
        end: {
          line: 1386,
          column: 65
        }
      },
      "412": {
        start: {
          line: 1388,
          column: 2
        },
        end: {
          line: 1424,
          column: 3
        }
      },
      "413": {
        start: {
          line: 1390,
          column: 19
        },
        end: {
          line: 1411,
          column: 60
        }
      },
      "414": {
        start: {
          line: 1413,
          column: 4
        },
        end: {
          line: 1417,
          column: 7
        }
      },
      "415": {
        start: {
          line: 1419,
          column: 4
        },
        end: {
          line: 1419,
          column: 62
        }
      },
      "416": {
        start: {
          line: 1420,
          column: 4
        },
        end: {
          line: 1423,
          column: 7
        }
      },
      "417": {
        start: {
          line: 1428,
          column: 0
        },
        end: {
          line: 1506,
          column: 3
        }
      },
      "418": {
        start: {
          line: 1429,
          column: 17
        },
        end: {
          line: 1429,
          column: 29
        }
      },
      "419": {
        start: {
          line: 1431,
          column: 2
        },
        end: {
          line: 1505,
          column: 3
        }
      },
      "420": {
        start: {
          line: 1432,
          column: 4
        },
        end: {
          line: 1432,
          column: 53
        }
      },
      "421": {
        start: {
          line: 1435,
          column: 22
        },
        end: {
          line: 1435,
          column: 42
        }
      },
      "422": {
        start: {
          line: 1436,
          column: 19
        },
        end: {
          line: 1436,
          column: 36
        }
      },
      "423": {
        start: {
          line: 1438,
          column: 19
        },
        end: {
          line: 1443,
          column: 6
        }
      },
      "424": {
        start: {
          line: 1445,
          column: 4
        },
        end: {
          line: 1445,
          column: 52
        }
      },
      "425": {
        start: {
          line: 1448,
          column: 26
        },
        end: {
          line: 1448,
          column: 68
        }
      },
      "426": {
        start: {
          line: 1451,
          column: 4
        },
        end: {
          line: 1464,
          column: 5
        }
      },
      "427": {
        start: {
          line: 1452,
          column: 6
        },
        end: {
          line: 1459,
          column: 34
        }
      },
      "428": {
        start: {
          line: 1460,
          column: 6
        },
        end: {
          line: 1460,
          column: 76
        }
      },
      "429": {
        start: {
          line: 1462,
          column: 6
        },
        end: {
          line: 1462,
          column: 93
        }
      },
      "430": {
        start: {
          line: 1466,
          column: 4
        },
        end: {
          line: 1472,
          column: 7
        }
      },
      "431": {
        start: {
          line: 1474,
          column: 4
        },
        end: {
          line: 1474,
          column: 62
        }
      },
      "432": {
        start: {
          line: 1477,
          column: 4
        },
        end: {
          line: 1504,
          column: 5
        }
      },
      "433": {
        start: {
          line: 1478,
          column: 24
        },
        end: {
          line: 1478,
          column: 44
        }
      },
      "434": {
        start: {
          line: 1479,
          column: 21
        },
        end: {
          line: 1479,
          column: 38
        }
      },
      "435": {
        start: {
          line: 1481,
          column: 21
        },
        end: {
          line: 1486,
          column: 8
        }
      },
      "436": {
        start: {
          line: 1488,
          column: 28
        },
        end: {
          line: 1488,
          column: 70
        }
      },
      "437": {
        start: {
          line: 1490,
          column: 6
        },
        end: {
          line: 1496,
          column: 9
        }
      },
      "438": {
        start: {
          line: 1498,
          column: 6
        },
        end: {
          line: 1498,
          column: 72
        }
      },
      "439": {
        start: {
          line: 1499,
          column: 6
        },
        end: {
          line: 1503,
          column: 9
        }
      },
      "440": {
        start: {
          line: 1509,
          column: 0
        },
        end: {
          line: 1605,
          column: 3
        }
      },
      "441": {
        start: {
          line: 1510,
          column: 17
        },
        end: {
          line: 1510,
          column: 29
        }
      },
      "442": {
        start: {
          line: 1511,
          column: 19
        },
        end: {
          line: 1511,
          column: 27
        }
      },
      "443": {
        start: {
          line: 1513,
          column: 2
        },
        end: {
          line: 1604,
          column: 3
        }
      },
      "444": {
        start: {
          line: 1514,
          column: 4
        },
        end: {
          line: 1514,
          column: 60
        }
      },
      "445": {
        start: {
          line: 1516,
          column: 4
        },
        end: {
          line: 1521,
          column: 5
        }
      },
      "446": {
        start: {
          line: 1517,
          column: 6
        },
        end: {
          line: 1520,
          column: 9
        }
      },
      "447": {
        start: {
          line: 1524,
          column: 23
        },
        end: {
          line: 1528,
          column: 16
        }
      },
      "448": {
        start: {
          line: 1530,
          column: 4
        },
        end: {
          line: 1535,
          column: 5
        }
      },
      "449": {
        start: {
          line: 1531,
          column: 6
        },
        end: {
          line: 1534,
          column: 9
        }
      },
      "450": {
        start: {
          line: 1537,
          column: 19
        },
        end: {
          line: 1537,
          column: 55
        }
      },
      "451": {
        start: {
          line: 1538,
          column: 4
        },
        end: {
          line: 1543,
          column: 5
        }
      },
      "452": {
        start: {
          line: 1539,
          column: 6
        },
        end: {
          line: 1542,
          column: 9
        }
      },
      "453": {
        start: {
          line: 1546,
          column: 22
        },
        end: {
          line: 1546,
          column: 42
        }
      },
      "454": {
        start: {
          line: 1547,
          column: 21
        },
        end: {
          line: 1552,
          column: 6
        }
      },
      "455": {
        start: {
          line: 1554,
          column: 4
        },
        end: {
          line: 1560,
          column: 5
        }
      },
      "456": {
        start: {
          line: 1555,
          column: 6
        },
        end: {
          line: 1555,
          column: 49
        }
      },
      "457": {
        start: {
          line: 1556,
          column: 6
        },
        end: {
          line: 1559,
          column: 9
        }
      },
      "458": {
        start: {
          line: 1563,
          column: 19
        },
        end: {
          line: 1563,
          column: 36
        }
      },
      "459": {
        start: {
          line: 1564,
          column: 24
        },
        end: {
          line: 1564,
          column: 26
        }
      },
      "460": {
        start: {
          line: 1565,
          column: 4
        },
        end: {
          line: 1577,
          column: 5
        }
      },
      "461": {
        start: {
          line: 1566,
          column: 6
        },
        end: {
          line: 1568,
          column: 7
        }
      },
      "462": {
        start: {
          line: 1566,
          column: 19
        },
        end: {
          line: 1566,
          column: 20
        }
      },
      "463": {
        start: {
          line: 1567,
          column: 8
        },
        end: {
          line: 1567,
          column: 80
        }
      },
      "464": {
        start: {
          line: 1570,
          column: 6
        },
        end: {
          line: 1570,
          column: 73
        }
      },
      "465": {
        start: {
          line: 1571,
          column: 6
        },
        end: {
          line: 1576,
          column: 9
        }
      },
      "466": {
        start: {
          line: 1580,
          column: 4
        },
        end: {
          line: 1587,
          column: 48
        }
      },
      "467": {
        start: {
          line: 1589,
          column: 4
        },
        end: {
          line: 1589,
          column: 55
        }
      },
      "468": {
        start: {
          line: 1591,
          column: 4
        },
        end: {
          line: 1595,
          column: 7
        }
      },
      "469": {
        start: {
          line: 1598,
          column: 4
        },
        end: {
          line: 1598,
          column: 57
        }
      },
      "470": {
        start: {
          line: 1599,
          column: 4
        },
        end: {
          line: 1603,
          column: 7
        }
      },
      "471": {
        start: {
          line: 1607,
          column: 0
        },
        end: {
          line: 1631,
          column: 3
        }
      },
      "472": {
        start: {
          line: 1608,
          column: 17
        },
        end: {
          line: 1608,
          column: 29
        }
      },
      "473": {
        start: {
          line: 1610,
          column: 2
        },
        end: {
          line: 1630,
          column: 3
        }
      },
      "474": {
        start: {
          line: 1611,
          column: 4
        },
        end: {
          line: 1618,
          column: 17
        }
      },
      "475": {
        start: {
          line: 1620,
          column: 4
        },
        end: {
          line: 1623,
          column: 7
        }
      },
      "476": {
        start: {
          line: 1625,
          column: 4
        },
        end: {
          line: 1625,
          column: 61
        }
      },
      "477": {
        start: {
          line: 1626,
          column: 4
        },
        end: {
          line: 1629,
          column: 7
        }
      },
      "478": {
        start: {
          line: 1634,
          column: 0
        },
        end: {
          line: 1665,
          column: 3
        }
      },
      "479": {
        start: {
          line: 1635,
          column: 17
        },
        end: {
          line: 1635,
          column: 29
        }
      },
      "480": {
        start: {
          line: 1637,
          column: 2
        },
        end: {
          line: 1664,
          column: 3
        }
      },
      "481": {
        start: {
          line: 1638,
          column: 19
        },
        end: {
          line: 1642,
          column: 16
        }
      },
      "482": {
        start: {
          line: 1644,
          column: 4
        },
        end: {
          line: 1649,
          column: 5
        }
      },
      "483": {
        start: {
          line: 1645,
          column: 6
        },
        end: {
          line: 1648,
          column: 9
        }
      },
      "484": {
        start: {
          line: 1651,
          column: 17
        },
        end: {
          line: 1651,
          column: 31
        }
      },
      "485": {
        start: {
          line: 1653,
          column: 4
        },
        end: {
          line: 1657,
          column: 7
        }
      },
      "486": {
        start: {
          line: 1659,
          column: 4
        },
        end: {
          line: 1659,
          column: 54
        }
      },
      "487": {
        start: {
          line: 1660,
          column: 4
        },
        end: {
          line: 1663,
          column: 7
        }
      },
      "488": {
        start: {
          line: 1667,
          column: 0
        },
        end: {
          line: 1709,
          column: 3
        }
      },
      "489": {
        start: {
          line: 1668,
          column: 17
        },
        end: {
          line: 1668,
          column: 29
        }
      },
      "490": {
        start: {
          line: 1670,
          column: 2
        },
        end: {
          line: 1708,
          column: 3
        }
      },
      "491": {
        start: {
          line: 1672,
          column: 16
        },
        end: {
          line: 1672,
          column: 18
        }
      },
      "492": {
        start: {
          line: 1673,
          column: 4
        },
        end: {
          line: 1685,
          column: 5
        }
      },
      "493": {
        start: {
          line: 1674,
          column: 6
        },
        end: {
          line: 1676,
          column: 7
        }
      },
      "494": {
        start: {
          line: 1674,
          column: 19
        },
        end: {
          line: 1674,
          column: 20
        }
      },
      "495": {
        start: {
          line: 1675,
          column: 8
        },
        end: {
          line: 1675,
          column: 72
        }
      },
      "496": {
        start: {
          line: 1678,
          column: 6
        },
        end: {
          line: 1678,
          column: 77
        }
      },
      "497": {
        start: {
          line: 1679,
          column: 6
        },
        end: {
          line: 1684,
          column: 9
        }
      },
      "498": {
        start: {
          line: 1688,
          column: 24
        },
        end: {
          line: 1688,
          column: 97
        }
      },
      "499": {
        start: {
          line: 1688,
          column: 42
        },
        end: {
          line: 1688,
          column: 96
        }
      },
      "500": {
        start: {
          line: 1690,
          column: 4
        },
        end: {
          line: 1696,
          column: 46
        }
      },
      "501": {
        start: {
          line: 1698,
          column: 4
        },
        end: {
          line: 1701,
          column: 7
        }
      },
      "502": {
        start: {
          line: 1703,
          column: 4
        },
        end: {
          line: 1703,
          column: 61
        }
      },
      "503": {
        start: {
          line: 1704,
          column: 4
        },
        end: {
          line: 1707,
          column: 7
        }
      },
      "504": {
        start: {
          line: 1711,
          column: 0
        },
        end: {
          line: 1736,
          column: 3
        }
      },
      "505": {
        start: {
          line: 1712,
          column: 17
        },
        end: {
          line: 1712,
          column: 29
        }
      },
      "506": {
        start: {
          line: 1714,
          column: 2
        },
        end: {
          line: 1735,
          column: 3
        }
      },
      "507": {
        start: {
          line: 1716,
          column: 4
        },
        end: {
          line: 1723,
          column: 17
        }
      },
      "508": {
        start: {
          line: 1725,
          column: 4
        },
        end: {
          line: 1728,
          column: 7
        }
      },
      "509": {
        start: {
          line: 1730,
          column: 4
        },
        end: {
          line: 1730,
          column: 52
        }
      },
      "510": {
        start: {
          line: 1731,
          column: 4
        },
        end: {
          line: 1734,
          column: 7
        }
      },
      "511": {
        start: {
          line: 1738,
          column: 0
        },
        end: {
          line: 1755,
          column: 3
        }
      },
      "512": {
        start: {
          line: 1739,
          column: 17
        },
        end: {
          line: 1739,
          column: 29
        }
      },
      "513": {
        start: {
          line: 1741,
          column: 2
        },
        end: {
          line: 1754,
          column: 3
        }
      },
      "514": {
        start: {
          line: 1744,
          column: 4
        },
        end: {
          line: 1747,
          column: 7
        }
      },
      "515": {
        start: {
          line: 1749,
          column: 4
        },
        end: {
          line: 1749,
          column: 53
        }
      },
      "516": {
        start: {
          line: 1750,
          column: 4
        },
        end: {
          line: 1753,
          column: 7
        }
      },
      "517": {
        start: {
          line: 1758,
          column: 0
        },
        end: {
          line: 1848,
          column: 3
        }
      },
      "518": {
        start: {
          line: 1759,
          column: 2
        },
        end: {
          line: 1759,
          column: 50
        }
      },
      "519": {
        start: {
          line: 1761,
          column: 2
        },
        end: {
          line: 1847,
          column: 3
        }
      },
      "520": {
        start: {
          line: 1762,
          column: 28
        },
        end: {
          line: 1762,
          column: 56
        }
      },
      "521": {
        start: {
          line: 1764,
          column: 19
        },
        end: {
          line: 1830,
          column: 6
        }
      },
      "522": {
        start: {
          line: 1765,
          column: 20
        },
        end: {
          line: 1765,
          column: 22
        }
      },
      "523": {
        start: {
          line: 1768,
          column: 26
        },
        end: {
          line: 1778,
          column: 7
        }
      },
      "524": {
        start: {
          line: 1780,
          column: 6
        },
        end: {
          line: 1790,
          column: 7
        }
      },
      "525": {
        start: {
          line: 1781,
          column: 8
        },
        end: {
          line: 1789,
          column: 9
        }
      },
      "526": {
        start: {
          line: 1782,
          column: 10
        },
        end: {
          line: 1785,
          column: 13
        }
      },
      "527": {
        start: {
          line: 1786,
          column: 10
        },
        end: {
          line: 1786,
          column: 57
        }
      },
      "528": {
        start: {
          line: 1788,
          column: 10
        },
        end: {
          line: 1788,
          column: 68
        }
      },
      "529": {
        start: {
          line: 1793,
          column: 6
        },
        end: {
          line: 1810,
          column: 7
        }
      },
      "530": {
        start: {
          line: 1794,
          column: 8
        },
        end: {
          line: 1806,
          column: 11
        }
      },
      "531": {
        start: {
          line: 1807,
          column: 8
        },
        end: {
          line: 1807,
          column: 66
        }
      },
      "532": {
        start: {
          line: 1809,
          column: 8
        },
        end: {
          line: 1809,
          column: 87
        }
      },
      "533": {
        start: {
          line: 1812,
          column: 6
        },
        end: {
          line: 1827,
          column: 7
        }
      },
      "534": {
        start: {
          line: 1813,
          column: 8
        },
        end: {
          line: 1823,
          column: 11
        }
      },
      "535": {
        start: {
          line: 1824,
          column: 8
        },
        end: {
          line: 1824,
          column: 59
        }
      },
      "536": {
        start: {
          line: 1826,
          column: 8
        },
        end: {
          line: 1826,
          column: 80
        }
      },
      "537": {
        start: {
          line: 1829,
          column: 6
        },
        end: {
          line: 1829,
          column: 19
        }
      },
      "538": {
        start: {
          line: 1832,
          column: 4
        },
        end: {
          line: 1832,
          column: 51
        }
      },
      "539": {
        start: {
          line: 1833,
          column: 4
        },
        end: {
          line: 1838,
          column: 7
        }
      },
      "540": {
        start: {
          line: 1841,
          column: 4
        },
        end: {
          line: 1841,
          column: 49
        }
      },
      "541": {
        start: {
          line: 1842,
          column: 4
        },
        end: {
          line: 1846,
          column: 7
        }
      },
      "542": {
        start: {
          line: 1850,
          column: 0
        },
        end: {
          line: 1850,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 18,
            column: 17
          },
          end: {
            line: 18,
            column: 18
          }
        },
        loc: {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 90
          }
        },
        line: 18
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 19,
            column: 17
          },
          end: {
            line: 19,
            column: 18
          }
        },
        loc: {
          start: {
            line: 19,
            column: 28
          },
          end: {
            line: 19,
            column: 72
          }
        },
        line: 19
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 17
          },
          end: {
            line: 25,
            column: 18
          }
        },
        loc: {
          start: {
            line: 25,
            column: 28
          },
          end: {
            line: 25,
            column: 84
          }
        },
        line: 25
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 26,
            column: 17
          },
          end: {
            line: 26,
            column: 18
          }
        },
        loc: {
          start: {
            line: 26,
            column: 28
          },
          end: {
            line: 26,
            column: 104
          }
        },
        line: 26
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 32,
            column: 17
          },
          end: {
            line: 32,
            column: 18
          }
        },
        loc: {
          start: {
            line: 32,
            column: 28
          },
          end: {
            line: 32,
            column: 84
          }
        },
        line: 32
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 33,
            column: 17
          },
          end: {
            line: 33,
            column: 18
          }
        },
        loc: {
          start: {
            line: 33,
            column: 28
          },
          end: {
            line: 33,
            column: 69
          }
        },
        line: 33
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 38,
            column: 17
          },
          end: {
            line: 38,
            column: 18
          }
        },
        loc: {
          start: {
            line: 38,
            column: 28
          },
          end: {
            line: 38,
            column: 77
          }
        },
        line: 38
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 39,
            column: 17
          },
          end: {
            line: 39,
            column: 18
          }
        },
        loc: {
          start: {
            line: 39,
            column: 28
          },
          end: {
            line: 39,
            column: 54
          }
        },
        line: 39
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 47,
            column: 17
          },
          end: {
            line: 47,
            column: 18
          }
        },
        loc: {
          start: {
            line: 47,
            column: 28
          },
          end: {
            line: 47,
            column: 83
          }
        },
        line: 47
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 48,
            column: 17
          },
          end: {
            line: 48,
            column: 18
          }
        },
        loc: {
          start: {
            line: 48,
            column: 28
          },
          end: {
            line: 48,
            column: 79
          }
        },
        line: 48
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 53,
            column: 17
          },
          end: {
            line: 53,
            column: 18
          }
        },
        loc: {
          start: {
            line: 53,
            column: 28
          },
          end: {
            line: 53,
            column: 71
          }
        },
        line: 53
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 54,
            column: 17
          },
          end: {
            line: 54,
            column: 18
          }
        },
        loc: {
          start: {
            line: 54,
            column: 28
          },
          end: {
            line: 54,
            column: 65
          }
        },
        line: 54
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 63,
            column: 17
          },
          end: {
            line: 63,
            column: 18
          }
        },
        loc: {
          start: {
            line: 63,
            column: 28
          },
          end: {
            line: 63,
            column: 54
          }
        },
        line: 63
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 69,
            column: 17
          },
          end: {
            line: 69,
            column: 18
          }
        },
        loc: {
          start: {
            line: 69,
            column: 28
          },
          end: {
            line: 69,
            column: 54
          }
        },
        line: 69
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 78,
            column: 17
          },
          end: {
            line: 78,
            column: 18
          }
        },
        loc: {
          start: {
            line: 78,
            column: 28
          },
          end: {
            line: 78,
            column: 54
          }
        },
        line: 78
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 83,
            column: 17
          },
          end: {
            line: 83,
            column: 18
          }
        },
        loc: {
          start: {
            line: 83,
            column: 28
          },
          end: {
            line: 83,
            column: 70
          }
        },
        line: 83
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 84,
            column: 17
          },
          end: {
            line: 84,
            column: 18
          }
        },
        loc: {
          start: {
            line: 84,
            column: 28
          },
          end: {
            line: 84,
            column: 69
          }
        },
        line: 84
      },
      "17": {
        name: "validateApiKeyFormat",
        decl: {
          start: {
            line: 91,
            column: 9
          },
          end: {
            line: 91,
            column: 29
          }
        },
        loc: {
          start: {
            line: 91,
            column: 59
          },
          end: {
            line: 171,
            column: 1
          }
        },
        line: 91
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 174,
            column: 16
          },
          end: {
            line: 174,
            column: 17
          }
        },
        loc: {
          start: {
            line: 174,
            column: 30
          },
          end: {
            line: 192,
            column: 1
          }
        },
        line: 174
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 198,
            column: 19
          },
          end: {
            line: 198,
            column: 20
          }
        },
        loc: {
          start: {
            line: 198,
            column: 45
          },
          end: {
            line: 284,
            column: 1
          }
        },
        line: 198
      },
      "20": {
        name: "encryptApiKey",
        decl: {
          start: {
            line: 289,
            column: 15
          },
          end: {
            line: 289,
            column: 28
          }
        },
        loc: {
          start: {
            line: 289,
            column: 65
          },
          end: {
            line: 296,
            column: 1
          }
        },
        line: 289
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 301,
            column: 30
          },
          end: {
            line: 301,
            column: 31
          }
        },
        loc: {
          start: {
            line: 301,
            column: 50
          },
          end: {
            line: 355,
            column: 1
          }
        },
        line: 301
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 358,
            column: 24
          },
          end: {
            line: 358,
            column: 25
          }
        },
        loc: {
          start: {
            line: 358,
            column: 44
          },
          end: {
            line: 455,
            column: 1
          }
        },
        line: 358
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 426,
            column: 41
          },
          end: {
            line: 426,
            column: 42
          }
        },
        loc: {
          start: {
            line: 426,
            column: 49
          },
          end: {
            line: 435,
            column: 5
          }
        },
        line: 426
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 458,
            column: 25
          },
          end: {
            line: 458,
            column: 26
          }
        },
        loc: {
          start: {
            line: 458,
            column: 45
          },
          end: {
            line: 615,
            column: 1
          }
        },
        line: 458
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 618,
            column: 93
          },
          end: {
            line: 618,
            column: 94
          }
        },
        loc: {
          start: {
            line: 618,
            column: 113
          },
          end: {
            line: 653,
            column: 1
          }
        },
        line: 618
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 656,
            column: 37
          },
          end: {
            line: 656,
            column: 38
          }
        },
        loc: {
          start: {
            line: 656,
            column: 57
          },
          end: {
            line: 682,
            column: 1
          }
        },
        line: 656
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 685,
            column: 34
          },
          end: {
            line: 685,
            column: 35
          }
        },
        loc: {
          start: {
            line: 685,
            column: 54
          },
          end: {
            line: 717,
            column: 1
          }
        },
        line: 685
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 720,
            column: 42
          },
          end: {
            line: 720,
            column: 43
          }
        },
        loc: {
          start: {
            line: 720,
            column: 62
          },
          end: {
            line: 833,
            column: 1
          }
        },
        line: 720
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 836,
            column: 42
          },
          end: {
            line: 836,
            column: 43
          }
        },
        loc: {
          start: {
            line: 836,
            column: 62
          },
          end: {
            line: 864,
            column: 1
          }
        },
        line: 836
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 867,
            column: 44
          },
          end: {
            line: 867,
            column: 45
          }
        },
        loc: {
          start: {
            line: 867,
            column: 64
          },
          end: {
            line: 904,
            column: 1
          }
        },
        line: 867
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 907,
            column: 38
          },
          end: {
            line: 907,
            column: 39
          }
        },
        loc: {
          start: {
            line: 907,
            column: 58
          },
          end: {
            line: 951,
            column: 1
          }
        },
        line: 907
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 939,
            column: 34
          },
          end: {
            line: 939,
            column: 35
          }
        },
        loc: {
          start: {
            line: 939,
            column: 39
          },
          end: {
            line: 939,
            column: 66
          }
        },
        line: 939
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 954,
            column: 46
          },
          end: {
            line: 954,
            column: 47
          }
        },
        loc: {
          start: {
            line: 954,
            column: 66
          },
          end: {
            line: 990,
            column: 1
          }
        },
        line: 954
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 993,
            column: 23
          },
          end: {
            line: 993,
            column: 24
          }
        },
        loc: {
          start: {
            line: 993,
            column: 43
          },
          end: {
            line: 1029,
            column: 1
          }
        },
        line: 993
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 1032,
            column: 86
          },
          end: {
            line: 1032,
            column: 87
          }
        },
        loc: {
          start: {
            line: 1032,
            column: 106
          },
          end: {
            line: 1255,
            column: 1
          }
        },
        line: 1032
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 1065,
            column: 45
          },
          end: {
            line: 1065,
            column: 46
          }
        },
        loc: {
          start: {
            line: 1065,
            column: 52
          },
          end: {
            line: 1065,
            column: 67
          }
        },
        line: 1065
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 1230,
            column: 36
          },
          end: {
            line: 1230,
            column: 37
          }
        },
        loc: {
          start: {
            line: 1230,
            column: 41
          },
          end: {
            line: 1230,
            column: 66
          }
        },
        line: 1230
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 1258,
            column: 29
          },
          end: {
            line: 1258,
            column: 30
          }
        },
        loc: {
          start: {
            line: 1258,
            column: 49
          },
          end: {
            line: 1295,
            column: 1
          }
        },
        line: 1258
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 1298,
            column: 98
          },
          end: {
            line: 1298,
            column: 99
          }
        },
        loc: {
          start: {
            line: 1298,
            column: 118
          },
          end: {
            line: 1345,
            column: 1
          }
        },
        line: 1298
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 1348,
            column: 21
          },
          end: {
            line: 1348,
            column: 22
          }
        },
        loc: {
          start: {
            line: 1348,
            column: 41
          },
          end: {
            line: 1381,
            column: 1
          }
        },
        line: 1348
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 1384,
            column: 82
          },
          end: {
            line: 1384,
            column: 83
          }
        },
        loc: {
          start: {
            line: 1384,
            column: 102
          },
          end: {
            line: 1425,
            column: 1
          }
        },
        line: 1384
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 1428,
            column: 34
          },
          end: {
            line: 1428,
            column: 35
          }
        },
        loc: {
          start: {
            line: 1428,
            column: 54
          },
          end: {
            line: 1506,
            column: 1
          }
        },
        line: 1428
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 1509,
            column: 34
          },
          end: {
            line: 1509,
            column: 35
          }
        },
        loc: {
          start: {
            line: 1509,
            column: 54
          },
          end: {
            line: 1605,
            column: 1
          }
        },
        line: 1509
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 1607,
            column: 35
          },
          end: {
            line: 1607,
            column: 36
          }
        },
        loc: {
          start: {
            line: 1607,
            column: 55
          },
          end: {
            line: 1631,
            column: 1
          }
        },
        line: 1607
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 1634,
            column: 33
          },
          end: {
            line: 1634,
            column: 34
          }
        },
        loc: {
          start: {
            line: 1634,
            column: 53
          },
          end: {
            line: 1665,
            column: 1
          }
        },
        line: 1634
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 1667,
            column: 30
          },
          end: {
            line: 1667,
            column: 31
          }
        },
        loc: {
          start: {
            line: 1667,
            column: 50
          },
          end: {
            line: 1709,
            column: 1
          }
        },
        line: 1667
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 1688,
            column: 34
          },
          end: {
            line: 1688,
            column: 35
          }
        },
        loc: {
          start: {
            line: 1688,
            column: 42
          },
          end: {
            line: 1688,
            column: 96
          }
        },
        line: 1688
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 1711,
            column: 33
          },
          end: {
            line: 1711,
            column: 34
          }
        },
        loc: {
          start: {
            line: 1711,
            column: 53
          },
          end: {
            line: 1736,
            column: 1
          }
        },
        line: 1711
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 1738,
            column: 32
          },
          end: {
            line: 1738,
            column: 33
          }
        },
        loc: {
          start: {
            line: 1738,
            column: 52
          },
          end: {
            line: 1755,
            column: 1
          }
        },
        line: 1738
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 1758,
            column: 33
          },
          end: {
            line: 1758,
            column: 34
          }
        },
        loc: {
          start: {
            line: 1758,
            column: 53
          },
          end: {
            line: 1848,
            column: 1
          }
        },
        line: 1758
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 1764,
            column: 37
          },
          end: {
            line: 1764,
            column: 38
          }
        },
        loc: {
          start: {
            line: 1764,
            column: 55
          },
          end: {
            line: 1830,
            column: 5
          }
        },
        line: 1764
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 28
          },
          end: {
            line: 26,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 28
          },
          end: {
            line: 26,
            column: 46
          }
        }, {
          start: {
            line: 26,
            column: 50
          },
          end: {
            line: 26,
            column: 69
          }
        }, {
          start: {
            line: 26,
            column: 73
          },
          end: {
            line: 26,
            column: 104
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 28
          },
          end: {
            line: 33,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 28
          },
          end: {
            line: 33,
            column: 46
          }
        }, {
          start: {
            line: 33,
            column: 50
          },
          end: {
            line: 33,
            column: 69
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 28
          },
          end: {
            line: 48,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 28
          },
          end: {
            line: 48,
            column: 34
          }
        }, {
          start: {
            line: 48,
            column: 39
          },
          end: {
            line: 48,
            column: 56
          }
        }, {
          start: {
            line: 48,
            column: 60
          },
          end: {
            line: 48,
            column: 78
          }
        }],
        line: 48
      },
      "3": {
        loc: {
          start: {
            line: 54,
            column: 28
          },
          end: {
            line: 54,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 28
          },
          end: {
            line: 54,
            column: 34
          }
        }, {
          start: {
            line: 54,
            column: 38
          },
          end: {
            line: 54,
            column: 65
          }
        }],
        line: 54
      },
      "4": {
        loc: {
          start: {
            line: 84,
            column: 28
          },
          end: {
            line: 84,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 28
          },
          end: {
            line: 84,
            column: 34
          }
        }, {
          start: {
            line: 84,
            column: 38
          },
          end: {
            line: 84,
            column: 69
          }
        }],
        line: 84
      },
      "5": {
        loc: {
          start: {
            line: 94,
            column: 2
          },
          end: {
            line: 163,
            column: 3
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 123,
            column: 12
          }
        }, {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 138,
            column: 12
          }
        }, {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 140,
            column: 30
          }
        }, {
          start: {
            line: 141,
            column: 4
          },
          end: {
            line: 147,
            column: 12
          }
        }, {
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 162,
            column: 7
          }
        }],
        line: 94
      },
      "6": {
        loc: {
          start: {
            line: 97,
            column: 6
          },
          end: {
            line: 102,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 6
          },
          end: {
            line: 102,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "7": {
        loc: {
          start: {
            line: 97,
            column: 10
          },
          end: {
            line: 97,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 10
          },
          end: {
            line: 97,
            column: 17
          }
        }, {
          start: {
            line: 97,
            column: 21
          },
          end: {
            line: 97,
            column: 39
          }
        }, {
          start: {
            line: 97,
            column: 43
          },
          end: {
            line: 97,
            column: 61
          }
        }],
        line: 97
      },
      "8": {
        loc: {
          start: {
            line: 100,
            column: 42
          },
          end: {
            line: 100,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 100,
            column: 51
          },
          end: {
            line: 100,
            column: 64
          }
        }, {
          start: {
            line: 100,
            column: 67
          },
          end: {
            line: 100,
            column: 68
          }
        }],
        line: 100
      },
      "9": {
        loc: {
          start: {
            line: 104,
            column: 6
          },
          end: {
            line: 108,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 6
          },
          end: {
            line: 108,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "10": {
        loc: {
          start: {
            line: 111,
            column: 6
          },
          end: {
            line: 116,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 6
          },
          end: {
            line: 116,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "11": {
        loc: {
          start: {
            line: 111,
            column: 10
          },
          end: {
            line: 111,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 10
          },
          end: {
            line: 111,
            column: 19
          }
        }, {
          start: {
            line: 111,
            column: 24
          },
          end: {
            line: 111,
            column: 45
          }
        }, {
          start: {
            line: 111,
            column: 49
          },
          end: {
            line: 111,
            column: 70
          }
        }],
        line: 111
      },
      "12": {
        loc: {
          start: {
            line: 118,
            column: 6
          },
          end: {
            line: 122,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 6
          },
          end: {
            line: 122,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "13": {
        loc: {
          start: {
            line: 118,
            column: 10
          },
          end: {
            line: 118,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 10
          },
          end: {
            line: 118,
            column: 19
          }
        }, {
          start: {
            line: 118,
            column: 23
          },
          end: {
            line: 118,
            column: 60
          }
        }],
        line: 118
      },
      "14": {
        loc: {
          start: {
            line: 127,
            column: 6
          },
          end: {
            line: 132,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 6
          },
          end: {
            line: 132,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "15": {
        loc: {
          start: {
            line: 127,
            column: 10
          },
          end: {
            line: 127,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 10
          },
          end: {
            line: 127,
            column: 17
          }
        }, {
          start: {
            line: 127,
            column: 21
          },
          end: {
            line: 127,
            column: 41
          }
        }],
        line: 127
      },
      "16": {
        loc: {
          start: {
            line: 130,
            column: 42
          },
          end: {
            line: 130,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 130,
            column: 51
          },
          end: {
            line: 130,
            column: 64
          }
        }, {
          start: {
            line: 130,
            column: 67
          },
          end: {
            line: 130,
            column: 68
          }
        }],
        line: 130
      },
      "17": {
        loc: {
          start: {
            line: 134,
            column: 6
          },
          end: {
            line: 137,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 6
          },
          end: {
            line: 137,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "18": {
        loc: {
          start: {
            line: 143,
            column: 6
          },
          end: {
            line: 146,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 6
          },
          end: {
            line: 146,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "19": {
        loc: {
          start: {
            line: 143,
            column: 10
          },
          end: {
            line: 143,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 143,
            column: 10
          },
          end: {
            line: 143,
            column: 17
          }
        }, {
          start: {
            line: 143,
            column: 21
          },
          end: {
            line: 143,
            column: 38
          }
        }, {
          start: {
            line: 143,
            column: 42
          },
          end: {
            line: 143,
            column: 61
          }
        }],
        line: 143
      },
      "20": {
        loc: {
          start: {
            line: 151,
            column: 6
          },
          end: {
            line: 156,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 6
          },
          end: {
            line: 156,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "21": {
        loc: {
          start: {
            line: 151,
            column: 10
          },
          end: {
            line: 151,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 151,
            column: 10
          },
          end: {
            line: 151,
            column: 17
          }
        }, {
          start: {
            line: 151,
            column: 21
          },
          end: {
            line: 151,
            column: 38
          }
        }, {
          start: {
            line: 151,
            column: 42
          },
          end: {
            line: 151,
            column: 61
          }
        }],
        line: 151
      },
      "22": {
        loc: {
          start: {
            line: 154,
            column: 42
          },
          end: {
            line: 154,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 154,
            column: 51
          },
          end: {
            line: 154,
            column: 64
          }
        }, {
          start: {
            line: 154,
            column: 67
          },
          end: {
            line: 154,
            column: 68
          }
        }],
        line: 154
      },
      "23": {
        loc: {
          start: {
            line: 159,
            column: 6
          },
          end: {
            line: 162,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 6
          },
          end: {
            line: 162,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "24": {
        loc: {
          start: {
            line: 159,
            column: 10
          },
          end: {
            line: 159,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 10
          },
          end: {
            line: 159,
            column: 30
          }
        }, {
          start: {
            line: 159,
            column: 34
          },
          end: {
            line: 159,
            column: 70
          }
        }],
        line: 159
      },
      "25": {
        loc: {
          start: {
            line: 168,
            column: 36
          },
          end: {
            line: 168,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 168,
            column: 48
          },
          end: {
            line: 168,
            column: 64
          }
        }, {
          start: {
            line: 168,
            column: 67
          },
          end: {
            line: 168,
            column: 68
          }
        }],
        line: 168
      },
      "26": {
        loc: {
          start: {
            line: 212,
            column: 6
          },
          end: {
            line: 214,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 6
          },
          end: {
            line: 214,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "27": {
        loc: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 225,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 225,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "28": {
        loc: {
          start: {
            line: 228,
            column: 4
          },
          end: {
            line: 231,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 4
          },
          end: {
            line: 231,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      },
      "29": {
        loc: {
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 241,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 241,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "30": {
        loc: {
          start: {
            line: 263,
            column: 4
          },
          end: {
            line: 271,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 263,
            column: 4
          },
          end: {
            line: 271,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 263
      },
      "31": {
        loc: {
          start: {
            line: 310,
            column: 4
          },
          end: {
            line: 344,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 310,
            column: 4
          },
          end: {
            line: 344,
            column: 5
          }
        }, {
          start: {
            line: 337,
            column: 11
          },
          end: {
            line: 344,
            column: 5
          }
        }],
        line: 310
      },
      "32": {
        loc: {
          start: {
            line: 361,
            column: 19
          },
          end: {
            line: 361,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 361,
            column: 47
          },
          end: {
            line: 361,
            column: 56
          }
        }, {
          start: {
            line: 361,
            column: 59
          },
          end: {
            line: 361,
            column: 68
          }
        }],
        line: 361
      },
      "33": {
        loc: {
          start: {
            line: 367,
            column: 2
          },
          end: {
            line: 386,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 2
          },
          end: {
            line: 386,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "34": {
        loc: {
          start: {
            line: 389,
            column: 2
          },
          end: {
            line: 396,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 389,
            column: 2
          },
          end: {
            line: 396,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 389
      },
      "35": {
        loc: {
          start: {
            line: 407,
            column: 2
          },
          end: {
            line: 414,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 407,
            column: 2
          },
          end: {
            line: 414,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 407
      },
      "36": {
        loc: {
          start: {
            line: 452,
            column: 15
          },
          end: {
            line: 452,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 452,
            column: 56
          },
          end: {
            line: 452,
            column: 69
          }
        }, {
          start: {
            line: 452,
            column: 72
          },
          end: {
            line: 452,
            column: 81
          }
        }],
        line: 452
      },
      "37": {
        loc: {
          start: {
            line: 459,
            column: 20
          },
          end: {
            line: 459,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 459,
            column: 20
          },
          end: {
            line: 459,
            column: 40
          }
        }, {
          start: {
            line: 459,
            column: 44
          },
          end: {
            line: 459,
            column: 53
          }
        }],
        line: 459
      },
      "38": {
        loc: {
          start: {
            line: 466,
            column: 2
          },
          end: {
            line: 473,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 466,
            column: 2
          },
          end: {
            line: 473,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 466
      },
      "39": {
        loc: {
          start: {
            line: 476,
            column: 39
          },
          end: {
            line: 476,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 476,
            column: 51
          },
          end: {
            line: 476,
            column: 55
          }
        }],
        line: 476
      },
      "40": {
        loc: {
          start: {
            line: 491,
            column: 2
          },
          end: {
            line: 498,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 491,
            column: 2
          },
          end: {
            line: 498,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 491
      },
      "41": {
        loc: {
          start: {
            line: 500,
            column: 2
          },
          end: {
            line: 506,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 500,
            column: 2
          },
          end: {
            line: 506,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 500
      },
      "42": {
        loc: {
          start: {
            line: 500,
            column: 6
          },
          end: {
            line: 500,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 500,
            column: 6
          },
          end: {
            line: 500,
            column: 15
          }
        }, {
          start: {
            line: 500,
            column: 19
          },
          end: {
            line: 500,
            column: 26
          }
        }],
        line: 500
      },
      "43": {
        loc: {
          start: {
            line: 510,
            column: 2
          },
          end: {
            line: 517,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 510,
            column: 2
          },
          end: {
            line: 517,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 510
      },
      "44": {
        loc: {
          start: {
            line: 544,
            column: 21
          },
          end: {
            line: 544,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 544,
            column: 21
          },
          end: {
            line: 544,
            column: 32
          }
        }, {
          start: {
            line: 544,
            column: 36
          },
          end: {
            line: 544,
            column: 57
          }
        }],
        line: 544
      },
      "45": {
        loc: {
          start: {
            line: 564,
            column: 4
          },
          end: {
            line: 613,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 564,
            column: 4
          },
          end: {
            line: 613,
            column: 5
          }
        }, {
          start: {
            line: 569,
            column: 11
          },
          end: {
            line: 613,
            column: 5
          }
        }],
        line: 564
      },
      "46": {
        loc: {
          start: {
            line: 569,
            column: 11
          },
          end: {
            line: 613,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 569,
            column: 11
          },
          end: {
            line: 613,
            column: 5
          }
        }, {
          start: {
            line: 586,
            column: 11
          },
          end: {
            line: 613,
            column: 5
          }
        }],
        line: 569
      },
      "47": {
        loc: {
          start: {
            line: 578,
            column: 19
          },
          end: {
            line: 584,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 578,
            column: 60
          },
          end: {
            line: 584,
            column: 9
          }
        }, {
          start: {
            line: 584,
            column: 12
          },
          end: {
            line: 584,
            column: 21
          }
        }],
        line: 578
      },
      "48": {
        loc: {
          start: {
            line: 606,
            column: 19
          },
          end: {
            line: 611,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 606,
            column: 60
          },
          end: {
            line: 611,
            column: 9
          }
        }, {
          start: {
            line: 611,
            column: 12
          },
          end: {
            line: 611,
            column: 21
          }
        }],
        line: 606
      },
      "49": {
        loc: {
          start: {
            line: 634,
            column: 4
          },
          end: {
            line: 639,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 634,
            column: 4
          },
          end: {
            line: 639,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 634
      },
      "50": {
        loc: {
          start: {
            line: 670,
            column: 4
          },
          end: {
            line: 675,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 670,
            column: 4
          },
          end: {
            line: 675,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 670
      },
      "51": {
        loc: {
          start: {
            line: 692,
            column: 4
          },
          end: {
            line: 697,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 692,
            column: 4
          },
          end: {
            line: 697,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 692
      },
      "52": {
        loc: {
          start: {
            line: 728,
            column: 14
          },
          end: {
            line: 728,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 728,
            column: 23
          },
          end: {
            line: 728,
            column: 53
          }
        }, {
          start: {
            line: 728,
            column: 56
          },
          end: {
            line: 728,
            column: 67
          }
        }],
        line: 728
      },
      "53": {
        loc: {
          start: {
            line: 733,
            column: 4
          },
          end: {
            line: 740,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 733,
            column: 4
          },
          end: {
            line: 740,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 733
      },
      "54": {
        loc: {
          start: {
            line: 733,
            column: 8
          },
          end: {
            line: 733,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 733,
            column: 8
          },
          end: {
            line: 733,
            column: 17
          }
        }, {
          start: {
            line: 733,
            column: 21
          },
          end: {
            line: 733,
            column: 94
          }
        }],
        line: 733
      },
      "55": {
        loc: {
          start: {
            line: 746,
            column: 4
          },
          end: {
            line: 753,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 746,
            column: 4
          },
          end: {
            line: 753,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 746
      },
      "56": {
        loc: {
          start: {
            line: 762,
            column: 4
          },
          end: {
            line: 798,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 762,
            column: 4
          },
          end: {
            line: 798,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 762
      },
      "57": {
        loc: {
          start: {
            line: 769,
            column: 8
          },
          end: {
            line: 788,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 769,
            column: 8
          },
          end: {
            line: 788,
            column: 9
          }
        }, {
          start: {
            line: 783,
            column: 15
          },
          end: {
            line: 788,
            column: 9
          }
        }],
        line: 769
      },
      "58": {
        loc: {
          start: {
            line: 774,
            column: 41
          },
          end: {
            line: 774,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 774,
            column: 41
          },
          end: {
            line: 774,
            column: 64
          }
        }, {
          start: {
            line: 774,
            column: 68
          },
          end: {
            line: 774,
            column: 82
          }
        }, {
          start: {
            line: 774,
            column: 86
          },
          end: {
            line: 774,
            column: 87
          }
        }],
        line: 774
      },
      "59": {
        loc: {
          start: {
            line: 775,
            column: 38
          },
          end: {
            line: 775,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 775,
            column: 38
          },
          end: {
            line: 775,
            column: 58
          }
        }, {
          start: {
            line: 775,
            column: 62
          },
          end: {
            line: 775,
            column: 63
          }
        }],
        line: 775
      },
      "60": {
        loc: {
          start: {
            line: 825,
            column: 15
          },
          end: {
            line: 825,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 825,
            column: 56
          },
          end: {
            line: 825,
            column: 69
          }
        }, {
          start: {
            line: 825,
            column: 72
          },
          end: {
            line: 825,
            column: 95
          }
        }],
        line: 825
      },
      "61": {
        loc: {
          start: {
            line: 851,
            column: 19
          },
          end: {
            line: 851,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 851,
            column: 19
          },
          end: {
            line: 851,
            column: 39
          }
        }, {
          start: {
            line: 851,
            column: 43
          },
          end: {
            line: 851,
            column: 47
          }
        }],
        line: 851
      },
      "62": {
        loc: {
          start: {
            line: 874,
            column: 4
          },
          end: {
            line: 883,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 874,
            column: 4
          },
          end: {
            line: 883,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 874
      },
      "63": {
        loc: {
          start: {
            line: 917,
            column: 8
          },
          end: {
            line: 928,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 917,
            column: 8
          },
          end: {
            line: 928,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 917
      },
      "64": {
        loc: {
          start: {
            line: 962,
            column: 4
          },
          end: {
            line: 968,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 962,
            column: 4
          },
          end: {
            line: 968,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 962
      },
      "65": {
        loc: {
          start: {
            line: 1011,
            column: 4
          },
          end: {
            line: 1016,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1011,
            column: 4
          },
          end: {
            line: 1016,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1011
      },
      "66": {
        loc: {
          start: {
            line: 1079,
            column: 8
          },
          end: {
            line: 1086,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1079,
            column: 8
          },
          end: {
            line: 1086,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1079
      },
      "67": {
        loc: {
          start: {
            line: 1110,
            column: 4
          },
          end: {
            line: 1112,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1110,
            column: 4
          },
          end: {
            line: 1112,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1110
      },
      "68": {
        loc: {
          start: {
            line: 1110,
            column: 8
          },
          end: {
            line: 1110,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1110,
            column: 8
          },
          end: {
            line: 1110,
            column: 46
          }
        }, {
          start: {
            line: 1110,
            column: 50
          },
          end: {
            line: 1110,
            column: 73
          }
        }],
        line: 1110
      },
      "69": {
        loc: {
          start: {
            line: 1114,
            column: 4
          },
          end: {
            line: 1116,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1114,
            column: 4
          },
          end: {
            line: 1116,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1114
      },
      "70": {
        loc: {
          start: {
            line: 1114,
            column: 8
          },
          end: {
            line: 1114,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1114,
            column: 8
          },
          end: {
            line: 1114,
            column: 45
          }
        }, {
          start: {
            line: 1114,
            column: 49
          },
          end: {
            line: 1114,
            column: 71
          }
        }],
        line: 1114
      },
      "71": {
        loc: {
          start: {
            line: 1118,
            column: 4
          },
          end: {
            line: 1120,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1118,
            column: 4
          },
          end: {
            line: 1120,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1118
      },
      "72": {
        loc: {
          start: {
            line: 1118,
            column: 8
          },
          end: {
            line: 1118,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1118,
            column: 8
          },
          end: {
            line: 1118,
            column: 41
          }
        }, {
          start: {
            line: 1118,
            column: 45
          },
          end: {
            line: 1118,
            column: 64
          }
        }],
        line: 1118
      },
      "73": {
        loc: {
          start: {
            line: 1122,
            column: 4
          },
          end: {
            line: 1124,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1122,
            column: 4
          },
          end: {
            line: 1124,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1122
      },
      "74": {
        loc: {
          start: {
            line: 1122,
            column: 8
          },
          end: {
            line: 1122,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1122,
            column: 8
          },
          end: {
            line: 1122,
            column: 41
          }
        }, {
          start: {
            line: 1122,
            column: 45
          },
          end: {
            line: 1122,
            column: 64
          }
        }],
        line: 1122
      },
      "75": {
        loc: {
          start: {
            line: 1126,
            column: 4
          },
          end: {
            line: 1128,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1126,
            column: 4
          },
          end: {
            line: 1128,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1126
      },
      "76": {
        loc: {
          start: {
            line: 1126,
            column: 8
          },
          end: {
            line: 1126,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1126,
            column: 8
          },
          end: {
            line: 1126,
            column: 44
          }
        }, {
          start: {
            line: 1126,
            column: 48
          },
          end: {
            line: 1126,
            column: 70
          }
        }],
        line: 1126
      },
      "77": {
        loc: {
          start: {
            line: 1130,
            column: 4
          },
          end: {
            line: 1132,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1130,
            column: 4
          },
          end: {
            line: 1132,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1130
      },
      "78": {
        loc: {
          start: {
            line: 1130,
            column: 8
          },
          end: {
            line: 1130,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1130,
            column: 8
          },
          end: {
            line: 1130,
            column: 44
          }
        }, {
          start: {
            line: 1130,
            column: 48
          },
          end: {
            line: 1130,
            column: 70
          }
        }],
        line: 1130
      },
      "79": {
        loc: {
          start: {
            line: 1136,
            column: 4
          },
          end: {
            line: 1143,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1136,
            column: 4
          },
          end: {
            line: 1143,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1136
      },
      "80": {
        loc: {
          start: {
            line: 1171,
            column: 6
          },
          end: {
            line: 1211,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1171,
            column: 6
          },
          end: {
            line: 1211,
            column: 7
          }
        }, {
          start: {
            line: 1179,
            column: 13
          },
          end: {
            line: 1211,
            column: 7
          }
        }],
        line: 1171
      },
      "81": {
        loc: {
          start: {
            line: 1179,
            column: 13
          },
          end: {
            line: 1211,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1179,
            column: 13
          },
          end: {
            line: 1211,
            column: 7
          }
        }, {
          start: {
            line: 1187,
            column: 13
          },
          end: {
            line: 1211,
            column: 7
          }
        }],
        line: 1179
      },
      "82": {
        loc: {
          start: {
            line: 1187,
            column: 13
          },
          end: {
            line: 1211,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1187,
            column: 13
          },
          end: {
            line: 1211,
            column: 7
          }
        }, {
          start: {
            line: 1194,
            column: 13
          },
          end: {
            line: 1211,
            column: 7
          }
        }],
        line: 1187
      },
      "83": {
        loc: {
          start: {
            line: 1192,
            column: 19
          },
          end: {
            line: 1192,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1192,
            column: 19
          },
          end: {
            line: 1192,
            column: 36
          }
        }, {
          start: {
            line: 1192,
            column: 40
          },
          end: {
            line: 1192,
            column: 58
          }
        }],
        line: 1192
      },
      "84": {
        loc: {
          start: {
            line: 1194,
            column: 13
          },
          end: {
            line: 1211,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1194,
            column: 13
          },
          end: {
            line: 1211,
            column: 7
          }
        }, {
          start: {
            line: 1201,
            column: 13
          },
          end: {
            line: 1211,
            column: 7
          }
        }],
        line: 1194
      },
      "85": {
        loc: {
          start: {
            line: 1199,
            column: 19
          },
          end: {
            line: 1199,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1199,
            column: 19
          },
          end: {
            line: 1199,
            column: 36
          }
        }, {
          start: {
            line: 1199,
            column: 40
          },
          end: {
            line: 1199,
            column: 58
          }
        }],
        line: 1199
      },
      "86": {
        loc: {
          start: {
            line: 1214,
            column: 4
          },
          end: {
            line: 1223,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1214,
            column: 4
          },
          end: {
            line: 1223,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1214
      },
      "87": {
        loc: {
          start: {
            line: 1214,
            column: 8
          },
          end: {
            line: 1214,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1214,
            column: 8
          },
          end: {
            line: 1214,
            column: 15
          }
        }, {
          start: {
            line: 1214,
            column: 19
          },
          end: {
            line: 1214,
            column: 43
          }
        }],
        line: 1214
      },
      "88": {
        loc: {
          start: {
            line: 1275,
            column: 24
          },
          end: {
            line: 1282,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1275,
            column: 49
          },
          end: {
            line: 1275,
            column: 63
          }
        }, {
          start: {
            line: 1275,
            column: 66
          },
          end: {
            line: 1282,
            column: 5
          }
        }],
        line: 1275
      },
      "89": {
        loc: {
          start: {
            line: 1363,
            column: 24
          },
          end: {
            line: 1368,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1363,
            column: 49
          },
          end: {
            line: 1363,
            column: 63
          }
        }, {
          start: {
            line: 1363,
            column: 66
          },
          end: {
            line: 1368,
            column: 5
          }
        }],
        line: 1363
      },
      "90": {
        loc: {
          start: {
            line: 1439,
            column: 35
          },
          end: {
            line: 1439,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1439,
            column: 35
          },
          end: {
            line: 1439,
            column: 49
          }
        }, {
          start: {
            line: 1439,
            column: 53
          },
          end: {
            line: 1439,
            column: 70
          }
        }],
        line: 1439
      },
      "91": {
        loc: {
          start: {
            line: 1440,
            column: 15
          },
          end: {
            line: 1440,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1440,
            column: 15
          },
          end: {
            line: 1440,
            column: 29
          }
        }, {
          start: {
            line: 1440,
            column: 33
          },
          end: {
            line: 1440,
            column: 50
          }
        }],
        line: 1440
      },
      "92": {
        loc: {
          start: {
            line: 1482,
            column: 37
          },
          end: {
            line: 1482,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1482,
            column: 37
          },
          end: {
            line: 1482,
            column: 51
          }
        }, {
          start: {
            line: 1482,
            column: 55
          },
          end: {
            line: 1482,
            column: 72
          }
        }],
        line: 1482
      },
      "93": {
        loc: {
          start: {
            line: 1483,
            column: 17
          },
          end: {
            line: 1483,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1483,
            column: 17
          },
          end: {
            line: 1483,
            column: 31
          }
        }, {
          start: {
            line: 1483,
            column: 35
          },
          end: {
            line: 1483,
            column: 52
          }
        }],
        line: 1483
      },
      "94": {
        loc: {
          start: {
            line: 1516,
            column: 4
          },
          end: {
            line: 1521,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1516,
            column: 4
          },
          end: {
            line: 1521,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1516
      },
      "95": {
        loc: {
          start: {
            line: 1530,
            column: 4
          },
          end: {
            line: 1535,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1530,
            column: 4
          },
          end: {
            line: 1535,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1530
      },
      "96": {
        loc: {
          start: {
            line: 1538,
            column: 4
          },
          end: {
            line: 1543,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1538,
            column: 4
          },
          end: {
            line: 1543,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1538
      },
      "97": {
        loc: {
          start: {
            line: 1554,
            column: 4
          },
          end: {
            line: 1560,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1554,
            column: 4
          },
          end: {
            line: 1560,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1554
      },
      "98": {
        loc: {
          start: {
            line: 1644,
            column: 4
          },
          end: {
            line: 1649,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1644,
            column: 4
          },
          end: {
            line: 1649,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1644
      },
      "99": {
        loc: {
          start: {
            line: 1656,
            column: 24
          },
          end: {
            line: 1656,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1656,
            column: 46
          },
          end: {
            line: 1656,
            column: 50
          }
        }, {
          start: {
            line: 1656,
            column: 53
          },
          end: {
            line: 1656,
            column: 58
          }
        }],
        line: 1656
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0,
      "320": 0,
      "321": 0,
      "322": 0,
      "323": 0,
      "324": 0,
      "325": 0,
      "326": 0,
      "327": 0,
      "328": 0,
      "329": 0,
      "330": 0,
      "331": 0,
      "332": 0,
      "333": 0,
      "334": 0,
      "335": 0,
      "336": 0,
      "337": 0,
      "338": 0,
      "339": 0,
      "340": 0,
      "341": 0,
      "342": 0,
      "343": 0,
      "344": 0,
      "345": 0,
      "346": 0,
      "347": 0,
      "348": 0,
      "349": 0,
      "350": 0,
      "351": 0,
      "352": 0,
      "353": 0,
      "354": 0,
      "355": 0,
      "356": 0,
      "357": 0,
      "358": 0,
      "359": 0,
      "360": 0,
      "361": 0,
      "362": 0,
      "363": 0,
      "364": 0,
      "365": 0,
      "366": 0,
      "367": 0,
      "368": 0,
      "369": 0,
      "370": 0,
      "371": 0,
      "372": 0,
      "373": 0,
      "374": 0,
      "375": 0,
      "376": 0,
      "377": 0,
      "378": 0,
      "379": 0,
      "380": 0,
      "381": 0,
      "382": 0,
      "383": 0,
      "384": 0,
      "385": 0,
      "386": 0,
      "387": 0,
      "388": 0,
      "389": 0,
      "390": 0,
      "391": 0,
      "392": 0,
      "393": 0,
      "394": 0,
      "395": 0,
      "396": 0,
      "397": 0,
      "398": 0,
      "399": 0,
      "400": 0,
      "401": 0,
      "402": 0,
      "403": 0,
      "404": 0,
      "405": 0,
      "406": 0,
      "407": 0,
      "408": 0,
      "409": 0,
      "410": 0,
      "411": 0,
      "412": 0,
      "413": 0,
      "414": 0,
      "415": 0,
      "416": 0,
      "417": 0,
      "418": 0,
      "419": 0,
      "420": 0,
      "421": 0,
      "422": 0,
      "423": 0,
      "424": 0,
      "425": 0,
      "426": 0,
      "427": 0,
      "428": 0,
      "429": 0,
      "430": 0,
      "431": 0,
      "432": 0,
      "433": 0,
      "434": 0,
      "435": 0,
      "436": 0,
      "437": 0,
      "438": 0,
      "439": 0,
      "440": 0,
      "441": 0,
      "442": 0,
      "443": 0,
      "444": 0,
      "445": 0,
      "446": 0,
      "447": 0,
      "448": 0,
      "449": 0,
      "450": 0,
      "451": 0,
      "452": 0,
      "453": 0,
      "454": 0,
      "455": 0,
      "456": 0,
      "457": 0,
      "458": 0,
      "459": 0,
      "460": 0,
      "461": 0,
      "462": 0,
      "463": 0,
      "464": 0,
      "465": 0,
      "466": 0,
      "467": 0,
      "468": 0,
      "469": 0,
      "470": 0,
      "471": 0,
      "472": 0,
      "473": 0,
      "474": 0,
      "475": 0,
      "476": 0,
      "477": 0,
      "478": 0,
      "479": 0,
      "480": 0,
      "481": 0,
      "482": 0,
      "483": 0,
      "484": 0,
      "485": 0,
      "486": 0,
      "487": 0,
      "488": 0,
      "489": 0,
      "490": 0,
      "491": 0,
      "492": 0,
      "493": 0,
      "494": 0,
      "495": 0,
      "496": 0,
      "497": 0,
      "498": 0,
      "499": 0,
      "500": 0,
      "501": 0,
      "502": 0,
      "503": 0,
      "504": 0,
      "505": 0,
      "506": 0,
      "507": 0,
      "508": 0,
      "509": 0,
      "510": 0,
      "511": 0,
      "512": 0,
      "513": 0,
      "514": 0,
      "515": 0,
      "516": 0,
      "517": 0,
      "518": 0,
      "519": 0,
      "520": 0,
      "521": 0,
      "522": 0,
      "523": 0,
      "524": 0,
      "525": 0,
      "526": 0,
      "527": 0,
      "528": 0,
      "529": 0,
      "530": 0,
      "531": 0,
      "532": 0,
      "533": 0,
      "534": 0,
      "535": 0,
      "536": 0,
      "537": 0,
      "538": 0,
      "539": 0,
      "540": 0,
      "541": 0,
      "542": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0],
      "20": [0, 0],
      "21": [0, 0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0, 0],
      "96": [0, 0],
      "97": [0, 0],
      "98": [0, 0],
      "99": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "83c50ba557d8d143d83e5ad83cc155261765d4f7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_21usdrxd5l = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_21usdrxd5l();
const express =
/* istanbul ignore next */
(cov_21usdrxd5l().s[0]++, require('express'));
const crypto =
/* istanbul ignore next */
(cov_21usdrxd5l().s[1]++, require('crypto'));
const {
  query
} =
/* istanbul ignore next */
(cov_21usdrxd5l().s[2]++, require('../utils/database'));
const schemaValidator =
/* istanbul ignore next */
(cov_21usdrxd5l().s[3]++, require('../utils/schemaValidator'));
const {
  authenticateToken
} =
/* istanbul ignore next */
(cov_21usdrxd5l().s[4]++, require('../middleware/auth'));
const {
  createValidationMiddleware,
  sanitizers
} =
/* istanbul ignore next */
(cov_21usdrxd5l().s[5]++, require('../middleware/validation'));
const portfolioDataRefreshService =
/* istanbul ignore next */
(cov_21usdrxd5l().s[6]++, require('../utils/portfolioDataRefresh'));
const apiKeyService =
/* istanbul ignore next */
(cov_21usdrxd5l().s[7]++, require('../utils/simpleApiKeyService'));
const router =
/* istanbul ignore next */
(cov_21usdrxd5l().s[8]++, express.Router());

// Validation schemas for settings endpoints
const settingsValidationSchemas =
/* istanbul ignore next */
(cov_21usdrxd5l().s[9]++, {
  apiKey: {
    provider: {
      required: true,
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_21usdrxd5l().f[0]++;
        cov_21usdrxd5l().s[10]++;
        return sanitizers.string(value, {
          maxLength: 20,
          toLowerCase: true
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_21usdrxd5l().f[1]++;
        cov_21usdrxd5l().s[11]++;
        return ['alpaca', 'polygon', 'iex'].includes(value);
      },
      errorMessage: 'Provider must be alpaca, polygon, or iex'
    },
    apiKey: {
      required: true,
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_21usdrxd5l().f[2]++;
        cov_21usdrxd5l().s[12]++;
        return sanitizers.string(value, {
          maxLength: 100,
          trim: true
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_21usdrxd5l().f[3]++;
        cov_21usdrxd5l().s[13]++;
        return /* istanbul ignore next */(cov_21usdrxd5l().b[0][0]++, value.length >= 10) &&
        /* istanbul ignore next */
        (cov_21usdrxd5l().b[0][1]++, value.length <= 100) &&
        /* istanbul ignore next */
        (cov_21usdrxd5l().b[0][2]++, /^[A-Za-z0-9_\-]+$/.test(value));
      },
      errorMessage: 'API key must be 10-100 characters, alphanumeric with _ and - allowed'
    },
    apiSecret: {
      required: true,
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_21usdrxd5l().f[4]++;
        cov_21usdrxd5l().s[14]++;
        return sanitizers.string(value, {
          maxLength: 200,
          trim: true
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_21usdrxd5l().f[5]++;
        cov_21usdrxd5l().s[15]++;
        return /* istanbul ignore next */(cov_21usdrxd5l().b[1][0]++, value.length >= 10) &&
        /* istanbul ignore next */
        (cov_21usdrxd5l().b[1][1]++, value.length <= 200);
      },
      errorMessage: 'API secret must be 10-200 characters'
    },
    isSandbox: {
      type: 'boolean',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_21usdrxd5l().f[6]++;
        cov_21usdrxd5l().s[16]++;
        return sanitizers.boolean(value, {
          defaultValue: true
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_21usdrxd5l().f[7]++;
        cov_21usdrxd5l().s[17]++;
        return typeof value === 'boolean';
      },
      errorMessage: 'isSandbox must be true or false'
    }
  },
  profile: {
    displayName: {
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_21usdrxd5l().f[8]++;
        cov_21usdrxd5l().s[18]++;
        return sanitizers.string(value, {
          maxLength: 50,
          trim: true
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_21usdrxd5l().f[9]++;
        cov_21usdrxd5l().s[19]++;
        return /* istanbul ignore next */(cov_21usdrxd5l().b[2][0]++, !value) ||
        /* istanbul ignore next */
        (cov_21usdrxd5l().b[2][1]++, value.length >= 2) &&
        /* istanbul ignore next */
        (cov_21usdrxd5l().b[2][2]++, value.length <= 50);
      },
      errorMessage: 'Display name must be 2-50 characters if provided'
    },
    timezone: {
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_21usdrxd5l().f[10]++;
        cov_21usdrxd5l().s[20]++;
        return sanitizers.string(value, {
          maxLength: 50
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_21usdrxd5l().f[11]++;
        cov_21usdrxd5l().s[21]++;
        return /* istanbul ignore next */(cov_21usdrxd5l().b[3][0]++, !value) ||
        /* istanbul ignore next */
        (cov_21usdrxd5l().b[3][1]++, /^[A-Za-z/_]+$/.test(value));
      },
      errorMessage: 'Invalid timezone format'
    }
  },
  notifications: {
    emailAlerts: {
      type: 'boolean',
      sanitizer: sanitizers.boolean,
      validator: value => {
        /* istanbul ignore next */
        cov_21usdrxd5l().f[12]++;
        cov_21usdrxd5l().s[22]++;
        return typeof value === 'boolean';
      },
      errorMessage: 'emailAlerts must be true or false'
    },
    pushNotifications: {
      type: 'boolean',
      sanitizer: sanitizers.boolean,
      validator: value => {
        /* istanbul ignore next */
        cov_21usdrxd5l().f[13]++;
        cov_21usdrxd5l().s[23]++;
        return typeof value === 'boolean';
      },
      errorMessage: 'pushNotifications must be true or false'
    }
  },
  theme: {
    darkMode: {
      type: 'boolean',
      sanitizer: sanitizers.boolean,
      validator: value => {
        /* istanbul ignore next */
        cov_21usdrxd5l().f[14]++;
        cov_21usdrxd5l().s[24]++;
        return typeof value === 'boolean';
      },
      errorMessage: 'darkMode must be true or false'
    },
    primaryColor: {
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_21usdrxd5l().f[15]++;
        cov_21usdrxd5l().s[25]++;
        return sanitizers.string(value, {
          maxLength: 7
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_21usdrxd5l().f[16]++;
        cov_21usdrxd5l().s[26]++;
        return /* istanbul ignore next */(cov_21usdrxd5l().b[4][0]++, !value) ||
        /* istanbul ignore next */
        (cov_21usdrxd5l().b[4][1]++, /^#[0-9A-Fa-f]{6}$/.test(value));
      },
      errorMessage: 'Primary color must be a valid hex color (e.g., #FF5733)'
    }
  }
});

// API Key format validation
function validateApiKeyFormat(provider, apiKey, apiSecret) {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[17]++;
  const validation =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[27]++, {
    valid: false,
    error: '',
    details: {}
  });
  /* istanbul ignore next */
  cov_21usdrxd5l().s[28]++;
  switch (provider.toLowerCase()) {
    case 'alpaca':
      /* istanbul ignore next */
      cov_21usdrxd5l().b[5][0]++;
      cov_21usdrxd5l().s[29]++;
      // Alpaca API keys are typically 20-40 characters, alphanumeric
      if (
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[7][0]++, !apiKey) ||
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[7][1]++, apiKey.length < 20) ||
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[7][2]++, apiKey.length > 50)) {
        /* istanbul ignore next */
        cov_21usdrxd5l().b[6][0]++;
        cov_21usdrxd5l().s[30]++;
        validation.error = 'Alpaca API key should be 20-50 characters long';
        /* istanbul ignore next */
        cov_21usdrxd5l().s[31]++;
        validation.details.expectedLength = '20-50 characters';
        /* istanbul ignore next */
        cov_21usdrxd5l().s[32]++;
        validation.details.actualLength = apiKey ?
        /* istanbul ignore next */
        (cov_21usdrxd5l().b[8][0]++, apiKey.length) :
        /* istanbul ignore next */
        (cov_21usdrxd5l().b[8][1]++, 0);
        /* istanbul ignore next */
        cov_21usdrxd5l().s[33]++;
        return validation;
      } else
      /* istanbul ignore next */
      {
        cov_21usdrxd5l().b[6][1]++;
      }
      cov_21usdrxd5l().s[34]++;
      if (!/^[A-Za-z0-9]+$/.test(apiKey)) {
        /* istanbul ignore next */
        cov_21usdrxd5l().b[9][0]++;
        cov_21usdrxd5l().s[35]++;
        validation.error = 'Alpaca API key should contain only alphanumeric characters';
        /* istanbul ignore next */
        cov_21usdrxd5l().s[36]++;
        validation.details.pattern = 'Alphanumeric only';
        /* istanbul ignore next */
        cov_21usdrxd5l().s[37]++;
        return validation;
      } else
      /* istanbul ignore next */
      {
        cov_21usdrxd5l().b[9][1]++;
      }

      // Alpaca secret keys are typically longer and may contain special characters
      cov_21usdrxd5l().s[38]++;
      if (
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[11][0]++, apiSecret) && (
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[11][1]++, apiSecret.length < 20) ||
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[11][2]++, apiSecret.length > 80))) {
        /* istanbul ignore next */
        cov_21usdrxd5l().b[10][0]++;
        cov_21usdrxd5l().s[39]++;
        validation.error = 'Alpaca API secret should be 20-80 characters long';
        /* istanbul ignore next */
        cov_21usdrxd5l().s[40]++;
        validation.details.secretExpectedLength = '20-80 characters';
        /* istanbul ignore next */
        cov_21usdrxd5l().s[41]++;
        validation.details.secretActualLength = apiSecret.length;
        /* istanbul ignore next */
        cov_21usdrxd5l().s[42]++;
        return validation;
      } else
      /* istanbul ignore next */
      {
        cov_21usdrxd5l().b[10][1]++;
      }
      cov_21usdrxd5l().s[43]++;
      if (
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[13][0]++, apiSecret) &&
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[13][1]++, !/^[A-Za-z0-9\/+=]+$/.test(apiSecret))) {
        /* istanbul ignore next */
        cov_21usdrxd5l().b[12][0]++;
        cov_21usdrxd5l().s[44]++;
        validation.error = 'Alpaca API secret contains invalid characters';
        /* istanbul ignore next */
        cov_21usdrxd5l().s[45]++;
        validation.details.secretPattern = 'Alphanumeric and /+= only';
        /* istanbul ignore next */
        cov_21usdrxd5l().s[46]++;
        return validation;
      } else
      /* istanbul ignore next */
      {
        cov_21usdrxd5l().b[12][1]++;
      }
      cov_21usdrxd5l().s[47]++;
      break;
    case 'tdameritrade':
      /* istanbul ignore next */
      cov_21usdrxd5l().b[5][1]++;
      cov_21usdrxd5l().s[48]++;
      // TD Ameritrade consumer keys are typically 32 characters
      if (
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[15][0]++, !apiKey) ||
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[15][1]++, apiKey.length !== 32)) {
        /* istanbul ignore next */
        cov_21usdrxd5l().b[14][0]++;
        cov_21usdrxd5l().s[49]++;
        validation.error = 'TD Ameritrade consumer key should be exactly 32 characters';
        /* istanbul ignore next */
        cov_21usdrxd5l().s[50]++;
        validation.details.expectedLength = '32 characters';
        /* istanbul ignore next */
        cov_21usdrxd5l().s[51]++;
        validation.details.actualLength = apiKey ?
        /* istanbul ignore next */
        (cov_21usdrxd5l().b[16][0]++, apiKey.length) :
        /* istanbul ignore next */
        (cov_21usdrxd5l().b[16][1]++, 0);
        /* istanbul ignore next */
        cov_21usdrxd5l().s[52]++;
        return validation;
      } else
      /* istanbul ignore next */
      {
        cov_21usdrxd5l().b[14][1]++;
      }
      cov_21usdrxd5l().s[53]++;
      if (!/^[A-Za-z0-9]+$/.test(apiKey)) {
        /* istanbul ignore next */
        cov_21usdrxd5l().b[17][0]++;
        cov_21usdrxd5l().s[54]++;
        validation.error = 'TD Ameritrade consumer key should contain only alphanumeric characters';
        /* istanbul ignore next */
        cov_21usdrxd5l().s[55]++;
        return validation;
      } else
      /* istanbul ignore next */
      {
        cov_21usdrxd5l().b[17][1]++;
      }
      cov_21usdrxd5l().s[56]++;
      break;
    case 'interactivebrokers':
      /* istanbul ignore next */
      cov_21usdrxd5l().b[5][2]++;
    case 'ib':
      /* istanbul ignore next */
      cov_21usdrxd5l().b[5][3]++;
      cov_21usdrxd5l().s[57]++;
      // IB uses various formats, be more lenient
      if (
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[19][0]++, !apiKey) ||
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[19][1]++, apiKey.length < 8) ||
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[19][2]++, apiKey.length > 100)) {
        /* istanbul ignore next */
        cov_21usdrxd5l().b[18][0]++;
        cov_21usdrxd5l().s[58]++;
        validation.error = 'Interactive Brokers API key should be 8-100 characters long';
        /* istanbul ignore next */
        cov_21usdrxd5l().s[59]++;
        return validation;
      } else
      /* istanbul ignore next */
      {
        cov_21usdrxd5l().b[18][1]++;
      }
      cov_21usdrxd5l().s[60]++;
      break;
    default:
      /* istanbul ignore next */
      cov_21usdrxd5l().b[5][4]++;
      cov_21usdrxd5l().s[61]++;
      // Generic validation for unknown providers
      if (
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[21][0]++, !apiKey) ||
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[21][1]++, apiKey.length < 8) ||
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[21][2]++, apiKey.length > 200)) {
        /* istanbul ignore next */
        cov_21usdrxd5l().b[20][0]++;
        cov_21usdrxd5l().s[62]++;
        validation.error = `${provider} API key should be 8-200 characters long`;
        /* istanbul ignore next */
        cov_21usdrxd5l().s[63]++;
        validation.details.expectedLength = '8-200 characters';
        /* istanbul ignore next */
        cov_21usdrxd5l().s[64]++;
        validation.details.actualLength = apiKey ?
        /* istanbul ignore next */
        (cov_21usdrxd5l().b[22][0]++, apiKey.length) :
        /* istanbul ignore next */
        (cov_21usdrxd5l().b[22][1]++, 0);
        /* istanbul ignore next */
        cov_21usdrxd5l().s[65]++;
        return validation;
      } else
      /* istanbul ignore next */
      {
        cov_21usdrxd5l().b[20][1]++;
      }

      // Check for obviously invalid patterns
      cov_21usdrxd5l().s[66]++;
      if (
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[24][0]++, /^\s+$/.test(apiKey)) ||
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[24][1]++, /password|123456|test/i.test(apiKey))) {
        /* istanbul ignore next */
        cov_21usdrxd5l().b[23][0]++;
        cov_21usdrxd5l().s[67]++;
        validation.error = 'API key appears to be invalid or a placeholder';
        /* istanbul ignore next */
        cov_21usdrxd5l().s[68]++;
        return validation;
      } else
      /* istanbul ignore next */
      {
        cov_21usdrxd5l().b[23][1]++;
      }
  }
  /* istanbul ignore next */
  cov_21usdrxd5l().s[69]++;
  validation.valid = true;
  /* istanbul ignore next */
  cov_21usdrxd5l().s[70]++;
  validation.details.provider = provider;
  /* istanbul ignore next */
  cov_21usdrxd5l().s[71]++;
  validation.details.keyLength = apiKey.length;
  /* istanbul ignore next */
  cov_21usdrxd5l().s[72]++;
  validation.details.secretLength = apiSecret ?
  /* istanbul ignore next */
  (cov_21usdrxd5l().b[25][0]++, apiSecret.length) :
  /* istanbul ignore next */
  (cov_21usdrxd5l().b[25][1]++, 0);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[73]++;
  return validation;
}

// Root settings endpoint for health checks
/* istanbul ignore next */
cov_21usdrxd5l().s[74]++;
router.get('/', (req, res) => {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[18]++;
  cov_21usdrxd5l().s[75]++;
  res.json({
    success: true,
    data: {
      system: 'User Settings API',
      version: '1.0.0',
      status: 'operational',
      available_endpoints: ['PUT /settings/api-keys/:keyId - Update API key', 'DELETE /settings/api-keys/:keyId - Delete API key', 'PUT /settings/profile - Update user profile', 'PUT /settings/notifications - Update notification preferences', 'PUT /settings/theme - Update theme preferences', 'DELETE /settings/delete-account - Delete user account'],
      timestamp: new Date().toISOString()
    }
  });
});

// Apply authentication middleware to all other settings routes
/* istanbul ignore next */
cov_21usdrxd5l().s[76]++;
router.use(authenticateToken);

// 2FA verification middleware for sensitive operations
/* istanbul ignore next */
cov_21usdrxd5l().s[77]++;
const require2FA = async (req, res, next) => {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[19]++;
  const userId =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[78]++, req.user.sub);
  const {
    mfaCode
  } =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[79]++, req.headers);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[80]++;
  try {
    // Check if user has 2FA enabled - handle missing users table gracefully
    let user =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[81]++, null);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[82]++;
    try {
      const userResult =
      /* istanbul ignore next */
      (cov_21usdrxd5l().s[83]++, await query(`
        SELECT two_factor_enabled, two_factor_secret 
        FROM users 
        WHERE id = $1
      `, [userId]));
      /* istanbul ignore next */
      cov_21usdrxd5l().s[84]++;
      if (userResult.rows.length > 0) {
        /* istanbul ignore next */
        cov_21usdrxd5l().b[26][0]++;
        cov_21usdrxd5l().s[85]++;
        user = userResult.rows[0];
      } else
      /* istanbul ignore next */
      {
        cov_21usdrxd5l().b[26][1]++;
      }
    } catch (dbError) {
      /* istanbul ignore next */
      cov_21usdrxd5l().s[86]++;
      console.warn(`⚠️ Users table not available, disabling 2FA checks:`, dbError.message);
      // If users table doesn't exist, skip 2FA verification
      /* istanbul ignore next */
      cov_21usdrxd5l().s[87]++;
      console.log(`⚠️ User ${userId} proceeding without 2FA due to missing users table`);
      /* istanbul ignore next */
      cov_21usdrxd5l().s[88]++;
      return next();
    }
    /* istanbul ignore next */
    cov_21usdrxd5l().s[89]++;
    if (!user) {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[27][0]++;
      cov_21usdrxd5l().s[90]++;
      console.warn(`⚠️ User ${userId} not found in users table, proceeding without 2FA`);
      /* istanbul ignore next */
      cov_21usdrxd5l().s[91]++;
      return next();
    } else
    /* istanbul ignore next */
    {
      cov_21usdrxd5l().b[27][1]++;
    }

    // If 2FA is not enabled, allow the request but warn
    cov_21usdrxd5l().s[92]++;
    if (!user.two_factor_enabled) {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[28][0]++;
      cov_21usdrxd5l().s[93]++;
      console.warn(`⚠️  User ${userId} accessing sensitive operations without 2FA enabled`);
      /* istanbul ignore next */
      cov_21usdrxd5l().s[94]++;
      return next();
    } else
    /* istanbul ignore next */
    {
      cov_21usdrxd5l().b[28][1]++;
    }

    // If 2FA is enabled, require MFA code
    cov_21usdrxd5l().s[95]++;
    if (!mfaCode) {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[29][0]++;
      cov_21usdrxd5l().s[96]++;
      return res.status(401).json({
        success: false,
        error: 'MFA verification required',
        requiresMFA: true,
        message: 'This operation requires 2FA verification. Please provide your authenticator code.'
      });
    } else
    /* istanbul ignore next */
    {
      cov_21usdrxd5l().b[29][1]++;
    }

    // Verify the MFA code with error handling
    let verified;
    /* istanbul ignore next */
    cov_21usdrxd5l().s[97]++;
    try {
      const speakeasy =
      /* istanbul ignore next */
      (cov_21usdrxd5l().s[98]++, require('speakeasy'));
      /* istanbul ignore next */
      cov_21usdrxd5l().s[99]++;
      verified = speakeasy.totp.verify({
        secret: user.two_factor_secret,
        encoding: 'base32',
        token: mfaCode,
        window: 2
      });
    } catch (verifyError) {
      /* istanbul ignore next */
      cov_21usdrxd5l().s[100]++;
      console.error('❌ MFA verification library error:', verifyError);
      /* istanbul ignore next */
      cov_21usdrxd5l().s[101]++;
      return res.status(500).json({
        success: false,
        error: 'MFA verification service error',
        message: 'Unable to verify MFA code due to service error',
        timestamp: new Date().toISOString()
      });
    }
    /* istanbul ignore next */
    cov_21usdrxd5l().s[102]++;
    if (!verified) {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[30][0]++;
      cov_21usdrxd5l().s[103]++;
      return res.status(401).json({
        success: false,
        error: 'Invalid MFA code',
        requiresMFA: true,
        message: 'The provided MFA code is invalid. Please try again.',
        timestamp: new Date().toISOString()
      });
    } else
    /* istanbul ignore next */
    {
      cov_21usdrxd5l().b[30][1]++;
    }
    cov_21usdrxd5l().s[104]++;
    console.log(`🔐 MFA verification successful for user ${userId}`);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[105]++;
    next();
  } catch (error) {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[106]++;
    console.error('❌ Error in 2FA verification middleware:', error);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[107]++;
    res.status(500).json({
      success: false,
      error: 'MFA verification failed',
      details: error.message
    });
  }
};

// Use apiKeyService for consistent encryption across the application
// NOTE: apiKeyService is already imported at the top of the file

async function encryptApiKey(apiKey, userSalt, userId, provider) {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[20]++;
  cov_21usdrxd5l().s[108]++;
  try {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[109]++;
    return await apiKeyService.encryptApiKey(apiKey, userSalt, userId, provider);
  } catch (error) {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[110]++;
    console.error('❌ CRITICAL: Encryption failed:', error);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[111]++;
    throw new Error('Failed to encrypt API key. Check encryption service configuration.');
  }
}

// decryptApiKey function removed - now using Parameter Store directly

// Debug endpoint to check API keys table
/* istanbul ignore next */
cov_21usdrxd5l().s[112]++;
router.get('/api-keys/debug', async (req, res) => {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[21]++;
  cov_21usdrxd5l().s[113]++;
  try {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[114]++;
    console.log('🔍 [DEBUG] Checking user_api_keys table structure...');

    // Check if table exists using schema validator
    const tableExists =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[115]++, await schemaValidator.validateTableExists('user_api_keys'));
    /* istanbul ignore next */
    cov_21usdrxd5l().s[116]++;
    console.log('📋 Table exists:', tableExists);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[117]++;
    if (tableExists) {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[31][0]++;
      // Get table structure using schema validator
      const structure =
      /* istanbul ignore next */
      (cov_21usdrxd5l().s[118]++, await schemaValidator.getTableSchema('user_api_keys'));

      // Get total count with schema validation
      const count =
      /* istanbul ignore next */
      (cov_21usdrxd5l().s[119]++, await schemaValidator.safeQuery(`SELECT COUNT(*) as total FROM user_api_keys`, [], {
        validateTables: true,
        throwOnMissingTable: false
      }));

      // Get recent entries (without sensitive data)
      const recent =
      /* istanbul ignore next */
      (cov_21usdrxd5l().s[120]++, await query(`
        SELECT id, user_id, provider, description, is_active, created_at 
        FROM user_api_keys 
        ORDER BY created_at DESC 
        LIMIT 5
      `));
      /* istanbul ignore next */
      cov_21usdrxd5l().s[121]++;
      res.json({
        success: true,
        table_exists: true,
        structure: structure.rows,
        total_records: count.rows[0].total,
        recent_entries: recent.rows,
        timestamp: new Date().toISOString()
      });
    } else {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[31][1]++;
      cov_21usdrxd5l().s[122]++;
      res.json({
        success: true,
        table_exists: false,
        message: 'user_api_keys table does not exist',
        timestamp: new Date().toISOString()
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[123]++;
    console.error('❌ [DEBUG] Error checking API keys table:', error);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[124]++;
    res.status(500).json({
      success: false,
      error: 'Failed to check API keys table',
      details: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Get all API keys for authenticated user
/* istanbul ignore next */
cov_21usdrxd5l().s[125]++;
router.get('/api-keys', async (req, res) => {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[22]++;
  cov_21usdrxd5l().s[126]++;
  console.log('🔍 API Keys fetch requested');
  /* istanbul ignore next */
  cov_21usdrxd5l().s[127]++;
  console.log('📋 Request headers:', {
    authorization: req.headers.authorization ?
    /* istanbul ignore next */
    (cov_21usdrxd5l().b[32][0]++, 'Present') :
    /* istanbul ignore next */
    (cov_21usdrxd5l().b[32][1]++, 'Missing'),
    'content-type': req.headers['content-type'],
    'user-agent': req.headers['user-agent']
  });

  // Check if encryption service is available
  /* istanbul ignore next */
  cov_21usdrxd5l().s[128]++;
  if (!apiKeyService.isEnabled) {
    /* istanbul ignore next */
    cov_21usdrxd5l().b[33][0]++;
    cov_21usdrxd5l().s[129]++;
    console.warn('⚠️  API Key encryption service is disabled - returning setup guidance');
    /* istanbul ignore next */
    cov_21usdrxd5l().s[130]++;
    return res.json({
      success: true,
      apiKeys: [],
      setupRequired: true,
      message: 'API key service is initializing. You can still use demo data while we configure the encryption service.',
      guidance: {
        status: 'setup_required',
        title: 'API Key Service Setup Required',
        description: 'The API key encryption service needs to be configured by the administrator.',
        actions: ['Use demo data for now', 'Contact administrator to configure encryption service', 'Check back in a few minutes']
      },
      encryptionEnabled: false
    });
  } else
  /* istanbul ignore next */
  {
    cov_21usdrxd5l().b[33][1]++;
  }

  // Check if user is authenticated
  cov_21usdrxd5l().s[131]++;
  if (!req.user) {
    /* istanbul ignore next */
    cov_21usdrxd5l().b[34][0]++;
    cov_21usdrxd5l().s[132]++;
    console.error('❌ No user object in request - authentication failed');
    /* istanbul ignore next */
    cov_21usdrxd5l().s[133]++;
    return res.status(401).json({
      success: false,
      error: 'Authentication required',
      message: 'User not authenticated'
    });
  } else
  /* istanbul ignore next */
  {
    cov_21usdrxd5l().b[34][1]++;
  }
  const userId =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[134]++, req.user.sub);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[135]++;
  console.log('👤 User ID:', userId);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[136]++;
  console.log('🔐 User details:', {
    sub: req.user.sub,
    email: req.user.email,
    username: req.user.username,
    role: req.user.role
  });
  /* istanbul ignore next */
  cov_21usdrxd5l().s[137]++;
  if (!userId) {
    /* istanbul ignore next */
    cov_21usdrxd5l().b[35][0]++;
    cov_21usdrxd5l().s[138]++;
    console.error('❌ No user ID found in authentication token');
    /* istanbul ignore next */
    cov_21usdrxd5l().s[139]++;
    return res.status(401).json({
      success: false,
      error: 'Invalid authentication token',
      message: 'User ID not found in token'
    });
  } else
  /* istanbul ignore next */
  {
    cov_21usdrxd5l().b[35][1]++;
  }
  cov_21usdrxd5l().s[140]++;
  try {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[141]++;
    console.log('🔄 Fetching API keys from Parameter Store...');

    // Use the new simple API key service
    const apiKeys =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[142]++, await apiKeyService.listApiKeys(userId));
    /* istanbul ignore next */
    cov_21usdrxd5l().s[143]++;
    console.log('✅ API keys fetched successfully');
    /* istanbul ignore next */
    cov_21usdrxd5l().s[144]++;
    console.log('📊 Found API keys for user', userId, ':', apiKeys.length);

    // Format for frontend compatibility
    const formattedApiKeys =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[145]++, apiKeys.map(key => {
      /* istanbul ignore next */
      cov_21usdrxd5l().f[23]++;
      cov_21usdrxd5l().s[146]++;
      return {
        id: `${key.provider}-${userId}`,
        // Generate consistent ID
        provider: key.provider,
        description: `${key.provider} API Key`,
        isSandbox: true,
        // Default for now
        isActive: true,
        createdAt: key.created,
        lastUsed: null,
        apiKey: key.keyId // Already masked by service
      };
    }));
    /* istanbul ignore next */
    cov_21usdrxd5l().s[147]++;
    console.log('🎯 Returning API keys response');
    /* istanbul ignore next */
    cov_21usdrxd5l().s[148]++;
    res.json({
      success: true,
      apiKeys: formattedApiKeys
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[149]++;
    console.error('❌ API Key service error:', error);

    // Return fallback empty list for better UX
    /* istanbul ignore next */
    cov_21usdrxd5l().s[150]++;
    console.log('🔄 API Key service failed, returning empty list as fallback');
    /* istanbul ignore next */
    cov_21usdrxd5l().s[151]++;
    res.json({
      success: true,
      apiKeys: [],
      note: 'API key service temporarily unavailable',
      errorCode: 'SERVICE_UNAVAILABLE',
      details: process.env.NODE_ENV === 'development' ?
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[36][0]++, error.message) :
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[36][1]++, undefined)
    });
  }
});

// Add new API key
/* istanbul ignore next */
cov_21usdrxd5l().s[152]++;
router.post('/api-keys', async (req, res) => {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[24]++;
  const requestId =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[153]++,
  /* istanbul ignore next */
  (cov_21usdrxd5l().b[37][0]++, res.locals.requestId) ||
  /* istanbul ignore next */
  (cov_21usdrxd5l().b[37][1]++, 'unknown'));
  const startTime =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[154]++, Date.now());
  /* istanbul ignore next */
  cov_21usdrxd5l().s[155]++;
  console.log(`🔐 [${requestId}] POST /api-keys - Starting API key creation`);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[156]++;
  console.log(`🔐 [${requestId}] Memory at start:`, process.memoryUsage());

  // Simple service is always enabled (no complex encryption setup needed)
  /* istanbul ignore next */
  cov_21usdrxd5l().s[157]++;
  if (!apiKeyService.isEnabled) {
    /* istanbul ignore next */
    cov_21usdrxd5l().b[38][0]++;
    cov_21usdrxd5l().s[158]++;
    console.error(`❌ [${requestId}] API Key service is disabled`);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[159]++;
    return res.status(503).json({
      success: false,
      error: 'API key service unavailable',
      message: 'API key storage is currently unavailable.'
    });
  } else
  /* istanbul ignore next */
  {
    cov_21usdrxd5l().b[38][1]++;
  }
  const userId =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[160]++, req.user?.sub);
  const {
    provider,
    apiKey,
    apiSecret,
    isSandbox =
    /* istanbul ignore next */
    (cov_21usdrxd5l().b[39][0]++, true),
    description
  } =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[161]++, req.body);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[162]++;
  console.log(`🔐 [${requestId}] User ID:`, userId);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[163]++;
  console.log(`🔐 [${requestId}] User object:`, JSON.stringify(req.user, null, 2));
  /* istanbul ignore next */
  cov_21usdrxd5l().s[164]++;
  console.log(`🔐 [${requestId}] Request body:`, JSON.stringify({
    provider,
    isSandbox,
    description,
    hasApiKey: !!apiKey,
    hasSecret: !!apiSecret,
    apiKeyLength: apiKey?.length,
    secretLength: apiSecret?.length
  }, null, 2));

  // Check if user is properly authenticated
  /* istanbul ignore next */
  cov_21usdrxd5l().s[165]++;
  if (!userId) {
    /* istanbul ignore next */
    cov_21usdrxd5l().b[40][0]++;
    cov_21usdrxd5l().s[166]++;
    console.error(`❌ [${requestId}] No user ID found in request after ${Date.now() - startTime}ms`);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[167]++;
    return res.status(401).json({
      success: false,
      error: 'User not authenticated',
      message: 'User ID not found in authentication token'
    });
  } else
  /* istanbul ignore next */
  {
    cov_21usdrxd5l().b[40][1]++;
  }
  cov_21usdrxd5l().s[168]++;
  if (
  /* istanbul ignore next */
  (cov_21usdrxd5l().b[42][0]++, !provider) ||
  /* istanbul ignore next */
  (cov_21usdrxd5l().b[42][1]++, !apiKey)) {
    /* istanbul ignore next */
    cov_21usdrxd5l().b[41][0]++;
    cov_21usdrxd5l().s[169]++;
    console.error(`❌ [${requestId}] Missing required fields: provider=${!!provider}, apiKey=${!!apiKey} after ${Date.now() - startTime}ms`);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[170]++;
    return res.status(400).json({
      success: false,
      error: 'Provider and API key are required'
    });
  } else
  /* istanbul ignore next */
  {
    cov_21usdrxd5l().b[41][1]++;
  }

  // Validate API key format based on provider
  const formatValidation =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[171]++, validateApiKeyFormat(provider, apiKey, apiSecret));
  /* istanbul ignore next */
  cov_21usdrxd5l().s[172]++;
  if (!formatValidation.valid) {
    /* istanbul ignore next */
    cov_21usdrxd5l().b[43][0]++;
    cov_21usdrxd5l().s[173]++;
    console.error(`❌ [${requestId}] Invalid API key format for ${provider}: ${formatValidation.error}`);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[174]++;
    return res.status(400).json({
      success: false,
      error: formatValidation.error,
      details: formatValidation.details
    });
  } else
  /* istanbul ignore next */
  {
    cov_21usdrxd5l().b[43][1]++;
  }
  cov_21usdrxd5l().s[175]++;
  try {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[176]++;
    console.log(`🔐 [${requestId}] Storing API key using Parameter Store after ${Date.now() - startTime}ms...`);

    // Store API key using simple Parameter Store service
    const storeStart =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[177]++, Date.now());
    /* istanbul ignore next */
    cov_21usdrxd5l().s[178]++;
    await apiKeyService.storeApiKey(userId, provider, apiKey, apiSecret);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[179]++;
    console.log(`✅ [${requestId}] API key stored successfully after ${Date.now() - storeStart}ms`);

    // Trigger portfolio data refresh for this user's portfolio symbols
    /* istanbul ignore next */
    cov_21usdrxd5l().s[180]++;
    console.log(`🔄 [${requestId}] Triggering portfolio data refresh after ${Date.now() - startTime}ms...`);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[181]++;
    try {
      const refreshResult =
      /* istanbul ignore next */
      (cov_21usdrxd5l().s[182]++, await portfolioDataRefreshService.triggerPortfolioDataRefresh(userId, provider));
      /* istanbul ignore next */
      cov_21usdrxd5l().s[183]++;
      console.log(`✅ [${requestId}] Portfolio data refresh result:`, refreshResult.status);
    } catch (refreshError) {
      /* istanbul ignore next */
      cov_21usdrxd5l().s[184]++;
      console.warn(`⚠️ [${requestId}] Portfolio data refresh failed (non-critical):`, refreshError.message);
      // Don't fail the API key creation if refresh fails
    }
    /* istanbul ignore next */
    cov_21usdrxd5l().s[185]++;
    console.log(`✅ [${requestId}] Total request time: ${Date.now() - startTime}ms`);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[186]++;
    res.json({
      success: true,
      message: 'API key added successfully',
      apiKey: {
        provider,
        description:
        /* istanbul ignore next */
        (cov_21usdrxd5l().b[44][0]++, description) ||
        /* istanbul ignore next */
        (cov_21usdrxd5l().b[44][1]++, `${provider} API key`),
        isSandbox,
        createdAt: new Date().toISOString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[187]++;
    console.error(`❌ [${requestId}] Error after ${Date.now() - startTime}ms:`, error.message);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[188]++;
    console.error('❌ Error adding API key:', error.message);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[189]++;
    console.error('🔍 Full error details:', {
      message: error.message,
      code: error.code,
      severity: error.severity,
      detail: error.detail,
      hint: error.hint,
      constraint: error.constraint,
      table: error.table,
      column: error.column,
      stack: error.stack
    });
    /* istanbul ignore next */
    cov_21usdrxd5l().s[190]++;
    if (error.code === '23505') {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[45][0]++;
      cov_21usdrxd5l().s[191]++;
      // Unique constraint violation
      res.status(400).json({
        success: false,
        error: 'API key for this provider already exists'
      });
    } else {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[45][1]++;
      cov_21usdrxd5l().s[192]++;
      if (error.code === '42P01') {
        /* istanbul ignore next */
        cov_21usdrxd5l().b[46][0]++;
        cov_21usdrxd5l().s[193]++;
        // Table doesn't exist
        // Return error indicating table creation is needed
        res.status(500).json({
          success: false,
          error: 'Database table not found - user_api_keys table needs to be created',
          message: 'The API keys table has not been created. Please run the database initialization script.',
          details: error.message,
          errorCode: error.code,
          solution: 'Run init_database.py script to create required tables',
          debugInfo: process.env.NODE_ENV === 'development' ?
          /* istanbul ignore next */
          (cov_21usdrxd5l().b[47][0]++, {
            errorCode: error.code,
            errorMessage: error.message,
            userId: req.user?.sub,
            provider: provider,
            tableName: 'user_api_keys'
          }) :
          /* istanbul ignore next */
          (cov_21usdrxd5l().b[47][1]++, undefined)
        });
      } else {
        /* istanbul ignore next */
        cov_21usdrxd5l().b[46][1]++;
        cov_21usdrxd5l().s[194]++;
        // Log the actual error details for debugging
        console.error('❌ Unexpected database error details:', {
          message: error.message,
          code: error.code,
          severity: error.severity,
          detail: error.detail,
          hint: error.hint,
          constraint: error.constraint,
          table: error.table,
          column: error.column
        });

        // Return error with clear message about database issue
        /* istanbul ignore next */
        cov_21usdrxd5l().s[195]++;
        res.status(500).json({
          success: false,
          error: 'Database connectivity issue - API key not saved',
          message: 'Failed to save API key to database. Please check database connectivity.',
          details: error.message,
          errorCode: error.code,
          debugInfo: process.env.NODE_ENV === 'development' ?
          /* istanbul ignore next */
          (cov_21usdrxd5l().b[48][0]++, {
            errorCode: error.code,
            errorMessage: error.message,
            userId: req.user?.sub,
            provider: provider
          }) :
          /* istanbul ignore next */
          (cov_21usdrxd5l().b[48][1]++, undefined)
        });
      }
    }
  }
});

// Update API key
/* istanbul ignore next */
cov_21usdrxd5l().s[196]++;
router.put('/api-keys/:keyId', createValidationMiddleware(settingsValidationSchemas.apiKey), async (req, res) => {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[25]++;
  const userId =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[197]++, req.user.sub);
  const {
    keyId
  } =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[198]++, req.params);
  const {
    description,
    isSandbox
  } =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[199]++, req.body);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[200]++;
  try {
    const result =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[201]++, await query(`
      UPDATE user_api_keys 
      SET 
        description = COALESCE($3, description),
        is_sandbox = COALESCE($4, is_sandbox),
        updated_at = NOW()
      WHERE id = $1 AND user_id = $2
      RETURNING id, provider, description, is_sandbox as "isSandbox"
    `, [keyId, userId, description, isSandbox]));
    /* istanbul ignore next */
    cov_21usdrxd5l().s[202]++;
    if (result.rows.length === 0) {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[49][0]++;
      cov_21usdrxd5l().s[203]++;
      return res.status(404).json({
        success: false,
        error: 'API key not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_21usdrxd5l().b[49][1]++;
    }
    cov_21usdrxd5l().s[204]++;
    res.json({
      success: true,
      message: 'API key updated successfully',
      apiKey: result.rows[0]
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[205]++;
    console.error('Error updating API key:', error);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[206]++;
    res.status(500).json({
      success: false,
      error: 'Failed to update API key'
    });
  }
});

// Delete API key
/* istanbul ignore next */
cov_21usdrxd5l().s[207]++;
router.delete('/api-keys/:provider', async (req, res) => {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[26]++;
  const userId =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[208]++, req.user.sub);
  const {
    provider
  } =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[209]++, req.params);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[210]++;
  try {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[211]++;
    // Delete from Parameter Store
    await apiKeyService.deleteApiKey(userId, provider);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[212]++;
    res.json({
      success: true,
      message: 'API key deleted successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[213]++;
    console.error('Error deleting API key:', error);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[214]++;
    if (error.name === 'ParameterNotFound') {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[50][0]++;
      cov_21usdrxd5l().s[215]++;
      return res.status(404).json({
        success: false,
        error: 'API key not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_21usdrxd5l().b[50][1]++;
    }
    cov_21usdrxd5l().s[216]++;
    res.status(500).json({
      success: false,
      error: 'Failed to delete API key',
      message: error.message
    });
  }
});

// Get API key (without exposing the secret)
/* istanbul ignore next */
cov_21usdrxd5l().s[217]++;
router.get('/api-keys/:provider', async (req, res) => {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[27]++;
  const userId =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[218]++, req.user.sub);
  const {
    provider
  } =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[219]++, req.params);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[220]++;
  try {
    const apiKey =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[221]++, await apiKeyService.getApiKey(userId, provider));
    /* istanbul ignore next */
    cov_21usdrxd5l().s[222]++;
    if (!apiKey) {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[51][0]++;
      cov_21usdrxd5l().s[223]++;
      return res.status(404).json({
        success: false,
        error: 'API key not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_21usdrxd5l().b[51][1]++;
    }
    cov_21usdrxd5l().s[224]++;
    res.json({
      success: true,
      apiKey: {
        provider: apiKey.provider,
        keyId: apiKey.keyId.substring(0, 4) + '***' + apiKey.keyId.slice(-4),
        hasSecret: !!apiKey.secretKey,
        created: apiKey.created,
        version: apiKey.version
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[225]++;
    console.error('Error retrieving API key:', error);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[226]++;
    res.status(500).json({
      success: false,
      error: 'Failed to retrieve API key',
      message: error.message
    });
  }
});

// Test API key connection
/* istanbul ignore next */
cov_21usdrxd5l().s[227]++;
router.post('/test-connection/:provider', async (req, res) => {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[28]++;
  const requestId =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[228]++, crypto.randomUUID().split('-')[0]);
  const requestStart =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[229]++, Date.now());
  const userId =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[230]++, req.user.sub);
  const {
    provider
  } =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[231]++, req.params);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[232]++;
  try {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[233]++;
    console.log(`🚀 [${requestId}] API key connection test initiated`, {
      userId: userId ?
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[52][0]++, `${userId.substring(0, 8)}...`) :
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[52][1]++, 'undefined'),
      provider,
      timestamp: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_21usdrxd5l().s[234]++;
    if (
    /* istanbul ignore next */
    (cov_21usdrxd5l().b[54][0]++, !provider) ||
    /* istanbul ignore next */
    (cov_21usdrxd5l().b[54][1]++, !['alpaca', 'polygon', 'finnhub', 'iex'].includes(provider.toLowerCase()))) {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[53][0]++;
      cov_21usdrxd5l().s[235]++;
      return res.status(400).json({
        success: false,
        error: 'Invalid provider. Must be alpaca, polygon, finnhub, or iex',
        requestId,
        timestamp: new Date().toISOString()
      });
    } else
    /* istanbul ignore next */
    {
      cov_21usdrxd5l().b[53][1]++;
    }

    // Get API key from Parameter Store
    cov_21usdrxd5l().s[236]++;
    console.log(`🔍 [${requestId}] Retrieving API key from Parameter Store`);
    const credentials =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[237]++, await apiKeyService.getApiKey(userId, provider));
    /* istanbul ignore next */
    cov_21usdrxd5l().s[238]++;
    if (!credentials) {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[55][0]++;
      cov_21usdrxd5l().s[239]++;
      return res.status(404).json({
        success: false,
        error: 'API key not found',
        requestId,
        timestamp: new Date().toISOString()
      });
    } else
    /* istanbul ignore next */
    {
      cov_21usdrxd5l().b[55][1]++;
    }
    cov_21usdrxd5l().s[240]++;
    console.log(`✅ [${requestId}] API key found for provider: ${provider}`);

    // Test connection based on provider
    /* istanbul ignore next */
    cov_21usdrxd5l().s[241]++;
    console.log(`📡 [${requestId}] Testing connection to ${provider} API`);
    const connectionTestStart =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[242]++, Date.now());
    let connectionResult =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[243]++, {
      valid: false,
      error: 'Provider not supported'
    });
    /* istanbul ignore next */
    cov_21usdrxd5l().s[244]++;
    if (provider === 'alpaca') {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[56][0]++;
      const AlpacaService =
      /* istanbul ignore next */
      (cov_21usdrxd5l().s[245]++, require('../utils/alpacaService'));
      /* istanbul ignore next */
      cov_21usdrxd5l().s[246]++;
      try {
        const alpaca =
        /* istanbul ignore next */
        (cov_21usdrxd5l().s[247]++, new AlpacaService(credentials.keyId, credentials.secretKey, false));
        const account =
        /* istanbul ignore next */
        (cov_21usdrxd5l().s[248]++, await alpaca.getAccount());
        /* istanbul ignore next */
        cov_21usdrxd5l().s[249]++;
        if (account) {
          /* istanbul ignore next */
          cov_21usdrxd5l().b[57][0]++;
          cov_21usdrxd5l().s[250]++;
          connectionResult = {
            valid: true,
            accountInfo: {
              accountId: account.id,
              portfolioValue: parseFloat(
              /* istanbul ignore next */
              (cov_21usdrxd5l().b[58][0]++, account.portfolio_value) ||
              /* istanbul ignore next */
              (cov_21usdrxd5l().b[58][1]++, account.equity) ||
              /* istanbul ignore next */
              (cov_21usdrxd5l().b[58][2]++, 0)),
              buyingPower: parseFloat(
              /* istanbul ignore next */
              (cov_21usdrxd5l().b[59][0]++, account.buying_power) ||
              /* istanbul ignore next */
              (cov_21usdrxd5l().b[59][1]++, 0)),
              environment: 'live',
              accountStatus: account.status
            },
            connectionTime: Date.now() - connectionTestStart
          };
          /* istanbul ignore next */
          cov_21usdrxd5l().s[251]++;
          console.log(`✅ [${requestId}] Alpaca connection test SUCCESSFUL`);
        } else {
          /* istanbul ignore next */
          cov_21usdrxd5l().b[57][1]++;
          cov_21usdrxd5l().s[252]++;
          connectionResult = {
            valid: false,
            error: 'No account data returned from Alpaca API'
          };
        }
      } catch (alpacaError) {
        /* istanbul ignore next */
        cov_21usdrxd5l().s[253]++;
        console.error(`❌ [${requestId}] Alpaca connection test FAILED:`, alpacaError.message);
        /* istanbul ignore next */
        cov_21usdrxd5l().s[254]++;
        connectionResult = {
          valid: false,
          error: alpacaError.message,
          errorCode: alpacaError.code
        };
      }
    } else
    /* istanbul ignore next */
    {
      cov_21usdrxd5l().b[56][1]++;
    }
    const connectionTestDuration =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[255]++, Date.now() - connectionTestStart);
    const totalDuration =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[256]++, Date.now() - requestStart);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[257]++;
    res.json({
      success: true,
      connection: connectionResult,
      metadata: {
        provider: provider,
        tested_at: new Date().toISOString(),
        connection_duration_ms: connectionTestDuration
      },
      request_info: {
        request_id: requestId,
        total_duration_ms: totalDuration,
        timestamp: new Date().toISOString()
      }
    });
  } catch (error) {
    const errorDuration =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[258]++, Date.now() - requestStart);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[259]++;
    console.error(`❌ [${requestId}] API key connection test FAILED:`, error.message);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[260]++;
    res.status(500).json({
      success: false,
      error: 'Failed to test API key connection',
      details: process.env.NODE_ENV === 'development' ?
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[60][0]++, error.message) :
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[60][1]++, 'Internal server error'),
      request_info: {
        request_id: requestId,
        error_duration_ms: errorDuration,
        timestamp: new Date().toISOString()
      }
    });
  }
});

// Real-time API key validation status endpoint
/* istanbul ignore next */
cov_21usdrxd5l().s[261]++;
router.get('/api-keys/validation-status', async (req, res) => {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[29]++;
  const userId =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[262]++, req.user.sub);
  const {
    provider
  } =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[263]++, req.query);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[264]++;
  try {
    const credentials =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[265]++, await apiKeyService.getApiKey(userId, provider));
    /* istanbul ignore next */
    cov_21usdrxd5l().s[266]++;
    res.json({
      success: true,
      data: {
        validationStatus: {
          valid: !!credentials,
          provider: provider,
          hasApiKey: !!credentials?.keyId,
          hasSecret: !!credentials?.secretKey,
          created:
          /* istanbul ignore next */
          (cov_21usdrxd5l().b[61][0]++, credentials?.created) ||
          /* istanbul ignore next */
          (cov_21usdrxd5l().b[61][1]++, null)
        },
        lastChecked: new Date().toISOString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[267]++;
    console.error('Error getting validation status:', error);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[268]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get validation status',
      details: error.message
    });
  }
});

// Real-time API key validation endpoint
/* istanbul ignore next */
cov_21usdrxd5l().s[269]++;
router.post('/api-keys/:provider/validate', async (req, res) => {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[30]++;
  const userId =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[270]++, req.user.sub);
  const {
    provider
  } =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[271]++, req.params);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[272]++;
  try {
    const credentials =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[273]++, await apiKeyService.getApiKey(userId, provider));
    /* istanbul ignore next */
    cov_21usdrxd5l().s[274]++;
    if (!credentials) {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[62][0]++;
      cov_21usdrxd5l().s[275]++;
      return res.json({
        success: true,
        data: {
          valid: false,
          error: 'API key not found',
          provider: provider
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_21usdrxd5l().b[62][1]++;
    }
    cov_21usdrxd5l().s[276]++;
    res.json({
      success: true,
      data: {
        valid: true,
        provider: credentials.provider,
        hasApiKey: !!credentials.keyId,
        hasSecret: !!credentials.secretKey,
        created: credentials.created,
        version: credentials.version
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[277]++;
    console.error('Error validating API key:', error);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[278]++;
    res.status(500).json({
      success: false,
      error: 'Failed to validate API key',
      details: error.message
    });
  }
});

// Validate all user API keys endpoint
/* istanbul ignore next */
cov_21usdrxd5l().s[279]++;
router.post('/api-keys/validate-all', async (req, res) => {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[31]++;
  const userId =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[280]++, req.user.sub);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[281]++;
  try {
    const providers =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[282]++, ['alpaca', 'polygon', 'finnhub', 'iex']);
    const results =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[283]++, []);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[284]++;
    for (const provider of providers) {
      /* istanbul ignore next */
      cov_21usdrxd5l().s[285]++;
      try {
        const credentials =
        /* istanbul ignore next */
        (cov_21usdrxd5l().s[286]++, await apiKeyService.getApiKey(userId, provider));
        /* istanbul ignore next */
        cov_21usdrxd5l().s[287]++;
        if (credentials) {
          /* istanbul ignore next */
          cov_21usdrxd5l().b[63][0]++;
          cov_21usdrxd5l().s[288]++;
          results.push({
            provider: provider,
            currentValidation: {
              isValid: true,
              hasApiKey: !!credentials.keyId,
              hasSecret: !!credentials.secretKey,
              created: credentials.created,
              version: credentials.version
            }
          });
        } else
        /* istanbul ignore next */
        {
          cov_21usdrxd5l().b[63][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_21usdrxd5l().s[289]++;
        console.warn(`Failed to validate ${provider} API key:`, error.message);
      }
    }
    /* istanbul ignore next */
    cov_21usdrxd5l().s[290]++;
    res.json({
      success: true,
      data: {
        validationResults: results,
        totalKeys: results.length,
        validKeys: results.filter(r => {
          /* istanbul ignore next */
          cov_21usdrxd5l().f[32]++;
          cov_21usdrxd5l().s[291]++;
          return r.currentValidation.isValid;
        }).length,
        timestamp: new Date().toISOString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[292]++;
    console.error('Error validating all API keys:', error);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[293]++;
    res.status(500).json({
      success: false,
      error: 'Failed to validate all API keys',
      details: error.message
    });
  }
});

// Get decrypted API credentials for a provider (for real-time services)
/* istanbul ignore next */
cov_21usdrxd5l().s[294]++;
router.get('/api-keys/:provider/credentials', async (req, res) => {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[33]++;
  const userId =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[295]++, req.user.sub);
  const {
    provider
  } =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[296]++, req.params);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[297]++;
  try {
    // Get API key from Parameter Store
    const credentials =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[298]++, await apiKeyService.getApiKey(userId, provider));
    /* istanbul ignore next */
    cov_21usdrxd5l().s[299]++;
    if (!credentials) {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[64][0]++;
      cov_21usdrxd5l().s[300]++;
      return res.status(404).json({
        success: false,
        error: `No active ${provider} API key found`,
        provider: provider
      });
    } else
    /* istanbul ignore next */
    {
      cov_21usdrxd5l().b[64][1]++;
    }
    cov_21usdrxd5l().s[301]++;
    console.log(`🔓 Credentials retrieved successfully for ${provider}`);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[302]++;
    res.json({
      success: true,
      credentials: {
        provider: credentials.provider,
        apiKey: credentials.keyId,
        apiSecret: credentials.secretKey,
        isSandbox: false,
        // Parameter Store doesn't store sandbox flag, defaulting to false
        description: `${provider} API key`
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[303]++;
    console.error('Error getting API credentials:', error);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[304]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get API credentials',
      details: error.message
    });
  }
});

// User profile management
/* istanbul ignore next */
cov_21usdrxd5l().s[305]++;
router.get('/profile', async (req, res) => {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[34]++;
  const userId =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[306]++, req.user.sub);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[307]++;
  try {
    const result =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[308]++, await query(`
      SELECT 
        first_name as "firstName",
        last_name as "lastName", 
        email,
        phone,
        timezone,
        currency,
        created_at as "createdAt",
        updated_at as "updatedAt"
      FROM users 
      WHERE id = $1
    `, [userId]));
    /* istanbul ignore next */
    cov_21usdrxd5l().s[309]++;
    if (result.rows.length === 0) {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[65][0]++;
      cov_21usdrxd5l().s[310]++;
      return res.status(404).json({
        success: false,
        error: 'User not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_21usdrxd5l().b[65][1]++;
    }
    cov_21usdrxd5l().s[311]++;
    res.json({
      success: true,
      user: result.rows[0]
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[312]++;
    console.error('Error fetching user profile:', error);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[313]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch user profile'
    });
  }
});

// Update user profile
/* istanbul ignore next */
cov_21usdrxd5l().s[314]++;
router.put('/profile', createValidationMiddleware(settingsValidationSchemas.profile), async (req, res) => {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[35]++;
  const userId =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[315]++, req.user.sub);
  const {
    firstName,
    lastName,
    email,
    phone,
    timezone,
    currency
  } =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[316]++, req.body);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[317]++;
  console.log('🔄 Profile update request for user:', userId);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[318]++;
  console.log('📝 Update data:', {
    firstName,
    lastName,
    email,
    phone,
    timezone,
    currency
  });
  /* istanbul ignore next */
  cov_21usdrxd5l().s[319]++;
  try {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[320]++;
    // Test database connectivity first
    console.log('🔍 Testing database connectivity...');
    /* istanbul ignore next */
    cov_21usdrxd5l().s[321]++;
    try {
      /* istanbul ignore next */
      cov_21usdrxd5l().s[322]++;
      await query('SELECT 1 as test', [], 3000);
      /* istanbul ignore next */
      cov_21usdrxd5l().s[323]++;
      console.log('✅ Database connection successful');
    } catch (dbError) {
      /* istanbul ignore next */
      cov_21usdrxd5l().s[324]++;
      console.error('❌ Database connection failed:', dbError.message);
      /* istanbul ignore next */
      cov_21usdrxd5l().s[325]++;
      return res.status(503).json({
        success: false,
        error: 'Database temporarily unavailable',
        message: 'Please try again in a few moments',
        details: dbError.message
      });
    }

    // Check what columns actually exist in the users table
    /* istanbul ignore next */
    cov_21usdrxd5l().s[326]++;
    console.log('🔍 Checking users table schema...');
    let existingColumns =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[327]++, []);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[328]++;
    try {
      const columnCheck =
      /* istanbul ignore next */
      (cov_21usdrxd5l().s[329]++, await query(`
        SELECT column_name 
        FROM information_schema.columns 
        WHERE table_schema = 'public' AND table_name = 'users'
      `, [], 5000));
      /* istanbul ignore next */
      cov_21usdrxd5l().s[330]++;
      existingColumns = columnCheck.rows.map(row => {
        /* istanbul ignore next */
        cov_21usdrxd5l().f[36]++;
        cov_21usdrxd5l().s[331]++;
        return row.column_name;
      });
      /* istanbul ignore next */
      cov_21usdrxd5l().s[332]++;
      console.log('📋 Available columns in users table:', existingColumns);
    } catch (schemaError) {
      /* istanbul ignore next */
      cov_21usdrxd5l().s[333]++;
      console.error('❌ Schema check failed:', schemaError.message);

      // Check if the users table exists at all
      /* istanbul ignore next */
      cov_21usdrxd5l().s[334]++;
      try {
        const tableExists =
        /* istanbul ignore next */
        (cov_21usdrxd5l().s[335]++, await query(`
          SELECT EXISTS (
            SELECT FROM information_schema.tables 
            WHERE table_schema = 'public' AND table_name = 'users'
          )
        `, [], 3000));
        /* istanbul ignore next */
        cov_21usdrxd5l().s[336]++;
        if (!tableExists.rows[0].exists) {
          /* istanbul ignore next */
          cov_21usdrxd5l().b[66][0]++;
          cov_21usdrxd5l().s[337]++;
          return res.status(503).json({
            success: false,
            error: 'Database schema not initialized',
            message: 'The users table does not exist. Database needs to be initialized.',
            details: 'Contact administrator to run database initialization script'
          });
        } else
        /* istanbul ignore next */
        {
          cov_21usdrxd5l().b[66][1]++;
        }
      } catch (tableCheckError) {
        /* istanbul ignore next */
        cov_21usdrxd5l().s[338]++;
        console.error('❌ Table existence check failed:', tableCheckError.message);
        /* istanbul ignore next */
        cov_21usdrxd5l().s[339]++;
        return res.status(503).json({
          success: false,
          error: 'Database schema check failed',
          message: 'Unable to verify database structure',
          details: tableCheckError.message
        });
      }

      // If table exists but column check failed, assume basic columns
      /* istanbul ignore next */
      cov_21usdrxd5l().s[340]++;
      existingColumns = ['id', 'email', 'username'];
      /* istanbul ignore next */
      cov_21usdrxd5l().s[341]++;
      console.log('⚠️ Using fallback column list:', existingColumns);
    }

    // Use secure query builder to prevent SQL injection
    const SecureQueryBuilder =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[342]++, require('../utils/secureQueryBuilder'));
    const queryBuilder =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[343]++, new SecureQueryBuilder());

    // Build secure update data object
    const updateData =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[344]++, {});

    // Only include fields that exist in database and are provided
    /* istanbul ignore next */
    cov_21usdrxd5l().s[345]++;
    if (
    /* istanbul ignore next */
    (cov_21usdrxd5l().b[68][0]++, existingColumns.includes('first_name')) &&
    /* istanbul ignore next */
    (cov_21usdrxd5l().b[68][1]++, firstName !== undefined)) {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[67][0]++;
      cov_21usdrxd5l().s[346]++;
      updateData.first_name = firstName;
    } else
    /* istanbul ignore next */
    {
      cov_21usdrxd5l().b[67][1]++;
    }
    cov_21usdrxd5l().s[347]++;
    if (
    /* istanbul ignore next */
    (cov_21usdrxd5l().b[70][0]++, existingColumns.includes('last_name')) &&
    /* istanbul ignore next */
    (cov_21usdrxd5l().b[70][1]++, lastName !== undefined)) {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[69][0]++;
      cov_21usdrxd5l().s[348]++;
      updateData.last_name = lastName;
    } else
    /* istanbul ignore next */
    {
      cov_21usdrxd5l().b[69][1]++;
    }
    cov_21usdrxd5l().s[349]++;
    if (
    /* istanbul ignore next */
    (cov_21usdrxd5l().b[72][0]++, existingColumns.includes('email')) &&
    /* istanbul ignore next */
    (cov_21usdrxd5l().b[72][1]++, email !== undefined)) {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[71][0]++;
      cov_21usdrxd5l().s[350]++;
      updateData.email = email;
    } else
    /* istanbul ignore next */
    {
      cov_21usdrxd5l().b[71][1]++;
    }
    cov_21usdrxd5l().s[351]++;
    if (
    /* istanbul ignore next */
    (cov_21usdrxd5l().b[74][0]++, existingColumns.includes('phone')) &&
    /* istanbul ignore next */
    (cov_21usdrxd5l().b[74][1]++, phone !== undefined)) {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[73][0]++;
      cov_21usdrxd5l().s[352]++;
      updateData.phone = phone;
    } else
    /* istanbul ignore next */
    {
      cov_21usdrxd5l().b[73][1]++;
    }
    cov_21usdrxd5l().s[353]++;
    if (
    /* istanbul ignore next */
    (cov_21usdrxd5l().b[76][0]++, existingColumns.includes('timezone')) &&
    /* istanbul ignore next */
    (cov_21usdrxd5l().b[76][1]++, timezone !== undefined)) {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[75][0]++;
      cov_21usdrxd5l().s[354]++;
      updateData.timezone = timezone;
    } else
    /* istanbul ignore next */
    {
      cov_21usdrxd5l().b[75][1]++;
    }
    cov_21usdrxd5l().s[355]++;
    if (
    /* istanbul ignore next */
    (cov_21usdrxd5l().b[78][0]++, existingColumns.includes('currency')) &&
    /* istanbul ignore next */
    (cov_21usdrxd5l().b[78][1]++, currency !== undefined)) {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[77][0]++;
      cov_21usdrxd5l().s[356]++;
      updateData.currency = currency;
    } else
    /* istanbul ignore next */
    {
      cov_21usdrxd5l().b[77][1]++;
    }

    // Note: updated_at will be handled by the secure query builder
    cov_21usdrxd5l().s[357]++;
    if (Object.keys(updateData).length === 0) {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[79][0]++;
      cov_21usdrxd5l().s[358]++;
      return res.status(400).json({
        success: false,
        error: 'No valid fields to update',
        availableColumns: existingColumns,
        note: 'Database schema may need updating to support profile fields'
      });
    } else
    /* istanbul ignore next */
    {
      cov_21usdrxd5l().b[79][1]++;
    }

    // Build secure query using the query builder
    const {
      query: updateQuery,
      params: queryParams
    } =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[359]++, queryBuilder.buildUpdate({
      table: 'users',
      set: updateData,
      where: {
        id: userId
      }
    }));
    /* istanbul ignore next */
    cov_21usdrxd5l().s[360]++;
    console.log('🔒 Executing secure query (parameters hidden for security)');
    /* istanbul ignore next */
    cov_21usdrxd5l().s[361]++;
    console.log('📊 Query parameter count:', queryParams.length);
    let result;
    /* istanbul ignore next */
    cov_21usdrxd5l().s[362]++;
    try {
      /* istanbul ignore next */
      cov_21usdrxd5l().s[363]++;
      result = await query(updateQuery, queryParams, 10000); // 10 second timeout
      /* istanbul ignore next */
      cov_21usdrxd5l().s[364]++;
      console.log('✅ Query executed successfully, rows affected:', result.rowCount);
    } catch (queryError) {
      /* istanbul ignore next */
      cov_21usdrxd5l().s[365]++;
      console.error('❌ Query execution failed:', queryError.message);
      /* istanbul ignore next */
      cov_21usdrxd5l().s[366]++;
      console.error('🔍 Query error details:', {
        message: queryError.message,
        code: queryError.code,
        detail: queryError.detail,
        hint: queryError.hint,
        position: queryError.position,
        query: updateQuery.substring(0, 200) + '...'
      });

      // Handle specific database errors
      /* istanbul ignore next */
      cov_21usdrxd5l().s[367]++;
      if (queryError.code === '42703') {
        /* istanbul ignore next */
        cov_21usdrxd5l().b[80][0]++;
        cov_21usdrxd5l().s[368]++;
        // Column doesn't exist
        return res.status(503).json({
          success: false,
          error: 'Database schema missing required columns',
          message: 'The database schema needs to be updated to support profile fields',
          details: `Column referenced in query does not exist: ${queryError.message}`,
          solution: 'Use the schema fix endpoint: PUT /api/settings/debug/fix-schema'
        });
      } else {
        /* istanbul ignore next */
        cov_21usdrxd5l().b[80][1]++;
        cov_21usdrxd5l().s[369]++;
        if (queryError.code === '42P01') {
          /* istanbul ignore next */
          cov_21usdrxd5l().b[81][0]++;
          cov_21usdrxd5l().s[370]++;
          // Table doesn't exist
          return res.status(503).json({
            success: false,
            error: 'Users table does not exist',
            message: 'The database schema needs to be initialized',
            details: 'The users table is missing from the database',
            solution: 'Contact administrator to run database initialization script'
          });
        } else {
          /* istanbul ignore next */
          cov_21usdrxd5l().b[81][1]++;
          cov_21usdrxd5l().s[371]++;
          if (queryError.code === '23502') {
            /* istanbul ignore next */
            cov_21usdrxd5l().b[82][0]++;
            cov_21usdrxd5l().s[372]++;
            // NOT NULL violation
            return res.status(400).json({
              success: false,
              error: 'Required field missing',
              message: 'A required database field is null',
              details:
              /* istanbul ignore next */
              (cov_21usdrxd5l().b[83][0]++, queryError.detail) ||
              /* istanbul ignore next */
              (cov_21usdrxd5l().b[83][1]++, queryError.message)
            });
          } else {
            /* istanbul ignore next */
            cov_21usdrxd5l().b[82][1]++;
            cov_21usdrxd5l().s[373]++;
            if (queryError.code === '23505') {
              /* istanbul ignore next */
              cov_21usdrxd5l().b[84][0]++;
              cov_21usdrxd5l().s[374]++;
              // Unique constraint violation
              return res.status(400).json({
                success: false,
                error: 'Duplicate value',
                message: 'The provided value already exists',
                details:
                /* istanbul ignore next */
                (cov_21usdrxd5l().b[85][0]++, queryError.detail) ||
                /* istanbul ignore next */
                (cov_21usdrxd5l().b[85][1]++, queryError.message)
              });
            } else {
              /* istanbul ignore next */
              cov_21usdrxd5l().b[84][1]++;
              cov_21usdrxd5l().s[375]++;
              // Generic database error
              return res.status(503).json({
                success: false,
                error: 'Database operation failed',
                message: 'An error occurred while updating the profile',
                details: queryError.message,
                errorCode: queryError.code,
                solution: 'Please try again or contact support if the problem persists'
              });
            }
          }
        }
      }
    }
    /* istanbul ignore next */
    cov_21usdrxd5l().s[376]++;
    if (
    /* istanbul ignore next */
    (cov_21usdrxd5l().b[87][0]++, !result) ||
    /* istanbul ignore next */
    (cov_21usdrxd5l().b[87][1]++, result.rows.length === 0)) {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[86][0]++;
      cov_21usdrxd5l().s[377]++;
      console.warn('⚠️ No rows affected by update query');
      /* istanbul ignore next */
      cov_21usdrxd5l().s[378]++;
      return res.status(404).json({
        success: false,
        error: 'User not found',
        message: 'No user exists with the provided ID',
        userId: userId,
        note: 'The user may not exist in the database or the ID format is incorrect'
      });
    } else
    /* istanbul ignore next */
    {
      cov_21usdrxd5l().b[86][1]++;
    }
    cov_21usdrxd5l().s[379]++;
    console.log('✅ Profile update successful');
    /* istanbul ignore next */
    cov_21usdrxd5l().s[380]++;
    res.json({
      success: true,
      message: 'Profile updated successfully',
      user: result.rows[0],
      updatedFields: updates.filter(u => {
        /* istanbul ignore next */
        cov_21usdrxd5l().f[37]++;
        cov_21usdrxd5l().s[381]++;
        return !u.includes('updated_at');
      }),
      availableColumns: existingColumns,
      rowsAffected: result.rowCount
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[382]++;
    console.error('❌ Unexpected error updating user profile:', error);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[383]++;
    console.error('🔍 Error details:', {
      message: error.message,
      code: error.code,
      detail: error.detail,
      hint: error.hint,
      stack: error.stack?.substring(0, 500)
    });

    // Final catch-all error handling
    /* istanbul ignore next */
    cov_21usdrxd5l().s[384]++;
    res.status(500).json({
      success: false,
      error: 'Internal server error',
      message: 'An unexpected error occurred while updating the profile',
      details: error.message,
      errorCode: error.code,
      timestamp: new Date().toISOString(),
      note: 'This is an unexpected error. Please contact support.'
    });
  }
});

// Get notification preferences
/* istanbul ignore next */
cov_21usdrxd5l().s[385]++;
router.get('/notifications', async (req, res) => {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[38]++;
  const userId =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[386]++, req.user.sub);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[387]++;
  try {
    const result =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[388]++, await query(`
      SELECT 
        email_notifications as email,
        push_notifications as push,
        price_alerts as "priceAlerts",
        portfolio_updates as "portfolioUpdates",
        market_news as "marketNews",
        weekly_reports as "weeklyReports"
      FROM user_notification_preferences 
      WHERE user_id = $1
    `, [userId]));

    // If no preferences exist, return defaults
    const preferences =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[389]++, result.rows.length > 0 ?
    /* istanbul ignore next */
    (cov_21usdrxd5l().b[88][0]++, result.rows[0]) :
    /* istanbul ignore next */
    (cov_21usdrxd5l().b[88][1]++, {
      email: true,
      push: true,
      priceAlerts: true,
      portfolioUpdates: true,
      marketNews: false,
      weeklyReports: true
    }));
    /* istanbul ignore next */
    cov_21usdrxd5l().s[390]++;
    res.json({
      success: true,
      preferences
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[391]++;
    console.error('Error fetching notification preferences:', error);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[392]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch notification preferences'
    });
  }
});

// Update notification preferences
/* istanbul ignore next */
cov_21usdrxd5l().s[393]++;
router.put('/notifications', createValidationMiddleware(settingsValidationSchemas.notifications), async (req, res) => {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[39]++;
  const userId =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[394]++, req.user.sub);
  const {
    email,
    push,
    priceAlerts,
    portfolioUpdates,
    marketNews,
    weeklyReports
  } =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[395]++, req.body);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[396]++;
  try {
    // Use UPSERT to create or update preferences
    const result =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[397]++, await query(`
      INSERT INTO user_notification_preferences (
        user_id, 
        email_notifications, 
        push_notifications, 
        price_alerts, 
        portfolio_updates, 
        market_news, 
        weekly_reports,
        updated_at
      ) VALUES ($1, $2, $3, $4, $5, $6, $7, NOW())
      ON CONFLICT (user_id) 
      DO UPDATE SET
        email_notifications = EXCLUDED.email_notifications,
        push_notifications = EXCLUDED.push_notifications,
        price_alerts = EXCLUDED.price_alerts,
        portfolio_updates = EXCLUDED.portfolio_updates,
        market_news = EXCLUDED.market_news,
        weekly_reports = EXCLUDED.weekly_reports,
        updated_at = NOW()
      RETURNING 
        email_notifications as email,
        push_notifications as push,
        price_alerts as "priceAlerts",
        portfolio_updates as "portfolioUpdates",
        market_news as "marketNews",
        weekly_reports as "weeklyReports"
    `, [userId, email, push, priceAlerts, portfolioUpdates, marketNews, weeklyReports]));
    /* istanbul ignore next */
    cov_21usdrxd5l().s[398]++;
    res.json({
      success: true,
      message: 'Notification preferences updated successfully',
      preferences: result.rows[0]
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[399]++;
    console.error('Error updating notification preferences:', error);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[400]++;
    res.status(500).json({
      success: false,
      error: 'Failed to update notification preferences'
    });
  }
});

// Get theme preferences
/* istanbul ignore next */
cov_21usdrxd5l().s[401]++;
router.get('/theme', async (req, res) => {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[40]++;
  const userId =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[402]++, req.user.sub);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[403]++;
  try {
    const result =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[404]++, await query(`
      SELECT 
        dark_mode as "darkMode",
        primary_color as "primaryColor",
        chart_style as "chartStyle",
        layout
      FROM user_theme_preferences 
      WHERE user_id = $1
    `, [userId]));

    // If no preferences exist, return defaults
    const preferences =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[405]++, result.rows.length > 0 ?
    /* istanbul ignore next */
    (cov_21usdrxd5l().b[89][0]++, result.rows[0]) :
    /* istanbul ignore next */
    (cov_21usdrxd5l().b[89][1]++, {
      darkMode: false,
      primaryColor: '#1976d2',
      chartStyle: 'candlestick',
      layout: 'standard'
    }));
    /* istanbul ignore next */
    cov_21usdrxd5l().s[406]++;
    res.json({
      success: true,
      preferences
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[407]++;
    console.error('Error fetching theme preferences:', error);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[408]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch theme preferences'
    });
  }
});

// Update theme preferences
/* istanbul ignore next */
cov_21usdrxd5l().s[409]++;
router.put('/theme', createValidationMiddleware(settingsValidationSchemas.theme), async (req, res) => {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[41]++;
  const userId =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[410]++, req.user.sub);
  const {
    darkMode,
    primaryColor,
    chartStyle,
    layout
  } =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[411]++, req.body);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[412]++;
  try {
    // Use UPSERT to create or update preferences
    const result =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[413]++, await query(`
      INSERT INTO user_theme_preferences (
        user_id, 
        dark_mode, 
        primary_color, 
        chart_style, 
        layout,
        updated_at
      ) VALUES ($1, $2, $3, $4, $5, NOW())
      ON CONFLICT (user_id) 
      DO UPDATE SET
        dark_mode = EXCLUDED.dark_mode,
        primary_color = EXCLUDED.primary_color,
        chart_style = EXCLUDED.chart_style,
        layout = EXCLUDED.layout,
        updated_at = NOW()
      RETURNING 
        dark_mode as "darkMode",
        primary_color as "primaryColor",
        chart_style as "chartStyle",
        layout
    `, [userId, darkMode, primaryColor, chartStyle, layout]));
    /* istanbul ignore next */
    cov_21usdrxd5l().s[414]++;
    res.json({
      success: true,
      message: 'Theme preferences updated successfully',
      preferences: result.rows[0]
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[415]++;
    console.error('Error updating theme preferences:', error);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[416]++;
    res.status(500).json({
      success: false,
      error: 'Failed to update theme preferences'
    });
  }
});

// Security endpoints
/* istanbul ignore next */
cov_21usdrxd5l().s[417]++;
router.post('/two-factor/enable', async (req, res) => {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[42]++;
  const userId =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[418]++, req.user.sub);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[419]++;
  try {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[420]++;
    console.log('🔐 Enabling 2FA for user:', userId);

    // Generate a secret for 2FA setup
    const speakeasy =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[421]++, require('speakeasy'));
    const QRCode =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[422]++, require('qrcode'));
    const secret =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[423]++, speakeasy.generateSecret({
      name: `Financial Platform (${
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[90][0]++, req.user.email) ||
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[90][1]++, req.user.username)})`,
      account:
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[91][0]++, req.user.email) ||
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[91][1]++, req.user.username),
      issuer: 'Financial Platform',
      length: 32
    }));
    /* istanbul ignore next */
    cov_21usdrxd5l().s[424]++;
    console.log('🔑 Generated 2FA secret for user');

    // Generate QR code as data URL
    const qrCodeDataUrl =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[425]++, await QRCode.toDataURL(secret.otpauth_url));

    // Store the secret temporarily (user needs to verify setup)
    /* istanbul ignore next */
    cov_21usdrxd5l().s[426]++;
    try {
      /* istanbul ignore next */
      cov_21usdrxd5l().s[427]++;
      await query(`
        UPDATE users 
        SET 
          two_factor_secret = $2,
          two_factor_enabled = false,
          updated_at = NOW()
        WHERE id = $1
      `, [userId, secret.base32]);
      /* istanbul ignore next */
      cov_21usdrxd5l().s[428]++;
      console.log('✅ 2FA secret stored in database, awaiting verification');
    } catch (dbError) {
      /* istanbul ignore next */
      cov_21usdrxd5l().s[429]++;
      console.log('⚠️ Database storage failed, using in-memory 2FA setup:', dbError.message);
      // Continue with 2FA setup even if database fails
    }
    /* istanbul ignore next */
    cov_21usdrxd5l().s[430]++;
    res.json({
      success: true,
      qrCodeUrl: qrCodeDataUrl,
      manualEntryKey: secret.base32,
      message: 'Scan the QR code with your authenticator app, then verify with a code to complete setup',
      note: 'Database storage may be limited - 2FA setup available for this session'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[431]++;
    console.error('❌ Error enabling two-factor auth:', error);

    // Don't return 500 - provide fallback 2FA setup
    /* istanbul ignore next */
    cov_21usdrxd5l().s[432]++;
    try {
      const speakeasy =
      /* istanbul ignore next */
      (cov_21usdrxd5l().s[433]++, require('speakeasy'));
      const QRCode =
      /* istanbul ignore next */
      (cov_21usdrxd5l().s[434]++, require('qrcode'));
      const secret =
      /* istanbul ignore next */
      (cov_21usdrxd5l().s[435]++, speakeasy.generateSecret({
        name: `Financial Platform (${
        /* istanbul ignore next */
        (cov_21usdrxd5l().b[92][0]++, req.user.email) ||
        /* istanbul ignore next */
        (cov_21usdrxd5l().b[92][1]++, req.user.username)})`,
        account:
        /* istanbul ignore next */
        (cov_21usdrxd5l().b[93][0]++, req.user.email) ||
        /* istanbul ignore next */
        (cov_21usdrxd5l().b[93][1]++, req.user.username),
        issuer: 'Financial Platform',
        length: 32
      }));
      const qrCodeDataUrl =
      /* istanbul ignore next */
      (cov_21usdrxd5l().s[436]++, await QRCode.toDataURL(secret.otpauth_url));
      /* istanbul ignore next */
      cov_21usdrxd5l().s[437]++;
      res.json({
        success: true,
        qrCodeUrl: qrCodeDataUrl,
        manualEntryKey: secret.base32,
        message: 'Scan the QR code with your authenticator app, then verify with a code to complete setup',
        note: 'Session-based 2FA setup - database connectivity issue'
      });
    } catch (fallbackError) {
      /* istanbul ignore next */
      cov_21usdrxd5l().s[438]++;
      console.error('❌ Fallback 2FA setup also failed:', fallbackError);
      /* istanbul ignore next */
      cov_21usdrxd5l().s[439]++;
      res.status(500).json({
        success: false,
        error: 'Two-factor authentication setup temporarily unavailable',
        details: 'Please try again later'
      });
    }
  }
});

// Verify 2FA setup
/* istanbul ignore next */
cov_21usdrxd5l().s[440]++;
router.post('/two-factor/verify', async (req, res) => {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[43]++;
  const userId =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[441]++, req.user.sub);
  const {
    code
  } =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[442]++, req.body);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[443]++;
  try {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[444]++;
    console.log('🔐 Verifying 2FA setup for user:', userId);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[445]++;
    if (!code) {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[94][0]++;
      cov_21usdrxd5l().s[446]++;
      return res.status(400).json({
        success: false,
        error: 'Verification code is required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_21usdrxd5l().b[94][1]++;
    }

    // Get user's 2FA secret
    const userResult =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[447]++, await query(`
      SELECT two_factor_secret 
      FROM users 
      WHERE id = $1
    `, [userId]));
    /* istanbul ignore next */
    cov_21usdrxd5l().s[448]++;
    if (userResult.rows.length === 0) {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[95][0]++;
      cov_21usdrxd5l().s[449]++;
      return res.status(404).json({
        success: false,
        error: 'User not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_21usdrxd5l().b[95][1]++;
    }
    const secret =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[450]++, userResult.rows[0].two_factor_secret);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[451]++;
    if (!secret) {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[96][0]++;
      cov_21usdrxd5l().s[452]++;
      return res.status(400).json({
        success: false,
        error: '2FA setup not initiated. Please enable 2FA first.'
      });
    } else
    /* istanbul ignore next */
    {
      cov_21usdrxd5l().b[96][1]++;
    }

    // Verify the code
    const speakeasy =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[453]++, require('speakeasy'));
    const verified =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[454]++, speakeasy.totp.verify({
      secret: secret,
      encoding: 'base32',
      token: code,
      window: 2 // Allow some time drift
    }));
    /* istanbul ignore next */
    cov_21usdrxd5l().s[455]++;
    if (!verified) {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[97][0]++;
      cov_21usdrxd5l().s[456]++;
      console.log('❌ Invalid 2FA code provided');
      /* istanbul ignore next */
      cov_21usdrxd5l().s[457]++;
      return res.status(400).json({
        success: false,
        error: 'Invalid verification code. Please try again.'
      });
    } else
    /* istanbul ignore next */
    {
      cov_21usdrxd5l().b[97][1]++;
    }

    // Generate recovery codes with error handling
    const crypto =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[458]++, require('crypto'));
    let recoveryCodes =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[459]++, []);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[460]++;
    try {
      /* istanbul ignore next */
      cov_21usdrxd5l().s[461]++;
      for (let i =
      /* istanbul ignore next */
      (cov_21usdrxd5l().s[462]++, 0); i < 10; i++) {
        /* istanbul ignore next */
        cov_21usdrxd5l().s[463]++;
        recoveryCodes.push(crypto.randomBytes(4).toString('hex').toUpperCase());
      }
    } catch (cryptoError) {
      /* istanbul ignore next */
      cov_21usdrxd5l().s[464]++;
      console.error('❌ Failed to generate recovery codes:', cryptoError);
      /* istanbul ignore next */
      cov_21usdrxd5l().s[465]++;
      return res.status(500).json({
        success: false,
        error: 'Failed to generate recovery codes',
        message: 'Unable to generate secure recovery codes',
        timestamp: new Date().toISOString()
      });
    }

    // Enable 2FA and store recovery codes
    /* istanbul ignore next */
    cov_21usdrxd5l().s[466]++;
    await query(`
      UPDATE users 
      SET 
        two_factor_enabled = true,
        recovery_codes = $2,
        updated_at = NOW()
      WHERE id = $1
    `, [userId, JSON.stringify(recoveryCodes)]);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[467]++;
    console.log('✅ 2FA enabled successfully for user');
    /* istanbul ignore next */
    cov_21usdrxd5l().s[468]++;
    res.json({
      success: true,
      message: '2FA enabled successfully',
      recoveryCodes: recoveryCodes
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[469]++;
    console.error('❌ Error verifying 2FA setup:', error);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[470]++;
    res.status(500).json({
      success: false,
      error: 'Failed to verify 2FA setup',
      details: error.message
    });
  }
});
/* istanbul ignore next */
cov_21usdrxd5l().s[471]++;
router.post('/two-factor/disable', async (req, res) => {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[44]++;
  const userId =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[472]++, req.user.sub);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[473]++;
  try {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[474]++;
    await query(`
      UPDATE users 
      SET 
        two_factor_enabled = false,
        two_factor_secret = NULL,
        updated_at = NOW()
      WHERE id = $1
    `, [userId]);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[475]++;
    res.json({
      success: true,
      message: 'Two-factor authentication disabled successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[476]++;
    console.error('Error disabling two-factor auth:', error);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[477]++;
    res.status(500).json({
      success: false,
      error: 'Failed to disable two-factor authentication'
    });
  }
});

// Get 2FA status
/* istanbul ignore next */
cov_21usdrxd5l().s[478]++;
router.get('/two-factor/status', async (req, res) => {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[45]++;
  const userId =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[479]++, req.user.sub);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[480]++;
  try {
    const result =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[481]++, await query(`
      SELECT two_factor_enabled, recovery_codes
      FROM users 
      WHERE id = $1
    `, [userId]));
    /* istanbul ignore next */
    cov_21usdrxd5l().s[482]++;
    if (result.rows.length === 0) {
      /* istanbul ignore next */
      cov_21usdrxd5l().b[98][0]++;
      cov_21usdrxd5l().s[483]++;
      return res.status(404).json({
        success: false,
        error: 'User not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_21usdrxd5l().b[98][1]++;
    }
    const user =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[484]++, result.rows[0]);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[485]++;
    res.json({
      success: true,
      enabled: user.two_factor_enabled,
      hasRecoveryCodes: user.recovery_codes ?
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[99][0]++, true) :
      /* istanbul ignore next */
      (cov_21usdrxd5l().b[99][1]++, false)
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[486]++;
    console.error('Error getting 2FA status:', error);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[487]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get 2FA status'
    });
  }
});
/* istanbul ignore next */
cov_21usdrxd5l().s[488]++;
router.get('/recovery-codes', async (req, res) => {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[46]++;
  const userId =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[489]++, req.user.sub);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[490]++;
  try {
    // Generate recovery codes with error handling
    let codes =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[491]++, []);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[492]++;
    try {
      /* istanbul ignore next */
      cov_21usdrxd5l().s[493]++;
      for (let i =
      /* istanbul ignore next */
      (cov_21usdrxd5l().s[494]++, 0); i < 10; i++) {
        /* istanbul ignore next */
        cov_21usdrxd5l().s[495]++;
        codes.push(crypto.randomBytes(4).toString('hex').toUpperCase());
      }
    } catch (cryptoError) {
      /* istanbul ignore next */
      cov_21usdrxd5l().s[496]++;
      console.error('❌ Failed to generate new recovery codes:', cryptoError);
      /* istanbul ignore next */
      cov_21usdrxd5l().s[497]++;
      return res.status(500).json({
        success: false,
        error: 'Failed to generate recovery codes',
        message: 'Unable to generate secure recovery codes',
        timestamp: new Date().toISOString()
      });
    }

    // Hash and store recovery codes
    const hashedCodes =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[498]++, codes.map(code => {
      /* istanbul ignore next */
      cov_21usdrxd5l().f[47]++;
      cov_21usdrxd5l().s[499]++;
      return crypto.createHash('sha256').update(code).digest('hex');
    }));
    /* istanbul ignore next */
    cov_21usdrxd5l().s[500]++;
    await query(`
      UPDATE users 
      SET 
        recovery_codes = $2,
        updated_at = NOW()
      WHERE id = $1
    `, [userId, JSON.stringify(hashedCodes)]);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[501]++;
    res.json({
      success: true,
      codes
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[502]++;
    console.error('Error generating recovery codes:', error);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[503]++;
    res.status(500).json({
      success: false,
      error: 'Failed to generate recovery codes'
    });
  }
});
/* istanbul ignore next */
cov_21usdrxd5l().s[504]++;
router.delete('/delete-account', async (req, res) => {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[48]++;
  const userId =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[505]++, req.user.sub);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[506]++;
  try {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[507]++;
    // Soft delete - mark account as deleted rather than actually deleting
    await query(`
      UPDATE users 
      SET 
        deleted_at = NOW(),
        email = CONCAT(email, '_deleted_', EXTRACT(EPOCH FROM NOW())),
        updated_at = NOW()
      WHERE id = $1
    `, [userId]);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[508]++;
    res.json({
      success: true,
      message: 'Account deleted successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[509]++;
    console.error('Error deleting account:', error);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[510]++;
    res.status(500).json({
      success: false,
      error: 'Failed to delete account'
    });
  }
});
/* istanbul ignore next */
cov_21usdrxd5l().s[511]++;
router.post('/revoke-sessions', async (req, res) => {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[49]++;
  const userId =
  /* istanbul ignore next */
  (cov_21usdrxd5l().s[512]++, req.user.sub);
  /* istanbul ignore next */
  cov_21usdrxd5l().s[513]++;
  try {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[514]++;
    // In a real implementation, you'd invalidate all JWT tokens except the current one
    // For now, we'll just return success
    res.json({
      success: true,
      message: 'All other sessions have been revoked'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[515]++;
    console.error('Error revoking sessions:', error);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[516]++;
    res.status(500).json({
      success: false,
      error: 'Failed to revoke sessions'
    });
  }
});

// Debug/admin endpoint to add missing database columns
/* istanbul ignore next */
cov_21usdrxd5l().s[517]++;
router.post('/debug/fix-schema', async (req, res) => {
  /* istanbul ignore next */
  cov_21usdrxd5l().f[50]++;
  cov_21usdrxd5l().s[518]++;
  console.log('🔧 Database schema fix requested');
  /* istanbul ignore next */
  cov_21usdrxd5l().s[519]++;
  try {
    const {
      transaction
    } =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[520]++, require('../utils/database'));
    const result =
    /* istanbul ignore next */
    (cov_21usdrxd5l().s[521]++, await transaction(async client => {
      /* istanbul ignore next */
      cov_21usdrxd5l().f[51]++;
      const fixes =
      /* istanbul ignore next */
      (cov_21usdrxd5l().s[522]++, []);

      // Add missing columns to users table
      const userColumns =
      /* istanbul ignore next */
      (cov_21usdrxd5l().s[523]++, [{
        name: 'first_name',
        type: 'VARCHAR(100)'
      }, {
        name: 'last_name',
        type: 'VARCHAR(100)'
      }, {
        name: 'phone',
        type: 'VARCHAR(20)'
      }, {
        name: 'timezone',
        type: "VARCHAR(50) DEFAULT 'America/New_York'"
      }, {
        name: 'currency',
        type: "VARCHAR(3) DEFAULT 'USD'"
      }, {
        name: 'two_factor_enabled',
        type: 'BOOLEAN DEFAULT FALSE'
      }, {
        name: 'two_factor_secret',
        type: 'VARCHAR(255)'
      }, {
        name: 'recovery_codes',
        type: 'TEXT'
      }, {
        name: 'deleted_at',
        type: 'TIMESTAMP'
      }]);
      /* istanbul ignore next */
      cov_21usdrxd5l().s[524]++;
      for (const col of userColumns) {
        /* istanbul ignore next */
        cov_21usdrxd5l().s[525]++;
        try {
          /* istanbul ignore next */
          cov_21usdrxd5l().s[526]++;
          await client.query(`
            ALTER TABLE users 
            ADD COLUMN IF NOT EXISTS ${col.name} ${col.type}
          `);
          /* istanbul ignore next */
          cov_21usdrxd5l().s[527]++;
          fixes.push(`Added ${col.name} to users table`);
        } catch (error) {
          /* istanbul ignore next */
          cov_21usdrxd5l().s[528]++;
          fixes.push(`Failed to add ${col.name}: ${error.message}`);
        }
      }

      // Create user preference tables
      /* istanbul ignore next */
      cov_21usdrxd5l().s[529]++;
      try {
        /* istanbul ignore next */
        cov_21usdrxd5l().s[530]++;
        await client.query(`
          CREATE TABLE IF NOT EXISTS user_notification_preferences (
            user_id VARCHAR(255) PRIMARY KEY,
            email_notifications BOOLEAN DEFAULT TRUE,
            push_notifications BOOLEAN DEFAULT TRUE,
            price_alerts BOOLEAN DEFAULT TRUE,
            portfolio_updates BOOLEAN DEFAULT TRUE,
            market_news BOOLEAN DEFAULT FALSE,
            weekly_reports BOOLEAN DEFAULT TRUE,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
          )
        `);
        /* istanbul ignore next */
        cov_21usdrxd5l().s[531]++;
        fixes.push('Created user_notification_preferences table');
      } catch (error) {
        /* istanbul ignore next */
        cov_21usdrxd5l().s[532]++;
        fixes.push(`Failed to create user_notification_preferences: ${error.message}`);
      }
      /* istanbul ignore next */
      cov_21usdrxd5l().s[533]++;
      try {
        /* istanbul ignore next */
        cov_21usdrxd5l().s[534]++;
        await client.query(`
          CREATE TABLE IF NOT EXISTS user_theme_preferences (
            user_id VARCHAR(255) PRIMARY KEY,
            dark_mode BOOLEAN DEFAULT FALSE,
            primary_color VARCHAR(20) DEFAULT '#1976d2',
            chart_style VARCHAR(20) DEFAULT 'candlestick',
            layout VARCHAR(20) DEFAULT 'standard',
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
          )
        `);
        /* istanbul ignore next */
        cov_21usdrxd5l().s[535]++;
        fixes.push('Created user_theme_preferences table');
      } catch (error) {
        /* istanbul ignore next */
        cov_21usdrxd5l().s[536]++;
        fixes.push(`Failed to create user_theme_preferences: ${error.message}`);
      }
      /* istanbul ignore next */
      cov_21usdrxd5l().s[537]++;
      return fixes;
    }));
    /* istanbul ignore next */
    cov_21usdrxd5l().s[538]++;
    console.log('✅ Schema fixes applied:', result);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[539]++;
    res.json({
      success: true,
      message: 'Database schema fixes applied',
      fixes: result,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_21usdrxd5l().s[540]++;
    console.error('❌ Schema fix failed:', error);
    /* istanbul ignore next */
    cov_21usdrxd5l().s[541]++;
    res.status(500).json({
      success: false,
      error: 'Failed to apply schema fixes',
      details: error.message
    });
  }
});
/* istanbul ignore next */
cov_21usdrxd5l().s[542]++;
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,