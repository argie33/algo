4b3cc193356a5ede7273f5b44f6cdd4d
/* istanbul ignore next */
function cov_2fdwmtfaoh() {
  var path = "/home/stocks/algo/webapp/lambda/routes/stocks.js";
  var hash = "ea6c7838fcbf8cbcc0a7809b75339451c5ab66cb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/routes/stocks.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 34
        }
      },
      "1": {
        start: {
          line: 2,
          column: 18
        },
        end: {
          line: 2,
          column: 46
        }
      },
      "2": {
        start: {
          line: 3,
          column: 30
        },
        end: {
          line: 3,
          column: 59
        }
      },
      "3": {
        start: {
          line: 4,
          column: 24
        },
        end: {
          line: 4,
          column: 59
        }
      },
      "4": {
        start: {
          line: 5,
          column: 70
        },
        end: {
          line: 5,
          column: 105
        }
      },
      "5": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 31
        }
      },
      "6": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 119,
          column: 3
        }
      },
      "7": {
        start: {
          line: 12,
          column: 2
        },
        end: {
          line: 118,
          column: 3
        }
      },
      "8": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 52
        }
      },
      "9": {
        start: {
          line: 16,
          column: 25
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "10": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "11": {
        start: {
          line: 30,
          column: 6
        },
        end: {
          line: 30,
          column: 41
        }
      },
      "12": {
        start: {
          line: 31,
          column: 6
        },
        end: {
          line: 31,
          column: 85
        }
      },
      "13": {
        start: {
          line: 33,
          column: 6
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "14": {
        start: {
          line: 62,
          column: 6
        },
        end: {
          line: 62,
          column: 20
        }
      },
      "15": {
        start: {
          line: 65,
          column: 20
        },
        end: {
          line: 70,
          column: 7
        }
      },
      "16": {
        start: {
          line: 65,
          column: 44
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "17": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 76,
          column: 7
        }
      },
      "18": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 79,
          column: 73
        }
      },
      "19": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 108,
          column: 7
        }
      },
      "20": {
        start: {
          line: 110,
          column: 25
        },
        end: {
          line: 110,
          column: 27
        }
      },
      "21": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 117,
          column: 7
        }
      },
      "22": {
        start: {
          line: 122,
          column: 0
        },
        end: {
          line: 192,
          column: 3
        }
      },
      "23": {
        start: {
          line: 123,
          column: 2
        },
        end: {
          line: 191,
          column: 3
        }
      },
      "24": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 124,
          column: 71
        }
      },
      "25": {
        start: {
          line: 126,
          column: 18
        },
        end: {
          line: 126,
          column: 48
        }
      },
      "26": {
        start: {
          line: 129,
          column: 24
        },
        end: {
          line: 135,
          column: 5
        }
      },
      "27": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 173,
          column: 5
        }
      },
      "28": {
        start: {
          line: 139,
          column: 6
        },
        end: {
          line: 139,
          column: 49
        }
      },
      "29": {
        start: {
          line: 140,
          column: 6
        },
        end: {
          line: 140,
          column: 97
        }
      },
      "30": {
        start: {
          line: 142,
          column: 6
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "31": {
        start: {
          line: 172,
          column: 6
        },
        end: {
          line: 172,
          column: 20
        }
      },
      "32": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 181,
          column: 7
        }
      },
      "33": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 184,
          column: 68
        }
      },
      "34": {
        start: {
          line: 185,
          column: 4
        },
        end: {
          line: 190,
          column: 7
        }
      },
      "35": {
        start: {
          line: 195,
          column: 0
        },
        end: {
          line: 195,
          column: 30
        }
      },
      "36": {
        start: {
          line: 198,
          column: 0
        },
        end: {
          line: 204,
          column: 3
        }
      },
      "37": {
        start: {
          line: 199,
          column: 2
        },
        end: {
          line: 203,
          column: 5
        }
      },
      "38": {
        start: {
          line: 207,
          column: 29
        },
        end: {
          line: 239,
          column: 2
        }
      },
      "39": {
        start: {
          line: 211,
          column: 26
        },
        end: {
          line: 211,
          column: 88
        }
      },
      "40": {
        start: {
          line: 212,
          column: 26
        },
        end: {
          line: 212,
          column: 55
        }
      },
      "41": {
        start: {
          line: 217,
          column: 26
        },
        end: {
          line: 217,
          column: 90
        }
      },
      "42": {
        start: {
          line: 218,
          column: 26
        },
        end: {
          line: 218,
          column: 70
        }
      },
      "43": {
        start: {
          line: 223,
          column: 26
        },
        end: {
          line: 223,
          column: 83
        }
      },
      "44": {
        start: {
          line: 224,
          column: 26
        },
        end: {
          line: 224,
          column: 63
        }
      },
      "45": {
        start: {
          line: 229,
          column: 26
        },
        end: {
          line: 229,
          column: 90
        }
      },
      "46": {
        start: {
          line: 230,
          column: 26
        },
        end: {
          line: 230,
          column: 111
        }
      },
      "47": {
        start: {
          line: 235,
          column: 26
        },
        end: {
          line: 235,
          column: 82
        }
      },
      "48": {
        start: {
          line: 236,
          column: 26
        },
        end: {
          line: 236,
          column: 67
        }
      },
      "49": {
        start: {
          line: 242,
          column: 0
        },
        end: {
          line: 812,
          column: 3
        }
      },
      "50": {
        start: {
          line: 243,
          column: 2
        },
        end: {
          line: 811,
          column: 3
        }
      },
      "51": {
        start: {
          line: 244,
          column: 4
        },
        end: {
          line: 244,
          column: 81
        }
      },
      "52": {
        start: {
          line: 245,
          column: 4
        },
        end: {
          line: 245,
          column: 46
        }
      },
      "53": {
        start: {
          line: 248,
          column: 17
        },
        end: {
          line: 248,
          column: 40
        }
      },
      "54": {
        start: {
          line: 249,
          column: 18
        },
        end: {
          line: 249,
          column: 43
        }
      },
      "55": {
        start: {
          line: 250,
          column: 19
        },
        end: {
          line: 250,
          column: 37
        }
      },
      "56": {
        start: {
          line: 251,
          column: 19
        },
        end: {
          line: 251,
          column: 45
        }
      },
      "57": {
        start: {
          line: 252,
          column: 19
        },
        end: {
          line: 252,
          column: 45
        }
      },
      "58": {
        start: {
          line: 253,
          column: 21
        },
        end: {
          line: 253,
          column: 49
        }
      },
      "59": {
        start: {
          line: 254,
          column: 19
        },
        end: {
          line: 254,
          column: 51
        }
      },
      "60": {
        start: {
          line: 255,
          column: 22
        },
        end: {
          line: 255,
          column: 54
        }
      },
      "61": {
        start: {
          line: 257,
          column: 22
        },
        end: {
          line: 257,
          column: 33
        }
      },
      "62": {
        start: {
          line: 258,
          column: 19
        },
        end: {
          line: 258,
          column: 21
        }
      },
      "63": {
        start: {
          line: 259,
          column: 21
        },
        end: {
          line: 259,
          column: 22
        }
      },
      "64": {
        start: {
          line: 262,
          column: 4
        },
        end: {
          line: 266,
          column: 5
        }
      },
      "65": {
        start: {
          line: 263,
          column: 6
        },
        end: {
          line: 263,
          column: 19
        }
      },
      "66": {
        start: {
          line: 264,
          column: 6
        },
        end: {
          line: 264,
          column: 102
        }
      },
      "67": {
        start: {
          line: 265,
          column: 6
        },
        end: {
          line: 265,
          column: 33
        }
      },
      "68": {
        start: {
          line: 269,
          column: 4
        },
        end: {
          line: 273,
          column: 5
        }
      },
      "69": {
        start: {
          line: 270,
          column: 6
        },
        end: {
          line: 270,
          column: 19
        }
      },
      "70": {
        start: {
          line: 271,
          column: 6
        },
        end: {
          line: 271,
          column: 54
        }
      },
      "71": {
        start: {
          line: 272,
          column: 6
        },
        end: {
          line: 272,
          column: 26
        }
      },
      "72": {
        start: {
          line: 276,
          column: 4
        },
        end: {
          line: 280,
          column: 5
        }
      },
      "73": {
        start: {
          line: 277,
          column: 6
        },
        end: {
          line: 277,
          column: 19
        }
      },
      "74": {
        start: {
          line: 278,
          column: 6
        },
        end: {
          line: 278,
          column: 57
        }
      },
      "75": {
        start: {
          line: 279,
          column: 6
        },
        end: {
          line: 279,
          column: 28
        }
      },
      "76": {
        start: {
          line: 283,
          column: 29
        },
        end: {
          line: 289,
          column: 5
        }
      },
      "77": {
        start: {
          line: 291,
          column: 23
        },
        end: {
          line: 291,
          column: 62
        }
      },
      "78": {
        start: {
          line: 292,
          column: 26
        },
        end: {
          line: 292,
          column: 77
        }
      },
      "79": {
        start: {
          line: 294,
          column: 4
        },
        end: {
          line: 294,
          column: 83
        }
      },
      "80": {
        start: {
          line: 297,
          column: 24
        },
        end: {
          line: 425,
          column: 5
        }
      },
      "81": {
        start: {
          line: 427,
          column: 4
        },
        end: {
          line: 427,
          column: 31
        }
      },
      "82": {
        start: {
          line: 430,
          column: 23
        },
        end: {
          line: 434,
          column: 5
        }
      },
      "83": {
        start: {
          line: 436,
          column: 4
        },
        end: {
          line: 436,
          column: 68
        }
      },
      "84": {
        start: {
          line: 439,
          column: 40
        },
        end: {
          line: 450,
          column: 6
        }
      },
      "85": {
        start: {
          line: 452,
          column: 18
        },
        end: {
          line: 452,
          column: 53
        }
      },
      "86": {
        start: {
          line: 453,
          column: 23
        },
        end: {
          line: 453,
          column: 47
        }
      },
      "87": {
        start: {
          line: 455,
          column: 4
        },
        end: {
          line: 455,
          column: 90
        }
      },
      "88": {
        start: {
          line: 458,
          column: 28
        },
        end: {
          line: 660,
          column: 7
        }
      },
      "89": {
        start: {
          line: 458,
          column: 60
        },
        end: {
          line: 660,
          column: 5
        }
      },
      "90": {
        start: {
          line: 662,
          column: 4
        },
        end: {
          line: 742,
          column: 7
        }
      },
      "91": {
        start: {
          line: 745,
          column: 4
        },
        end: {
          line: 745,
          column: 54
        }
      },
      "92": {
        start: {
          line: 748,
          column: 4
        },
        end: {
          line: 803,
          column: 5
        }
      },
      "93": {
        start: {
          line: 749,
          column: 6
        },
        end: {
          line: 749,
          column: 89
        }
      },
      "94": {
        start: {
          line: 750,
          column: 6
        },
        end: {
          line: 802,
          column: 7
        }
      },
      "95": {
        start: {
          line: 751,
          column: 30
        },
        end: {
          line: 773,
          column: 9
        }
      },
      "96": {
        start: {
          line: 775,
          column: 35
        },
        end: {
          line: 779,
          column: 9
        }
      },
      "97": {
        start: {
          line: 781,
          column: 8
        },
        end: {
          line: 781,
          column: 35
        }
      },
      "98": {
        start: {
          line: 783,
          column: 44
        },
        end: {
          line: 786,
          column: 10
        }
      },
      "99": {
        start: {
          line: 788,
          column: 8
        },
        end: {
          line: 799,
          column: 11
        }
      },
      "100": {
        start: {
          line: 801,
          column: 8
        },
        end: {
          line: 801,
          column: 63
        }
      },
      "101": {
        start: {
          line: 805,
          column: 4
        },
        end: {
          line: 810,
          column: 7
        }
      },
      "102": {
        start: {
          line: 815,
          column: 0
        },
        end: {
          line: 960,
          column: 3
        }
      },
      "103": {
        start: {
          line: 816,
          column: 2
        },
        end: {
          line: 959,
          column: 3
        }
      },
      "104": {
        start: {
          line: 817,
          column: 4
        },
        end: {
          line: 817,
          column: 78
        }
      },
      "105": {
        start: {
          line: 828,
          column: 8
        },
        end: {
          line: 828,
          column: 17
        }
      },
      "106": {
        start: {
          line: 830,
          column: 19
        },
        end: {
          line: 830,
          column: 57
        }
      },
      "107": {
        start: {
          line: 833,
          column: 26
        },
        end: {
          line: 833,
          column: 81
        }
      },
      "108": {
        start: {
          line: 834,
          column: 22
        },
        end: {
          line: 834,
          column: 24
        }
      },
      "109": {
        start: {
          line: 835,
          column: 21
        },
        end: {
          line: 835,
          column: 22
        }
      },
      "110": {
        start: {
          line: 838,
          column: 4
        },
        end: {
          line: 842,
          column: 5
        }
      },
      "111": {
        start: {
          line: 839,
          column: 6
        },
        end: {
          line: 839,
          column: 54
        }
      },
      "112": {
        start: {
          line: 840,
          column: 6
        },
        end: {
          line: 840,
          column: 31
        }
      },
      "113": {
        start: {
          line: 841,
          column: 6
        },
        end: {
          line: 841,
          column: 19
        }
      },
      "114": {
        start: {
          line: 845,
          column: 4
        },
        end: {
          line: 857,
          column: 5
        }
      },
      "115": {
        start: {
          line: 846,
          column: 25
        },
        end: {
          line: 846,
          column: 82
        }
      },
      "116": {
        start: {
          line: 846,
          column: 55
        },
        end: {
          line: 846,
          column: 81
        }
      },
      "117": {
        start: {
          line: 847,
          column: 6
        },
        end: {
          line: 851,
          column: 7
        }
      },
      "118": {
        start: {
          line: 848,
          column: 8
        },
        end: {
          line: 848,
          column: 61
        }
      },
      "119": {
        start: {
          line: 849,
          column: 8
        },
        end: {
          line: 849,
          column: 30
        }
      },
      "120": {
        start: {
          line: 850,
          column: 8
        },
        end: {
          line: 850,
          column: 21
        }
      },
      "121": {
        start: {
          line: 852,
          column: 6
        },
        end: {
          line: 856,
          column: 7
        }
      },
      "122": {
        start: {
          line: 853,
          column: 8
        },
        end: {
          line: 853,
          column: 61
        }
      },
      "123": {
        start: {
          line: 854,
          column: 8
        },
        end: {
          line: 854,
          column: 30
        }
      },
      "124": {
        start: {
          line: 855,
          column: 8
        },
        end: {
          line: 855,
          column: 21
        }
      },
      "125": {
        start: {
          line: 860,
          column: 4
        },
        end: {
          line: 872,
          column: 5
        }
      },
      "126": {
        start: {
          line: 861,
          column: 35
        },
        end: {
          line: 861,
          column: 80
        }
      },
      "127": {
        start: {
          line: 861,
          column: 66
        },
        end: {
          line: 861,
          column: 79
        }
      },
      "128": {
        start: {
          line: 862,
          column: 6
        },
        end: {
          line: 866,
          column: 7
        }
      },
      "129": {
        start: {
          line: 863,
          column: 8
        },
        end: {
          line: 863,
          column: 64
        }
      },
      "130": {
        start: {
          line: 864,
          column: 8
        },
        end: {
          line: 864,
          column: 35
        }
      },
      "131": {
        start: {
          line: 865,
          column: 8
        },
        end: {
          line: 865,
          column: 21
        }
      },
      "132": {
        start: {
          line: 867,
          column: 6
        },
        end: {
          line: 871,
          column: 7
        }
      },
      "133": {
        start: {
          line: 868,
          column: 8
        },
        end: {
          line: 868,
          column: 64
        }
      },
      "134": {
        start: {
          line: 869,
          column: 8
        },
        end: {
          line: 869,
          column: 35
        }
      },
      "135": {
        start: {
          line: 870,
          column: 8
        },
        end: {
          line: 870,
          column: 21
        }
      },
      "136": {
        start: {
          line: 875,
          column: 4
        },
        end: {
          line: 880,
          column: 5
        }
      },
      "137": {
        start: {
          line: 876,
          column: 24
        },
        end: {
          line: 876,
          column: 50
        }
      },
      "138": {
        start: {
          line: 877,
          column: 6
        },
        end: {
          line: 877,
          column: 55
        }
      },
      "139": {
        start: {
          line: 878,
          column: 6
        },
        end: {
          line: 878,
          column: 34
        }
      },
      "140": {
        start: {
          line: 879,
          column: 6
        },
        end: {
          line: 879,
          column: 19
        }
      },
      "141": {
        start: {
          line: 882,
          column: 24
        },
        end: {
          line: 882,
          column: 53
        }
      },
      "142": {
        start: {
          line: 883,
          column: 29
        },
        end: {
          line: 883,
          column: 98
        }
      },
      "143": {
        start: {
          line: 884,
          column: 23
        },
        end: {
          line: 884,
          column: 80
        }
      },
      "144": {
        start: {
          line: 885,
          column: 26
        },
        end: {
          line: 885,
          column: 110
        }
      },
      "145": {
        start: {
          line: 887,
          column: 4
        },
        end: {
          line: 887,
          column: 64
        }
      },
      "146": {
        start: {
          line: 888,
          column: 4
        },
        end: {
          line: 888,
          column: 53
        }
      },
      "147": {
        start: {
          line: 891,
          column: 23
        },
        end: {
          line: 895,
          column: 5
        }
      },
      "148": {
        start: {
          line: 897,
          column: 24
        },
        end: {
          line: 897,
          column: 60
        }
      },
      "149": {
        start: {
          line: 898,
          column: 24
        },
        end: {
          line: 898,
          column: 65
        }
      },
      "150": {
        start: {
          line: 901,
          column: 24
        },
        end: {
          line: 917,
          column: 5
        }
      },
      "151": {
        start: {
          line: 919,
          column: 4
        },
        end: {
          line: 919,
          column: 46
        }
      },
      "152": {
        start: {
          line: 921,
          column: 25
        },
        end: {
          line: 921,
          column: 69
        }
      },
      "153": {
        start: {
          line: 923,
          column: 4
        },
        end: {
          line: 923,
          column: 112
        }
      },
      "154": {
        start: {
          line: 925,
          column: 4
        },
        end: {
          line: 951,
          column: 7
        }
      },
      "155": {
        start: {
          line: 953,
          column: 4
        },
        end: {
          line: 953,
          column: 51
        }
      },
      "156": {
        start: {
          line: 954,
          column: 4
        },
        end: {
          line: 958,
          column: 7
        }
      },
      "157": {
        start: {
          line: 963,
          column: 0
        },
        end: {
          line: 1057,
          column: 3
        }
      },
      "158": {
        start: {
          line: 964,
          column: 2
        },
        end: {
          line: 1056,
          column: 3
        }
      },
      "159": {
        start: {
          line: 965,
          column: 23
        },
        end: {
          line: 965,
          column: 33
        }
      },
      "160": {
        start: {
          line: 966,
          column: 24
        },
        end: {
          line: 966,
          column: 44
        }
      },
      "161": {
        start: {
          line: 968,
          column: 4
        },
        end: {
          line: 968,
          column: 72
        }
      },
      "162": {
        start: {
          line: 971,
          column: 23
        },
        end: {
          line: 995,
          column: 5
        }
      },
      "163": {
        start: {
          line: 997,
          column: 19
        },
        end: {
          line: 997,
          column: 57
        }
      },
      "164": {
        start: {
          line: 999,
          column: 4
        },
        end: {
          line: 1006,
          column: 5
        }
      },
      "165": {
        start: {
          line: 1000,
          column: 6
        },
        end: {
          line: 1005,
          column: 9
        }
      },
      "166": {
        start: {
          line: 1008,
          column: 18
        },
        end: {
          line: 1008,
          column: 32
        }
      },
      "167": {
        start: {
          line: 1011,
          column: 21
        },
        end: {
          line: 1041,
          column: 5
        }
      },
      "168": {
        start: {
          line: 1043,
          column: 4
        },
        end: {
          line: 1043,
          column: 85
        }
      },
      "169": {
        start: {
          line: 1045,
          column: 4
        },
        end: {
          line: 1045,
          column: 23
        }
      },
      "170": {
        start: {
          line: 1048,
          column: 4
        },
        end: {
          line: 1048,
          column: 64
        }
      },
      "171": {
        start: {
          line: 1049,
          column: 4
        },
        end: {
          line: 1055,
          column: 7
        }
      },
      "172": {
        start: {
          line: 1061,
          column: 19
        },
        end: {
          line: 1061,
          column: 28
        }
      },
      "173": {
        start: {
          line: 1062,
          column: 18
        },
        end: {
          line: 1062,
          column: 31
        }
      },
      "174": {
        start: {
          line: 1063,
          column: 23
        },
        end: {
          line: 1063,
          column: 27
        }
      },
      "175": {
        start: {
          line: 1066,
          column: 20
        },
        end: {
          line: 1066,
          column: 83
        }
      },
      "176": {
        start: {
          line: 1066,
          column: 50
        },
        end: {
          line: 1066,
          column: 83
        }
      },
      "177": {
        start: {
          line: 1069,
          column: 19
        },
        end: {
          line: 1076,
          column: 1
        }
      },
      "178": {
        start: {
          line: 1070,
          column: 14
        },
        end: {
          line: 1070,
          column: 24
        }
      },
      "179": {
        start: {
          line: 1071,
          column: 2
        },
        end: {
          line: 1075,
          column: 3
        }
      },
      "180": {
        start: {
          line: 1072,
          column: 4
        },
        end: {
          line: 1074,
          column: 5
        }
      },
      "181": {
        start: {
          line: 1073,
          column: 6
        },
        end: {
          line: 1073,
          column: 29
        }
      },
      "182": {
        start: {
          line: 1079,
          column: 0
        },
        end: {
          line: 1299,
          column: 3
        }
      },
      "183": {
        start: {
          line: 1080,
          column: 20
        },
        end: {
          line: 1080,
          column: 30
        }
      },
      "184": {
        start: {
          line: 1081,
          column: 21
        },
        end: {
          line: 1081,
          column: 31
        }
      },
      "185": {
        start: {
          line: 1082,
          column: 20
        },
        end: {
          line: 1082,
          column: 50
        }
      },
      "186": {
        start: {
          line: 1083,
          column: 16
        },
        end: {
          line: 1083,
          column: 62
        }
      },
      "187": {
        start: {
          line: 1085,
          column: 17
        },
        end: {
          line: 1085,
          column: 37
        }
      },
      "188": {
        start: {
          line: 1086,
          column: 19
        },
        end: {
          line: 1086,
          column: 56
        }
      },
      "189": {
        start: {
          line: 1088,
          column: 2
        },
        end: {
          line: 1088,
          column: 99
        }
      },
      "190": {
        start: {
          line: 1090,
          column: 2
        },
        end: {
          line: 1298,
          column: 3
        }
      },
      "191": {
        start: {
          line: 1092,
          column: 19
        },
        end: {
          line: 1092,
          column: 43
        }
      },
      "192": {
        start: {
          line: 1093,
          column: 4
        },
        end: {
          line: 1100,
          column: 5
        }
      },
      "193": {
        start: {
          line: 1094,
          column: 6
        },
        end: {
          line: 1094,
          column: 89
        }
      },
      "194": {
        start: {
          line: 1095,
          column: 6
        },
        end: {
          line: 1099,
          column: 9
        }
      },
      "195": {
        start: {
          line: 1103,
          column: 4
        },
        end: {
          line: 1105,
          column: 5
        }
      },
      "196": {
        start: {
          line: 1104,
          column: 6
        },
        end: {
          line: 1104,
          column: 19
        }
      },
      "197": {
        start: {
          line: 1108,
          column: 21
        },
        end: {
          line: 1112,
          column: 5
        }
      },
      "198": {
        start: {
          line: 1114,
          column: 22
        },
        end: {
          line: 1114,
          column: 58
        }
      },
      "199": {
        start: {
          line: 1117,
          column: 24
        },
        end: {
          line: 1155,
          column: 5
        }
      },
      "200": {
        start: {
          line: 1158,
          column: 25
        },
        end: {
          line: 1158,
          column: 60
        }
      },
      "201": {
        start: {
          line: 1159,
          column: 27
        },
        end: {
          line: 1161,
          column: 5
        }
      },
      "202": {
        start: {
          line: 1160,
          column: 6
        },
        end: {
          line: 1160,
          column: 92
        }
      },
      "203": {
        start: {
          line: 1160,
          column: 23
        },
        end: {
          line: 1160,
          column: 84
        }
      },
      "204": {
        start: {
          line: 1163,
          column: 19
        },
        end: {
          line: 1163,
          column: 69
        }
      },
      "205": {
        start: {
          line: 1165,
          column: 4
        },
        end: {
          line: 1215,
          column: 5
        }
      },
      "206": {
        start: {
          line: 1167,
          column: 6
        },
        end: {
          line: 1196,
          column: 9
        }
      },
      "207": {
        start: {
          line: 1198,
          column: 6
        },
        end: {
          line: 1214,
          column: 9
        }
      },
      "208": {
        start: {
          line: 1218,
          column: 19
        },
        end: {
          line: 1228,
          column: 7
        }
      },
      "209": {
        start: {
          line: 1218,
          column: 43
        },
        end: {
          line: 1228,
          column: 5
        }
      },
      "210": {
        start: {
          line: 1230,
          column: 19
        },
        end: {
          line: 1230,
          column: 28
        }
      },
      "211": {
        start: {
          line: 1231,
          column: 19
        },
        end: {
          line: 1231,
          column: 44
        }
      },
      "212": {
        start: {
          line: 1232,
          column: 25
        },
        end: {
          line: 1233,
          column: 62
        }
      },
      "213": {
        start: {
          line: 1236,
          column: 24
        },
        end: {
          line: 1236,
          column: 111
        }
      },
      "214": {
        start: {
          line: 1236,
          column: 63
        },
        end: {
          line: 1236,
          column: 77
        }
      },
      "215": {
        start: {
          line: 1237,
          column: 23
        },
        end: {
          line: 1237,
          column: 98
        }
      },
      "216": {
        start: {
          line: 1237,
          column: 90
        },
        end: {
          line: 1237,
          column: 96
        }
      },
      "217": {
        start: {
          line: 1238,
          column: 22
        },
        end: {
          line: 1238,
          column: 96
        }
      },
      "218": {
        start: {
          line: 1238,
          column: 89
        },
        end: {
          line: 1238,
          column: 94
        }
      },
      "219": {
        start: {
          line: 1240,
          column: 25
        },
        end: {
          line: 1259,
          column: 5
        }
      },
      "220": {
        start: {
          line: 1262,
          column: 4
        },
        end: {
          line: 1265,
          column: 7
        }
      },
      "221": {
        start: {
          line: 1267,
          column: 4
        },
        end: {
          line: 1267,
          column: 103
        }
      },
      "222": {
        start: {
          line: 1268,
          column: 4
        },
        end: {
          line: 1268,
          column: 27
        }
      },
      "223": {
        start: {
          line: 1271,
          column: 4
        },
        end: {
          line: 1271,
          column: 63
        }
      },
      "224": {
        start: {
          line: 1274,
          column: 19
        },
        end: {
          line: 1274,
          column: 43
        }
      },
      "225": {
        start: {
          line: 1275,
          column: 4
        },
        end: {
          line: 1284,
          column: 5
        }
      },
      "226": {
        start: {
          line: 1276,
          column: 6
        },
        end: {
          line: 1276,
          column: 73
        }
      },
      "227": {
        start: {
          line: 1277,
          column: 6
        },
        end: {
          line: 1283,
          column: 9
        }
      },
      "228": {
        start: {
          line: 1287,
          column: 4
        },
        end: {
          line: 1297,
          column: 7
        }
      },
      "229": {
        start: {
          line: 1302,
          column: 0
        },
        end: {
          line: 1374,
          column: 3
        }
      },
      "230": {
        start: {
          line: 1303,
          column: 2
        },
        end: {
          line: 1373,
          column: 3
        }
      },
      "231": {
        start: {
          line: 1304,
          column: 23
        },
        end: {
          line: 1304,
          column: 33
        }
      },
      "232": {
        start: {
          line: 1305,
          column: 19
        },
        end: {
          line: 1305,
          column: 51
        }
      },
      "233": {
        start: {
          line: 1306,
          column: 19
        },
        end: {
          line: 1306,
          column: 39
        }
      },
      "234": {
        start: {
          line: 1308,
          column: 4
        },
        end: {
          line: 1308,
          column: 101
        }
      },
      "235": {
        start: {
          line: 1311,
          column: 28
        },
        end: {
          line: 1326,
          column: 5
        }
      },
      "236": {
        start: {
          line: 1328,
          column: 19
        },
        end: {
          line: 1328,
          column: 57
        }
      },
      "237": {
        start: {
          line: 1330,
          column: 4
        },
        end: {
          line: 1340,
          column: 5
        }
      },
      "238": {
        start: {
          line: 1331,
          column: 6
        },
        end: {
          line: 1331,
          column: 72
        }
      },
      "239": {
        start: {
          line: 1332,
          column: 6
        },
        end: {
          line: 1339,
          column: 9
        }
      },
      "240": {
        start: {
          line: 1343,
          column: 27
        },
        end: {
          line: 1350,
          column: 7
        }
      },
      "241": {
        start: {
          line: 1343,
          column: 51
        },
        end: {
          line: 1350,
          column: 5
        }
      },
      "242": {
        start: {
          line: 1352,
          column: 4
        },
        end: {
          line: 1352,
          column: 116
        }
      },
      "243": {
        start: {
          line: 1354,
          column: 4
        },
        end: {
          line: 1361,
          column: 7
        }
      },
      "244": {
        start: {
          line: 1364,
          column: 4
        },
        end: {
          line: 1364,
          column: 71
        }
      },
      "245": {
        start: {
          line: 1365,
          column: 4
        },
        end: {
          line: 1372,
          column: 7
        }
      },
      "246": {
        start: {
          line: 1377,
          column: 0
        },
        end: {
          line: 1462,
          column: 3
        }
      },
      "247": {
        start: {
          line: 1378,
          column: 2
        },
        end: {
          line: 1461,
          column: 3
        }
      },
      "248": {
        start: {
          line: 1379,
          column: 23
        },
        end: {
          line: 1379,
          column: 33
        }
      },
      "249": {
        start: {
          line: 1380,
          column: 18
        },
        end: {
          line: 1380,
          column: 63
        }
      },
      "250": {
        start: {
          line: 1382,
          column: 4
        },
        end: {
          line: 1382,
          column: 100
        }
      },
      "251": {
        start: {
          line: 1384,
          column: 24
        },
        end: {
          line: 1390,
          column: 5
        }
      },
      "252": {
        start: {
          line: 1392,
          column: 19
        },
        end: {
          line: 1392,
          column: 60
        }
      },
      "253": {
        start: {
          line: 1394,
          column: 4
        },
        end: {
          line: 1404,
          column: 5
        }
      },
      "254": {
        start: {
          line: 1395,
          column: 6
        },
        end: {
          line: 1395,
          column: 67
        }
      },
      "255": {
        start: {
          line: 1396,
          column: 6
        },
        end: {
          line: 1403,
          column: 9
        }
      },
      "256": {
        start: {
          line: 1407,
          column: 19
        },
        end: {
          line: 1407,
          column: 30
        }
      },
      "257": {
        start: {
          line: 1408,
          column: 19
        },
        end: {
          line: 1408,
          column: 28
        }
      },
      "258": {
        start: {
          line: 1409,
          column: 19
        },
        end: {
          line: 1409,
          column: 44
        }
      },
      "259": {
        start: {
          line: 1411,
          column: 25
        },
        end: {
          line: 1412,
          column: 62
        }
      },
      "260": {
        start: {
          line: 1415,
          column: 29
        },
        end: {
          line: 1433,
          column: 6
        }
      },
      "261": {
        start: {
          line: 1416,
          column: 24
        },
        end: {
          line: 1416,
          column: 28
        }
      },
      "262": {
        start: {
          line: 1416,
          column: 47
        },
        end: {
          line: 1416,
          column: 51
        }
      },
      "263": {
        start: {
          line: 1417,
          column: 6
        },
        end: {
          line: 1421,
          column: 7
        }
      },
      "264": {
        start: {
          line: 1418,
          column: 21
        },
        end: {
          line: 1418,
          column: 36
        }
      },
      "265": {
        start: {
          line: 1419,
          column: 8
        },
        end: {
          line: 1419,
          column: 47
        }
      },
      "266": {
        start: {
          line: 1420,
          column: 8
        },
        end: {
          line: 1420,
          column: 76
        }
      },
      "267": {
        start: {
          line: 1422,
          column: 6
        },
        end: {
          line: 1432,
          column: 8
        }
      },
      "268": {
        start: {
          line: 1435,
          column: 4
        },
        end: {
          line: 1435,
          column: 109
        }
      },
      "269": {
        start: {
          line: 1437,
          column: 4
        },
        end: {
          line: 1449,
          column: 7
        }
      },
      "270": {
        start: {
          line: 1452,
          column: 4
        },
        end: {
          line: 1452,
          column: 75
        }
      },
      "271": {
        start: {
          line: 1453,
          column: 4
        },
        end: {
          line: 1460,
          column: 7
        }
      },
      "272": {
        start: {
          line: 1465,
          column: 0
        },
        end: {
          line: 1498,
          column: 3
        }
      },
      "273": {
        start: {
          line: 1466,
          column: 2
        },
        end: {
          line: 1497,
          column: 3
        }
      },
      "274": {
        start: {
          line: 1467,
          column: 4
        },
        end: {
          line: 1467,
          column: 69
        }
      },
      "275": {
        start: {
          line: 1469,
          column: 25
        },
        end: {
          line: 1475,
          column: 5
        }
      },
      "276": {
        start: {
          line: 1477,
          column: 19
        },
        end: {
          line: 1477,
          column: 44
        }
      },
      "277": {
        start: {
          line: 1479,
          column: 4
        },
        end: {
          line: 1487,
          column: 7
        }
      },
      "278": {
        start: {
          line: 1480,
          column: 36
        },
        end: {
          line: 1484,
          column: 7
        }
      },
      "279": {
        start: {
          line: 1490,
          column: 4
        },
        end: {
          line: 1490,
          column: 60
        }
      },
      "280": {
        start: {
          line: 1491,
          column: 4
        },
        end: {
          line: 1496,
          column: 7
        }
      },
      "281": {
        start: {
          line: 1991,
          column: 0
        },
        end: {
          line: 2119,
          column: 3
        }
      },
      "282": {
        start: {
          line: 1992,
          column: 2
        },
        end: {
          line: 2118,
          column: 3
        }
      },
      "283": {
        start: {
          line: 1993,
          column: 4
        },
        end: {
          line: 1993,
          column: 53
        }
      },
      "284": {
        start: {
          line: 1996,
          column: 27
        },
        end: {
          line: 2012,
          column: 5
        }
      },
      "285": {
        start: {
          line: 2014,
          column: 4
        },
        end: {
          line: 2014,
          column: 32
        }
      },
      "286": {
        start: {
          line: 2015,
          column: 4
        },
        end: {
          line: 2015,
          column: 58
        }
      },
      "287": {
        start: {
          line: 2018,
          column: 27
        },
        end: {
          line: 2021,
          column: 5
        }
      },
      "288": {
        start: {
          line: 2023,
          column: 4
        },
        end: {
          line: 2023,
          column: 32
        }
      },
      "289": {
        start: {
          line: 2024,
          column: 4
        },
        end: {
          line: 2024,
          column: 58
        }
      },
      "290": {
        start: {
          line: 2027,
          column: 23
        },
        end: {
          line: 2067,
          column: 5
        }
      },
      "291": {
        start: {
          line: 2070,
          column: 24
        },
        end: {
          line: 2070,
          column: 25
        }
      },
      "292": {
        start: {
          line: 2071,
          column: 4
        },
        end: {
          line: 2090,
          column: 5
        }
      },
      "293": {
        start: {
          line: 2072,
          column: 6
        },
        end: {
          line: 2089,
          column: 7
        }
      },
      "294": {
        start: {
          line: 2073,
          column: 26
        },
        end: {
          line: 2083,
          column: 9
        }
      },
      "295": {
        start: {
          line: 2085,
          column: 8
        },
        end: {
          line: 2085,
          column: 36
        }
      },
      "296": {
        start: {
          line: 2086,
          column: 8
        },
        end: {
          line: 2086,
          column: 24
        }
      },
      "297": {
        start: {
          line: 2088,
          column: 8
        },
        end: {
          line: 2088,
          column: 91
        }
      },
      "298": {
        start: {
          line: 2092,
          column: 4
        },
        end: {
          line: 2092,
          column: 63
        }
      },
      "299": {
        start: {
          line: 2095,
          column: 24
        },
        end: {
          line: 2095,
          column: 80
        }
      },
      "300": {
        start: {
          line: 2096,
          column: 22
        },
        end: {
          line: 2096,
          column: 47
        }
      },
      "301": {
        start: {
          line: 2098,
          column: 4
        },
        end: {
          line: 2108,
          column: 7
        }
      },
      "302": {
        start: {
          line: 2111,
          column: 4
        },
        end: {
          line: 2111,
          column: 66
        }
      },
      "303": {
        start: {
          line: 2112,
          column: 4
        },
        end: {
          line: 2117,
          column: 7
        }
      },
      "304": {
        start: {
          line: 2124,
          column: 0
        },
        end: {
          line: 2270,
          column: 3
        }
      },
      "305": {
        start: {
          line: 2125,
          column: 2
        },
        end: {
          line: 2269,
          column: 3
        }
      },
      "306": {
        start: {
          line: 2126,
          column: 4
        },
        end: {
          line: 2126,
          column: 48
        }
      },
      "307": {
        start: {
          line: 2129,
          column: 23
        },
        end: {
          line: 2146,
          column: 5
        }
      },
      "308": {
        start: {
          line: 2149,
          column: 4
        },
        end: {
          line: 2185,
          column: 5
        }
      },
      "309": {
        start: {
          line: 2150,
          column: 6
        },
        end: {
          line: 2150,
          column: 39
        }
      },
      "310": {
        start: {
          line: 2151,
          column: 6
        },
        end: {
          line: 2151,
          column: 88
        }
      },
      "311": {
        start: {
          line: 2153,
          column: 6
        },
        end: {
          line: 2183,
          column: 9
        }
      },
      "312": {
        start: {
          line: 2184,
          column: 6
        },
        end: {
          line: 2184,
          column: 20
        }
      },
      "313": {
        start: {
          line: 2187,
          column: 4
        },
        end: {
          line: 2259,
          column: 5
        }
      },
      "314": {
        start: {
          line: 2188,
          column: 20
        },
        end: {
          line: 2188,
          column: 34
        }
      },
      "315": {
        start: {
          line: 2190,
          column: 6
        },
        end: {
          line: 2222,
          column: 9
        }
      },
      "316": {
        start: {
          line: 2225,
          column: 6
        },
        end: {
          line: 2250,
          column: 9
        }
      },
      "317": {
        start: {
          line: 2252,
          column: 6
        },
        end: {
          line: 2258,
          column: 9
        }
      },
      "318": {
        start: {
          line: 2262,
          column: 4
        },
        end: {
          line: 2262,
          column: 60
        }
      },
      "319": {
        start: {
          line: 2263,
          column: 4
        },
        end: {
          line: 2268,
          column: 7
        }
      },
      "320": {
        start: {
          line: 2273,
          column: 0
        },
        end: {
          line: 2353,
          column: 3
        }
      },
      "321": {
        start: {
          line: 2274,
          column: 2
        },
        end: {
          line: 2352,
          column: 3
        }
      },
      "322": {
        start: {
          line: 2275,
          column: 4
        },
        end: {
          line: 2275,
          column: 55
        }
      },
      "323": {
        start: {
          line: 2278,
          column: 27
        },
        end: {
          line: 2295,
          column: 5
        }
      },
      "324": {
        start: {
          line: 2297,
          column: 4
        },
        end: {
          line: 2297,
          column: 32
        }
      },
      "325": {
        start: {
          line: 2298,
          column: 4
        },
        end: {
          line: 2298,
          column: 60
        }
      },
      "326": {
        start: {
          line: 2301,
          column: 26
        },
        end: {
          line: 2305,
          column: 5
        }
      },
      "327": {
        start: {
          line: 2307,
          column: 4
        },
        end: {
          line: 2309,
          column: 5
        }
      },
      "328": {
        start: {
          line: 2308,
          column: 6
        },
        end: {
          line: 2308,
          column: 28
        }
      },
      "329": {
        start: {
          line: 2311,
          column: 4
        },
        end: {
          line: 2311,
          column: 62
        }
      },
      "330": {
        start: {
          line: 2314,
          column: 24
        },
        end: {
          line: 2319,
          column: 5
        }
      },
      "331": {
        start: {
          line: 2321,
          column: 20
        },
        end: {
          line: 2321,
          column: 44
        }
      },
      "332": {
        start: {
          line: 2323,
          column: 4
        },
        end: {
          line: 2342,
          column: 7
        }
      },
      "333": {
        start: {
          line: 2329,
          column: 42
        },
        end: {
          line: 2333,
          column: 9
        }
      },
      "334": {
        start: {
          line: 2345,
          column: 4
        },
        end: {
          line: 2345,
          column: 68
        }
      },
      "335": {
        start: {
          line: 2346,
          column: 4
        },
        end: {
          line: 2351,
          column: 7
        }
      },
      "336": {
        start: {
          line: 2355,
          column: 0
        },
        end: {
          line: 2355,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 11,
            column: 24
          }
        },
        loc: {
          start: {
            line: 11,
            column: 43
          },
          end: {
            line: 119,
            column: 1
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 65,
            column: 36
          },
          end: {
            line: 65,
            column: 37
          }
        },
        loc: {
          start: {
            line: 65,
            column: 44
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 65
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 122,
            column: 29
          },
          end: {
            line: 122,
            column: 30
          }
        },
        loc: {
          start: {
            line: 122,
            column: 49
          },
          end: {
            line: 192,
            column: 1
          }
        },
        line: 122
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 198,
            column: 20
          },
          end: {
            line: 198,
            column: 21
          }
        },
        loc: {
          start: {
            line: 198,
            column: 34
          },
          end: {
            line: 204,
            column: 1
          }
        },
        line: 198
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 211,
            column: 15
          },
          end: {
            line: 211,
            column: 16
          }
        },
        loc: {
          start: {
            line: 211,
            column: 26
          },
          end: {
            line: 211,
            column: 88
          }
        },
        line: 211
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 212,
            column: 15
          },
          end: {
            line: 212,
            column: 16
          }
        },
        loc: {
          start: {
            line: 212,
            column: 26
          },
          end: {
            line: 212,
            column: 55
          }
        },
        line: 212
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 217,
            column: 15
          },
          end: {
            line: 217,
            column: 16
          }
        },
        loc: {
          start: {
            line: 217,
            column: 26
          },
          end: {
            line: 217,
            column: 90
          }
        },
        line: 217
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 218,
            column: 15
          },
          end: {
            line: 218,
            column: 16
          }
        },
        loc: {
          start: {
            line: 218,
            column: 26
          },
          end: {
            line: 218,
            column: 70
          }
        },
        line: 218
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 223,
            column: 15
          },
          end: {
            line: 223,
            column: 16
          }
        },
        loc: {
          start: {
            line: 223,
            column: 26
          },
          end: {
            line: 223,
            column: 83
          }
        },
        line: 223
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 224,
            column: 15
          },
          end: {
            line: 224,
            column: 16
          }
        },
        loc: {
          start: {
            line: 224,
            column: 26
          },
          end: {
            line: 224,
            column: 63
          }
        },
        line: 224
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 229,
            column: 15
          },
          end: {
            line: 229,
            column: 16
          }
        },
        loc: {
          start: {
            line: 229,
            column: 26
          },
          end: {
            line: 229,
            column: 90
          }
        },
        line: 229
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 230,
            column: 15
          },
          end: {
            line: 230,
            column: 16
          }
        },
        loc: {
          start: {
            line: 230,
            column: 26
          },
          end: {
            line: 230,
            column: 111
          }
        },
        line: 230
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 235,
            column: 15
          },
          end: {
            line: 235,
            column: 16
          }
        },
        loc: {
          start: {
            line: 235,
            column: 26
          },
          end: {
            line: 235,
            column: 82
          }
        },
        line: 235
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 236,
            column: 15
          },
          end: {
            line: 236,
            column: 16
          }
        },
        loc: {
          start: {
            line: 236,
            column: 26
          },
          end: {
            line: 236,
            column: 67
          }
        },
        line: 236
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 242,
            column: 38
          },
          end: {
            line: 242,
            column: 39
          }
        },
        loc: {
          start: {
            line: 242,
            column: 58
          },
          end: {
            line: 812,
            column: 1
          }
        },
        line: 242
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 458,
            column: 50
          },
          end: {
            line: 458,
            column: 51
          }
        },
        loc: {
          start: {
            line: 458,
            column: 60
          },
          end: {
            line: 660,
            column: 5
          }
        },
        line: 458
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 815,
            column: 22
          },
          end: {
            line: 815,
            column: 23
          }
        },
        loc: {
          start: {
            line: 815,
            column: 42
          },
          end: {
            line: 960,
            column: 1
          }
        },
        line: 815
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 846,
            column: 50
          },
          end: {
            line: 846,
            column: 51
          }
        },
        loc: {
          start: {
            line: 846,
            column: 55
          },
          end: {
            line: 846,
            column: 81
          }
        },
        line: 846
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 861,
            column: 61
          },
          end: {
            line: 861,
            column: 62
          }
        },
        loc: {
          start: {
            line: 861,
            column: 66
          },
          end: {
            line: 861,
            column: 79
          }
        },
        line: 861
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 963,
            column: 23
          },
          end: {
            line: 963,
            column: 24
          }
        },
        loc: {
          start: {
            line: 963,
            column: 43
          },
          end: {
            line: 1057,
            column: 1
          }
        },
        line: 963
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 1066,
            column: 20
          },
          end: {
            line: 1066,
            column: 21
          }
        },
        loc: {
          start: {
            line: 1066,
            column: 50
          },
          end: {
            line: 1066,
            column: 83
          }
        },
        line: 1066
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 1069,
            column: 19
          },
          end: {
            line: 1069,
            column: 20
          }
        },
        loc: {
          start: {
            line: 1069,
            column: 25
          },
          end: {
            line: 1076,
            column: 1
          }
        },
        line: 1069
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 1079,
            column: 30
          },
          end: {
            line: 1079,
            column: 31
          }
        },
        loc: {
          start: {
            line: 1079,
            column: 50
          },
          end: {
            line: 1299,
            column: 1
          }
        },
        line: 1079
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 1159,
            column: 39
          },
          end: {
            line: 1159,
            column: 40
          }
        },
        loc: {
          start: {
            line: 1160,
            column: 6
          },
          end: {
            line: 1160,
            column: 92
          }
        },
        line: 1160
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 1160,
            column: 17
          },
          end: {
            line: 1160,
            column: 18
          }
        },
        loc: {
          start: {
            line: 1160,
            column: 23
          },
          end: {
            line: 1160,
            column: 84
          }
        },
        line: 1160
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 1218,
            column: 35
          },
          end: {
            line: 1218,
            column: 36
          }
        },
        loc: {
          start: {
            line: 1218,
            column: 43
          },
          end: {
            line: 1228,
            column: 5
          }
        },
        line: 1218
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 1236,
            column: 51
          },
          end: {
            line: 1236,
            column: 52
          }
        },
        loc: {
          start: {
            line: 1236,
            column: 63
          },
          end: {
            line: 1236,
            column: 77
          }
        },
        line: 1236
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 1237,
            column: 85
          },
          end: {
            line: 1237,
            column: 86
          }
        },
        loc: {
          start: {
            line: 1237,
            column: 90
          },
          end: {
            line: 1237,
            column: 96
          }
        },
        line: 1237
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 1238,
            column: 84
          },
          end: {
            line: 1238,
            column: 85
          }
        },
        loc: {
          start: {
            line: 1238,
            column: 89
          },
          end: {
            line: 1238,
            column: 94
          }
        },
        line: 1238
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 1302,
            column: 34
          },
          end: {
            line: 1302,
            column: 35
          }
        },
        loc: {
          start: {
            line: 1302,
            column: 54
          },
          end: {
            line: 1374,
            column: 1
          }
        },
        line: 1302
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 1343,
            column: 43
          },
          end: {
            line: 1343,
            column: 44
          }
        },
        loc: {
          start: {
            line: 1343,
            column: 51
          },
          end: {
            line: 1350,
            column: 5
          }
        },
        line: 1343
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 1377,
            column: 37
          },
          end: {
            line: 1377,
            column: 38
          }
        },
        loc: {
          start: {
            line: 1377,
            column: 57
          },
          end: {
            line: 1462,
            column: 1
          }
        },
        line: 1377
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 1415,
            column: 40
          },
          end: {
            line: 1415,
            column: 41
          }
        },
        loc: {
          start: {
            line: 1415,
            column: 56
          },
          end: {
            line: 1433,
            column: 5
          }
        },
        line: 1415
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 1465,
            column: 31
          },
          end: {
            line: 1465,
            column: 32
          }
        },
        loc: {
          start: {
            line: 1465,
            column: 51
          },
          end: {
            line: 1498,
            column: 1
          }
        },
        line: 1465
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 1480,
            column: 28
          },
          end: {
            line: 1480,
            column: 29
          }
        },
        loc: {
          start: {
            line: 1480,
            column: 36
          },
          end: {
            line: 1484,
            column: 7
          }
        },
        line: 1480
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 1991,
            column: 32
          },
          end: {
            line: 1991,
            column: 33
          }
        },
        loc: {
          start: {
            line: 1991,
            column: 52
          },
          end: {
            line: 2119,
            column: 1
          }
        },
        line: 1991
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 2124,
            column: 28
          },
          end: {
            line: 2124,
            column: 29
          }
        },
        loc: {
          start: {
            line: 2124,
            column: 48
          },
          end: {
            line: 2270,
            column: 1
          }
        },
        line: 2124
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 2273,
            column: 36
          },
          end: {
            line: 2273,
            column: 37
          }
        },
        loc: {
          start: {
            line: 2273,
            column: 56
          },
          end: {
            line: 2353,
            column: 1
          }
        },
        line: 2273
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 2329,
            column: 34
          },
          end: {
            line: 2329,
            column: 35
          }
        },
        loc: {
          start: {
            line: 2329,
            column: 42
          },
          end: {
            line: 2333,
            column: 9
          }
        },
        line: 2329
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 68,
            column: 22
          },
          end: {
            line: 68,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 22
          },
          end: {
            line: 68,
            column: 52
          }
        }, {
          start: {
            line: 68,
            column: 56
          },
          end: {
            line: 68,
            column: 57
          }
        }],
        line: 68
      },
      "1": {
        loc: {
          start: {
            line: 69,
            column: 20
          },
          end: {
            line: 69,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 20
          },
          end: {
            line: 69,
            column: 48
          }
        }, {
          start: {
            line: 69,
            column: 52
          },
          end: {
            line: 69,
            column: 56
          }
        }],
        line: 69
      },
      "2": {
        loc: {
          start: {
            line: 126,
            column: 18
          },
          end: {
            line: 126,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 18
          },
          end: {
            line: 126,
            column: 43
          }
        }, {
          start: {
            line: 126,
            column: 47
          },
          end: {
            line: 126,
            column: 48
          }
        }],
        line: 126
      },
      "3": {
        loc: {
          start: {
            line: 212,
            column: 26
          },
          end: {
            line: 212,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 26
          },
          end: {
            line: 212,
            column: 32
          }
        }, {
          start: {
            line: 212,
            column: 36
          },
          end: {
            line: 212,
            column: 55
          }
        }],
        line: 212
      },
      "4": {
        loc: {
          start: {
            line: 218,
            column: 26
          },
          end: {
            line: 218,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 218,
            column: 26
          },
          end: {
            line: 218,
            column: 32
          }
        }, {
          start: {
            line: 218,
            column: 36
          },
          end: {
            line: 218,
            column: 70
          }
        }],
        line: 218
      },
      "5": {
        loc: {
          start: {
            line: 224,
            column: 26
          },
          end: {
            line: 224,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 224,
            column: 26
          },
          end: {
            line: 224,
            column: 32
          }
        }, {
          start: {
            line: 224,
            column: 36
          },
          end: {
            line: 224,
            column: 63
          }
        }],
        line: 224
      },
      "6": {
        loc: {
          start: {
            line: 230,
            column: 26
          },
          end: {
            line: 230,
            column: 111
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 230,
            column: 26
          },
          end: {
            line: 230,
            column: 32
          }
        }, {
          start: {
            line: 230,
            column: 36
          },
          end: {
            line: 230,
            column: 111
          }
        }],
        line: 230
      },
      "7": {
        loc: {
          start: {
            line: 236,
            column: 26
          },
          end: {
            line: 236,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 26
          },
          end: {
            line: 236,
            column: 32
          }
        }, {
          start: {
            line: 236,
            column: 36
          },
          end: {
            line: 236,
            column: 67
          }
        }],
        line: 236
      },
      "8": {
        loc: {
          start: {
            line: 248,
            column: 17
          },
          end: {
            line: 248,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 17
          },
          end: {
            line: 248,
            column: 35
          }
        }, {
          start: {
            line: 248,
            column: 39
          },
          end: {
            line: 248,
            column: 40
          }
        }],
        line: 248
      },
      "9": {
        loc: {
          start: {
            line: 249,
            column: 18
          },
          end: {
            line: 249,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 18
          },
          end: {
            line: 249,
            column: 37
          }
        }, {
          start: {
            line: 249,
            column: 41
          },
          end: {
            line: 249,
            column: 43
          }
        }],
        line: 249
      },
      "10": {
        loc: {
          start: {
            line: 251,
            column: 19
          },
          end: {
            line: 251,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 251,
            column: 19
          },
          end: {
            line: 251,
            column: 39
          }
        }, {
          start: {
            line: 251,
            column: 43
          },
          end: {
            line: 251,
            column: 45
          }
        }],
        line: 251
      },
      "11": {
        loc: {
          start: {
            line: 252,
            column: 19
          },
          end: {
            line: 252,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 252,
            column: 19
          },
          end: {
            line: 252,
            column: 39
          }
        }, {
          start: {
            line: 252,
            column: 43
          },
          end: {
            line: 252,
            column: 45
          }
        }],
        line: 252
      },
      "12": {
        loc: {
          start: {
            line: 253,
            column: 21
          },
          end: {
            line: 253,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 253,
            column: 21
          },
          end: {
            line: 253,
            column: 43
          }
        }, {
          start: {
            line: 253,
            column: 47
          },
          end: {
            line: 253,
            column: 49
          }
        }],
        line: 253
      },
      "13": {
        loc: {
          start: {
            line: 254,
            column: 19
          },
          end: {
            line: 254,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 254,
            column: 19
          },
          end: {
            line: 254,
            column: 39
          }
        }, {
          start: {
            line: 254,
            column: 43
          },
          end: {
            line: 254,
            column: 51
          }
        }],
        line: 254
      },
      "14": {
        loc: {
          start: {
            line: 255,
            column: 22
          },
          end: {
            line: 255,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 255,
            column: 22
          },
          end: {
            line: 255,
            column: 45
          }
        }, {
          start: {
            line: 255,
            column: 49
          },
          end: {
            line: 255,
            column: 54
          }
        }],
        line: 255
      },
      "15": {
        loc: {
          start: {
            line: 262,
            column: 4
          },
          end: {
            line: 266,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 4
          },
          end: {
            line: 266,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      },
      "16": {
        loc: {
          start: {
            line: 269,
            column: 4
          },
          end: {
            line: 273,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 269,
            column: 4
          },
          end: {
            line: 273,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 269
      },
      "17": {
        loc: {
          start: {
            line: 269,
            column: 8
          },
          end: {
            line: 269,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 269,
            column: 8
          },
          end: {
            line: 269,
            column: 14
          }
        }, {
          start: {
            line: 269,
            column: 18
          },
          end: {
            line: 269,
            column: 38
          }
        }],
        line: 269
      },
      "18": {
        loc: {
          start: {
            line: 276,
            column: 4
          },
          end: {
            line: 280,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 276,
            column: 4
          },
          end: {
            line: 280,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 276
      },
      "19": {
        loc: {
          start: {
            line: 276,
            column: 8
          },
          end: {
            line: 276,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 276,
            column: 8
          },
          end: {
            line: 276,
            column: 16
          }
        }, {
          start: {
            line: 276,
            column: 20
          },
          end: {
            line: 276,
            column: 42
          }
        }],
        line: 276
      },
      "20": {
        loc: {
          start: {
            line: 291,
            column: 23
          },
          end: {
            line: 291,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 291,
            column: 23
          },
          end: {
            line: 291,
            column: 47
          }
        }, {
          start: {
            line: 291,
            column: 51
          },
          end: {
            line: 291,
            column: 62
          }
        }],
        line: 291
      },
      "21": {
        loc: {
          start: {
            line: 292,
            column: 26
          },
          end: {
            line: 292,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 292,
            column: 63
          },
          end: {
            line: 292,
            column: 69
          }
        }, {
          start: {
            line: 292,
            column: 72
          },
          end: {
            line: 292,
            column: 77
          }
        }],
        line: 292
      },
      "22": {
        loc: {
          start: {
            line: 463,
            column: 16
          },
          end: {
            line: 463,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 463,
            column: 16
          },
          end: {
            line: 463,
            column: 31
          }
        }, {
          start: {
            line: 463,
            column: 35
          },
          end: {
            line: 463,
            column: 54
          }
        }],
        line: 463
      },
      "23": {
        loc: {
          start: {
            line: 627,
            column: 27
          },
          end: {
            line: 627,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 627,
            column: 27
          },
          end: {
            line: 627,
            column: 46
          }
        }, {
          start: {
            line: 627,
            column: 50
          },
          end: {
            line: 627,
            column: 71
          }
        }],
        line: 627
      },
      "24": {
        loc: {
          start: {
            line: 628,
            column: 22
          },
          end: {
            line: 628,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 628,
            column: 22
          },
          end: {
            line: 628,
            column: 47
          }
        }, {
          start: {
            line: 628,
            column: 51
          },
          end: {
            line: 628,
            column: 77
          }
        }],
        line: 628
      },
      "25": {
        loc: {
          start: {
            line: 634,
            column: 25
          },
          end: {
            line: 634,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 634,
            column: 25
          },
          end: {
            line: 634,
            column: 49
          }
        }, {
          start: {
            line: 634,
            column: 53
          },
          end: {
            line: 634,
            column: 67
          }
        }, {
          start: {
            line: 634,
            column: 71
          },
          end: {
            line: 634,
            column: 80
          }
        }],
        line: 634
      },
      "26": {
        loc: {
          start: {
            line: 635,
            column: 18
          },
          end: {
            line: 635,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 635,
            column: 18
          },
          end: {
            line: 635,
            column: 39
          }
        }, {
          start: {
            line: 635,
            column: 43
          },
          end: {
            line: 635,
            column: 53
          }
        }],
        line: 635
      },
      "27": {
        loc: {
          start: {
            line: 636,
            column: 14
          },
          end: {
            line: 636,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 636,
            column: 34
          },
          end: {
            line: 636,
            column: 39
          }
        }, {
          start: {
            line: 636,
            column: 42
          },
          end: {
            line: 636,
            column: 49
          }
        }],
        line: 636
      },
      "28": {
        loc: {
          start: {
            line: 637,
            column: 19
          },
          end: {
            line: 637,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 637,
            column: 19
          },
          end: {
            line: 637,
            column: 49
          }
        }, {
          start: {
            line: 637,
            column: 53
          },
          end: {
            line: 637,
            column: 77
          }
        }],
        line: 637
      },
      "29": {
        loc: {
          start: {
            line: 638,
            column: 16
          },
          end: {
            line: 638,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 638,
            column: 16
          },
          end: {
            line: 638,
            column: 33
          }
        }, {
          start: {
            line: 638,
            column: 37
          },
          end: {
            line: 638,
            column: 49
          }
        }, {
          start: {
            line: 638,
            column: 53
          },
          end: {
            line: 638,
            column: 62
          }
        }],
        line: 638
      },
      "30": {
        loc: {
          start: {
            line: 639,
            column: 18
          },
          end: {
            line: 639,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 639,
            column: 18
          },
          end: {
            line: 639,
            column: 37
          }
        }, {
          start: {
            line: 639,
            column: 41
          },
          end: {
            line: 639,
            column: 55
          }
        }, {
          start: {
            line: 639,
            column: 59
          },
          end: {
            line: 639,
            column: 68
          }
        }],
        line: 639
      },
      "31": {
        loc: {
          start: {
            line: 655,
            column: 24
          },
          end: {
            line: 655,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 655,
            column: 24
          },
          end: {
            line: 655,
            column: 42
          }
        }, {
          start: {
            line: 655,
            column: 46
          },
          end: {
            line: 655,
            column: 69
          }
        }],
        line: 655
      },
      "32": {
        loc: {
          start: {
            line: 656,
            column: 28
          },
          end: {
            line: 656,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 656,
            column: 28
          },
          end: {
            line: 656,
            column: 46
          }
        }, {
          start: {
            line: 656,
            column: 50
          },
          end: {
            line: 656,
            column: 73
          }
        }, {
          start: {
            line: 656,
            column: 77
          },
          end: {
            line: 656,
            column: 99
          }
        }],
        line: 656
      },
      "33": {
        loc: {
          start: {
            line: 657,
            column: 23
          },
          end: {
            line: 657,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 657,
            column: 23
          },
          end: {
            line: 657,
            column: 41
          }
        }, {
          start: {
            line: 657,
            column: 45
          },
          end: {
            line: 657,
            column: 67
          }
        }],
        line: 657
      },
      "34": {
        loc: {
          start: {
            line: 675,
            column: 16
          },
          end: {
            line: 675,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 675,
            column: 16
          },
          end: {
            line: 675,
            column: 22
          }
        }, {
          start: {
            line: 675,
            column: 26
          },
          end: {
            line: 675,
            column: 30
          }
        }],
        line: 675
      },
      "35": {
        loc: {
          start: {
            line: 676,
            column: 18
          },
          end: {
            line: 676,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 676,
            column: 18
          },
          end: {
            line: 676,
            column: 26
          }
        }, {
          start: {
            line: 676,
            column: 30
          },
          end: {
            line: 676,
            column: 34
          }
        }],
        line: 676
      },
      "36": {
        loc: {
          start: {
            line: 748,
            column: 4
          },
          end: {
            line: 803,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 748,
            column: 4
          },
          end: {
            line: 803,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 748
      },
      "37": {
        loc: {
          start: {
            line: 748,
            column: 8
          },
          end: {
            line: 748,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 748,
            column: 8
          },
          end: {
            line: 748,
            column: 21
          }
        }, {
          start: {
            line: 748,
            column: 25
          },
          end: {
            line: 748,
            column: 65
          }
        }],
        line: 748
      },
      "38": {
        loc: {
          start: {
            line: 824,
            column: 6
          },
          end: {
            line: 824,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 824,
            column: 15
          },
          end: {
            line: 824,
            column: 27
          }
        }],
        line: 824
      },
      "39": {
        loc: {
          start: {
            line: 825,
            column: 6
          },
          end: {
            line: 825,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 825,
            column: 18
          },
          end: {
            line: 825,
            column: 24
          }
        }],
        line: 825
      },
      "40": {
        loc: {
          start: {
            line: 826,
            column: 6
          },
          end: {
            line: 826,
            column: 14
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 826,
            column: 13
          },
          end: {
            line: 826,
            column: 14
          }
        }],
        line: 826
      },
      "41": {
        loc: {
          start: {
            line: 827,
            column: 6
          },
          end: {
            line: 827,
            column: 16
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 827,
            column: 14
          },
          end: {
            line: 827,
            column: 16
          }
        }],
        line: 827
      },
      "42": {
        loc: {
          start: {
            line: 838,
            column: 4
          },
          end: {
            line: 842,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 838,
            column: 4
          },
          end: {
            line: 842,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 838
      },
      "43": {
        loc: {
          start: {
            line: 838,
            column: 8
          },
          end: {
            line: 838,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 838,
            column: 8
          },
          end: {
            line: 838,
            column: 14
          }
        }, {
          start: {
            line: 838,
            column: 18
          },
          end: {
            line: 838,
            column: 34
          }
        }],
        line: 838
      },
      "44": {
        loc: {
          start: {
            line: 845,
            column: 4
          },
          end: {
            line: 857,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 845,
            column: 4
          },
          end: {
            line: 857,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 845
      },
      "45": {
        loc: {
          start: {
            line: 847,
            column: 6
          },
          end: {
            line: 851,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 847,
            column: 6
          },
          end: {
            line: 851,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 847
      },
      "46": {
        loc: {
          start: {
            line: 852,
            column: 6
          },
          end: {
            line: 856,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 852,
            column: 6
          },
          end: {
            line: 856,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 852
      },
      "47": {
        loc: {
          start: {
            line: 852,
            column: 10
          },
          end: {
            line: 852,
            column: 24
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 852,
            column: 10
          },
          end: {
            line: 852,
            column: 13
          }
        }, {
          start: {
            line: 852,
            column: 17
          },
          end: {
            line: 852,
            column: 24
          }
        }],
        line: 852
      },
      "48": {
        loc: {
          start: {
            line: 860,
            column: 4
          },
          end: {
            line: 872,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 860,
            column: 4
          },
          end: {
            line: 872,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 860
      },
      "49": {
        loc: {
          start: {
            line: 862,
            column: 6
          },
          end: {
            line: 866,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 862,
            column: 6
          },
          end: {
            line: 866,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 862
      },
      "50": {
        loc: {
          start: {
            line: 867,
            column: 6
          },
          end: {
            line: 871,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 867,
            column: 6
          },
          end: {
            line: 871,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 867
      },
      "51": {
        loc: {
          start: {
            line: 867,
            column: 10
          },
          end: {
            line: 867,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 867,
            column: 10
          },
          end: {
            line: 867,
            column: 18
          }
        }, {
          start: {
            line: 867,
            column: 22
          },
          end: {
            line: 867,
            column: 34
          }
        }],
        line: 867
      },
      "52": {
        loc: {
          start: {
            line: 875,
            column: 4
          },
          end: {
            line: 880,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 875,
            column: 4
          },
          end: {
            line: 880,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 875
      },
      "53": {
        loc: {
          start: {
            line: 884,
            column: 23
          },
          end: {
            line: 884,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 884,
            column: 59
          },
          end: {
            line: 884,
            column: 65
          }
        }, {
          start: {
            line: 884,
            column: 68
          },
          end: {
            line: 884,
            column: 80
          }
        }],
        line: 884
      },
      "54": {
        loc: {
          start: {
            line: 885,
            column: 26
          },
          end: {
            line: 885,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 885,
            column: 78
          },
          end: {
            line: 885,
            column: 101
          }
        }, {
          start: {
            line: 885,
            column: 104
          },
          end: {
            line: 885,
            column: 110
          }
        }],
        line: 885
      },
      "55": {
        loc: {
          start: {
            line: 898,
            column: 33
          },
          end: {
            line: 898,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 898,
            column: 33
          },
          end: {
            line: 898,
            column: 59
          }
        }, {
          start: {
            line: 898,
            column: 63
          },
          end: {
            line: 898,
            column: 64
          }
        }],
        line: 898
      },
      "56": {
        loc: {
          start: {
            line: 936,
            column: 18
          },
          end: {
            line: 936,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 936,
            column: 18
          },
          end: {
            line: 936,
            column: 24
          }
        }, {
          start: {
            line: 936,
            column: 28
          },
          end: {
            line: 936,
            column: 33
          }
        }],
        line: 936
      },
      "57": {
        loc: {
          start: {
            line: 937,
            column: 21
          },
          end: {
            line: 937,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 937,
            column: 21
          },
          end: {
            line: 937,
            column: 30
          }
        }, {
          start: {
            line: 937,
            column: 34
          },
          end: {
            line: 937,
            column: 39
          }
        }],
        line: 937
      },
      "58": {
        loc: {
          start: {
            line: 938,
            column: 22
          },
          end: {
            line: 938,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 938,
            column: 22
          },
          end: {
            line: 938,
            column: 32
          }
        }, {
          start: {
            line: 938,
            column: 36
          },
          end: {
            line: 938,
            column: 41
          }
        }],
        line: 938
      },
      "59": {
        loc: {
          start: {
            line: 939,
            column: 18
          },
          end: {
            line: 939,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 939,
            column: 18
          },
          end: {
            line: 939,
            column: 24
          }
        }, {
          start: {
            line: 939,
            column: 28
          },
          end: {
            line: 939,
            column: 33
          }
        }],
        line: 939
      },
      "60": {
        loc: {
          start: {
            line: 999,
            column: 4
          },
          end: {
            line: 1006,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 999,
            column: 4
          },
          end: {
            line: 1006,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 999
      },
      "61": {
        loc: {
          start: {
            line: 1019,
            column: 15
          },
          end: {
            line: 1019,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1019,
            column: 15
          },
          end: {
            line: 1019,
            column: 32
          }
        }, {
          start: {
            line: 1019,
            column: 36
          },
          end: {
            line: 1019,
            column: 54
          }
        }],
        line: 1019
      },
      "62": {
        loc: {
          start: {
            line: 1021,
            column: 20
          },
          end: {
            line: 1029,
            column: 14
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1021,
            column: 34
          },
          end: {
            line: 1029,
            column: 7
          }
        }, {
          start: {
            line: 1029,
            column: 10
          },
          end: {
            line: 1029,
            column: 14
          }
        }],
        line: 1021
      },
      "63": {
        loc: {
          start: {
            line: 1023,
            column: 25
          },
          end: {
            line: 1023,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1023,
            column: 25
          },
          end: {
            line: 1023,
            column: 35
          }
        }, {
          start: {
            line: 1023,
            column: 39
          },
          end: {
            line: 1023,
            column: 40
          }
        }],
        line: 1023
      },
      "64": {
        loc: {
          start: {
            line: 1024,
            column: 25
          },
          end: {
            line: 1024,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1024,
            column: 25
          },
          end: {
            line: 1024,
            column: 35
          }
        }, {
          start: {
            line: 1024,
            column: 39
          },
          end: {
            line: 1024,
            column: 40
          }
        }],
        line: 1024
      },
      "65": {
        loc: {
          start: {
            line: 1025,
            column: 24
          },
          end: {
            line: 1025,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1025,
            column: 24
          },
          end: {
            line: 1025,
            column: 33
          }
        }, {
          start: {
            line: 1025,
            column: 37
          },
          end: {
            line: 1025,
            column: 38
          }
        }],
        line: 1025
      },
      "66": {
        loc: {
          start: {
            line: 1026,
            column: 26
          },
          end: {
            line: 1026,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1026,
            column: 26
          },
          end: {
            line: 1026,
            column: 37
          }
        }, {
          start: {
            line: 1026,
            column: 41
          },
          end: {
            line: 1026,
            column: 42
          }
        }],
        line: 1026
      },
      "67": {
        loc: {
          start: {
            line: 1027,
            column: 29
          },
          end: {
            line: 1027,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1027,
            column: 29
          },
          end: {
            line: 1027,
            column: 44
          }
        }, {
          start: {
            line: 1027,
            column: 48
          },
          end: {
            line: 1027,
            column: 59
          }
        }, {
          start: {
            line: 1027,
            column: 63
          },
          end: {
            line: 1027,
            column: 64
          }
        }],
        line: 1027
      },
      "68": {
        loc: {
          start: {
            line: 1028,
            column: 25
          },
          end: {
            line: 1028,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1028,
            column: 25
          },
          end: {
            line: 1028,
            column: 37
          }
        }, {
          start: {
            line: 1028,
            column: 41
          },
          end: {
            line: 1028,
            column: 42
          }
        }],
        line: 1028
      },
      "69": {
        loc: {
          start: {
            line: 1072,
            column: 4
          },
          end: {
            line: 1074,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1072,
            column: 4
          },
          end: {
            line: 1074,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1072
      },
      "70": {
        loc: {
          start: {
            line: 1082,
            column: 20
          },
          end: {
            line: 1082,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1082,
            column: 20
          },
          end: {
            line: 1082,
            column: 39
          }
        }, {
          start: {
            line: 1082,
            column: 43
          },
          end: {
            line: 1082,
            column: 50
          }
        }],
        line: 1082
      },
      "71": {
        loc: {
          start: {
            line: 1083,
            column: 25
          },
          end: {
            line: 1083,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1083,
            column: 25
          },
          end: {
            line: 1083,
            column: 50
          }
        }, {
          start: {
            line: 1083,
            column: 54
          },
          end: {
            line: 1083,
            column: 56
          }
        }],
        line: 1083
      },
      "72": {
        loc: {
          start: {
            line: 1093,
            column: 4
          },
          end: {
            line: 1100,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1093,
            column: 4
          },
          end: {
            line: 1100,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1093
      },
      "73": {
        loc: {
          start: {
            line: 1093,
            column: 8
          },
          end: {
            line: 1093,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1093,
            column: 8
          },
          end: {
            line: 1093,
            column: 14
          }
        }, {
          start: {
            line: 1093,
            column: 19
          },
          end: {
            line: 1093,
            column: 60
          }
        }],
        line: 1093
      },
      "74": {
        loc: {
          start: {
            line: 1103,
            column: 4
          },
          end: {
            line: 1105,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1103,
            column: 4
          },
          end: {
            line: 1105,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1103
      },
      "75": {
        loc: {
          start: {
            line: 1114,
            column: 22
          },
          end: {
            line: 1114,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1114,
            column: 22
          },
          end: {
            line: 1114,
            column: 41
          }
        }, {
          start: {
            line: 1114,
            column: 45
          },
          end: {
            line: 1114,
            column: 58
          }
        }],
        line: 1114
      },
      "76": {
        loc: {
          start: {
            line: 1165,
            column: 4
          },
          end: {
            line: 1215,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1165,
            column: 4
          },
          end: {
            line: 1215,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1165
      },
      "77": {
        loc: {
          start: {
            line: 1165,
            column: 8
          },
          end: {
            line: 1165,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1165,
            column: 8
          },
          end: {
            line: 1165,
            column: 20
          }
        }, {
          start: {
            line: 1165,
            column: 24
          },
          end: {
            line: 1165,
            column: 48
          }
        }],
        line: 1165
      },
      "78": {
        loc: {
          start: {
            line: 1225,
            column: 14
          },
          end: {
            line: 1225,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1225,
            column: 14
          },
          end: {
            line: 1225,
            column: 34
          }
        }, {
          start: {
            line: 1225,
            column: 38
          },
          end: {
            line: 1225,
            column: 39
          }
        }],
        line: 1225
      },
      "79": {
        loc: {
          start: {
            line: 1226,
            column: 19
          },
          end: {
            line: 1226,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1226,
            column: 38
          },
          end: {
            line: 1226,
            column: 66
          }
        }, {
          start: {
            line: 1226,
            column: 69
          },
          end: {
            line: 1226,
            column: 73
          }
        }],
        line: 1226
      },
      "80": {
        loc: {
          start: {
            line: 1227,
            column: 22
          },
          end: {
            line: 1227,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1227,
            column: 45
          },
          end: {
            line: 1227,
            column: 77
          }
        }, {
          start: {
            line: 1227,
            column: 80
          },
          end: {
            line: 1227,
            column: 84
          }
        }],
        line: 1227
      },
      "81": {
        loc: {
          start: {
            line: 1232,
            column: 25
          },
          end: {
            line: 1233,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1233,
            column: 7
          },
          end: {
            line: 1233,
            column: 57
          }
        }, {
          start: {
            line: 1233,
            column: 61
          },
          end: {
            line: 1233,
            column: 62
          }
        }],
        line: 1232
      },
      "82": {
        loc: {
          start: {
            line: 1275,
            column: 4
          },
          end: {
            line: 1284,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1275,
            column: 4
          },
          end: {
            line: 1284,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1275
      },
      "83": {
        loc: {
          start: {
            line: 1290,
            column: 15
          },
          end: {
            line: 1290,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1290,
            column: 51
          },
          end: {
            line: 1290,
            column: 77
          }
        }, {
          start: {
            line: 1290,
            column: 80
          },
          end: {
            line: 1290,
            column: 96
          }
        }],
        line: 1290
      },
      "84": {
        loc: {
          start: {
            line: 1305,
            column: 19
          },
          end: {
            line: 1305,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1305,
            column: 19
          },
          end: {
            line: 1305,
            column: 45
          }
        }, {
          start: {
            line: 1305,
            column: 49
          },
          end: {
            line: 1305,
            column: 51
          }
        }],
        line: 1305
      },
      "85": {
        loc: {
          start: {
            line: 1330,
            column: 4
          },
          end: {
            line: 1340,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1330,
            column: 4
          },
          end: {
            line: 1340,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1330
      },
      "86": {
        loc: {
          start: {
            line: 1349,
            column: 14
          },
          end: {
            line: 1349,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1349,
            column: 14
          },
          end: {
            line: 1349,
            column: 34
          }
        }, {
          start: {
            line: 1349,
            column: 38
          },
          end: {
            line: 1349,
            column: 39
          }
        }],
        line: 1349
      },
      "87": {
        loc: {
          start: {
            line: 1380,
            column: 27
          },
          end: {
            line: 1380,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1380,
            column: 27
          },
          end: {
            line: 1380,
            column: 52
          }
        }, {
          start: {
            line: 1380,
            column: 56
          },
          end: {
            line: 1380,
            column: 58
          }
        }],
        line: 1380
      },
      "88": {
        loc: {
          start: {
            line: 1394,
            column: 4
          },
          end: {
            line: 1404,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1394,
            column: 4
          },
          end: {
            line: 1404,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1394
      },
      "89": {
        loc: {
          start: {
            line: 1411,
            column: 25
          },
          end: {
            line: 1412,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1412,
            column: 7
          },
          end: {
            line: 1412,
            column: 57
          }
        }, {
          start: {
            line: 1412,
            column: 61
          },
          end: {
            line: 1412,
            column: 62
          }
        }],
        line: 1411
      },
      "90": {
        loc: {
          start: {
            line: 1417,
            column: 6
          },
          end: {
            line: 1421,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1417,
            column: 6
          },
          end: {
            line: 1421,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1417
      },
      "91": {
        loc: {
          start: {
            line: 1420,
            column: 25
          },
          end: {
            line: 1420,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1420,
            column: 44
          },
          end: {
            line: 1420,
            column: 68
          }
        }, {
          start: {
            line: 1420,
            column: 71
          },
          end: {
            line: 1420,
            column: 75
          }
        }],
        line: 1420
      },
      "92": {
        loc: {
          start: {
            line: 1429,
            column: 16
          },
          end: {
            line: 1429,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1429,
            column: 16
          },
          end: {
            line: 1429,
            column: 38
          }
        }, {
          start: {
            line: 1429,
            column: 42
          },
          end: {
            line: 1429,
            column: 43
          }
        }],
        line: 1429
      },
      "93": {
        loc: {
          start: {
            line: 1446,
            column: 22
          },
          end: {
            line: 1446,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1446,
            column: 22
          },
          end: {
            line: 1446,
            column: 45
          }
        }, {
          start: {
            line: 1446,
            column: 49
          },
          end: {
            line: 1446,
            column: 50
          }
        }],
        line: 1446
      },
      "94": {
        loc: {
          start: {
            line: 2187,
            column: 4
          },
          end: {
            line: 2259,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2187,
            column: 4
          },
          end: {
            line: 2259,
            column: 5
          }
        }, {
          start: {
            line: 2223,
            column: 11
          },
          end: {
            line: 2259,
            column: 5
          }
        }],
        line: 2187
      },
      "95": {
        loc: {
          start: {
            line: 2187,
            column: 8
          },
          end: {
            line: 2187,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2187,
            column: 8
          },
          end: {
            line: 2187,
            column: 14
          }
        }, {
          start: {
            line: 2187,
            column: 18
          },
          end: {
            line: 2187,
            column: 40
          }
        }],
        line: 2187
      },
      "96": {
        loc: {
          start: {
            line: 2193,
            column: 24
          },
          end: {
            line: 2193,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2193,
            column: 24
          },
          end: {
            line: 2193,
            column: 52
          }
        }, {
          start: {
            line: 2193,
            column: 56
          },
          end: {
            line: 2193,
            column: 60
          }
        }],
        line: 2193
      },
      "97": {
        loc: {
          start: {
            line: 2196,
            column: 19
          },
          end: {
            line: 2196,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2196,
            column: 19
          },
          end: {
            line: 2196,
            column: 49
          }
        }, {
          start: {
            line: 2196,
            column: 53
          },
          end: {
            line: 2196,
            column: 61
          }
        }],
        line: 2196
      },
      "98": {
        loc: {
          start: {
            line: 2197,
            column: 19
          },
          end: {
            line: 2197,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2197,
            column: 19
          },
          end: {
            line: 2197,
            column: 49
          }
        }, {
          start: {
            line: 2197,
            column: 53
          },
          end: {
            line: 2197,
            column: 66
          }
        }],
        line: 2197
      },
      "99": {
        loc: {
          start: {
            line: 2200,
            column: 19
          },
          end: {
            line: 2200,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2200,
            column: 19
          },
          end: {
            line: 2200,
            column: 49
          }
        }, {
          start: {
            line: 2200,
            column: 53
          },
          end: {
            line: 2200,
            column: 54
          }
        }],
        line: 2200
      },
      "100": {
        loc: {
          start: {
            line: 2201,
            column: 28
          },
          end: {
            line: 2201,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2201,
            column: 28
          },
          end: {
            line: 2201,
            column: 58
          }
        }, {
          start: {
            line: 2201,
            column: 62
          },
          end: {
            line: 2201,
            column: 65
          }
        }],
        line: 2201
      },
      "101": {
        loc: {
          start: {
            line: 2204,
            column: 19
          },
          end: {
            line: 2204,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2204,
            column: 19
          },
          end: {
            line: 2204,
            column: 49
          }
        }, {
          start: {
            line: 2204,
            column: 53
          },
          end: {
            line: 2204,
            column: 56
          }
        }],
        line: 2204
      },
      "102": {
        loc: {
          start: {
            line: 2205,
            column: 28
          },
          end: {
            line: 2205,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2205,
            column: 28
          },
          end: {
            line: 2205,
            column: 58
          }
        }, {
          start: {
            line: 2205,
            column: 62
          },
          end: {
            line: 2205,
            column: 64
          }
        }],
        line: 2205
      },
      "103": {
        loc: {
          start: {
            line: 2208,
            column: 19
          },
          end: {
            line: 2208,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2208,
            column: 19
          },
          end: {
            line: 2208,
            column: 44
          }
        }, {
          start: {
            line: 2208,
            column: 48
          },
          end: {
            line: 2208,
            column: 51
          }
        }],
        line: 2208
      },
      "104": {
        loc: {
          start: {
            line: 2209,
            column: 28
          },
          end: {
            line: 2209,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2209,
            column: 28
          },
          end: {
            line: 2209,
            column: 53
          }
        }, {
          start: {
            line: 2209,
            column: 57
          },
          end: {
            line: 2209,
            column: 60
          }
        }],
        line: 2209
      },
      "105": {
        loc: {
          start: {
            line: 2212,
            column: 19
          },
          end: {
            line: 2212,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2212,
            column: 19
          },
          end: {
            line: 2212,
            column: 55
          }
        }, {
          start: {
            line: 2212,
            column: 59
          },
          end: {
            line: 2212,
            column: 62
          }
        }],
        line: 2212
      },
      "106": {
        loc: {
          start: {
            line: 2213,
            column: 28
          },
          end: {
            line: 2213,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2213,
            column: 28
          },
          end: {
            line: 2213,
            column: 64
          }
        }, {
          start: {
            line: 2213,
            column: 68
          },
          end: {
            line: 2213,
            column: 71
          }
        }],
        line: 2213
      },
      "107": {
        loc: {
          start: {
            line: 2216,
            column: 19
          },
          end: {
            line: 2216,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2216,
            column: 19
          },
          end: {
            line: 2216,
            column: 55
          }
        }, {
          start: {
            line: 2216,
            column: 59
          },
          end: {
            line: 2216,
            column: 60
          }
        }],
        line: 2216
      },
      "108": {
        loc: {
          start: {
            line: 2217,
            column: 19
          },
          end: {
            line: 2217,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2217,
            column: 19
          },
          end: {
            line: 2217,
            column: 55
          }
        }, {
          start: {
            line: 2217,
            column: 59
          },
          end: {
            line: 2217,
            column: 60
          }
        }],
        line: 2217
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0,
      "320": 0,
      "321": 0,
      "322": 0,
      "323": 0,
      "324": 0,
      "325": 0,
      "326": 0,
      "327": 0,
      "328": 0,
      "329": 0,
      "330": 0,
      "331": 0,
      "332": 0,
      "333": 0,
      "334": 0,
      "335": 0,
      "336": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0, 0],
      "30": [0, 0, 0],
      "31": [0, 0],
      "32": [0, 0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0],
      "39": [0],
      "40": [0],
      "41": [0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0, 0],
      "96": [0, 0],
      "97": [0, 0],
      "98": [0, 0],
      "99": [0, 0],
      "100": [0, 0],
      "101": [0, 0],
      "102": [0, 0],
      "103": [0, 0],
      "104": [0, 0],
      "105": [0, 0],
      "106": [0, 0],
      "107": [0, 0],
      "108": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ea6c7838fcbf8cbcc0a7809b75339451c5ab66cb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2fdwmtfaoh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2fdwmtfaoh();
const express =
/* istanbul ignore next */
(cov_2fdwmtfaoh().s[0]++, require('express'));
const {
  query
} =
/* istanbul ignore next */
(cov_2fdwmtfaoh().s[1]++, require('../utils/database'));
const {
  authenticateToken
} =
/* istanbul ignore next */
(cov_2fdwmtfaoh().s[2]++, require('../middleware/auth'));
const schemaValidator =
/* istanbul ignore next */
(cov_2fdwmtfaoh().s[3]++, require('../utils/schemaValidator'));
const {
  createValidationMiddleware,
  validationSchemas,
  sanitizers
} =
/* istanbul ignore next */
(cov_2fdwmtfaoh().s[4]++, require('../middleware/validation'));
const router =
/* istanbul ignore next */
(cov_2fdwmtfaoh().s[5]++, express.Router());

// Public endpoints (no authentication required)
// Get available sectors for filtering - public endpoint for general market data
/* istanbul ignore next */
cov_2fdwmtfaoh().s[6]++;
router.get('/sectors', async (req, res) => {
  /* istanbul ignore next */
  cov_2fdwmtfaoh().f[0]++;
  cov_2fdwmtfaoh().s[7]++;
  try {
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[8]++;
    console.log('Sectors endpoint called (public)');

    // Use robust query with proper error handling instead of fallback chains
    const sectorsQuery =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[9]++, `
      SELECT 
        COALESCE(s.sector, 'Unknown') as sector, 
        COUNT(*) as count,
        AVG(CASE WHEN s.market_cap > 0 THEN s.market_cap END) as avg_market_cap,
        AVG(CASE WHEN s.pe_ratio > 0 THEN s.pe_ratio END) as avg_pe_ratio
      FROM stock_symbols s
      WHERE s.is_active = TRUE AND s.sector IS NOT NULL AND s.sector != 'Unknown'
      GROUP BY s.sector
      ORDER BY count DESC
    `);
    let result;
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[10]++;
    try {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[11]++;
      result = await query(sectorsQuery);
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[12]++;
      console.log(`✅ Sectors query successful: ${result.rows.length} sectors found`);
    } catch (dbError) {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[13]++;
      console.error('❌ Sectors query failed - comprehensive diagnosis needed', {
        query_type: 'sectors_aggregation',
        error_message: dbError.message,
        detailed_diagnostics: {
          attempted_operations: ['stock_symbols_query', 'sector_aggregation'],
          potential_causes: ['stock_symbols table missing', 'Database connection failure', 'Schema validation error', 'Data type mismatch', 'Insufficient database permissions', 'Query timeout'],
          troubleshooting_steps: ['Check if stock_symbols table exists', 'Verify database connection health', 'Validate table schema structure', 'Check database permissions', 'Review query syntax and data types', 'Monitor database performance'],
          system_checks: ['Database health status', 'Table existence validation', 'Schema integrity check', 'Connection pool availability']
        }
      });
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[14]++;
      throw dbError; // Re-throw to trigger proper error handling
    }
    const sectors =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[15]++, result.rows.map(row => {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().f[1]++;
      cov_2fdwmtfaoh().s[16]++;
      return {
        sector: row.sector,
        count: parseInt(row.count),
        avg_market_cap:
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[0][0]++, parseFloat(row.avg_market_cap)) ||
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[0][1]++, 0),
        avg_pe_ratio:
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[1][0]++, parseFloat(row.avg_pe_ratio)) ||
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[1][1]++, null)
      };
    }));
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[17]++;
    res.json({
      success: true,
      data: sectors,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[18]++;
    console.error('Error fetching sectors, using fallback data:', error);

    // Return empty sectors with comprehensive diagnostics
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[19]++;
    console.error('❌ Sectors data unavailable - comprehensive diagnosis needed', {
      database_query_failed: true,
      detailed_diagnostics: {
        attempted_operations: ['stock_symbols_enhanced_query', 'stock_symbols_basic_query'],
        potential_causes: ['Database connection failure', 'stock_symbols table missing', 'stock_symbols_enhanced table missing', 'valuation_multiples table missing', 'Data loading scripts not executed', 'Database tables corrupted or empty'],
        troubleshooting_steps: ['Check database connectivity', 'Verify stock_symbols table exists', 'Verify stock_symbols_enhanced table exists', 'Check data loading process status', 'Review table structure and data integrity'],
        system_checks: ['Database health status', 'Table existence validation', 'Data freshness assessment', 'Schema validation']
      }
    });
    const emptySectors =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[20]++, []);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[21]++;
    res.json({
      success: true,
      data: emptySectors,
      message: 'No sectors data available - check data loading process',
      timestamp: new Date().toISOString()
    });
  }
});

// Public endpoint for monitoring purposes - basic stock data without authentication
/* istanbul ignore next */
cov_2fdwmtfaoh().s[22]++;
router.get('/public/sample', async (req, res) => {
  /* istanbul ignore next */
  cov_2fdwmtfaoh().f[2]++;
  cov_2fdwmtfaoh().s[23]++;
  try {
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[24]++;
    console.log('Public stocks sample endpoint called for monitoring');
    const limit =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[25]++,
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[2][0]++, parseInt(req.query.limit)) ||
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[2][1]++, 5));

    // Use robust query with proper error handling instead of fallback chains
    const stocksQuery =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[26]++, `
      SELECT symbol, name as company_name, sector, exchange, market_cap
      FROM stock_symbols
      WHERE is_active = TRUE
      ORDER BY market_cap DESC NULLS LAST
      LIMIT $1
    `);
    let result;
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[27]++;
    try {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[28]++;
      result = await query(stocksQuery, [limit]);
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[29]++;
      console.log(`✅ Public stocks sample query successful: ${result.rows.length} stocks found`);
    } catch (dbError) {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[30]++;
      console.error('❌ Public stocks sample query failed - comprehensive diagnosis needed', {
        query_type: 'public_stocks_sample',
        limit,
        error_message: dbError.message,
        detailed_diagnostics: {
          attempted_operations: ['stock_symbols_query', 'market_cap_ordering'],
          potential_causes: ['stock_symbols table missing', 'Database connection failure', 'Schema validation error', 'Data type mismatch in market_cap column', 'Insufficient database permissions', 'Query timeout'],
          troubleshooting_steps: ['Check if stock_symbols table exists', 'Verify database connection health', 'Validate table schema structure', 'Check market_cap column data types', 'Review database permissions', 'Monitor query execution time'],
          system_checks: ['Database health status', 'Table existence validation', 'Schema integrity check', 'Connection pool availability']
        }
      });
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[31]++;
      throw dbError; // Re-throw to trigger proper error handling
    }
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[32]++;
    res.json({
      success: true,
      data: result.rows,
      count: result.rows.length,
      endpoint: 'public-sample',
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[33]++;
    console.error('Error in public stocks sample endpoint:', error);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[34]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch stock data',
      endpoint: 'public-sample',
      timestamp: new Date().toISOString()
    });
  }
});

// Apply authentication to all other stock routes
/* istanbul ignore next */
cov_2fdwmtfaoh().s[35]++;
router.use(authenticateToken);

// Basic ping endpoint
/* istanbul ignore next */
cov_2fdwmtfaoh().s[36]++;
router.get('/ping', (req, res) => {
  /* istanbul ignore next */
  cov_2fdwmtfaoh().f[3]++;
  cov_2fdwmtfaoh().s[37]++;
  res.json({
    status: 'ok',
    endpoint: 'stocks',
    timestamp: new Date().toISOString()
  });
});

// Validation schema for stocks list endpoint
const stocksListValidation =
/* istanbul ignore next */
(cov_2fdwmtfaoh().s[38]++, createValidationMiddleware({
  ...validationSchemas.pagination,
  search: {
    type: 'string',
    sanitizer: value => {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().f[4]++;
      cov_2fdwmtfaoh().s[39]++;
      return sanitizers.string(value, {
        maxLength: 100,
        escapeHTML: true
      });
    },
    validator: value => {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().f[5]++;
      cov_2fdwmtfaoh().s[40]++;
      return /* istanbul ignore next */(cov_2fdwmtfaoh().b[3][0]++, !value) ||
      /* istanbul ignore next */
      (cov_2fdwmtfaoh().b[3][1]++, value.length <= 100);
    },
    errorMessage: 'Search query must be 100 characters or less'
  },
  sector: {
    type: 'string',
    sanitizer: value => {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().f[6]++;
      cov_2fdwmtfaoh().s[41]++;
      return sanitizers.string(value, {
        maxLength: 50,
        alphaNumOnly: false
      });
    },
    validator: value => {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().f[7]++;
      cov_2fdwmtfaoh().s[42]++;
      return /* istanbul ignore next */(cov_2fdwmtfaoh().b[4][0]++, !value) ||
      /* istanbul ignore next */
      (cov_2fdwmtfaoh().b[4][1]++, /^[a-zA-Z\s&-]{1,50}$/.test(value));
    },
    errorMessage: 'Sector must be valid sector name'
  },
  exchange: {
    type: 'string',
    sanitizer: value => {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().f[8]++;
      cov_2fdwmtfaoh().s[43]++;
      return sanitizers.string(value, {
        maxLength: 10
      }).toUpperCase();
    },
    validator: value => {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().f[9]++;
      cov_2fdwmtfaoh().s[44]++;
      return /* istanbul ignore next */(cov_2fdwmtfaoh().b[5][0]++, !value) ||
      /* istanbul ignore next */
      (cov_2fdwmtfaoh().b[5][1]++, /^[A-Z]{1,10}$/.test(value));
    },
    errorMessage: 'Exchange must be valid exchange code'
  },
  sortBy: {
    type: 'string',
    sanitizer: value => {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().f[10]++;
      cov_2fdwmtfaoh().s[45]++;
      return sanitizers.string(value, {
        maxLength: 20,
        alphaNumOnly: false
      });
    },
    validator: value => {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().f[11]++;
      cov_2fdwmtfaoh().s[46]++;
      return /* istanbul ignore next */(cov_2fdwmtfaoh().b[6][0]++, !value) ||
      /* istanbul ignore next */
      (cov_2fdwmtfaoh().b[6][1]++, ['symbol', 'ticker', 'name', 'exchange', 'market_category'].includes(value));
    },
    errorMessage: 'Invalid sort field'
  },
  sortOrder: {
    type: 'string',
    sanitizer: value => {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().f[12]++;
      cov_2fdwmtfaoh().s[47]++;
      return sanitizers.string(value, {
        maxLength: 4
      }).toLowerCase();
    },
    validator: value => {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().f[13]++;
      cov_2fdwmtfaoh().s[48]++;
      return /* istanbul ignore next */(cov_2fdwmtfaoh().b[7][0]++, !value) ||
      /* istanbul ignore next */
      (cov_2fdwmtfaoh().b[7][1]++, ['asc', 'desc'].includes(value));
    },
    errorMessage: 'Sort order must be asc or desc'
  }
}));

// OPTIMIZED: Main stocks endpoint with fast queries and all data visible
/* istanbul ignore next */
cov_2fdwmtfaoh().s[49]++;
router.get('/', stocksListValidation, async (req, res) => {
  /* istanbul ignore next */
  cov_2fdwmtfaoh().f[14]++;
  cov_2fdwmtfaoh().s[50]++;
  try {
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[51]++;
    console.log('OPTIMIZED Stocks main endpoint called with params:', req.query);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[52]++;
    console.log('Triggering workflow deploy');

    // Use validated and sanitized parameters from validation middleware
    const page =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[53]++,
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[8][0]++, req.validated.page) ||
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[8][1]++, 1));
    const limit =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[54]++,
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[9][0]++, req.validated.limit) ||
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[9][1]++, 50));
    const offset =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[55]++, (page - 1) * limit);
    const search =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[56]++,
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[10][0]++, req.validated.search) ||
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[10][1]++, ''));
    const sector =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[57]++,
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[11][0]++, req.validated.sector) ||
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[11][1]++, ''));
    const exchange =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[58]++,
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[12][0]++, req.validated.exchange) ||
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[12][1]++, ''));
    const sortBy =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[59]++,
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[13][0]++, req.validated.sortBy) ||
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[13][1]++, 'symbol'));
    const sortOrder =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[60]++,
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[14][0]++, req.validated.sortOrder) ||
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[14][1]++, 'asc'));
    let whereClause =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[61]++, 'WHERE 1=1');
    const params =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[62]++, []);
    let paramCount =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[63]++, 0);

    // Add search filter
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[64]++;
    if (search) {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().b[15][0]++;
      cov_2fdwmtfaoh().s[65]++;
      paramCount++;
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[66]++;
      whereClause += ` AND (ss.symbol ILIKE $${paramCount} OR ss.security_name ILIKE $${paramCount})`;
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[67]++;
      params.push(`%${search}%`);
    } else
    /* istanbul ignore next */
    {
      cov_2fdwmtfaoh().b[15][1]++;
    }

    // Add sector filter (on s.sector)
    cov_2fdwmtfaoh().s[68]++;
    if (
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[17][0]++, sector) &&
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[17][1]++, sector.trim() !== '')) {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().b[16][0]++;
      cov_2fdwmtfaoh().s[69]++;
      paramCount++;
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[70]++;
      whereClause += ` AND s.sector = $${paramCount}`;
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[71]++;
      params.push(sector);
    } else
    /* istanbul ignore next */
    {
      cov_2fdwmtfaoh().b[16][1]++;
    }

    // Add exchange filter (on ss.exchange)
    cov_2fdwmtfaoh().s[72]++;
    if (
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[19][0]++, exchange) &&
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[19][1]++, exchange.trim() !== '')) {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().b[18][0]++;
      cov_2fdwmtfaoh().s[73]++;
      paramCount++;
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[74]++;
      whereClause += ` AND ss.exchange = $${paramCount}`;
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[75]++;
      params.push(exchange);
    } else
    /* istanbul ignore next */
    {
      cov_2fdwmtfaoh().b[18][1]++;
    }

    // FAST sort columns
    const validSortColumns =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[76]++, {
      'ticker': 'ss.symbol',
      'symbol': 'ss.symbol',
      'name': 'ss.security_name',
      'exchange': 'ss.exchange',
      'market_category': 'ss.market_category'
    });
    const sortColumn =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[77]++,
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[20][0]++, validSortColumns[sortBy]) ||
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[20][1]++, 'ss.symbol'));
    const sortDirection =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[78]++, sortOrder.toLowerCase() === 'desc' ?
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[21][0]++, 'DESC') :
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[21][1]++, 'ASC'));
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[79]++;
    console.log('OPTIMIZED query params:', {
      whereClause,
      params,
      limit,
      offset
    });

    // COMPREHENSIVE QUERY: Include ALL data from loadinfo script
    const stocksQuery =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[80]++, `
      SELECT 
        -- Stock symbols data
        ss.symbol,
        ss.security_name,
        ss.exchange,
        ss.market_category,
        ss.cqs_symbol,
        ss.financial_status,
        ss.round_lot_size,
        ss.etf,
        ss.secondary_symbol,
        ss.test_issue,
        
        -- Symbols data from loadinfo
        s.short_name,
        s.long_name,
        s.display_name,
        s.quote_type,
        s.sector,
        s.sector_disp,
        s.industry,
        s.industry_disp,
        s.business_summary,
        s.employee_count,
        s.website_url,
        s.ir_website_url,
        s.address1,
        s.city,
        s.state,
        s.postal_code,
        s.country,
        s.phone_number,
        s.currency,
        s.market,
        s.full_exchange_name,
        
        -- Market data from loadinfo
        md.current_price,
        md.previous_close,
        md.open_price,
        md.day_low,
        md.day_high,
        md.volume,
        md.average_volume,
        md.market_cap,
        md.fifty_two_week_low,
        md.fifty_two_week_high,
        md.fifty_day_avg,
        md.two_hundred_day_avg,
        md.bid_price,
        md.ask_price,
        md.market_state,
        
        -- Key financial metrics from loadinfo
        km.trailing_pe,
        km.forward_pe,
        km.price_to_sales_ttm,
        km.price_to_book,
        km.book_value,
        km.peg_ratio,
        km.enterprise_value,
        km.ev_to_revenue,
        km.ev_to_ebitda,
        km.total_revenue,
        km.net_income,
        km.ebitda,
        km.gross_profit,
        km.eps_trailing,
        km.eps_forward,
        km.eps_current_year,
        km.price_eps_current_year,
        km.earnings_q_growth_pct,
        km.total_cash,
        km.cash_per_share,
        km.operating_cashflow,
        km.free_cashflow,
        km.total_debt,
        km.debt_to_equity,
        km.quick_ratio,
        km.current_ratio,
        km.profit_margin_pct,
        km.gross_margin_pct,
        km.ebitda_margin_pct,
        km.operating_margin_pct,
        km.return_on_assets_pct,
        km.return_on_equity_pct,
        km.revenue_growth_pct,
        km.earnings_growth_pct,
        km.dividend_rate,
        km.dividend_yield,
        km.five_year_avg_dividend_yield,
        km.payout_ratio,
        
        -- Analyst estimates from loadinfo
        ae.target_high_price,
        ae.target_low_price,
        ae.target_mean_price,
        ae.target_median_price,
        ae.recommendation_key,
        ae.recommendation_mean,
        ae.analyst_opinion_count,
        ae.average_analyst_rating,
        
        -- Governance scores from loadinfo
        gs.audit_risk,
        gs.board_risk,
        gs.compensation_risk,
        gs.shareholder_rights_risk,
        gs.overall_risk,
        
        -- Leadership team count (subquery)
        COALESCE(lt_count.executive_count, 0) as leadership_count
        
      FROM stock_symbols ss
      LEFT JOIN symbols s ON ss.symbol = s.symbol
      LEFT JOIN market_data md ON ss.symbol = md.ticker
      LEFT JOIN key_metrics km ON ss.symbol = km.ticker
      LEFT JOIN analyst_estimates ae ON ss.symbol = ae.ticker
      LEFT JOIN governance_scores gs ON ss.symbol = gs.ticker
      LEFT JOIN (
        SELECT ticker, COUNT(*) as executive_count 
        FROM leadership_team 
        GROUP BY ticker
      ) lt_count ON ss.symbol = lt_count.ticker
      ${whereClause}
      ORDER BY ${sortColumn} ${sortDirection}
      LIMIT $${paramCount + 1} OFFSET $${paramCount + 2}
    `);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[81]++;
    params.push(limit, offset);

    // Count query - also fast
    const countQuery =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[82]++, `
      SELECT COUNT(*) as total
      FROM stock_symbols ss
      ${whereClause}
    `);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[83]++;
    console.log('Executing FAST queries with schema validation...');

    // Execute queries with schema validation
    const [stocksResult, countResult] =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[84]++, await Promise.all([schemaValidator.safeQuery(stocksQuery, params, {
      validateTables: true,
      throwOnMissingTable: false,
      timeout: 10000
    }), schemaValidator.safeQuery(countQuery, params.slice(0, -2), {
      validateTables: true,
      throwOnMissingTable: false,
      timeout: 5000
    })]));
    const total =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[85]++, parseInt(countResult.rows[0].total));
    const totalPages =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[86]++, Math.ceil(total / limit));
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[87]++;
    console.log(`FAST query results: ${stocksResult.rows.length} stocks, ${total} total`);

    // Professional formatting with ALL comprehensive data from loadinfo
    const formattedStocks =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[88]++, stocksResult.rows.map(stock => {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().f[15]++;
      cov_2fdwmtfaoh().s[89]++;
      return {
        // Core identification
        ticker: stock.symbol,
        symbol: stock.symbol,
        name: stock.security_name,
        fullName:
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[22][0]++, stock.long_name) ||
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[22][1]++, stock.security_name),
        shortName: stock.short_name,
        displayName: stock.display_name,
        // Exchange & categorization 
        exchange: stock.exchange,
        fullExchangeName: stock.full_exchange_name,
        marketCategory: stock.market_category,
        market: stock.market,
        // Business information
        sector: stock.sector,
        sectorDisplay: stock.sector_disp,
        industry: stock.industry,
        industryDisplay: stock.industry_disp,
        businessSummary: stock.business_summary,
        employeeCount: stock.employee_count,
        // Contact information
        website: stock.website_url,
        investorRelationsWebsite: stock.ir_website_url,
        address: {
          street: stock.address1,
          city: stock.city,
          state: stock.state,
          postalCode: stock.postal_code,
          country: stock.country
        },
        phoneNumber: stock.phone_number,
        // Financial details
        currency: stock.currency,
        quoteType: stock.quote_type,
        // Current market data
        price: {
          current: stock.current_price,
          previousClose: stock.previous_close,
          open: stock.open_price,
          dayLow: stock.day_low,
          dayHigh: stock.day_high,
          fiftyTwoWeekLow: stock.fifty_two_week_low,
          fiftyTwoWeekHigh: stock.fifty_two_week_high,
          fiftyDayAverage: stock.fifty_day_avg,
          twoHundredDayAverage: stock.two_hundred_day_avg,
          bid: stock.bid_price,
          ask: stock.ask_price,
          marketState: stock.market_state
        },
        // Volume data
        volume: stock.volume,
        averageVolume: stock.average_volume,
        marketCap: stock.market_cap,
        // Comprehensive financial metrics
        financialMetrics: {
          // Valuation ratios
          trailingPE: stock.trailing_pe,
          forwardPE: stock.forward_pe,
          priceToSales: stock.price_to_sales_ttm,
          priceToBook: stock.price_to_book,
          pegRatio: stock.peg_ratio,
          bookValue: stock.book_value,
          // Enterprise metrics
          enterpriseValue: stock.enterprise_value,
          evToRevenue: stock.ev_to_revenue,
          evToEbitda: stock.ev_to_ebitda,
          // Financial results
          totalRevenue: stock.total_revenue,
          netIncome: stock.net_income,
          ebitda: stock.ebitda,
          grossProfit: stock.gross_profit,
          // Earnings per share
          epsTrailing: stock.eps_trailing,
          epsForward: stock.eps_forward,
          epsCurrent: stock.eps_current_year,
          priceEpsCurrent: stock.price_eps_current_year,
          // Growth metrics
          earningsGrowthQuarterly: stock.earnings_q_growth_pct,
          revenueGrowth: stock.revenue_growth_pct,
          earningsGrowth: stock.earnings_growth_pct,
          // Cash & debt
          totalCash: stock.total_cash,
          cashPerShare: stock.cash_per_share,
          operatingCashflow: stock.operating_cashflow,
          freeCashflow: stock.free_cashflow,
          totalDebt: stock.total_debt,
          debtToEquity: stock.debt_to_equity,
          // Liquidity ratios
          quickRatio: stock.quick_ratio,
          currentRatio: stock.current_ratio,
          // Profitability margins
          profitMargin: stock.profit_margin_pct,
          grossMargin: stock.gross_margin_pct,
          ebitdaMargin: stock.ebitda_margin_pct,
          operatingMargin: stock.operating_margin_pct,
          // Return metrics
          returnOnAssets: stock.return_on_assets_pct,
          returnOnEquity: stock.return_on_equity_pct,
          // Dividend information
          dividendRate: stock.dividend_rate,
          dividendYield: stock.dividend_yield,
          fiveYearAvgDividendYield: stock.five_year_avg_dividend_yield,
          payoutRatio: stock.payout_ratio
        },
        // Analyst estimates and recommendations
        analystData: {
          targetPrices: {
            high: stock.target_high_price,
            low: stock.target_low_price,
            mean: stock.target_mean_price,
            median: stock.target_median_price
          },
          recommendation: {
            key: stock.recommendation_key,
            mean: stock.recommendation_mean,
            rating: stock.average_analyst_rating
          },
          analystCount: stock.analyst_opinion_count
        },
        // Governance data
        governance: {
          auditRisk: stock.audit_risk,
          boardRisk: stock.board_risk,
          compensationRisk: stock.compensation_risk,
          shareholderRightsRisk: stock.shareholder_rights_risk,
          overallRisk: stock.overall_risk
        },
        // Leadership team summary
        leadership: {
          executiveCount: stock.leadership_count,
          hasLeadershipData: stock.leadership_count > 0,
          // Full leadership data available via /leadership/:ticker endpoint
          detailsAvailable: true
        },
        // Additional identifiers
        cqsSymbol: stock.cqs_symbol,
        secondarySymbol: stock.secondary_symbol,
        // Status & type
        financialStatus: stock.financial_status,
        isEtf: stock.etf === 'Y',
        testIssue: stock.test_issue === 'Y',
        roundLotSize: stock.round_lot_size,
        // Comprehensive data availability indicators
        hasData: true,
        dataSource: 'comprehensive_loadinfo_query',
        hasCompanyProfile: !!stock.long_name,
        hasMarketData: !!stock.current_price,
        hasFinancialMetrics:
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[23][0]++, !!stock.trailing_pe) ||
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[23][1]++, !!stock.total_revenue),
        hasAnalystData:
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[24][0]++, !!stock.target_mean_price) ||
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[24][1]++, !!stock.recommendation_key),
        hasGovernanceData: !!stock.overall_risk,
        hasLeadershipData: stock.leadership_count > 0,
        // Professional presentation with rich data
        displayData: {
          primaryExchange:
          /* istanbul ignore next */
          (cov_2fdwmtfaoh().b[25][0]++, stock.full_exchange_name) ||
          /* istanbul ignore next */
          (cov_2fdwmtfaoh().b[25][1]++, stock.exchange) ||
          /* istanbul ignore next */
          (cov_2fdwmtfaoh().b[25][2]++, 'Unknown'),
          category:
          /* istanbul ignore next */
          (cov_2fdwmtfaoh().b[26][0]++, stock.market_category) ||
          /* istanbul ignore next */
          (cov_2fdwmtfaoh().b[26][1]++, 'Standard'),
          type: stock.etf === 'Y' ?
          /* istanbul ignore next */
          (cov_2fdwmtfaoh().b[27][0]++, 'ETF') :
          /* istanbul ignore next */
          (cov_2fdwmtfaoh().b[27][1]++, 'Stock'),
          tradeable:
          /* istanbul ignore next */
          (cov_2fdwmtfaoh().b[28][0]++, stock.financial_status !== 'D') &&
          /* istanbul ignore next */
          (cov_2fdwmtfaoh().b[28][1]++, stock.test_issue !== 'Y'),
          sector:
          /* istanbul ignore next */
          (cov_2fdwmtfaoh().b[29][0]++, stock.sector_disp) ||
          /* istanbul ignore next */
          (cov_2fdwmtfaoh().b[29][1]++, stock.sector) ||
          /* istanbul ignore next */
          (cov_2fdwmtfaoh().b[29][2]++, 'Unknown'),
          industry:
          /* istanbul ignore next */
          (cov_2fdwmtfaoh().b[30][0]++, stock.industry_disp) ||
          /* istanbul ignore next */
          (cov_2fdwmtfaoh().b[30][1]++, stock.industry) ||
          /* istanbul ignore next */
          (cov_2fdwmtfaoh().b[30][2]++, 'Unknown'),
          // Key financial highlights for quick view
          keyMetrics: {
            pe: stock.trailing_pe,
            marketCap: stock.market_cap,
            revenue: stock.total_revenue,
            profitMargin: stock.profit_margin_pct,
            dividendYield: stock.dividend_yield,
            analystRating: stock.recommendation_key,
            targetPrice: stock.target_mean_price
          },
          // Risk summary
          riskProfile: {
            overall: stock.overall_risk,
            hasHighRisk:
            /* istanbul ignore next */
            (cov_2fdwmtfaoh().b[31][0]++, stock.overall_risk) &&
            /* istanbul ignore next */
            (cov_2fdwmtfaoh().b[31][1]++, stock.overall_risk >= 8),
            hasModerateRisk:
            /* istanbul ignore next */
            (cov_2fdwmtfaoh().b[32][0]++, stock.overall_risk) &&
            /* istanbul ignore next */
            (cov_2fdwmtfaoh().b[32][1]++, stock.overall_risk >= 5) &&
            /* istanbul ignore next */
            (cov_2fdwmtfaoh().b[32][2]++, stock.overall_risk < 8),
            hasLowRisk:
            /* istanbul ignore next */
            (cov_2fdwmtfaoh().b[33][0]++, stock.overall_risk) &&
            /* istanbul ignore next */
            (cov_2fdwmtfaoh().b[33][1]++, stock.overall_risk < 5)
          }
        }
      };
    }));
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[90]++;
    res.json({
      success: true,
      performance: 'COMPREHENSIVE LOADINFO DATA - All company profiles, market data, financial metrics, analyst estimates, and governance scores from loadinfo tables',
      data: formattedStocks,
      pagination: {
        page,
        limit,
        total,
        totalPages,
        hasNext: page < totalPages,
        hasPrev: page > 1
      },
      filters: {
        search:
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[34][0]++, search) ||
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[34][1]++, null),
        exchange:
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[35][0]++, exchange) ||
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[35][1]++, null),
        sortBy,
        sortOrder
      },
      metadata: {
        totalStocks: total,
        currentPage: page,
        showingRecords: stocksResult.rows.length,
        dataFields: [
        // Basic stock symbol data
        'symbol', 'security_name', 'exchange', 'market_category', 'cqs_symbol', 'financial_status', 'etf', 'round_lot_size', 'test_issue', 'secondary_symbol',
        // Company profile data
        'short_name', 'long_name', 'display_name', 'quote_type', 'sector', 'sector_disp', 'industry', 'industry_disp', 'business_summary', 'employee_count', 'website_url', 'ir_website_url', 'address1', 'city', 'state', 'postal_code', 'country', 'phone_number', 'currency', 'market', 'full_exchange_name',
        // Market data
        'current_price', 'previous_close', 'open_price', 'day_low', 'day_high', 'volume', 'average_volume', 'market_cap', 'fifty_two_week_low', 'fifty_two_week_high', 'fifty_day_avg', 'two_hundred_day_avg', 'bid_price', 'ask_price', 'market_state',
        // Financial metrics
        'trailing_pe', 'forward_pe', 'price_to_sales_ttm', 'price_to_book', 'book_value', 'peg_ratio', 'enterprise_value', 'ev_to_revenue', 'ev_to_ebitda', 'total_revenue', 'net_income', 'ebitda', 'gross_profit', 'eps_trailing', 'eps_forward', 'eps_current_year', 'earnings_q_growth_pct', 'total_cash', 'cash_per_share', 'operating_cashflow', 'free_cashflow', 'total_debt', 'debt_to_equity', 'quick_ratio', 'current_ratio', 'profit_margin_pct', 'gross_margin_pct', 'ebitda_margin_pct', 'operating_margin_pct', 'return_on_assets_pct', 'return_on_equity_pct', 'revenue_growth_pct', 'earnings_growth_pct', 'dividend_rate', 'dividend_yield', 'five_year_avg_dividend_yield', 'payout_ratio',
        // Analyst estimates
        'target_high_price', 'target_low_price', 'target_mean_price', 'target_median_price', 'recommendation_key', 'recommendation_mean', 'analyst_opinion_count', 'average_analyst_rating',
        // Governance data
        'audit_risk', 'board_risk', 'compensation_risk', 'shareholder_rights_risk', 'overall_risk'],
        dataSources: ['stock_symbols', 'symbols', 'market_data', 'key_metrics', 'analyst_estimates', 'governance_scores', 'leadership_team'],
        comprehensiveData: {
          includesCompanyProfiles: true,
          includesMarketData: true,
          includesFinancialMetrics: true,
          includesAnalystEstimates: true,
          includesGovernanceScores: true,
          includesLeadershipTeam: true // Count included, details via /leadership/:ticker
        },
        endpoints: {
          leadershipDetails: '/api/stocks/leadership/:ticker',
          leadershipSummary: '/api/stocks/leadership'
        }
      },
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[91]++;
    console.error('OPTIMIZED endpoint error:', error);

    // If symbols table doesn't exist, fallback to stock_symbols only
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[92]++;
    if (
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[37][0]++, error.message) &&
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[37][1]++, error.message.includes('does not exist'))) {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().b[36][0]++;
      cov_2fdwmtfaoh().s[93]++;
      console.log('Symbols table missing, using fallback query with stock_symbols only');
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[94]++;
      try {
        const fallbackQuery =
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().s[95]++, `
          SELECT 
            ss.symbol,
            ss.security_name,
            ss.exchange,
            ss.market_category,
            ss.cqs_symbol,
            ss.financial_status,
            ss.round_lot_size,
            ss.etf,
            ss.secondary_symbol,
            ss.test_issue,
            NULL as short_name,
            NULL as long_name,
            NULL as sector,
            NULL as industry,
            NULL as market_cap,
            NULL as current_price
          FROM stock_symbols ss
          ${whereClause}
          ORDER BY ${sortColumn} ${sortDirection}
          LIMIT $${paramCount + 1} OFFSET $${paramCount + 2}
        `);
        const fallbackCountQuery =
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().s[96]++, `
          SELECT COUNT(*) as total
          FROM stock_symbols ss
          ${whereClause}
        `);
        /* istanbul ignore next */
        cov_2fdwmtfaoh().s[97]++;
        params.push(limit, offset);
        const [stocksResult, countResult] =
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().s[98]++, await Promise.all([query(fallbackQuery, params.slice(0, -2).concat([limit, offset])), query(fallbackCountQuery, params.slice(0, -2))]));
        /* istanbul ignore next */
        cov_2fdwmtfaoh().s[99]++;
        return res.json({
          success: true,
          data: stocksResult.rows,
          pagination: {
            page,
            limit,
            total: parseInt(countResult.rows[0].total),
            totalPages: Math.ceil(parseInt(countResult.rows[0].total) / limit)
          },
          note: 'Using basic stock symbols data. Run stock-symbols loader to enable enhanced data.',
          timestamp: new Date().toISOString()
        });
      } catch (fallbackError) {
        /* istanbul ignore next */
        cov_2fdwmtfaoh().s[100]++;
        console.error('Fallback query failed:', fallbackError);
      }
    } else
    /* istanbul ignore next */
    {
      cov_2fdwmtfaoh().b[36][1]++;
    }
    cov_2fdwmtfaoh().s[101]++;
    res.status(500).json({
      error: 'Optimized query failed',
      details: error.message,
      data: [],
      // Always return data as an array for frontend safety
      timestamp: new Date().toISOString()
    });
  }
});

// Screen endpoint - MUST come before /:ticker to avoid route collision
/* istanbul ignore next */
cov_2fdwmtfaoh().s[102]++;
router.get('/screen', async (req, res) => {
  /* istanbul ignore next */
  cov_2fdwmtfaoh().f[16]++;
  cov_2fdwmtfaoh().s[103]++;
  try {
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[104]++;
    console.log('🔍 Stock screening endpoint called with params:', req.query);
    const {
      sector,
      marketCap,
      priceRange,
      volume,
      sortBy =
      /* istanbul ignore next */
      (cov_2fdwmtfaoh().b[38][0]++, 'market_cap'),
      sortOrder =
      /* istanbul ignore next */
      (cov_2fdwmtfaoh().b[39][0]++, 'DESC'),
      page =
      /* istanbul ignore next */
      (cov_2fdwmtfaoh().b[40][0]++, 1),
      limit =
      /* istanbul ignore next */
      (cov_2fdwmtfaoh().b[41][0]++, 25)
    } =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[105]++, req.query);
    const offset =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[106]++, (parseInt(page) - 1) * parseInt(limit));

    // Build dynamic query based on screening criteria
    let whereConditions =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[107]++, ['current_price IS NOT NULL', 'market_cap IS NOT NULL']);
    let queryParams =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[108]++, []);
    let paramIndex =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[109]++, 1);

    // Sector filter
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[110]++;
    if (
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[43][0]++, sector) &&
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[43][1]++, sector !== 'all')) {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().b[42][0]++;
      cov_2fdwmtfaoh().s[111]++;
      whereConditions.push(`sector = $${paramIndex}`);
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[112]++;
      queryParams.push(sector);
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[113]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_2fdwmtfaoh().b[42][1]++;
    }

    // Market cap filter
    cov_2fdwmtfaoh().s[114]++;
    if (marketCap) {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().b[44][0]++;
      const [min, max] =
      /* istanbul ignore next */
      (cov_2fdwmtfaoh().s[115]++, marketCap.split('-').map(v => {
        /* istanbul ignore next */
        cov_2fdwmtfaoh().f[17]++;
        cov_2fdwmtfaoh().s[116]++;
        return parseFloat(v) * 1000000000;
      })); // Convert billions to actual value
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[117]++;
      if (min) {
        /* istanbul ignore next */
        cov_2fdwmtfaoh().b[45][0]++;
        cov_2fdwmtfaoh().s[118]++;
        whereConditions.push(`market_cap >= $${paramIndex}`);
        /* istanbul ignore next */
        cov_2fdwmtfaoh().s[119]++;
        queryParams.push(min);
        /* istanbul ignore next */
        cov_2fdwmtfaoh().s[120]++;
        paramIndex++;
      } else
      /* istanbul ignore next */
      {
        cov_2fdwmtfaoh().b[45][1]++;
      }
      cov_2fdwmtfaoh().s[121]++;
      if (
      /* istanbul ignore next */
      (cov_2fdwmtfaoh().b[47][0]++, max) &&
      /* istanbul ignore next */
      (cov_2fdwmtfaoh().b[47][1]++, max > 0)) {
        /* istanbul ignore next */
        cov_2fdwmtfaoh().b[46][0]++;
        cov_2fdwmtfaoh().s[122]++;
        whereConditions.push(`market_cap <= $${paramIndex}`);
        /* istanbul ignore next */
        cov_2fdwmtfaoh().s[123]++;
        queryParams.push(max);
        /* istanbul ignore next */
        cov_2fdwmtfaoh().s[124]++;
        paramIndex++;
      } else
      /* istanbul ignore next */
      {
        cov_2fdwmtfaoh().b[46][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2fdwmtfaoh().b[44][1]++;
    }

    // Price range filter
    cov_2fdwmtfaoh().s[125]++;
    if (priceRange) {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().b[48][0]++;
      const [minPrice, maxPrice] =
      /* istanbul ignore next */
      (cov_2fdwmtfaoh().s[126]++, priceRange.split('-').map(v => {
        /* istanbul ignore next */
        cov_2fdwmtfaoh().f[18]++;
        cov_2fdwmtfaoh().s[127]++;
        return parseFloat(v);
      }));
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[128]++;
      if (minPrice) {
        /* istanbul ignore next */
        cov_2fdwmtfaoh().b[49][0]++;
        cov_2fdwmtfaoh().s[129]++;
        whereConditions.push(`current_price >= $${paramIndex}`);
        /* istanbul ignore next */
        cov_2fdwmtfaoh().s[130]++;
        queryParams.push(minPrice);
        /* istanbul ignore next */
        cov_2fdwmtfaoh().s[131]++;
        paramIndex++;
      } else
      /* istanbul ignore next */
      {
        cov_2fdwmtfaoh().b[49][1]++;
      }
      cov_2fdwmtfaoh().s[132]++;
      if (
      /* istanbul ignore next */
      (cov_2fdwmtfaoh().b[51][0]++, maxPrice) &&
      /* istanbul ignore next */
      (cov_2fdwmtfaoh().b[51][1]++, maxPrice > 0)) {
        /* istanbul ignore next */
        cov_2fdwmtfaoh().b[50][0]++;
        cov_2fdwmtfaoh().s[133]++;
        whereConditions.push(`current_price <= $${paramIndex}`);
        /* istanbul ignore next */
        cov_2fdwmtfaoh().s[134]++;
        queryParams.push(maxPrice);
        /* istanbul ignore next */
        cov_2fdwmtfaoh().s[135]++;
        paramIndex++;
      } else
      /* istanbul ignore next */
      {
        cov_2fdwmtfaoh().b[50][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2fdwmtfaoh().b[48][1]++;
    }

    // Volume filter
    cov_2fdwmtfaoh().s[136]++;
    if (volume) {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().b[52][0]++;
      const minVolume =
      /* istanbul ignore next */
      (cov_2fdwmtfaoh().s[137]++, parseInt(volume) * 1000000); // Convert millions to actual volume
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[138]++;
      whereConditions.push(`volume >= $${paramIndex}`);
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[139]++;
      queryParams.push(minVolume);
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[140]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_2fdwmtfaoh().b[52][1]++;
    }
    const whereClause =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[141]++, whereConditions.join(' AND '));
    const validSortColumns =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[142]++, ['market_cap', 'current_price', 'change_percent', 'volume', 'symbol']);
    const safeSortBy =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[143]++, validSortColumns.includes(sortBy) ?
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[53][0]++, sortBy) :
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[53][1]++, 'market_cap'));
    const safeSortOrder =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[144]++, ['ASC', 'DESC'].includes(sortOrder.toUpperCase()) ?
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[54][0]++, sortOrder.toUpperCase()) :
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[54][1]++, 'DESC'));
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[145]++;
    console.log(`📊 Screening with conditions: ${whereClause}`);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[146]++;
    console.log(`📊 Query parameters:`, queryParams);

    // Get total count for pagination
    const countQuery =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[147]++, `
      SELECT COUNT(*) as total 
      FROM stocks 
      WHERE ${whereClause}
    `);
    const countResult =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[148]++, await query(countQuery, queryParams));
    const totalStocks =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[149]++, parseInt(
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[55][0]++, countResult.rows[0]?.total) ||
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[55][1]++, 0)));

    // Get the actual stocks
    const stocksQuery =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[150]++, `
      SELECT 
        symbol,
        company_name,
        sector,
        current_price,
        change_percent,
        volume,
        market_cap,
        pe_ratio,
        dividend_yield,
        beta
      FROM stocks 
      WHERE ${whereClause}
      ORDER BY ${safeSortBy} ${safeSortOrder}
      LIMIT $${paramIndex} OFFSET $${paramIndex + 1}
    `);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[151]++;
    queryParams.push(parseInt(limit), offset);
    const stocksResult =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[152]++, await query(stocksQuery, queryParams, 10000)); // 10 second timeout for complex screening
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[153]++;
    console.log(`✅ Retrieved ${stocksResult.rows.length} stocks out of ${totalStocks} total matching criteria`);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[154]++;
    res.json({
      success: true,
      data: {
        stocks: stocksResult.rows,
        pagination: {
          page: parseInt(page),
          limit: parseInt(limit),
          total: totalStocks,
          totalPages: Math.ceil(totalStocks / parseInt(limit))
        },
        filters: {
          sector:
          /* istanbul ignore next */
          (cov_2fdwmtfaoh().b[56][0]++, sector) ||
          /* istanbul ignore next */
          (cov_2fdwmtfaoh().b[56][1]++, 'all'),
          marketCap:
          /* istanbul ignore next */
          (cov_2fdwmtfaoh().b[57][0]++, marketCap) ||
          /* istanbul ignore next */
          (cov_2fdwmtfaoh().b[57][1]++, 'all'),
          priceRange:
          /* istanbul ignore next */
          (cov_2fdwmtfaoh().b[58][0]++, priceRange) ||
          /* istanbul ignore next */
          (cov_2fdwmtfaoh().b[58][1]++, 'all'),
          volume:
          /* istanbul ignore next */
          (cov_2fdwmtfaoh().b[59][0]++, volume) ||
          /* istanbul ignore next */
          (cov_2fdwmtfaoh().b[59][1]++, 'all'),
          sortBy: safeSortBy,
          sortOrder: safeSortOrder
        }
      },
      data_source: 'real_database',
      query_performance: {
        execution_time_ms: Date.now() - Date.now(),
        conditions_applied: whereConditions.length,
        total_matching_stocks: totalStocks
      },
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[155]++;
    console.error('Screen endpoint error:', error);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[156]++;
    res.status(500).json({
      success: false,
      error: 'Failed to screen stocks',
      message: error.message
    });
  }
});

// SIMPLIFIED Individual Stock Endpoint - Fast and reliable
/* istanbul ignore next */
cov_2fdwmtfaoh().s[157]++;
router.get('/:ticker', async (req, res) => {
  /* istanbul ignore next */
  cov_2fdwmtfaoh().f[19]++;
  cov_2fdwmtfaoh().s[158]++;
  try {
    const {
      ticker
    } =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[159]++, req.params);
    const tickerUpper =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[160]++, ticker.toUpperCase());
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[161]++;
    console.log(`SIMPLIFIED stock endpoint called for: ${tickerUpper}`);

    // SINGLE OPTIMIZED QUERY - Get everything we need in one go
    const stockQuery =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[162]++, `
      SELECT 
        ss.symbol,
        ss.security_name,
        ss.exchange,
        ss.market_category,
        ss.financial_status,
        ss.etf,
        pd.date as latest_date,
        pd.open,
        pd.high,
        pd.low,
        pd.close,
        pd.volume,
        pd.adj_close
      FROM stock_symbols ss
      LEFT JOIN (
        SELECT DISTINCT ON (symbol) 
          symbol, date, open, high, low, close, volume, adj_close
        FROM price_daily
        WHERE symbol = $1
        ORDER BY symbol, date DESC
      ) pd ON ss.symbol = pd.symbol
      WHERE ss.symbol = $1
    `);
    const result =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[163]++, await query(stockQuery, [tickerUpper]));
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[164]++;
    if (result.rows.length === 0) {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().b[60][0]++;
      cov_2fdwmtfaoh().s[165]++;
      return res.status(404).json({
        error: 'Stock not found',
        symbol: tickerUpper,
        message: `Symbol '${tickerUpper}' not found in database`,
        timestamp: new Date().toISOString()
      });
    } else
    /* istanbul ignore next */
    {
      cov_2fdwmtfaoh().b[60][1]++;
    }
    const stock =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[166]++, result.rows[0]);

    // SIMPLE RESPONSE - Just the essential data
    const response =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[167]++, {
      symbol: tickerUpper,
      ticker: tickerUpper,
      companyInfo: {
        name: stock.security_name,
        exchange: stock.exchange,
        marketCategory: stock.market_category,
        financialStatus: stock.financial_status,
        isETF:
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[61][0]++, stock.etf === 't') ||
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[61][1]++, stock.etf === true)
      },
      currentPrice: stock.close ?
      /* istanbul ignore next */
      (cov_2fdwmtfaoh().b[62][0]++, {
        date: stock.latest_date,
        open: parseFloat(
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[63][0]++, stock.open) ||
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[63][1]++, 0)),
        high: parseFloat(
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[64][0]++, stock.high) ||
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[64][1]++, 0)),
        low: parseFloat(
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[65][0]++, stock.low) ||
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[65][1]++, 0)),
        close: parseFloat(
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[66][0]++, stock.close) ||
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[66][1]++, 0)),
        adjClose: parseFloat(
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[67][0]++, stock.adj_close) ||
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[67][1]++, stock.close) ||
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[67][2]++, 0)),
        volume: parseInt(
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[68][0]++, stock.volume) ||
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[68][1]++, 0))
      }) :
      /* istanbul ignore next */
      (cov_2fdwmtfaoh().b[62][1]++, null),
      metadata: {
        requestedSymbol: ticker,
        resolvedSymbol: tickerUpper,
        dataAvailability: {
          basicInfo: true,
          priceData: stock.close !== null,
          technicalIndicators: false,
          // Disabled for speed
          fundamentals: false // Disabled for speed
        },
        timestamp: new Date().toISOString()
      }
    });
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[168]++;
    console.log(`✅ SIMPLIFIED: Successfully returned basic data for ${tickerUpper}`);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[169]++;
    res.json(response);
  } catch (error) {
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[170]++;
    console.error('Error in simplified stock endpoint:', error);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[171]++;
    res.status(500).json({
      error: 'Failed to fetch stock data',
      symbol: req.params.ticker,
      message: error.message,
      data: [],
      // Always return data as an array for frontend safety
      timestamp: new Date().toISOString()
    });
  }
});

// Get stock price history 
// In-memory cache for frequently requested price data
const priceCache =
/* istanbul ignore next */
(cov_2fdwmtfaoh().s[172]++, new Map());
const CACHE_TTL =
/* istanbul ignore next */
(cov_2fdwmtfaoh().s[173]++, 5 * 60 * 1000); // 5 minutes
const MAX_CACHE_SIZE =
/* istanbul ignore next */
(cov_2fdwmtfaoh().s[174]++, 1000); // Limit cache size

// Helper function to get cache key
/* istanbul ignore next */
cov_2fdwmtfaoh().s[175]++;
const getCacheKey = (symbol, timeframe, limit) => {
  /* istanbul ignore next */
  cov_2fdwmtfaoh().f[20]++;
  cov_2fdwmtfaoh().s[176]++;
  return `${symbol}_${timeframe}_${limit}`;
};

// Helper function to clean expired cache entries
/* istanbul ignore next */
cov_2fdwmtfaoh().s[177]++;
const cleanCache = () => {
  /* istanbul ignore next */
  cov_2fdwmtfaoh().f[21]++;
  const now =
  /* istanbul ignore next */
  (cov_2fdwmtfaoh().s[178]++, Date.now());
  /* istanbul ignore next */
  cov_2fdwmtfaoh().s[179]++;
  for (const [key, entry] of priceCache.entries()) {
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[180]++;
    if (now - entry.timestamp > CACHE_TTL) {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().b[69][0]++;
      cov_2fdwmtfaoh().s[181]++;
      priceCache.delete(key);
    } else
    /* istanbul ignore next */
    {
      cov_2fdwmtfaoh().b[69][1]++;
    }
  }
};

// Optimized prices endpoint with caching and performance improvements
/* istanbul ignore next */
cov_2fdwmtfaoh().s[182]++;
router.get('/:ticker/prices', async (req, res) => {
  /* istanbul ignore next */
  cov_2fdwmtfaoh().f[22]++;
  const startTime =
  /* istanbul ignore next */
  (cov_2fdwmtfaoh().s[183]++, Date.now());
  const {
    ticker
  } =
  /* istanbul ignore next */
  (cov_2fdwmtfaoh().s[184]++, req.params);
  const timeframe =
  /* istanbul ignore next */
  (cov_2fdwmtfaoh().s[185]++,
  /* istanbul ignore next */
  (cov_2fdwmtfaoh().b[70][0]++, req.query.timeframe) ||
  /* istanbul ignore next */
  (cov_2fdwmtfaoh().b[70][1]++, 'daily'));
  const limit =
  /* istanbul ignore next */
  (cov_2fdwmtfaoh().s[186]++, Math.min(
  /* istanbul ignore next */
  (cov_2fdwmtfaoh().b[71][0]++, parseInt(req.query.limit)) ||
  /* istanbul ignore next */
  (cov_2fdwmtfaoh().b[71][1]++, 30), 365)); // Increased max to 1 year

  const symbol =
  /* istanbul ignore next */
  (cov_2fdwmtfaoh().s[187]++, ticker.toUpperCase());
  const cacheKey =
  /* istanbul ignore next */
  (cov_2fdwmtfaoh().s[188]++, getCacheKey(symbol, timeframe, limit));
  /* istanbul ignore next */
  cov_2fdwmtfaoh().s[189]++;
  console.log(`🚀 OPTIMIZED prices endpoint: ${symbol}, timeframe: ${timeframe}, limit: ${limit}`);
  /* istanbul ignore next */
  cov_2fdwmtfaoh().s[190]++;
  try {
    // Check cache first
    const cached =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[191]++, priceCache.get(cacheKey));
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[192]++;
    if (
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[73][0]++, cached) &&
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[73][1]++, Date.now() - cached.timestamp < CACHE_TTL)) {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().b[72][0]++;
      cov_2fdwmtfaoh().s[193]++;
      console.log(`📦 Cache hit for ${symbol} (${Date.now() - cached.timestamp}ms old)`);
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[194]++;
      return res.json({
        ...cached.data,
        cached: true,
        cacheAge: Date.now() - cached.timestamp
      });
    } else
    /* istanbul ignore next */
    {
      cov_2fdwmtfaoh().b[72][1]++;
    }

    // Clean cache periodically
    cov_2fdwmtfaoh().s[195]++;
    if (priceCache.size > MAX_CACHE_SIZE) {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().b[74][0]++;
      cov_2fdwmtfaoh().s[196]++;
      cleanCache();
    } else
    /* istanbul ignore next */
    {
      cov_2fdwmtfaoh().b[74][1]++;
    }

    // Determine table and optimize query based on timeframe
    const tableMap =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[197]++, {
      daily: 'price_daily',
      weekly: 'price_weekly',
      monthly: 'price_monthly'
    });
    const tableName =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[198]++,
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[75][0]++, tableMap[timeframe]) ||
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[75][1]++, 'price_daily'));

    // Optimized query - database-level calculations and proper indexing
    const pricesQuery =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[199]++, `
      WITH price_data AS (
        SELECT 
          date,
          open::DECIMAL(12,4) as open,
          high::DECIMAL(12,4) as high,
          low::DECIMAL(12,4) as low,
          close::DECIMAL(12,4) as close,
          adj_close::DECIMAL(12,4) as adj_close,
          volume::BIGINT as volume,
          LAG(close) OVER (ORDER BY date DESC) as prev_close
        FROM ${tableName}
        WHERE symbol = $1 
          AND date >= CURRENT_DATE - INTERVAL '2 years'
          AND close IS NOT NULL
        ORDER BY date DESC
        LIMIT $2
      )
      SELECT 
        date,
        open,
        high, 
        low,
        close,
        adj_close,
        volume,
        CASE 
          WHEN prev_close IS NOT NULL AND prev_close > 0 
          THEN ROUND((close - prev_close)::DECIMAL, 4)
          ELSE NULL 
        END as price_change,
        CASE 
          WHEN prev_close IS NOT NULL AND prev_close > 0
          THEN ROUND(((close - prev_close) / prev_close * 100)::DECIMAL, 4)
          ELSE NULL 
        END as price_change_pct
      FROM price_data
      ORDER BY date DESC;
    `);

    // Execute query with timeout protection
    const queryPromise =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[200]++, query(pricesQuery, [symbol, limit]));
    const timeoutPromise =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[201]++, new Promise((_, reject) => {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().f[23]++;
      cov_2fdwmtfaoh().s[202]++;
      return setTimeout(() => {
        /* istanbul ignore next */
        cov_2fdwmtfaoh().f[24]++;
        cov_2fdwmtfaoh().s[203]++;
        return reject(new Error('Query timeout - database taking too long'));
      }, 15000);
    }));
    const result =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[204]++, await Promise.race([queryPromise, timeoutPromise]));
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[205]++;
    if (
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[77][0]++, !result.rows) ||
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[77][1]++, result.rows.length === 0)) {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().b[76][0]++;
      cov_2fdwmtfaoh().s[206]++;
      // Return structured empty response with comprehensive diagnostics
      console.error(`❌ No historical data found for ${symbol} - comprehensive diagnosis needed`, {
        symbol,
        database_query_failed: true,
        table_existence_check_needed: true,
        data_loading_status_unknown: true,
        detailed_diagnostics: {
          query_attempted: 'historical_price_data_query',
          potential_causes: ['Symbol not found in price_daily table', 'Data loading scripts not executed for this symbol', 'Database tables missing or corrupted', 'Stock symbol delisted or invalid', 'Data sync process failed for historical data'],
          troubleshooting_steps: ['Check if symbol exists in stock_symbols table', 'Verify price_daily table has data for this symbol', 'Check data loading script execution logs', 'Validate external data provider connectivity', 'Review data sync process status'],
          system_checks: ['Database connectivity', 'Table existence validation', 'Data freshness assessment', 'External API availability', 'Data loading process health']
        }
      });
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[207]++;
      return res.status(404).json({
        success: false,
        error: 'Historical data not available',
        ticker: symbol,
        dataPoints: 0,
        data: [],
        summary: {
          latestPrice: null,
          latestDate: null,
          periodReturn: null,
          latestVolume: null
        },
        data_source: 'empty',
        message: 'No historical data available for this symbol',
        timestamp: new Date().toISOString(),
        queryTime: Date.now() - startTime
      });
    } else
    /* istanbul ignore next */
    {
      cov_2fdwmtfaoh().b[76][1]++;
    }

    // Process results efficiently
    const prices =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[208]++, result.rows.map(row => {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().f[25]++;
      cov_2fdwmtfaoh().s[209]++;
      return {
        date: row.date,
        open: parseFloat(row.open),
        high: parseFloat(row.high),
        low: parseFloat(row.low),
        close: parseFloat(row.close),
        adjClose: parseFloat(row.adj_close),
        volume:
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[78][0]++, parseInt(row.volume)) ||
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[78][1]++, 0),
        priceChange: row.price_change ?
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[79][0]++, parseFloat(row.price_change)) :
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[79][1]++, null),
        priceChangePct: row.price_change_pct ?
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[80][0]++, parseFloat(row.price_change_pct)) :
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[80][1]++, null)
      };
    }));
    const latest =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[210]++, prices[0]);
    const oldest =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[211]++, prices[prices.length - 1]);
    const periodReturn =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[212]++, oldest?.close > 0 ?
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[81][0]++, (latest.close - oldest.close) / oldest.close * 100) :
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[81][1]++, 0));

    // Calculate additional metrics
    const volume30Day =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[213]++, prices.slice(0, 30).reduce((sum, p) => {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().f[26]++;
      cov_2fdwmtfaoh().s[214]++;
      return sum + p.volume;
    }, 0) / Math.min(30, prices.length));
    const high52Week =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[215]++, Math.max(...prices.slice(0, Math.min(252, prices.length)).map(p => {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().f[27]++;
      cov_2fdwmtfaoh().s[216]++;
      return p.high;
    })));
    const low52Week =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[217]++, Math.min(...prices.slice(0, Math.min(252, prices.length)).map(p => {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().f[28]++;
      cov_2fdwmtfaoh().s[218]++;
      return p.low;
    })));
    const responseData =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[219]++, {
      success: true,
      ticker: symbol,
      timeframe,
      dataPoints: prices.length,
      data: prices,
      summary: {
        latestPrice: latest.close,
        latestDate: latest.date,
        periodReturn: parseFloat(periodReturn.toFixed(4)),
        latestVolume: latest.volume,
        avgVolume30Day: Math.round(volume30Day),
        high52Week: parseFloat(high52Week.toFixed(4)),
        low52Week: parseFloat(low52Week.toFixed(4)),
        priceRange: `${low52Week.toFixed(2)} - ${high52Week.toFixed(2)}`
      },
      cached: false,
      queryTime: Date.now() - startTime,
      timestamp: new Date().toISOString()
    });

    // Cache the response
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[220]++;
    priceCache.set(cacheKey, {
      data: responseData,
      timestamp: Date.now()
    });
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[221]++;
    console.log(`✅ ${symbol} prices fetched: ${prices.length} records in ${Date.now() - startTime}ms`);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[222]++;
    res.json(responseData);
  } catch (error) {
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[223]++;
    console.error(`❌ Error fetching ${symbol} prices:`, error);

    // Graceful fallback - try to return cached data even if expired
    const cached =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[224]++, priceCache.get(cacheKey));
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[225]++;
    if (cached) {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().b[82][0]++;
      cov_2fdwmtfaoh().s[226]++;
      console.log(`🔄 Returning stale cache for ${symbol} due to error`);
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[227]++;
      return res.json({
        ...cached.data,
        cached: true,
        stale: true,
        cacheAge: Date.now() - cached.timestamp,
        error: 'Live data unavailable, showing cached data'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2fdwmtfaoh().b[82][1]++;
    }

    // Final fallback with helpful error response
    cov_2fdwmtfaoh().s[228]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch stock prices',
      details: error.message.includes('timeout') ?
      /* istanbul ignore next */
      (cov_2fdwmtfaoh().b[83][0]++, 'Database query timed out') :
      /* istanbul ignore next */
      (cov_2fdwmtfaoh().b[83][1]++, 'Database error'),
      ticker: symbol,
      data: [],
      queryTime: Date.now() - startTime,
      timestamp: new Date().toISOString(),
      fallback: true,
      suggestion: 'Try again with a smaller limit or different timeframe'
    });
  }
});

// Historical stock data endpoint for chart components
/* istanbul ignore next */
cov_2fdwmtfaoh().s[229]++;
router.get('/:ticker/historical', async (req, res) => {
  /* istanbul ignore next */
  cov_2fdwmtfaoh().f[29]++;
  cov_2fdwmtfaoh().s[230]++;
  try {
    const {
      ticker
    } =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[231]++, req.params);
    const period =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[232]++,
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[84][0]++, parseInt(req.query.period)) ||
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[84][1]++, 30)); // Default 30 days
    const symbol =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[233]++, ticker.toUpperCase());
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[234]++;
    console.log(`📊 [STOCKS] Historical data endpoint called for ${symbol}, period: ${period} days`);

    // Query historical price data
    const historicalQuery =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[235]++, `
      SELECT 
        date,
        open::DECIMAL(12,4) as open,
        high::DECIMAL(12,4) as high,
        low::DECIMAL(12,4) as low,
        close::DECIMAL(12,4) as close,
        adj_close::DECIMAL(12,4) as adj_close,
        volume::BIGINT as volume
      FROM price_daily 
      WHERE UPPER(symbol) = UPPER($1)
        AND date >= CURRENT_DATE - INTERVAL '${period} days'
        AND close IS NOT NULL
      ORDER BY date ASC
      LIMIT 1000
    `);
    const result =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[236]++, await query(historicalQuery, [symbol]));
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[237]++;
    if (result.rows.length === 0) {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().b[85][0]++;
      cov_2fdwmtfaoh().s[238]++;
      console.log(`📊 [STOCKS] No historical data found for ${symbol}`);
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[239]++;
      return res.status(404).json({
        success: false,
        error: 'No historical data found',
        symbol: symbol,
        message: `Historical data not available for ${symbol}`,
        data: [],
        timestamp: new Date().toISOString()
      });
    } else
    /* istanbul ignore next */
    {
      cov_2fdwmtfaoh().b[85][1]++;
    }

    // Format data for chart component
    const historicalData =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[240]++, result.rows.map(row => {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().f[30]++;
      cov_2fdwmtfaoh().s[241]++;
      return {
        date: row.date,
        open: parseFloat(row.open),
        high: parseFloat(row.high),
        low: parseFloat(row.low),
        close: parseFloat(row.close),
        volume:
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[86][0]++, parseInt(row.volume)) ||
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[86][1]++, 0)
      };
    }));
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[242]++;
    console.log(`📊 [STOCKS] Successfully returning ${historicalData.length} historical data points for ${symbol}`);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[243]++;
    res.json({
      success: true,
      data: historicalData,
      symbol: symbol,
      period: period,
      dataPoints: historicalData.length,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[244]++;
    console.error('❌ [STOCKS] Error fetching historical data:', error);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[245]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch historical data',
      details: error.message,
      symbol: req.params.ticker,
      data: [],
      timestamp: new Date().toISOString()
    });
  }
});

// Get recent stock price history (alias for /prices with recent in the path)
/* istanbul ignore next */
cov_2fdwmtfaoh().s[246]++;
router.get('/:ticker/prices/recent', async (req, res) => {
  /* istanbul ignore next */
  cov_2fdwmtfaoh().f[31]++;
  cov_2fdwmtfaoh().s[247]++;
  try {
    const {
      ticker
    } =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[248]++, req.params);
    const limit =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[249]++, Math.min(
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[87][0]++, parseInt(req.query.limit)) ||
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[87][1]++, 30), 90)); // Max 90 days for performance
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[250]++;
    console.log(`📊 [STOCKS] Recent prices endpoint called for ticker: ${ticker}, limit: ${limit}`);
    const pricesQuery =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[251]++, `
      SELECT date, open, high, low, close, adj_close, volume
      FROM price_daily
      WHERE UPPER(symbol) = UPPER($1)
      ORDER BY date DESC
      LIMIT $2
    `);
    const result =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[252]++, await query(pricesQuery, [ticker, limit]));
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[253]++;
    if (result.rows.length === 0) {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().b[88][0]++;
      cov_2fdwmtfaoh().s[254]++;
      console.log(`📊 [STOCKS] No price data found for ${ticker}`);
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[255]++;
      return res.status(404).json({
        success: false,
        error: 'No price data found',
        ticker: ticker.toUpperCase(),
        message: 'Price data not available for this symbol',
        data: [],
        timestamp: new Date().toISOString()
      });
    } else
    /* istanbul ignore next */
    {
      cov_2fdwmtfaoh().b[88][1]++;
    }

    // Process the data
    const prices =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[256]++, result.rows);
    const latest =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[257]++, prices[0]);
    const oldest =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[258]++, prices[prices.length - 1]);
    const periodReturn =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[259]++, oldest.close > 0 ?
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[89][0]++, (latest.close - oldest.close) / oldest.close * 100) :
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[89][1]++, 0));

    // Format data for frontend
    const pricesWithChange =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[260]++, prices.map((price, idx) => {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().f[32]++;
      let priceChange =
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().s[261]++, null),
        priceChangePct =
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().s[262]++, null);
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[263]++;
      if (idx < prices.length - 1) {
        /* istanbul ignore next */
        cov_2fdwmtfaoh().b[90][0]++;
        const prev =
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().s[264]++, prices[idx + 1]);
        /* istanbul ignore next */
        cov_2fdwmtfaoh().s[265]++;
        priceChange = price.close - prev.close;
        /* istanbul ignore next */
        cov_2fdwmtfaoh().s[266]++;
        priceChangePct = prev.close !== 0 ?
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[91][0]++, priceChange / prev.close) :
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[91][1]++, null);
      } else
      /* istanbul ignore next */
      {
        cov_2fdwmtfaoh().b[90][1]++;
      }
      cov_2fdwmtfaoh().s[267]++;
      return {
        date: price.date,
        open: parseFloat(price.open),
        high: parseFloat(price.high),
        low: parseFloat(price.low),
        close: parseFloat(price.close),
        adjClose: parseFloat(price.adj_close),
        volume:
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[92][0]++, parseInt(price.volume)) ||
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[92][1]++, 0),
        priceChange,
        priceChangePct
      };
    }));
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[268]++;
    console.log(`📊 [STOCKS] Successfully returning ${pricesWithChange.length} price records for ${ticker}`);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[269]++;
    res.json({
      success: true,
      ticker: ticker.toUpperCase(),
      dataPoints: result.rows.length,
      data: pricesWithChange,
      summary: {
        latestPrice: parseFloat(latest.close),
        latestDate: latest.date,
        periodReturn: parseFloat(periodReturn.toFixed(2)),
        latestVolume:
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[93][0]++, parseInt(latest.volume)) ||
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().b[93][1]++, 0)
      },
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[270]++;
    console.error('❌ [STOCKS] Error fetching recent stock prices:', error);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[271]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch recent stock prices',
      details: error.message,
      data: [],
      // Always return data as an array for frontend safety
      ticker: req.params.ticker,
      timestamp: new Date().toISOString()
    });
  }
});

// Get available filters - exchanges instead of sectors
/* istanbul ignore next */
cov_2fdwmtfaoh().s[272]++;
router.get('/filters/sectors', async (req, res) => {
  /* istanbul ignore next */
  cov_2fdwmtfaoh().f[33]++;
  cov_2fdwmtfaoh().s[273]++;
  try {
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[274]++;
    console.log('Stock filters/sectors (exchanges) endpoint called');
    const sectorsQuery =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[275]++, `
      SELECT exchange, COUNT(*) as count
      FROM stock_symbols
      WHERE exchange IS NOT NULL
      GROUP BY exchange
      ORDER BY count DESC, exchange ASC
    `);
    const result =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[276]++, await query(sectorsQuery));
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[277]++;
    res.json({
      data: result.rows.map(row => {
        /* istanbul ignore next */
        cov_2fdwmtfaoh().f[34]++;
        cov_2fdwmtfaoh().s[278]++;
        return {
          name: row.exchange,
          value: row.exchange,
          count: parseInt(row.count)
        };
      }),
      total: result.rows.length,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[279]++;
    console.error('Error fetching stock exchanges:', error);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[280]++;
    res.status(500).json({
      error: 'Failed to fetch stock exchanges',
      details: error.message,
      data: [],
      // Always return data as an array for frontend safety
      timestamp: new Date().toISOString()
    });
  }
});

// Screen stocks with advanced filtering - DISABLED: Moved to line 520 to fix route collision
// router.get('/screen', async (req, res) => {
/*  try {
    console.log('🔍 Screen endpoint HIT! Method:', req.method, 'URL:', req.url);
    console.log('🔍 Screen endpoint called with params:', req.query);
    console.log('🔍 Request headers:', req.headers);
    
    const page = parseInt(req.query.page) || 1;
    const limit = Math.min(parseInt(req.query.limit) || 25, 100);
    const offset = (page - 1) * limit;
    const search = req.query.search || '';
    const sector = req.query.sector || '';
    const exchange = req.query.exchange || '';
    const sortBy = req.query.sortBy || 'symbol';
    const sortOrder = req.query.sortOrder || 'asc';
    
    let whereClause = 'WHERE 1=1';
    const params = [];
    let paramCount = 0;

    // Add search filter
    if (search) {
      paramCount++;
      whereClause += ` AND (ss.symbol ILIKE $${paramCount} OR ss.security_name ILIKE $${paramCount})`;
      params.push(`%${search}%`);
    }

    // Add sector filter (on s.sector)
    if (sector && sector.trim() !== '') {
      paramCount++;
      whereClause += ` AND s.sector = $${paramCount}`;
      params.push(sector);
    }

    // Add exchange filter (on ss.exchange)
    if (exchange && exchange.trim() !== '') {
      paramCount++;
      whereClause += ` AND ss.exchange = $${paramCount}`;
      params.push(exchange);
    }

    // FAST sort columns
    const validSortColumns = {
      'ticker': 'ss.symbol',
      'symbol': 'ss.symbol', 
      'name': 'ss.security_name',
      'exchange': 'ss.exchange',
      'market_category': 'ss.market_category'
    };

    const sortColumn = validSortColumns[sortBy] || 'ss.symbol';
    const sortDirection = sortOrder.toLowerCase() === 'desc' ? 'DESC' : 'ASC';

    console.log('Screen query params:', { whereClause, params, limit, offset });

    // Use the same comprehensive query as the main endpoint but for screening
    const stocksQuery = `
      SELECT 
        -- Stock symbols data
        ss.symbol,
        ss.security_name,
        ss.exchange,
        ss.market_category,
        ss.cqs_symbol,
        ss.financial_status,
        ss.round_lot_size,
        ss.etf,
        ss.secondary_symbol,
        ss.test_issue,
        
        -- Symbols data from loadinfo
        s.short_name,
        s.long_name,
        s.display_name,
        s.quote_type,
        s.sector,
        s.sector_disp,
        s.industry,
        s.industry_disp,
        s.business_summary,
        s.employee_count,
        s.website_url,
        s.ir_website_url,
        s.address1,
        s.city,
        s.state,
        s.postal_code,
        s.country,
        s.phone_number,
        s.currency,
        s.market,
        s.full_exchange_name,
        
        -- Market data from loadinfo
        md.current_price,
        md.previous_close,
        md.open_price,
        md.day_low,
        md.day_high,
        md.volume,
        md.average_volume,
        md.market_cap,
        md.fifty_two_week_low,
        md.fifty_two_week_high,
        md.fifty_day_avg,
        md.two_hundred_day_avg,
        md.bid_price,
        md.ask_price,
        md.market_state,
        
        -- Key financial metrics from loadinfo
        km.trailing_pe,
        km.forward_pe,
        km.price_to_sales_ttm,
        km.price_to_book,
        km.book_value,
        km.peg_ratio,
        km.enterprise_value,
        km.ev_to_revenue,
        km.ev_to_ebitda,
        km.total_revenue,
        km.net_income,
        km.ebitda,
        km.gross_profit,
        km.eps_trailing,
        km.eps_forward,
        km.eps_current_year,
        km.price_eps_current_year,
        km.earnings_q_growth_pct,
        km.total_cash,
        km.cash_per_share,
        km.operating_cashflow,
        km.free_cashflow,
        km.total_debt,
        km.debt_to_equity,
        km.quick_ratio,
        km.current_ratio,
        km.profit_margin_pct,
        km.gross_margin_pct,
        km.ebitda_margin_pct,
        km.operating_margin_pct,
        km.return_on_assets_pct,
        km.return_on_equity_pct,
        km.revenue_growth_pct,
        km.earnings_growth_pct,
        km.dividend_rate,
        km.dividend_yield,
        km.five_year_avg_dividend_yield,
        km.payout_ratio,
        
        -- Analyst estimates from loadinfo
        ae.target_high_price,
        ae.target_low_price,
        ae.target_mean_price,
        ae.target_median_price,
        ae.recommendation_key,
        ae.recommendation_mean,
        ae.analyst_opinion_count,
        ae.average_analyst_rating,
        
        -- Governance scores from loadinfo
        gs.audit_risk,
        gs.board_risk,
        gs.compensation_risk,
        gs.shareholder_rights_risk,
        gs.overall_risk,
        
        -- Leadership team count (subquery)
        COALESCE(lt_count.executive_count, 0) as leadership_count
        
      FROM stock_symbols ss
      LEFT JOIN symbols s ON ss.symbol = s.symbol
      LEFT JOIN market_data md ON ss.symbol = md.ticker
      LEFT JOIN key_metrics km ON ss.symbol = km.ticker
      LEFT JOIN analyst_estimates ae ON ss.symbol = ae.ticker
      LEFT JOIN governance_scores gs ON ss.symbol = gs.ticker
      LEFT JOIN (
        SELECT ticker, COUNT(*) as executive_count 
        FROM leadership_team 
        GROUP BY ticker
      ) lt_count ON ss.symbol = lt_count.ticker
      ${whereClause}
      ORDER BY ${sortColumn} ${sortDirection}
      LIMIT $${paramCount + 1} OFFSET $${paramCount + 2}
    `;

    params.push(limit, offset);

    // Count query
    const countQuery = `
      SELECT COUNT(*) as total
      FROM stock_symbols ss
      LEFT JOIN symbols s ON ss.symbol = s.symbol
      ${whereClause}
    `;

    console.log('Executing screen queries...');

    const [stocksResult, countResult] = await Promise.all([
      query(stocksQuery, params),
      query(countQuery, params.slice(0, -2))
    ]);

    const total = parseInt(countResult.rows[0].total);
    const totalPages = Math.ceil(total / limit);

    console.log(`Screen query results: ${stocksResult.rows.length} stocks, ${total} total`);

    // Use the same formatting as the main endpoint
    const formattedStocks = stocksResult.rows.map(stock => ({
      // Core identification
      ticker: stock.symbol,
      symbol: stock.symbol,
      name: stock.security_name,
      fullName: stock.long_name || stock.security_name,
      shortName: stock.short_name,
      displayName: stock.display_name,
      
      // Exchange & categorization 
      exchange: stock.exchange,
      fullExchangeName: stock.full_exchange_name,
      marketCategory: stock.market_category,
      market: stock.market,
      
      // Business information
      sector: stock.sector,
      sectorDisplay: stock.sector_disp,
      industry: stock.industry,
      industryDisplay: stock.industry_disp,
      businessSummary: stock.business_summary,
      employeeCount: stock.employee_count,
      
      // Contact information
      website: stock.website_url,
      investorRelationsWebsite: stock.ir_website_url,
      address: {
        street: stock.address1,
        city: stock.city,
        state: stock.state,
        postalCode: stock.postal_code,
        country: stock.country
      },
      phoneNumber: stock.phone_number,
      
      // Financial details
      currency: stock.currency,
      quoteType: stock.quote_type,
      
      // Current market data
      price: {
        current: stock.current_price,
        previousClose: stock.previous_close,
        open: stock.open_price,
        dayLow: stock.day_low,
        dayHigh: stock.day_high,
        fiftyTwoWeekLow: stock.fifty_two_week_low,
        fiftyTwoWeekHigh: stock.fifty_two_week_high,
        fiftyDayAverage: stock.fifty_day_avg,
        twoHundredDayAverage: stock.two_hundred_day_avg,
        bid: stock.bid_price,
        ask: stock.ask_price,
        marketState: stock.market_state
      },
      
      // Volume data
      volume: stock.volume,
      averageVolume: stock.average_volume,
      marketCap: stock.market_cap,
      
      // Comprehensive financial metrics
      financialMetrics: {
        // Valuation ratios
        trailingPE: stock.trailing_pe,
        forwardPE: stock.forward_pe,
        priceToSales: stock.price_to_sales_ttm,
        priceToBook: stock.price_to_book,
        pegRatio: stock.peg_ratio,
        bookValue: stock.book_value,
        
        // Enterprise metrics
        enterpriseValue: stock.enterprise_value,
        evToRevenue: stock.ev_to_revenue,
        evToEbitda: stock.ev_to_ebitda,
        
        // Financial results
        totalRevenue: stock.total_revenue,
        netIncome: stock.net_income,
        ebitda: stock.ebitda,
        grossProfit: stock.gross_profit,
        
        // Earnings per share
        epsTrailing: stock.eps_trailing,
        epsForward: stock.eps_forward,
        epsCurrent: stock.eps_current_year,
        priceEpsCurrent: stock.price_eps_current_year,
        
        // Growth metrics
        earningsGrowthQuarterly: stock.earnings_q_growth_pct,
        revenueGrowth: stock.revenue_growth_pct,
        earningsGrowth: stock.earnings_growth_pct,
        
        // Cash & debt
        totalCash: stock.total_cash,
        cashPerShare: stock.cash_per_share,
        operatingCashflow: stock.operating_cashflow,
        freeCashflow: stock.free_cashflow,
        totalDebt: stock.total_debt,
        debtToEquity: stock.debt_to_equity,
        
        // Liquidity ratios
        quickRatio: stock.quick_ratio,
        currentRatio: stock.current_ratio,
        
        // Profitability margins
        profitMargin: stock.profit_margin_pct,
        grossMargin: stock.gross_margin_pct,
        ebitdaMargin: stock.ebitda_margin_pct,
        operatingMargin: stock.operating_margin_pct,
        
        // Return metrics
        returnOnAssets: stock.return_on_assets_pct,
        returnOnEquity: stock.return_on_equity_pct,
        
        // Dividend information
        dividendRate: stock.dividend_rate,
        dividendYield: stock.dividend_yield,
        fiveYearAvgDividendYield: stock.five_year_avg_dividend_yield,
        payoutRatio: stock.payout_ratio
      },
      
      // Analyst estimates and recommendations
      analystData: {
        targetPrices: {
          high: stock.target_high_price,
          low: stock.target_low_price,
          mean: stock.target_mean_price,
          median: stock.target_median_price
        },
        recommendation: {
          key: stock.recommendation_key,
          mean: stock.recommendation_mean,
          rating: stock.average_analyst_rating
        },
        analystCount: stock.analyst_opinion_count
      },
      
      // Governance data
      governance: {
        auditRisk: stock.audit_risk,
        boardRisk: stock.board_risk,
        compensationRisk: stock.compensation_risk,
        shareholderRightsRisk: stock.shareholder_rights_risk,
        overallRisk: stock.overall_risk
      },
      
      // Leadership team summary
      leadership: {
        executiveCount: stock.leadership_count,
        hasLeadershipData: stock.leadership_count > 0,
        detailsAvailable: true
      },
      
      // Additional identifiers
      cqsSymbol: stock.cqs_symbol,
      secondarySymbol: stock.secondary_symbol,
      
      // Status & type
      financialStatus: stock.financial_status,
      isEtf: stock.etf === 'Y',
      testIssue: stock.test_issue === 'Y',
      roundLotSize: stock.round_lot_size,
      
      // Comprehensive data availability indicators
      hasData: true,
      dataSource: 'comprehensive_loadinfo_query',
      hasCompanyProfile: !!stock.long_name,
      hasMarketData: !!stock.current_price,
      hasFinancialMetrics: !!stock.trailing_pe || !!stock.total_revenue,
      hasAnalystData: !!stock.target_mean_price || !!stock.recommendation_key,
      hasGovernanceData: !!stock.overall_risk,
      hasLeadershipData: stock.leadership_count > 0,
      
      // Professional presentation with rich data
      displayData: {
        primaryExchange: stock.full_exchange_name || stock.exchange || 'Unknown',
        category: stock.market_category || 'Standard',
        type: stock.etf === 'Y' ? 'ETF' : 'Stock',
        tradeable: stock.financial_status !== 'D' && stock.test_issue !== 'Y',
        sector: stock.sector_disp || stock.sector || 'Unknown',
        industry: stock.industry_disp || stock.industry || 'Unknown',
        
        // Key financial highlights for quick view
        keyMetrics: {
          pe: stock.trailing_pe,
          marketCap: stock.market_cap,
          revenue: stock.total_revenue,
          profitMargin: stock.profit_margin_pct,
          dividendYield: stock.dividend_yield,
          analystRating: stock.recommendation_key,
          targetPrice: stock.target_mean_price
        },
        
        // Risk summary
        riskProfile: {
          overall: stock.overall_risk,
          hasHighRisk: (stock.overall_risk && stock.overall_risk >= 8),
          hasModerateRisk: (stock.overall_risk && stock.overall_risk >= 5 && stock.overall_risk < 8),
          hasLowRisk: (stock.overall_risk && stock.overall_risk < 5)
        }
      }
    }));

    res.json({
      success: true,
      data: formattedStocks,
      total: total,
      pagination: {
        page,
        limit,
        total,
        totalPages,
        hasNext: page < totalPages,
        hasPrev: page > 1
      },
      filters: {
        search: search || null,
        sector: sector || null,
        exchange: exchange || null,
        sortBy,
        sortOrder
      },
      metadata: {
        totalStocks: total,
        currentPage: page,
        showingRecords: stocksResult.rows.length
      },
      timestamp: new Date().toISOString()
    });

  } catch (error) {
    console.error('❌ Screen endpoint error:', error.message);
    console.error('🔍 Full error details:', {
      message: error.message,
      code: error.code,
      severity: error.severity,
      detail: error.detail,
      hint: error.hint,
      table: error.table,
      constraint: error.constraint,
      stack: error.stack
    });
    
    // Handle specific database errors
    if (error.code === '42P01') { // Table doesn't exist
      res.status(503).json({ 
        success: false,
        error: 'Database tables not ready',
        message: 'Required tables (stock_symbols, symbols) have not been created yet. Please run the data loading workflows.',
        details: error.message,
        data: [], 
        errorCode: error.code,
        solution: 'Run deploy-app-stocks workflow to create stock_symbols table',
        timestamp: new Date().toISOString()
      });
    } else if (error.code === '42703') { // Column doesn't exist
      res.status(503).json({ 
        success: false,
        error: 'Database schema mismatch',
        message: 'Required database columns are missing. The database schema may be outdated.',
        details: error.message,
        data: [], 
        errorCode: error.code,
        solution: 'Run database migration or recreate tables with updated schema',
        timestamp: new Date().toISOString()
      });
    } else {
      res.status(500).json({ 
        success: false,
        error: 'Screen query failed',
        message: 'An unexpected error occurred while screening stocks',
        details: error.message,
        data: [], 
        errorCode: error.code,
        timestamp: new Date().toISOString()
      });
    }
  }
*/
//});

// Database initialization endpoint for price_daily table
/* istanbul ignore next */
cov_2fdwmtfaoh().s[281]++;
router.post('/init-price-data', async (req, res) => {
  /* istanbul ignore next */
  cov_2fdwmtfaoh().f[35]++;
  cov_2fdwmtfaoh().s[282]++;
  try {
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[283]++;
    console.log('Initializing price_daily table...');

    // Create price_daily table
    const createTableSQL =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[284]++, `
      CREATE TABLE IF NOT EXISTS price_daily (
        id SERIAL PRIMARY KEY,
        symbol VARCHAR(10) NOT NULL,
        date DATE NOT NULL,
        open DECIMAL(12,4),
        high DECIMAL(12,4),
        low DECIMAL(12,4),
        close DECIMAL(12,4),
        adj_close DECIMAL(12,4),
        volume BIGINT,
        dividends DECIMAL(12,4) DEFAULT 0,
        stock_splits DECIMAL(12,4) DEFAULT 0,
        fetched_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        UNIQUE(symbol, date)
      )
    `);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[285]++;
    await query(createTableSQL);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[286]++;
    console.log('price_daily table created successfully');

    // Create index for performance
    const createIndexSQL =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[287]++, `
      CREATE INDEX IF NOT EXISTS idx_price_daily_symbol_date 
      ON price_daily(symbol, date DESC)
    `);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[288]++;
    await query(createIndexSQL);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[289]++;
    console.log('price_daily index created successfully');

    // Sample data for testing
    const sampleData =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[290]++, [
    // AAPL last 30 days
    ['AAPL', '2025-07-02', 190.50, 192.80, 189.20, 191.45, 191.45, 45230000], ['AAPL', '2025-07-01', 188.90, 191.20, 188.40, 190.30, 190.30, 38450000], ['AAPL', '2025-06-30', 189.80, 190.50, 187.60, 189.25, 189.25, 42100000], ['AAPL', '2025-06-29', 187.30, 190.20, 186.80, 189.90, 189.90, 39200000], ['AAPL', '2025-06-28', 185.60, 188.40, 185.10, 187.80, 187.80, 41800000], ['AAPL', '2025-06-27', 186.90, 188.20, 184.70, 186.50, 186.50, 44300000], ['AAPL', '2025-06-26', 184.20, 187.50, 183.90, 186.80, 186.80, 37600000], ['AAPL', '2025-06-25', 182.80, 185.30, 182.40, 184.90, 184.90, 36700000], ['AAPL', '2025-06-24', 181.50, 183.60, 180.90, 182.70, 182.70, 38900000], ['AAPL', '2025-06-23', 180.30, 182.80, 179.80, 181.20, 181.20, 35400000],
    // MSFT sample data
    ['MSFT', '2025-07-02', 335.20, 338.40, 334.50, 337.80, 337.80, 18750000], ['MSFT', '2025-07-01', 332.60, 336.20, 331.90, 334.90, 334.90, 20100000], ['MSFT', '2025-06-30', 330.80, 333.70, 329.40, 332.50, 332.50, 19200000], ['MSFT', '2025-06-29', 328.90, 331.60, 327.80, 330.40, 330.40, 21400000], ['MSFT', '2025-06-28', 326.40, 329.80, 325.70, 328.60, 328.60, 22300000],
    // GOOGL sample data
    ['GOOGL', '2025-07-02', 142.30, 144.70, 141.80, 143.90, 143.90, 23400000], ['GOOGL', '2025-07-01', 140.80, 143.20, 140.40, 142.10, 142.10, 25600000], ['GOOGL', '2025-06-30', 139.60, 141.50, 138.90, 140.70, 140.70, 27800000], ['GOOGL', '2025-06-29', 137.20, 140.30, 136.80, 139.40, 139.40, 29200000], ['GOOGL', '2025-06-28', 135.90, 138.40, 135.20, 137.60, 137.60, 26700000],
    // TSLA sample data
    ['TSLA', '2025-07-02', 248.90, 252.40, 246.30, 250.80, 250.80, 35600000], ['TSLA', '2025-07-01', 245.60, 249.70, 244.20, 248.30, 248.30, 38900000], ['TSLA', '2025-06-30', 242.80, 246.90, 241.50, 245.20, 245.20, 41200000], ['TSLA', '2025-06-29', 240.30, 244.60, 239.10, 242.50, 242.50, 43800000], ['TSLA', '2025-06-28', 237.90, 241.80, 236.70, 240.10, 240.10, 42100000],
    // NVDA sample data
    ['NVDA', '2025-07-02', 485.20, 492.80, 483.60, 489.40, 489.40, 55600000], ['NVDA', '2025-07-01', 478.90, 487.30, 477.20, 484.70, 484.70, 58200000], ['NVDA', '2025-06-30', 472.40, 480.60, 471.80, 478.30, 478.30, 62100000], ['NVDA', '2025-06-29', 465.80, 474.20, 464.30, 472.90, 472.90, 67300000], ['NVDA', '2025-06-28', 459.60, 467.50, 458.40, 465.20, 465.20, 59800000]]);

    // Insert sample data
    let insertedCount =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[291]++, 0);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[292]++;
    for (const row of sampleData) {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[293]++;
      try {
        const insertSQL =
        /* istanbul ignore next */
        (cov_2fdwmtfaoh().s[294]++, `
          INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
          VALUES ($1, $2, $3, $4, $5, $6, $7, $8)
          ON CONFLICT (symbol, date) DO UPDATE SET
            open = EXCLUDED.open,
            high = EXCLUDED.high,
            low = EXCLUDED.low,
            close = EXCLUDED.close,
            adj_close = EXCLUDED.adj_close,
            volume = EXCLUDED.volume
        `);
        /* istanbul ignore next */
        cov_2fdwmtfaoh().s[295]++;
        await query(insertSQL, row);
        /* istanbul ignore next */
        cov_2fdwmtfaoh().s[296]++;
        insertedCount++;
      } catch (insertError) {
        /* istanbul ignore next */
        cov_2fdwmtfaoh().s[297]++;
        console.warn(`Failed to insert row for ${row[0]} ${row[1]}:`, insertError.message);
      }
    }
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[298]++;
    console.log(`Sample data inserted: ${insertedCount} rows`);

    // Verify data exists
    const countResult =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[299]++, await query('SELECT COUNT(*) as count FROM price_daily'));
    const totalRows =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[300]++, countResult.rows[0].count);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[301]++;
    res.json({
      success: true,
      message: 'price_daily table initialized successfully',
      details: {
        tableCreated: true,
        indexCreated: true,
        sampleDataInserted: insertedCount,
        totalRows: parseInt(totalRows)
      },
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[302]++;
    console.error('Error initializing price_daily table:', error);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[303]++;
    res.status(500).json({
      success: false,
      error: 'Failed to initialize price_daily table',
      details: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Get screening statistics and ranges
/* istanbul ignore next */
cov_2fdwmtfaoh().s[304]++;
router.get('/screen/stats', async (req, res) => {
  /* istanbul ignore next */
  cov_2fdwmtfaoh().f[36]++;
  cov_2fdwmtfaoh().s[305]++;
  try {
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[306]++;
    console.log('Screen stats endpoint called');

    // Use robust query with proper error handling instead of fallback chains
    const statsQuery =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[307]++, `
      SELECT 
        COUNT(*) as total_stocks,
        MIN(s.market_cap) as min_market_cap,
        MAX(s.market_cap) as max_market_cap,
        MIN(s.trailing_pe) as min_pe_ratio,
        MAX(s.trailing_pe) as max_pe_ratio,
        MIN(s.price_to_book) as min_pb_ratio,
        MAX(s.price_to_book) as max_pb_ratio,
        MIN(s.return_on_equity) as min_roe,
        MAX(s.return_on_equity) as max_roe,
        MIN(s.revenue_growth) as min_revenue_growth,
        MAX(s.revenue_growth) as max_revenue_growth,
        MIN(s.analyst_rating) as min_analyst_rating,
        MAX(s.analyst_rating) as max_analyst_rating
      FROM stock_symbols s
      WHERE s.is_active = TRUE
    `);
    let result;
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[308]++;
    try {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[309]++;
      result = await query(statsQuery);
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[310]++;
      console.log(`✅ Screen stats query successful: ${result.rows.length} stats found`);
    } catch (dbError) {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[311]++;
      console.error('❌ Screen stats query failed - comprehensive diagnosis needed', {
        query_type: 'screen_stats',
        error_message: dbError.message,
        detailed_diagnostics: {
          attempted_operations: ['stock_symbols_query', 'statistical_aggregation'],
          potential_causes: ['stock_symbols table missing', 'Database connection failure', 'Schema validation error', 'Data type mismatch in numeric columns', 'Insufficient database permissions', 'Statistical function errors', 'Query timeout'],
          troubleshooting_steps: ['Check if stock_symbols table exists', 'Verify database connection health', 'Validate table schema structure', 'Check numeric column data types', 'Review database permissions', 'Monitor statistical function execution', 'Check query execution time'],
          system_checks: ['Database health status', 'Table existence validation', 'Schema integrity check', 'Connection pool availability']
        }
      });
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[312]++;
      throw dbError; // Re-throw to trigger proper error handling
    }
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[313]++;
    if (
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[95][0]++, result) &&
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().b[95][1]++, result.rows.length > 0)) {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().b[94][0]++;
      const stats =
      /* istanbul ignore next */
      (cov_2fdwmtfaoh().s[314]++, result.rows[0]);
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[315]++;
      res.json({
        success: true,
        data: {
          total_stocks:
          /* istanbul ignore next */
          (cov_2fdwmtfaoh().b[96][0]++, parseInt(stats.total_stocks)) ||
          /* istanbul ignore next */
          (cov_2fdwmtfaoh().b[96][1]++, 8500),
          ranges: {
            market_cap: {
              min:
              /* istanbul ignore next */
              (cov_2fdwmtfaoh().b[97][0]++, parseInt(stats.min_market_cap)) ||
              /* istanbul ignore next */
              (cov_2fdwmtfaoh().b[97][1]++, 50000000),
              max:
              /* istanbul ignore next */
              (cov_2fdwmtfaoh().b[98][0]++, parseInt(stats.max_market_cap)) ||
              /* istanbul ignore next */
              (cov_2fdwmtfaoh().b[98][1]++, 3000000000000)
            },
            pe_ratio: {
              min:
              /* istanbul ignore next */
              (cov_2fdwmtfaoh().b[99][0]++, parseFloat(stats.min_pe_ratio)) ||
              /* istanbul ignore next */
              (cov_2fdwmtfaoh().b[99][1]++, 5),
              max: Math.min(
              /* istanbul ignore next */
              (cov_2fdwmtfaoh().b[100][0]++, parseFloat(stats.max_pe_ratio)) ||
              /* istanbul ignore next */
              (cov_2fdwmtfaoh().b[100][1]++, 100), 100)
            },
            price_to_book: {
              min:
              /* istanbul ignore next */
              (cov_2fdwmtfaoh().b[101][0]++, parseFloat(stats.min_pb_ratio)) ||
              /* istanbul ignore next */
              (cov_2fdwmtfaoh().b[101][1]++, 0.1),
              max: Math.min(
              /* istanbul ignore next */
              (cov_2fdwmtfaoh().b[102][0]++, parseFloat(stats.max_pb_ratio)) ||
              /* istanbul ignore next */
              (cov_2fdwmtfaoh().b[102][1]++, 20), 20)
            },
            roe: {
              min:
              /* istanbul ignore next */
              (cov_2fdwmtfaoh().b[103][0]++, parseFloat(stats.min_roe)) ||
              /* istanbul ignore next */
              (cov_2fdwmtfaoh().b[103][1]++, -50),
              max: Math.min(
              /* istanbul ignore next */
              (cov_2fdwmtfaoh().b[104][0]++, parseFloat(stats.max_roe)) ||
              /* istanbul ignore next */
              (cov_2fdwmtfaoh().b[104][1]++, 100), 100)
            },
            revenue_growth: {
              min:
              /* istanbul ignore next */
              (cov_2fdwmtfaoh().b[105][0]++, parseFloat(stats.min_revenue_growth)) ||
              /* istanbul ignore next */
              (cov_2fdwmtfaoh().b[105][1]++, -50),
              max: Math.min(
              /* istanbul ignore next */
              (cov_2fdwmtfaoh().b[106][0]++, parseFloat(stats.max_revenue_growth)) ||
              /* istanbul ignore next */
              (cov_2fdwmtfaoh().b[106][1]++, 200), 200)
            },
            analyst_rating: {
              min:
              /* istanbul ignore next */
              (cov_2fdwmtfaoh().b[107][0]++, parseFloat(stats.min_analyst_rating)) ||
              /* istanbul ignore next */
              (cov_2fdwmtfaoh().b[107][1]++, 1),
              max:
              /* istanbul ignore next */
              (cov_2fdwmtfaoh().b[108][0]++, parseFloat(stats.max_analyst_rating)) ||
              /* istanbul ignore next */
              (cov_2fdwmtfaoh().b[108][1]++, 5)
            }
          }
        },
        timestamp: new Date().toISOString()
      });
    } else {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().b[94][1]++;
      cov_2fdwmtfaoh().s[316]++;
      // Return error response with comprehensive diagnostics instead of fallback data
      console.error(`❌ Database query failed for screener stats - comprehensive diagnosis needed`, {
        error: error.message,
        detailed_diagnostics: {
          query_attempted: 'screener_statistics_query',
          potential_causes: ['Database connection failure', 'Missing required tables for screener functionality', 'Database schema corruption', 'Data loading scripts not executed', 'SQL query syntax errors'],
          troubleshooting_steps: ['Check database connectivity', 'Verify all screener tables exist', 'Validate database schema integrity', 'Check data loading script execution', 'Review SQL query syntax'],
          system_checks: ['Database health status', 'Table existence validation', 'Schema validation', 'Data freshness assessment']
        }
      });
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[317]++;
      return res.status(503).json({
        success: false,
        error: 'Screener statistics unavailable',
        message: 'Unable to retrieve screener statistics due to database issues',
        timestamp: new Date().toISOString(),
        data_source: 'error'
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[318]++;
    console.error('Error in screen stats endpoint:', error);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[319]++;
    res.status(500).json({
      success: false,
      error: 'Failed to retrieve screener statistics',
      details: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Initialize API keys table for secure portfolio import
/* istanbul ignore next */
cov_2fdwmtfaoh().s[320]++;
router.post('/init-api-keys-table', async (req, res) => {
  /* istanbul ignore next */
  cov_2fdwmtfaoh().f[37]++;
  cov_2fdwmtfaoh().s[321]++;
  try {
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[322]++;
    console.log('Initializing user_api_keys table...');

    // Create user_api_keys table for secure API key storage
    const createTableSQL =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[323]++, `
      CREATE TABLE IF NOT EXISTS user_api_keys (
        id SERIAL PRIMARY KEY,
        user_id VARCHAR(255) NOT NULL,
        broker_name VARCHAR(50) NOT NULL,
        encrypted_api_key TEXT NOT NULL,
        encrypted_api_secret TEXT,
        key_iv VARCHAR(32) NOT NULL,
        key_auth_tag VARCHAR(32) NOT NULL,
        secret_iv VARCHAR(32),
        secret_auth_tag VARCHAR(32),
        is_sandbox BOOLEAN DEFAULT true,
        created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
        last_used TIMESTAMP WITH TIME ZONE,
        UNIQUE(user_id, broker_name)
      )
    `);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[324]++;
    await query(createTableSQL);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[325]++;
    console.log('user_api_keys table created successfully');

    // Create indexes for performance and security
    const createIndexes =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[326]++, ['CREATE INDEX IF NOT EXISTS idx_user_api_keys_user_id ON user_api_keys(user_id)', 'CREATE INDEX IF NOT EXISTS idx_user_api_keys_broker ON user_api_keys(broker_name)', 'CREATE INDEX IF NOT EXISTS idx_user_api_keys_last_used ON user_api_keys(last_used DESC)']);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[327]++;
    for (const indexSQL of createIndexes) {
      /* istanbul ignore next */
      cov_2fdwmtfaoh().s[328]++;
      await query(indexSQL);
    }
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[329]++;
    console.log('user_api_keys indexes created successfully');

    // Verify table exists
    const verifyQuery =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[330]++, `
      SELECT column_name, data_type, is_nullable
      FROM information_schema.columns 
      WHERE table_name = 'user_api_keys'
      ORDER BY ordinal_position
    `);
    const columns =
    /* istanbul ignore next */
    (cov_2fdwmtfaoh().s[331]++, await query(verifyQuery));
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[332]++;
    res.json({
      success: true,
      message: 'user_api_keys table initialized successfully',
      details: {
        tableCreated: true,
        indexesCreated: true,
        columns: columns.rows.map(col => {
          /* istanbul ignore next */
          cov_2fdwmtfaoh().f[38]++;
          cov_2fdwmtfaoh().s[333]++;
          return {
            name: col.column_name,
            type: col.data_type,
            nullable: col.is_nullable === 'YES'
          };
        })
      },
      security: {
        encryption: 'AES-256-GCM',
        keyDerivation: 'scrypt',
        userSaltBased: true,
        noPlaintextLogging: true
      },
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[334]++;
    console.error('Error initializing user_api_keys table:', error);
    /* istanbul ignore next */
    cov_2fdwmtfaoh().s[335]++;
    res.status(500).json({
      success: false,
      error: 'Failed to initialize API keys table',
      details: error.message,
      timestamp: new Date().toISOString()
    });
  }
});
/* istanbul ignore next */
cov_2fdwmtfaoh().s[336]++;
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,