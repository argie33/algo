a3a2d3b0acf745e4ded0187776e45ed0
/* istanbul ignore next */
function cov_qc9526doq() {
  var path = "/home/stocks/algo/webapp/lambda/utils/timeoutManager.js";
  var hash = "6df7c5c00e3b4129d93a5902644f14a182854300";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/utils/timeoutManager.js",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 24
        },
        end: {
          line: 59,
          column: 1
        }
      },
      "1": {
        start: {
          line: 65,
          column: 2
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "2": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 72,
          column: 18
        }
      },
      "3": {
        start: {
          line: 67,
          column: 20
        },
        end: {
          line: 67,
          column: 74
        }
      },
      "4": {
        start: {
          line: 68,
          column: 6
        },
        end: {
          line: 68,
          column: 29
        }
      },
      "5": {
        start: {
          line: 69,
          column: 6
        },
        end: {
          line: 69,
          column: 32
        }
      },
      "6": {
        start: {
          line: 70,
          column: 6
        },
        end: {
          line: 70,
          column: 34
        }
      },
      "7": {
        start: {
          line: 71,
          column: 6
        },
        end: {
          line: 71,
          column: 20
        }
      },
      "8": {
        start: {
          line: 80,
          column: 2
        },
        end: {
          line: 83,
          column: 5
        }
      },
      "9": {
        start: {
          line: 90,
          column: 2
        },
        end: {
          line: 94,
          column: 4
        }
      },
      "10": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 93,
          column: 6
        }
      },
      "11": {
        start: {
          line: 92,
          column: 6
        },
        end: {
          line: 92,
          column: 71
        }
      },
      "12": {
        start: {
          line: 101,
          column: 18
        },
        end: {
          line: 105,
          column: 3
        }
      },
      "13": {
        start: {
          line: 103,
          column: 6
        },
        end: {
          line: 103,
          column: 46
        }
      },
      "14": {
        start: {
          line: 107,
          column: 2
        },
        end: {
          line: 113,
          column: 6
        }
      },
      "15": {
        start: {
          line: 107,
          column: 41
        },
        end: {
          line: 113,
          column: 3
        }
      },
      "16": {
        start: {
          line: 129,
          column: 6
        },
        end: {
          line: 129,
          column: 12
        }
      },
      "17": {
        start: {
          line: 131,
          column: 24
        },
        end: {
          line: 131,
          column: 49
        }
      },
      "18": {
        start: {
          line: 134,
          column: 2
        },
        end: {
          line: 195,
          column: 3
        }
      },
      "19": {
        start: {
          line: 134,
          column: 21
        },
        end: {
          line: 134,
          column: 22
        }
      },
      "20": {
        start: {
          line: 135,
          column: 22
        },
        end: {
          line: 135,
          column: 32
        }
      },
      "21": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 194,
          column: 5
        }
      },
      "22": {
        start: {
          line: 138,
          column: 6
        },
        end: {
          line: 146,
          column: 7
        }
      },
      "23": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 145,
          column: 11
        }
      },
      "24": {
        start: {
          line: 148,
          column: 21
        },
        end: {
          line: 148,
          column: 73
        }
      },
      "25": {
        start: {
          line: 149,
          column: 23
        },
        end: {
          line: 149,
          column: 45
        }
      },
      "26": {
        start: {
          line: 151,
          column: 6
        },
        end: {
          line: 158,
          column: 7
        }
      },
      "27": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 157,
          column: 11
        }
      },
      "28": {
        start: {
          line: 160,
          column: 6
        },
        end: {
          line: 167,
          column: 8
        }
      },
      "29": {
        start: {
          line: 170,
          column: 23
        },
        end: {
          line: 170,
          column: 45
        }
      },
      "30": {
        start: {
          line: 171,
          column: 6
        },
        end: {
          line: 171,
          column: 24
        }
      },
      "31": {
        start: {
          line: 173,
          column: 6
        },
        end: {
          line: 184,
          column: 7
        }
      },
      "32": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 183,
          column: 11
        }
      },
      "33": {
        start: {
          line: 187,
          column: 6
        },
        end: {
          line: 189,
          column: 7
        }
      },
      "34": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 14
        }
      },
      "35": {
        start: {
          line: 192,
          column: 20
        },
        end: {
          line: 192,
          column: 53
        }
      },
      "36": {
        start: {
          line: 193,
          column: 6
        },
        end: {
          line: 193,
          column: 63
        }
      },
      "37": {
        start: {
          line: 193,
          column: 35
        },
        end: {
          line: 193,
          column: 61
        }
      },
      "38": {
        start: {
          line: 198,
          column: 24
        },
        end: {
          line: 198,
          column: 72
        }
      },
      "39": {
        start: {
          line: 200,
          column: 2
        },
        end: {
          line: 208,
          column: 3
        }
      },
      "40": {
        start: {
          line: 201,
          column: 4
        },
        end: {
          line: 207,
          column: 7
        }
      },
      "41": {
        start: {
          line: 210,
          column: 2
        },
        end: {
          line: 216,
          column: 4
        }
      },
      "42": {
        start: {
          line: 223,
          column: 24
        },
        end: {
          line: 223,
          column: 48
        }
      },
      "43": {
        start: {
          line: 224,
          column: 2
        },
        end: {
          line: 227,
          column: 3
        }
      },
      "44": {
        start: {
          line: 225,
          column: 4
        },
        end: {
          line: 225,
          column: 72
        }
      },
      "45": {
        start: {
          line: 226,
          column: 4
        },
        end: {
          line: 226,
          column: 40
        }
      },
      "46": {
        start: {
          line: 229,
          column: 18
        },
        end: {
          line: 229,
          column: 42
        }
      },
      "47": {
        start: {
          line: 230,
          column: 2
        },
        end: {
          line: 233,
          column: 3
        }
      },
      "48": {
        start: {
          line: 231,
          column: 4
        },
        end: {
          line: 231,
          column: 102
        }
      },
      "49": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 232,
          column: 66
        }
      },
      "50": {
        start: {
          line: 235,
          column: 2
        },
        end: {
          line: 235,
          column: 17
        }
      },
      "51": {
        start: {
          line: 242,
          column: 18
        },
        end: {
          line: 242,
          column: 55
        }
      },
      "52": {
        start: {
          line: 243,
          column: 24
        },
        end: {
          line: 243,
          column: 51
        }
      },
      "53": {
        start: {
          line: 245,
          column: 2
        },
        end: {
          line: 247,
          column: 3
        }
      },
      "54": {
        start: {
          line: 246,
          column: 4
        },
        end: {
          line: 246,
          column: 78
        }
      },
      "55": {
        start: {
          line: 249,
          column: 20
        },
        end: {
          line: 249,
          column: 30
        }
      },
      "56": {
        start: {
          line: 251,
          column: 2
        },
        end: {
          line: 272,
          column: 3
        }
      },
      "57": {
        start: {
          line: 252,
          column: 19
        },
        end: {
          line: 252,
          column: 71
        }
      },
      "58": {
        start: {
          line: 253,
          column: 21
        },
        end: {
          line: 253,
          column: 43
        }
      },
      "59": {
        start: {
          line: 255,
          column: 4
        },
        end: {
          line: 257,
          column: 5
        }
      },
      "60": {
        start: {
          line: 256,
          column: 6
        },
        end: {
          line: 256,
          column: 83
        }
      },
      "61": {
        start: {
          line: 259,
          column: 4
        },
        end: {
          line: 259,
          column: 18
        }
      },
      "62": {
        start: {
          line: 261,
          column: 21
        },
        end: {
          line: 261,
          column: 43
        }
      },
      "63": {
        start: {
          line: 263,
          column: 4
        },
        end: {
          line: 269,
          column: 5
        }
      },
      "64": {
        start: {
          line: 264,
          column: 6
        },
        end: {
          line: 268,
          column: 9
        }
      },
      "65": {
        start: {
          line: 271,
          column: 4
        },
        end: {
          line: 271,
          column: 16
        }
      },
      "66": {
        start: {
          line: 279,
          column: 18
        },
        end: {
          line: 279,
          column: 54
        }
      },
      "67": {
        start: {
          line: 280,
          column: 24
        },
        end: {
          line: 280,
          column: 50
        }
      },
      "68": {
        start: {
          line: 282,
          column: 2
        },
        end: {
          line: 290,
          column: 5
        }
      },
      "69": {
        start: {
          line: 297,
          column: 18
        },
        end: {
          line: 297,
          column: 58
        }
      },
      "70": {
        start: {
          line: 298,
          column: 24
        },
        end: {
          line: 298,
          column: 54
        }
      },
      "71": {
        start: {
          line: 300,
          column: 2
        },
        end: {
          line: 308,
          column: 5
        }
      },
      "72": {
        start: {
          line: 315,
          column: 18
        },
        end: {
          line: 315,
          column: 50
        }
      },
      "73": {
        start: {
          line: 316,
          column: 24
        },
        end: {
          line: 316,
          column: 46
        }
      },
      "74": {
        start: {
          line: 318,
          column: 2
        },
        end: {
          line: 326,
          column: 5
        }
      },
      "75": {
        start: {
          line: 333,
          column: 18
        },
        end: {
          line: 333,
          column: 51
        }
      },
      "76": {
        start: {
          line: 334,
          column: 24
        },
        end: {
          line: 334,
          column: 47
        }
      },
      "77": {
        start: {
          line: 336,
          column: 2
        },
        end: {
          line: 344,
          column: 5
        }
      },
      "78": {
        start: {
          line: 351,
          column: 2
        },
        end: {
          line: 377,
          column: 4
        }
      },
      "79": {
        start: {
          line: 352,
          column: 20
        },
        end: {
          line: 352,
          column: 53
        }
      },
      "80": {
        start: {
          line: 353,
          column: 23
        },
        end: {
          line: 353,
          column: 44
        }
      },
      "81": {
        start: {
          line: 355,
          column: 22
        },
        end: {
          line: 355,
          column: 67
        }
      },
      "82": {
        start: {
          line: 355,
          column: 39
        },
        end: {
          line: 355,
          column: 57
        }
      },
      "83": {
        start: {
          line: 357,
          column: 4
        },
        end: {
          line: 376,
          column: 5
        }
      },
      "84": {
        start: {
          line: 358,
          column: 23
        },
        end: {
          line: 361,
          column: 8
        }
      },
      "85": {
        start: {
          line: 363,
          column: 6
        },
        end: {
          line: 363,
          column: 30
        }
      },
      "86": {
        start: {
          line: 364,
          column: 6
        },
        end: {
          line: 364,
          column: 22
        }
      },
      "87": {
        start: {
          line: 366,
          column: 6
        },
        end: {
          line: 366,
          column: 30
        }
      },
      "88": {
        start: {
          line: 368,
          column: 6
        },
        end: {
          line: 373,
          column: 7
        }
      },
      "89": {
        start: {
          line: 369,
          column: 29
        },
        end: {
          line: 369,
          column: 74
        }
      },
      "90": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 370,
          column: 38
        }
      },
      "91": {
        start: {
          line: 371,
          column: 8
        },
        end: {
          line: 371,
          column: 39
        }
      },
      "92": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 372,
          column: 27
        }
      },
      "93": {
        start: {
          line: 375,
          column: 6
        },
        end: {
          line: 375,
          column: 18
        }
      },
      "94": {
        start: {
          line: 380,
          column: 0
        },
        end: {
          line: 401,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "createTimeoutPromise",
        decl: {
          start: {
            line: 64,
            column: 9
          },
          end: {
            line: 64,
            column: 29
          }
        },
        loc: {
          start: {
            line: 64,
            column: 66
          },
          end: {
            line: 74,
            column: 1
          }
        },
        line: 64
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 65,
            column: 21
          },
          end: {
            line: 65,
            column: 22
          }
        },
        loc: {
          start: {
            line: 65,
            column: 36
          },
          end: {
            line: 73,
            column: 3
          }
        },
        line: 65
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 66,
            column: 15
          },
          end: {
            line: 66,
            column: 16
          }
        },
        loc: {
          start: {
            line: 66,
            column: 21
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 66
      },
      "3": {
        name: "withTimeout",
        decl: {
          start: {
            line: 79,
            column: 9
          },
          end: {
            line: 79,
            column: 20
          }
        },
        loc: {
          start: {
            line: 79,
            column: 66
          },
          end: {
            line: 84,
            column: 1
          }
        },
        line: 79
      },
      "4": {
        name: "createTimeoutWrapper",
        decl: {
          start: {
            line: 89,
            column: 9
          },
          end: {
            line: 89,
            column: 29
          }
        },
        loc: {
          start: {
            line: 89,
            column: 66
          },
          end: {
            line: 95,
            column: 1
          }
        },
        line: 89
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 90,
            column: 9
          },
          end: {
            line: 90,
            column: 10
          }
        },
        loc: {
          start: {
            line: 90,
            column: 28
          },
          end: {
            line: 94,
            column: 3
          }
        },
        line: 90
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 91,
            column: 11
          },
          end: {
            line: 91,
            column: 12
          }
        },
        loc: {
          start: {
            line: 91,
            column: 30
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 91
      },
      "7": {
        name: "executeWithTimeouts",
        decl: {
          start: {
            line: 100,
            column: 15
          },
          end: {
            line: 100,
            column: 34
          }
        },
        loc: {
          start: {
            line: 100,
            column: 47
          },
          end: {
            line: 114,
            column: 1
          }
        },
        line: 100
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 102,
            column: 19
          },
          end: {
            line: 102,
            column: 20
          }
        },
        loc: {
          start: {
            line: 103,
            column: 6
          },
          end: {
            line: 103,
            column: 46
          }
        },
        line: 103
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 107,
            column: 21
          },
          end: {
            line: 107,
            column: 22
          }
        },
        loc: {
          start: {
            line: 107,
            column: 41
          },
          end: {
            line: 113,
            column: 3
          }
        },
        line: 107
      },
      "10": {
        name: "callExternalApi",
        decl: {
          start: {
            line: 119,
            column: 15
          },
          end: {
            line: 119,
            column: 30
          }
        },
        loc: {
          start: {
            line: 119,
            column: 39
          },
          end: {
            line: 217,
            column: 1
          }
        },
        line: 119
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 193,
            column: 24
          },
          end: {
            line: 193,
            column: 25
          }
        },
        loc: {
          start: {
            line: 193,
            column: 35
          },
          end: {
            line: 193,
            column: 61
          }
        },
        line: 193
      },
      "12": {
        name: "getTimeout",
        decl: {
          start: {
            line: 222,
            column: 9
          },
          end: {
            line: 222,
            column: 19
          }
        },
        loc: {
          start: {
            line: 222,
            column: 53
          },
          end: {
            line: 236,
            column: 1
          }
        },
        line: 222
      },
      "13": {
        name: "withDatabaseTimeout",
        decl: {
          start: {
            line: 241,
            column: 15
          },
          end: {
            line: 241,
            column: 34
          }
        },
        loc: {
          start: {
            line: 241,
            column: 86
          },
          end: {
            line: 273,
            column: 1
          }
        },
        line: 241
      },
      "14": {
        name: "withTradingTimeout",
        decl: {
          start: {
            line: 278,
            column: 15
          },
          end: {
            line: 278,
            column: 33
          }
        },
        loc: {
          start: {
            line: 278,
            column: 88
          },
          end: {
            line: 291,
            column: 1
          }
        },
        line: 278
      },
      "15": {
        name: "withMarketDataTimeout",
        decl: {
          start: {
            line: 296,
            column: 15
          },
          end: {
            line: 296,
            column: 36
          }
        },
        loc: {
          start: {
            line: 296,
            column: 91
          },
          end: {
            line: 309,
            column: 1
          }
        },
        line: 296
      },
      "16": {
        name: "withAwsTimeout",
        decl: {
          start: {
            line: 314,
            column: 15
          },
          end: {
            line: 314,
            column: 29
          }
        },
        loc: {
          start: {
            line: 314,
            column: 84
          },
          end: {
            line: 327,
            column: 1
          }
        },
        line: 314
      },
      "17": {
        name: "withAuthTimeout",
        decl: {
          start: {
            line: 332,
            column: 15
          },
          end: {
            line: 332,
            column: 30
          }
        },
        loc: {
          start: {
            line: 332,
            column: 82
          },
          end: {
            line: 345,
            column: 1
          }
        },
        line: 332
      },
      "18": {
        name: "createTimeoutFetch",
        decl: {
          start: {
            line: 350,
            column: 9
          },
          end: {
            line: 350,
            column: 27
          }
        },
        loc: {
          start: {
            line: 350,
            column: 52
          },
          end: {
            line: 378,
            column: 1
          }
        },
        line: 350
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 351,
            column: 9
          },
          end: {
            line: 351,
            column: 10
          }
        },
        loc: {
          start: {
            line: 351,
            column: 38
          },
          end: {
            line: 377,
            column: 3
          }
        },
        line: 351
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 355,
            column: 33
          },
          end: {
            line: 355,
            column: 34
          }
        },
        loc: {
          start: {
            line: 355,
            column: 39
          },
          end: {
            line: 355,
            column: 57
          }
        },
        line: 355
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 64,
            column: 41
          },
          end: {
            line: 64,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 64,
            column: 53
          },
          end: {
            line: 64,
            column: 64
          }
        }],
        line: 64
      },
      "1": {
        loc: {
          start: {
            line: 79,
            column: 41
          },
          end: {
            line: 79,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 79,
            column: 53
          },
          end: {
            line: 79,
            column: 64
          }
        }],
        line: 79
      },
      "2": {
        loc: {
          start: {
            line: 89,
            column: 41
          },
          end: {
            line: 89,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 89,
            column: 53
          },
          end: {
            line: 89,
            column: 64
          }
        }],
        line: 89
      },
      "3": {
        loc: {
          start: {
            line: 111,
            column: 11
          },
          end: {
            line: 111,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 111,
            column: 43
          },
          end: {
            line: 111,
            column: 55
          }
        }, {
          start: {
            line: 111,
            column: 58
          },
          end: {
            line: 111,
            column: 67
          }
        }],
        line: 111
      },
      "4": {
        loc: {
          start: {
            line: 112,
            column: 11
          },
          end: {
            line: 112,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 112,
            column: 42
          },
          end: {
            line: 112,
            column: 55
          }
        }, {
          start: {
            line: 112,
            column: 58
          },
          end: {
            line: 112,
            column: 67
          }
        }],
        line: 112
      },
      "5": {
        loc: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 125,
            column: 15
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 125,
            column: 14
          },
          end: {
            line: 125,
            column: 15
          }
        }],
        line: 125
      },
      "6": {
        loc: {
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 126,
            column: 21
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 126,
            column: 17
          },
          end: {
            line: 126,
            column: 21
          }
        }],
        line: 126
      },
      "7": {
        loc: {
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 127,
            column: 17
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 127,
            column: 13
          },
          end: {
            line: 127,
            column: 17
          }
        }],
        line: 127
      },
      "8": {
        loc: {
          start: {
            line: 128,
            column: 4
          },
          end: {
            line: 128,
            column: 20
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 128,
            column: 16
          },
          end: {
            line: 128,
            column: 20
          }
        }],
        line: 128
      },
      "9": {
        loc: {
          start: {
            line: 138,
            column: 6
          },
          end: {
            line: 146,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 6
          },
          end: {
            line: 146,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "10": {
        loc: {
          start: {
            line: 151,
            column: 6
          },
          end: {
            line: 158,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 6
          },
          end: {
            line: 158,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "11": {
        loc: {
          start: {
            line: 173,
            column: 6
          },
          end: {
            line: 184,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 6
          },
          end: {
            line: 184,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "12": {
        loc: {
          start: {
            line: 187,
            column: 6
          },
          end: {
            line: 189,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 6
          },
          end: {
            line: 189,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "13": {
        loc: {
          start: {
            line: 200,
            column: 2
          },
          end: {
            line: 208,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 2
          },
          end: {
            line: 208,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "14": {
        loc: {
          start: {
            line: 222,
            column: 29
          },
          end: {
            line: 222,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 222,
            column: 41
          },
          end: {
            line: 222,
            column: 51
          }
        }],
        line: 222
      },
      "15": {
        loc: {
          start: {
            line: 224,
            column: 2
          },
          end: {
            line: 227,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 2
          },
          end: {
            line: 227,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "16": {
        loc: {
          start: {
            line: 230,
            column: 2
          },
          end: {
            line: 233,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 2
          },
          end: {
            line: 233,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "17": {
        loc: {
          start: {
            line: 232,
            column: 11
          },
          end: {
            line: 232,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 232,
            column: 11
          },
          end: {
            line: 232,
            column: 33
          }
        }, {
          start: {
            line: 232,
            column: 37
          },
          end: {
            line: 232,
            column: 65
          }
        }],
        line: 232
      },
      "18": {
        loc: {
          start: {
            line: 241,
            column: 46
          },
          end: {
            line: 241,
            column: 69
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 241,
            column: 62
          },
          end: {
            line: 241,
            column: 69
          }
        }],
        line: 241
      },
      "19": {
        loc: {
          start: {
            line: 241,
            column: 71
          },
          end: {
            line: 241,
            column: 84
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 241,
            column: 80
          },
          end: {
            line: 241,
            column: 84
          }
        }],
        line: 241
      },
      "20": {
        loc: {
          start: {
            line: 245,
            column: 2
          },
          end: {
            line: 247,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 2
          },
          end: {
            line: 247,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "21": {
        loc: {
          start: {
            line: 255,
            column: 4
          },
          end: {
            line: 257,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 4
          },
          end: {
            line: 257,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "22": {
        loc: {
          start: {
            line: 263,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 263,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 263
      },
      "23": {
        loc: {
          start: {
            line: 278,
            column: 45
          },
          end: {
            line: 278,
            column: 71
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 278,
            column: 61
          },
          end: {
            line: 278,
            column: 71
          }
        }],
        line: 278
      },
      "24": {
        loc: {
          start: {
            line: 278,
            column: 73
          },
          end: {
            line: 278,
            column: 86
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 278,
            column: 82
          },
          end: {
            line: 278,
            column: 86
          }
        }],
        line: 278
      },
      "25": {
        loc: {
          start: {
            line: 296,
            column: 48
          },
          end: {
            line: 296,
            column: 74
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 296,
            column: 64
          },
          end: {
            line: 296,
            column: 74
          }
        }],
        line: 296
      },
      "26": {
        loc: {
          start: {
            line: 296,
            column: 76
          },
          end: {
            line: 296,
            column: 89
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 296,
            column: 85
          },
          end: {
            line: 296,
            column: 89
          }
        }],
        line: 296
      },
      "27": {
        loc: {
          start: {
            line: 314,
            column: 41
          },
          end: {
            line: 314,
            column: 67
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 314,
            column: 57
          },
          end: {
            line: 314,
            column: 67
          }
        }],
        line: 314
      },
      "28": {
        loc: {
          start: {
            line: 314,
            column: 69
          },
          end: {
            line: 314,
            column: 82
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 314,
            column: 78
          },
          end: {
            line: 314,
            column: 82
          }
        }],
        line: 314
      },
      "29": {
        loc: {
          start: {
            line: 332,
            column: 42
          },
          end: {
            line: 332,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 332,
            column: 58
          },
          end: {
            line: 332,
            column: 65
          }
        }],
        line: 332
      },
      "30": {
        loc: {
          start: {
            line: 332,
            column: 67
          },
          end: {
            line: 332,
            column: 80
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 332,
            column: 76
          },
          end: {
            line: 332,
            column: 80
          }
        }],
        line: 332
      },
      "31": {
        loc: {
          start: {
            line: 350,
            column: 28
          },
          end: {
            line: 350,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 350,
            column: 45
          },
          end: {
            line: 350,
            column: 50
          }
        }],
        line: 350
      },
      "32": {
        loc: {
          start: {
            line: 351,
            column: 21
          },
          end: {
            line: 351,
            column: 33
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 351,
            column: 31
          },
          end: {
            line: 351,
            column: 33
          }
        }],
        line: 351
      },
      "33": {
        loc: {
          start: {
            line: 352,
            column: 20
          },
          end: {
            line: 352,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 352,
            column: 20
          },
          end: {
            line: 352,
            column: 35
          }
        }, {
          start: {
            line: 352,
            column: 39
          },
          end: {
            line: 352,
            column: 53
          }
        }],
        line: 352
      },
      "34": {
        loc: {
          start: {
            line: 368,
            column: 6
          },
          end: {
            line: 373,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 368,
            column: 6
          },
          end: {
            line: 373,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 368
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0],
      "7": [0],
      "8": [0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0],
      "19": [0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0],
      "24": [0],
      "25": [0],
      "26": [0],
      "27": [0],
      "28": [0],
      "29": [0],
      "30": [0],
      "31": [0],
      "32": [0],
      "33": [0, 0],
      "34": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6df7c5c00e3b4129d93a5902644f14a182854300"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_qc9526doq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_qc9526doq();
/**
 * External API Timeout Management Utility
 * Provides standardized timeout configurations and utilities for all external service calls
 * Optimized for Lambda environment with consistent error handling
 */

// Standard timeout configurations for different service types
const TIMEOUT_CONFIGS =
/* istanbul ignore next */
(cov_qc9526doq().s[0]++, {
  // Database operations
  database: {
    connect: 15000,
    // 15 seconds - database connection
    query: 10000,
    // 10 seconds - standard query
    transaction: 30000,
    // 30 seconds - complex transactions
    healthCheck: 5000 // 5 seconds - health checks
  },
  // External API calls
  api: {
    fast: 5000,
    // 5 seconds - simple data requests
    standard: 10000,
    // 10 seconds - standard API calls
    slow: 15000,
    // 15 seconds - complex operations
    upload: 30000,
    // 30 seconds - file uploads
    download: 45000 // 45 seconds - file downloads
  },
  // Broker/Trading APIs (mission-critical)
  trading: {
    quotes: 8000,
    // 8 seconds - real-time quotes
    orders: 12000,
    // 12 seconds - order placement
    positions: 10000,
    // 10 seconds - position retrieval
    history: 15000,
    // 15 seconds - trade history
    account: 10000 // 10 seconds - account info
  },
  // Market data services
  market_data: {
    realtime: 8000,
    // 8 seconds - real-time data
    historical: 15000,
    // 15 seconds - historical data
    news: 10000,
    // 10 seconds - news feeds
    calendar: 5000,
    // 5 seconds - market calendar
    fundamental: 12000 // 12 seconds - fundamental data
  },
  // Authentication services
  auth: {
    login: 10000,
    // 10 seconds - login operations
    token_verify: 5000,
    // 5 seconds - token verification
    refresh: 8000,
    // 8 seconds - token refresh
    logout: 3000 // 3 seconds - logout
  },
  // AWS services
  aws: {
    secrets: 10000,
    // 10 seconds - secrets manager
    cognito: 8000,
    // 8 seconds - cognito operations
    s3: 15000,
    // 15 seconds - S3 operations
    lambda: 25000 // 25 seconds - lambda invocations
  }
});

/**
 * Create a promise that rejects after specified timeout
 */
function createTimeoutPromise(timeoutMs, operation =
/* istanbul ignore next */
(cov_qc9526doq().b[0][0]++, 'operation')) {
  /* istanbul ignore next */
  cov_qc9526doq().f[0]++;
  cov_qc9526doq().s[1]++;
  return new Promise((_, reject) => {
    /* istanbul ignore next */
    cov_qc9526doq().f[1]++;
    cov_qc9526doq().s[2]++;
    setTimeout(() => {
      /* istanbul ignore next */
      cov_qc9526doq().f[2]++;
      const error =
      /* istanbul ignore next */
      (cov_qc9526doq().s[3]++, new Error(`${operation} timeout after ${timeoutMs}ms`));
      /* istanbul ignore next */
      cov_qc9526doq().s[4]++;
      error.code = 'TIMEOUT';
      /* istanbul ignore next */
      cov_qc9526doq().s[5]++;
      error.timeout = timeoutMs;
      /* istanbul ignore next */
      cov_qc9526doq().s[6]++;
      error.operation = operation;
      /* istanbul ignore next */
      cov_qc9526doq().s[7]++;
      reject(error);
    }, timeoutMs);
  });
}

/**
 * Wrap a promise with timeout functionality
 */
function withTimeout(promise, timeoutMs, operation =
/* istanbul ignore next */
(cov_qc9526doq().b[1][0]++, 'operation')) {
  /* istanbul ignore next */
  cov_qc9526doq().f[3]++;
  cov_qc9526doq().s[8]++;
  return Promise.race([promise, createTimeoutPromise(timeoutMs, operation)]);
}

/**
 * Create a timeout wrapper for async functions
 */
function createTimeoutWrapper(timeoutMs, operation =
/* istanbul ignore next */
(cov_qc9526doq().b[2][0]++, 'operation')) {
  /* istanbul ignore next */
  cov_qc9526doq().f[4]++;
  cov_qc9526doq().s[9]++;
  return asyncFunction => {
    /* istanbul ignore next */
    cov_qc9526doq().f[5]++;
    cov_qc9526doq().s[10]++;
    return async (...args) => {
      /* istanbul ignore next */
      cov_qc9526doq().f[6]++;
      cov_qc9526doq().s[11]++;
      return withTimeout(asyncFunction(...args), timeoutMs, operation);
    };
  };
}

/**
 * Execute multiple operations with individual timeouts
 */
async function executeWithTimeouts(operations) {
  /* istanbul ignore next */
  cov_qc9526doq().f[7]++;
  const results =
  /* istanbul ignore next */
  (cov_qc9526doq().s[12]++, await Promise.allSettled(operations.map(({
    promise,
    timeout,
    operation
  }) => {
    /* istanbul ignore next */
    cov_qc9526doq().f[8]++;
    cov_qc9526doq().s[13]++;
    return withTimeout(promise, timeout, operation);
  })));
  /* istanbul ignore next */
  cov_qc9526doq().s[14]++;
  return results.map((result, index) => {
    /* istanbul ignore next */
    cov_qc9526doq().f[9]++;
    cov_qc9526doq().s[15]++;
    return {
      operation: operations[index].operation,
      timeout: operations[index].timeout,
      status: result.status,
      value: result.status === 'fulfilled' ?
      /* istanbul ignore next */
      (cov_qc9526doq().b[3][0]++, result.value) :
      /* istanbul ignore next */
      (cov_qc9526doq().b[3][1]++, undefined),
      error: result.status === 'rejected' ?
      /* istanbul ignore next */
      (cov_qc9526doq().b[4][0]++, result.reason) :
      /* istanbul ignore next */
      (cov_qc9526doq().b[4][1]++, undefined)
    };
  });
}

/**
 * Standardized external API call wrapper with timeout and retry logic
 */
async function callExternalApi(config) {
  /* istanbul ignore next */
  cov_qc9526doq().f[10]++;
  const {
    apiCall,
    // Function that returns a promise
    service,
    // Service name (e.g., 'alpaca', 'cognito')
    operation,
    // Operation name (e.g., 'getQuotes', 'login')
    timeout,
    // Timeout in milliseconds
    retries =
    /* istanbul ignore next */
    (cov_qc9526doq().b[5][0]++, 0),
    // Number of retries
    retryDelay =
    /* istanbul ignore next */
    (cov_qc9526doq().b[6][0]++, 1000),
    // Delay between retries
    logger =
    /* istanbul ignore next */
    (cov_qc9526doq().b[7][0]++, null),
    // Optional logger instance
    requestId =
    /* istanbul ignore next */
    (cov_qc9526doq().b[8][0]++, null) // Optional request ID for correlation
  } =
  /* istanbul ignore next */
  (cov_qc9526doq().s[16]++, config);
  const operationName =
  /* istanbul ignore next */
  (cov_qc9526doq().s[17]++, `${service}.${operation}`);
  let lastError;
  /* istanbul ignore next */
  cov_qc9526doq().s[18]++;
  for (let attempt =
  /* istanbul ignore next */
  (cov_qc9526doq().s[19]++, 0); attempt <= retries; attempt++) {
    const startTime =
    /* istanbul ignore next */
    (cov_qc9526doq().s[20]++, Date.now());
    /* istanbul ignore next */
    cov_qc9526doq().s[21]++;
    try {
      /* istanbul ignore next */
      cov_qc9526doq().s[22]++;
      if (logger) {
        /* istanbul ignore next */
        cov_qc9526doq().b[9][0]++;
        cov_qc9526doq().s[23]++;
        logger.info(`External API call started: ${operationName}`, {
          attempt: attempt + 1,
          maxAttempts: retries + 1,
          timeout,
          service,
          operation
        });
      } else
      /* istanbul ignore next */
      {
        cov_qc9526doq().b[9][1]++;
      }
      const result =
      /* istanbul ignore next */
      (cov_qc9526doq().s[24]++, await withTimeout(apiCall(), timeout, operationName));
      const duration =
      /* istanbul ignore next */
      (cov_qc9526doq().s[25]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_qc9526doq().s[26]++;
      if (logger) {
        /* istanbul ignore next */
        cov_qc9526doq().b[10][0]++;
        cov_qc9526doq().s[27]++;
        logger.info(`External API call succeeded: ${operationName}`, {
          duration,
          attempt: attempt + 1,
          service,
          operation
        });
      } else
      /* istanbul ignore next */
      {
        cov_qc9526doq().b[10][1]++;
      }
      cov_qc9526doq().s[28]++;
      return {
        success: true,
        result,
        duration,
        attempts: attempt + 1,
        service,
        operation
      };
    } catch (error) {
      const duration =
      /* istanbul ignore next */
      (cov_qc9526doq().s[29]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_qc9526doq().s[30]++;
      lastError = error;
      /* istanbul ignore next */
      cov_qc9526doq().s[31]++;
      if (logger) {
        /* istanbul ignore next */
        cov_qc9526doq().b[11][0]++;
        cov_qc9526doq().s[32]++;
        logger.warn(`External API call failed: ${operationName}`, {
          error: error.message,
          duration,
          attempt: attempt + 1,
          maxAttempts: retries + 1,
          service,
          operation,
          errorCode: error.code,
          isTimeout: error.code === 'TIMEOUT'
        });
      } else
      /* istanbul ignore next */
      {
        cov_qc9526doq().b[11][1]++;
      }

      // If this was the last attempt, break
      cov_qc9526doq().s[33]++;
      if (attempt === retries) {
        /* istanbul ignore next */
        cov_qc9526doq().b[12][0]++;
        cov_qc9526doq().s[34]++;
        break;
      } else
      /* istanbul ignore next */
      {
        cov_qc9526doq().b[12][1]++;
      }

      // Wait before retry (with exponential backoff)
      const delay =
      /* istanbul ignore next */
      (cov_qc9526doq().s[35]++, retryDelay * Math.pow(2, attempt));
      /* istanbul ignore next */
      cov_qc9526doq().s[36]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_qc9526doq().f[11]++;
        cov_qc9526doq().s[37]++;
        return setTimeout(resolve, delay);
      });
    }
  }

  // All attempts failed
  const totalDuration =
  /* istanbul ignore next */
  (cov_qc9526doq().s[38]++, Date.now() - (Date.now() - (retries + 1) * 1000)); // Approximate
  /* istanbul ignore next */
  cov_qc9526doq().s[39]++;
  if (logger) {
    /* istanbul ignore next */
    cov_qc9526doq().b[13][0]++;
    cov_qc9526doq().s[40]++;
    logger.error(`External API call failed after all attempts: ${operationName}`, {
      error: lastError.message,
      totalAttempts: retries + 1,
      totalDuration,
      service,
      operation
    });
  } else
  /* istanbul ignore next */
  {
    cov_qc9526doq().b[13][1]++;
  }
  cov_qc9526doq().s[41]++;
  return {
    success: false,
    error: lastError,
    attempts: retries + 1,
    service,
    operation
  };
}

/**
 * Get timeout for specific service and operation
 */
function getTimeout(service, operation =
/* istanbul ignore next */
(cov_qc9526doq().b[14][0]++, 'standard')) {
  /* istanbul ignore next */
  cov_qc9526doq().f[12]++;
  const serviceConfig =
  /* istanbul ignore next */
  (cov_qc9526doq().s[42]++, TIMEOUT_CONFIGS[service]);
  /* istanbul ignore next */
  cov_qc9526doq().s[43]++;
  if (!serviceConfig) {
    /* istanbul ignore next */
    cov_qc9526doq().b[15][0]++;
    cov_qc9526doq().s[44]++;
    console.warn(`Unknown service '${service}', using default timeout`);
    /* istanbul ignore next */
    cov_qc9526doq().s[45]++;
    return TIMEOUT_CONFIGS.api.standard;
  } else
  /* istanbul ignore next */
  {
    cov_qc9526doq().b[15][1]++;
  }
  const timeout =
  /* istanbul ignore next */
  (cov_qc9526doq().s[46]++, serviceConfig[operation]);
  /* istanbul ignore next */
  cov_qc9526doq().s[47]++;
  if (!timeout) {
    /* istanbul ignore next */
    cov_qc9526doq().b[16][0]++;
    cov_qc9526doq().s[48]++;
    console.warn(`Unknown operation '${operation}' for service '${service}', using standard timeout`);
    /* istanbul ignore next */
    cov_qc9526doq().s[49]++;
    return /* istanbul ignore next */(cov_qc9526doq().b[17][0]++, serviceConfig.standard) ||
    /* istanbul ignore next */
    (cov_qc9526doq().b[17][1]++, TIMEOUT_CONFIGS.api.standard);
  } else
  /* istanbul ignore next */
  {
    cov_qc9526doq().b[16][1]++;
  }
  cov_qc9526doq().s[50]++;
  return timeout;
}

/**
 * Database operation wrapper with standardized timeouts
 */
async function withDatabaseTimeout(operation, operationType =
/* istanbul ignore next */
(cov_qc9526doq().b[18][0]++, 'query'), logger =
/* istanbul ignore next */
(cov_qc9526doq().b[19][0]++, null)) {
  /* istanbul ignore next */
  cov_qc9526doq().f[13]++;
  const timeout =
  /* istanbul ignore next */
  (cov_qc9526doq().s[51]++, getTimeout('database', operationType));
  const operationName =
  /* istanbul ignore next */
  (cov_qc9526doq().s[52]++, `database.${operationType}`);
  /* istanbul ignore next */
  cov_qc9526doq().s[53]++;
  if (logger) {
    /* istanbul ignore next */
    cov_qc9526doq().b[20][0]++;
    cov_qc9526doq().s[54]++;
    logger.debug(`Database operation started: ${operationName}`, {
      timeout
    });
  } else
  /* istanbul ignore next */
  {
    cov_qc9526doq().b[20][1]++;
  }
  const startTime =
  /* istanbul ignore next */
  (cov_qc9526doq().s[55]++, Date.now());
  /* istanbul ignore next */
  cov_qc9526doq().s[56]++;
  try {
    const result =
    /* istanbul ignore next */
    (cov_qc9526doq().s[57]++, await withTimeout(operation, timeout, operationName));
    const duration =
    /* istanbul ignore next */
    (cov_qc9526doq().s[58]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_qc9526doq().s[59]++;
    if (logger) {
      /* istanbul ignore next */
      cov_qc9526doq().b[21][0]++;
      cov_qc9526doq().s[60]++;
      logger.debug(`Database operation completed: ${operationName}`, {
        duration
      });
    } else
    /* istanbul ignore next */
    {
      cov_qc9526doq().b[21][1]++;
    }
    cov_qc9526doq().s[61]++;
    return result;
  } catch (error) {
    const duration =
    /* istanbul ignore next */
    (cov_qc9526doq().s[62]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_qc9526doq().s[63]++;
    if (logger) {
      /* istanbul ignore next */
      cov_qc9526doq().b[22][0]++;
      cov_qc9526doq().s[64]++;
      logger.error(`Database operation failed: ${operationName}`, {
        error: error.message,
        duration,
        isTimeout: error.code === 'TIMEOUT'
      });
    } else
    /* istanbul ignore next */
    {
      cov_qc9526doq().b[22][1]++;
    }
    cov_qc9526doq().s[65]++;
    throw error;
  }
}

/**
 * Trading API wrapper with standardized timeouts and error handling
 */
async function withTradingTimeout(operation, operationType =
/* istanbul ignore next */
(cov_qc9526doq().b[23][0]++, 'standard'), logger =
/* istanbul ignore next */
(cov_qc9526doq().b[24][0]++, null)) {
  /* istanbul ignore next */
  cov_qc9526doq().f[14]++;
  const timeout =
  /* istanbul ignore next */
  (cov_qc9526doq().s[66]++, getTimeout('trading', operationType));
  const operationName =
  /* istanbul ignore next */
  (cov_qc9526doq().s[67]++, `trading.${operationType}`);
  /* istanbul ignore next */
  cov_qc9526doq().s[68]++;
  return callExternalApi({
    apiCall: operation,
    service: 'trading',
    operation: operationType,
    timeout,
    retries: 1,
    // Trading operations get one retry
    retryDelay: 500,
    logger
  });
}

/**
 * Market data API wrapper with standardized timeouts
 */
async function withMarketDataTimeout(operation, operationType =
/* istanbul ignore next */
(cov_qc9526doq().b[25][0]++, 'realtime'), logger =
/* istanbul ignore next */
(cov_qc9526doq().b[26][0]++, null)) {
  /* istanbul ignore next */
  cov_qc9526doq().f[15]++;
  const timeout =
  /* istanbul ignore next */
  (cov_qc9526doq().s[69]++, getTimeout('market_data', operationType));
  const operationName =
  /* istanbul ignore next */
  (cov_qc9526doq().s[70]++, `market_data.${operationType}`);
  /* istanbul ignore next */
  cov_qc9526doq().s[71]++;
  return callExternalApi({
    apiCall: operation,
    service: 'market_data',
    operation: operationType,
    timeout,
    retries: 2,
    // Market data gets more retries
    retryDelay: 1000,
    logger
  });
}

/**
 * AWS service wrapper with standardized timeouts
 */
async function withAwsTimeout(operation, operationType =
/* istanbul ignore next */
(cov_qc9526doq().b[27][0]++, 'standard'), logger =
/* istanbul ignore next */
(cov_qc9526doq().b[28][0]++, null)) {
  /* istanbul ignore next */
  cov_qc9526doq().f[16]++;
  const timeout =
  /* istanbul ignore next */
  (cov_qc9526doq().s[72]++, getTimeout('aws', operationType));
  const operationName =
  /* istanbul ignore next */
  (cov_qc9526doq().s[73]++, `aws.${operationType}`);
  /* istanbul ignore next */
  cov_qc9526doq().s[74]++;
  return callExternalApi({
    apiCall: operation,
    service: 'aws',
    operation: operationType,
    timeout,
    retries: 1,
    retryDelay: 1000,
    logger
  });
}

/**
 * Authentication service wrapper with standardized timeouts
 */
async function withAuthTimeout(operation, operationType =
/* istanbul ignore next */
(cov_qc9526doq().b[29][0]++, 'login'), logger =
/* istanbul ignore next */
(cov_qc9526doq().b[30][0]++, null)) {
  /* istanbul ignore next */
  cov_qc9526doq().f[17]++;
  const timeout =
  /* istanbul ignore next */
  (cov_qc9526doq().s[75]++, getTimeout('auth', operationType));
  const operationName =
  /* istanbul ignore next */
  (cov_qc9526doq().s[76]++, `auth.${operationType}`);
  /* istanbul ignore next */
  cov_qc9526doq().s[77]++;
  return callExternalApi({
    apiCall: operation,
    service: 'auth',
    operation: operationType,
    timeout,
    retries: 1,
    retryDelay: 500,
    logger
  });
}

/**
 * Create a timeout-aware fetch wrapper
 */
function createTimeoutFetch(defaultTimeout =
/* istanbul ignore next */
(cov_qc9526doq().b[31][0]++, 10000)) {
  /* istanbul ignore next */
  cov_qc9526doq().f[18]++;
  cov_qc9526doq().s[78]++;
  return async (url, options =
  /* istanbul ignore next */
  (cov_qc9526doq().b[32][0]++, {})) => {
    /* istanbul ignore next */
    cov_qc9526doq().f[19]++;
    const timeout =
    /* istanbul ignore next */
    (cov_qc9526doq().s[79]++,
    /* istanbul ignore next */
    (cov_qc9526doq().b[33][0]++, options.timeout) ||
    /* istanbul ignore next */
    (cov_qc9526doq().b[33][1]++, defaultTimeout));
    const controller =
    /* istanbul ignore next */
    (cov_qc9526doq().s[80]++, new AbortController());
    const timeoutId =
    /* istanbul ignore next */
    (cov_qc9526doq().s[81]++, setTimeout(() => {
      /* istanbul ignore next */
      cov_qc9526doq().f[20]++;
      cov_qc9526doq().s[82]++;
      return controller.abort();
    }, timeout));
    /* istanbul ignore next */
    cov_qc9526doq().s[83]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_qc9526doq().s[84]++, await fetch(url, {
        ...options,
        signal: controller.signal
      }));
      /* istanbul ignore next */
      cov_qc9526doq().s[85]++;
      clearTimeout(timeoutId);
      /* istanbul ignore next */
      cov_qc9526doq().s[86]++;
      return response;
    } catch (error) {
      /* istanbul ignore next */
      cov_qc9526doq().s[87]++;
      clearTimeout(timeoutId);
      /* istanbul ignore next */
      cov_qc9526doq().s[88]++;
      if (error.name === 'AbortError') {
        /* istanbul ignore next */
        cov_qc9526doq().b[34][0]++;
        const timeoutError =
        /* istanbul ignore next */
        (cov_qc9526doq().s[89]++, new Error(`Fetch timeout after ${timeout}ms`));
        /* istanbul ignore next */
        cov_qc9526doq().s[90]++;
        timeoutError.code = 'TIMEOUT';
        /* istanbul ignore next */
        cov_qc9526doq().s[91]++;
        timeoutError.timeout = timeout;
        /* istanbul ignore next */
        cov_qc9526doq().s[92]++;
        throw timeoutError;
      } else
      /* istanbul ignore next */
      {
        cov_qc9526doq().b[34][1]++;
      }
      cov_qc9526doq().s[93]++;
      throw error;
    }
  };
}
/* istanbul ignore next */
cov_qc9526doq().s[94]++;
module.exports = {
  // Core timeout utilities
  withTimeout,
  createTimeoutPromise,
  createTimeoutWrapper,
  executeWithTimeouts,
  // Service-specific wrappers
  withDatabaseTimeout,
  withTradingTimeout,
  withMarketDataTimeout,
  withAwsTimeout,
  withAuthTimeout,
  // External API utilities
  callExternalApi,
  createTimeoutFetch,
  // Configuration utilities
  getTimeout,
  TIMEOUT_CONFIGS
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,