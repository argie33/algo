14ac1dc8da7c087bdd29a53ab5dc6374
/* istanbul ignore next */
function cov_1rozt51sdu() {
  var path = "/home/stocks/algo/webapp/lambda/utils/databaseConnectionManager.js";
  var hash = "27979d2bb1e6aa360c31cb9949a38ba284319e68";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/utils/databaseConnectionManager.js",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 30
        }
      },
      "1": {
        start: {
          line: 5,
          column: 31
        },
        end: {
          line: 5,
          column: 66
        }
      },
      "2": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 21
        }
      },
      "3": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 55
        }
      },
      "4": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 31
        }
      },
      "5": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 23
        }
      },
      "6": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 29
        }
      },
      "7": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 37
        }
      },
      "8": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 20,
          column: 5
        }
      },
      "9": {
        start: {
          line: 19,
          column: 6
        },
        end: {
          line: 19,
          column: 23
        }
      },
      "10": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "11": {
        start: {
          line: 23,
          column: 6
        },
        end: {
          line: 23,
          column: 81
        }
      },
      "12": {
        start: {
          line: 26,
          column: 6
        },
        end: {
          line: 26,
          column: 45
        }
      },
      "13": {
        start: {
          line: 29,
          column: 6
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "14": {
        start: {
          line: 45,
          column: 6
        },
        end: {
          line: 45,
          column: 34
        }
      },
      "15": {
        start: {
          line: 47,
          column: 6
        },
        end: {
          line: 47,
          column: 32
        }
      },
      "16": {
        start: {
          line: 48,
          column: 6
        },
        end: {
          line: 48,
          column: 68
        }
      },
      "17": {
        start: {
          line: 50,
          column: 6
        },
        end: {
          line: 50,
          column: 23
        }
      },
      "18": {
        start: {
          line: 52,
          column: 6
        },
        end: {
          line: 52,
          column: 64
        }
      },
      "19": {
        start: {
          line: 53,
          column: 6
        },
        end: {
          line: 53,
          column: 23
        }
      },
      "20": {
        start: {
          line: 54,
          column: 6
        },
        end: {
          line: 54,
          column: 33
        }
      },
      "21": {
        start: {
          line: 55,
          column: 6
        },
        end: {
          line: 55,
          column: 18
        }
      },
      "22": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 71,
          column: 5
        }
      },
      "23": {
        start: {
          line: 62,
          column: 6
        },
        end: {
          line: 62,
          column: 59
        }
      },
      "24": {
        start: {
          line: 63,
          column: 6
        },
        end: {
          line: 70,
          column: 8
        }
      },
      "25": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 110,
          column: 5
        }
      },
      "26": {
        start: {
          line: 75,
          column: 6
        },
        end: {
          line: 75,
          column: 59
        }
      },
      "27": {
        start: {
          line: 76,
          column: 62
        },
        end: {
          line: 76,
          column: 104
        }
      },
      "28": {
        start: {
          line: 78,
          column: 21
        },
        end: {
          line: 80,
          column: 8
        }
      },
      "29": {
        start: {
          line: 82,
          column: 6
        },
        end: {
          line: 109,
          column: 7
        }
      },
      "30": {
        start: {
          line: 83,
          column: 25
        },
        end: {
          line: 85,
          column: 11
        }
      },
      "31": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "32": {
        start: {
          line: 90,
          column: 10
        },
        end: {
          line: 90,
          column: 53
        }
      },
      "33": {
        start: {
          line: 92,
          column: 10
        },
        end: {
          line: 92,
          column: 72
        }
      },
      "34": {
        start: {
          line: 93,
          column: 10
        },
        end: {
          line: 93,
          column: 80
        }
      },
      "35": {
        start: {
          line: 94,
          column: 10
        },
        end: {
          line: 94,
          column: 92
        }
      },
      "36": {
        start: {
          line: 95,
          column: 10
        },
        end: {
          line: 95,
          column: 89
        }
      },
      "37": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 105,
          column: 10
        }
      },
      "38": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 81
        }
      },
      "39": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 20
        }
      },
      "40": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 112,
          column: 83
        }
      },
      "41": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 124,
          column: 26
        }
      },
      "42": {
        start: {
          line: 117,
          column: 21
        },
        end: {
          line: 117,
          column: 46
        }
      },
      "43": {
        start: {
          line: 118,
          column: 6
        },
        end: {
          line: 123,
          column: 7
        }
      },
      "44": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 39
        }
      },
      "45": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 20
        }
      },
      "46": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 25
        }
      },
      "47": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 131,
          column: 5
        }
      },
      "48": {
        start: {
          line: 130,
          column: 6
        },
        end: {
          line: 130,
          column: 30
        }
      },
      "49": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 26
        }
      },
      "50": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 142,
          column: 5
        }
      },
      "51": {
        start: {
          line: 136,
          column: 6
        },
        end: {
          line: 141,
          column: 7
        }
      },
      "52": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 36
        }
      },
      "53": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 35
        }
      },
      "54": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 63
        }
      },
      "55": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 153,
          column: 25
        }
      },
      "56": {
        start: {
          line: 146,
          column: 21
        },
        end: {
          line: 146,
          column: 46
        }
      },
      "57": {
        start: {
          line: 147,
          column: 6
        },
        end: {
          line: 152,
          column: 7
        }
      },
      "58": {
        start: {
          line: 148,
          column: 23
        },
        end: {
          line: 148,
          column: 55
        }
      },
      "59": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 22
        }
      },
      "60": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 151,
          column: 25
        }
      },
      "61": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 165,
          column: 6
        }
      },
      "62": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 170,
          column: 72
        }
      },
      "63": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 171,
          column: 37
        }
      },
      "64": {
        start: {
          line: 173,
          column: 4
        },
        end: {
          line: 176,
          column: 5
        }
      },
      "65": {
        start: {
          line: 174,
          column: 6
        },
        end: {
          line: 174,
          column: 28
        }
      },
      "66": {
        start: {
          line: 175,
          column: 6
        },
        end: {
          line: 175,
          column: 23
        }
      },
      "67": {
        start: {
          line: 178,
          column: 4
        },
        end: {
          line: 178,
          column: 31
        }
      },
      "68": {
        start: {
          line: 179,
          column: 4
        },
        end: {
          line: 179,
          column: 28
        }
      },
      "69": {
        start: {
          line: 180,
          column: 4
        },
        end: {
          line: 180,
          column: 63
        }
      },
      "70": {
        start: {
          line: 185,
          column: 0
        },
        end: {
          line: 185,
          column: 49
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 2
          },
          end: {
            line: 8,
            column: 3
          }
        },
        loc: {
          start: {
            line: 8,
            column: 16
          },
          end: {
            line: 15,
            column: 3
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 2
          },
          end: {
            line: 17,
            column: 3
          }
        },
        loc: {
          start: {
            line: 17,
            column: 21
          },
          end: {
            line: 57,
            column: 3
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 59,
            column: 2
          },
          end: {
            line: 59,
            column: 3
          }
        },
        loc: {
          start: {
            line: 59,
            column: 22
          },
          end: {
            line: 113,
            column: 3
          }
        },
        line: 59
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 115,
            column: 2
          },
          end: {
            line: 115,
            column: 3
          }
        },
        loc: {
          start: {
            line: 115,
            column: 25
          },
          end: {
            line: 125,
            column: 3
          }
        },
        line: 115
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 116,
            column: 39
          },
          end: {
            line: 116,
            column: 40
          }
        },
        loc: {
          start: {
            line: 116,
            column: 51
          },
          end: {
            line: 124,
            column: 5
          }
        },
        line: 116
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 127,
            column: 2
          },
          end: {
            line: 127,
            column: 3
          }
        },
        loc: {
          start: {
            line: 127,
            column: 33
          },
          end: {
            line: 154,
            column: 3
          }
        },
        line: 127
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 145,
            column: 39
          },
          end: {
            line: 145,
            column: 40
          }
        },
        loc: {
          start: {
            line: 145,
            column: 51
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 145
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 156,
            column: 2
          },
          end: {
            line: 156,
            column: 3
          }
        },
        loc: {
          start: {
            line: 156,
            column: 14
          },
          end: {
            line: 166,
            column: 3
          }
        },
        line: 156
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 169,
            column: 2
          },
          end: {
            line: 169,
            column: 3
          }
        },
        loc: {
          start: {
            line: 169,
            column: 21
          },
          end: {
            line: 181,
            column: 3
          }
        },
        line: 169
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 18,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 18,
            column: 26
          }
        }, {
          start: {
            line: 18,
            column: 30
          },
          end: {
            line: 18,
            column: 39
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "3": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 61,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 61,
            column: 27
          }
        }, {
          start: {
            line: 61,
            column: 31
          },
          end: {
            line: 61,
            column: 50
          }
        }, {
          start: {
            line: 61,
            column: 54
          },
          end: {
            line: 61,
            column: 77
          }
        }],
        line: 61
      },
      "4": {
        loc: {
          start: {
            line: 65,
            column: 14
          },
          end: {
            line: 65,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 14
          },
          end: {
            line: 65,
            column: 43
          }
        }, {
          start: {
            line: 65,
            column: 47
          },
          end: {
            line: 65,
            column: 51
          }
        }],
        line: 65
      },
      "5": {
        loc: {
          start: {
            line: 66,
            column: 18
          },
          end: {
            line: 66,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 18
          },
          end: {
            line: 66,
            column: 37
          }
        }, {
          start: {
            line: 66,
            column: 41
          },
          end: {
            line: 66,
            column: 49
          }
        }],
        line: 66
      },
      "6": {
        loc: {
          start: {
            line: 69,
            column: 13
          },
          end: {
            line: 69,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 69,
            column: 45
          },
          end: {
            line: 69,
            column: 74
          }
        }, {
          start: {
            line: 69,
            column: 77
          },
          end: {
            line: 69,
            column: 82
          }
        }],
        line: 69
      },
      "7": {
        loc: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 110,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 110,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "8": {
        loc: {
          start: {
            line: 79,
            column: 16
          },
          end: {
            line: 79,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 16
          },
          end: {
            line: 79,
            column: 38
          }
        }, {
          start: {
            line: 79,
            column: 42
          },
          end: {
            line: 79,
            column: 53
          }
        }],
        line: 79
      },
      "9": {
        loc: {
          start: {
            line: 99,
            column: 16
          },
          end: {
            line: 99,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 16
          },
          end: {
            line: 99,
            column: 27
          }
        }, {
          start: {
            line: 99,
            column: 31
          },
          end: {
            line: 99,
            column: 50
          }
        }],
        line: 99
      },
      "10": {
        loc: {
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 100,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 100,
            column: 27
          }
        }, {
          start: {
            line: 100,
            column: 31
          },
          end: {
            line: 100,
            column: 60
          }
        }, {
          start: {
            line: 100,
            column: 64
          },
          end: {
            line: 100,
            column: 68
          }
        }],
        line: 100
      },
      "11": {
        loc: {
          start: {
            line: 101,
            column: 20
          },
          end: {
            line: 101,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 20
          },
          end: {
            line: 101,
            column: 33
          }
        }, {
          start: {
            line: 101,
            column: 37
          },
          end: {
            line: 101,
            column: 52
          }
        }, {
          start: {
            line: 101,
            column: 56
          },
          end: {
            line: 101,
            column: 64
          }
        }],
        line: 101
      },
      "12": {
        loc: {
          start: {
            line: 102,
            column: 16
          },
          end: {
            line: 102,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 16
          },
          end: {
            line: 102,
            column: 31
          }
        }, {
          start: {
            line: 102,
            column: 35
          },
          end: {
            line: 102,
            column: 46
          }
        }],
        line: 102
      },
      "13": {
        loc: {
          start: {
            line: 127,
            column: 20
          },
          end: {
            line: 127,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 127,
            column: 29
          },
          end: {
            line: 127,
            column: 31
          }
        }],
        line: 127
      },
      "14": {
        loc: {
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 131,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 131,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "15": {
        loc: {
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "16": {
        loc: {
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 163,
            column: 14
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 159,
            column: 24
          },
          end: {
            line: 163,
            column: 7
          }
        }, {
          start: {
            line: 163,
            column: 10
          },
          end: {
            line: 163,
            column: 14
          }
        }],
        line: 159
      },
      "17": {
        loc: {
          start: {
            line: 173,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0, 0],
      "12": [0, 0],
      "13": [0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "27979d2bb1e6aa360c31cb9949a38ba284319e68"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1rozt51sdu = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1rozt51sdu();
/**
 * Database Connection Manager with Circuit Breaker Integration
 */
const {
  Pool
} =
/* istanbul ignore next */
(cov_1rozt51sdu().s[0]++, require('pg'));
const DatabaseCircuitBreaker =
/* istanbul ignore next */
(cov_1rozt51sdu().s[1]++, require('./databaseCircuitBreaker'));
class DatabaseConnectionManager {
  constructor() {
    /* istanbul ignore next */
    cov_1rozt51sdu().f[0]++;
    cov_1rozt51sdu().s[2]++;
    this.pool = null;
    /* istanbul ignore next */
    cov_1rozt51sdu().s[3]++;
    this.circuitBreaker = new DatabaseCircuitBreaker();
    /* istanbul ignore next */
    cov_1rozt51sdu().s[4]++;
    this.isInitialized = false;
    /* istanbul ignore next */
    cov_1rozt51sdu().s[5]++;
    this.config = null;
    /* istanbul ignore next */
    cov_1rozt51sdu().s[6]++;
    this.lastHealthCheck = 0;
    /* istanbul ignore next */
    cov_1rozt51sdu().s[7]++;
    this.healthCheckInterval = 30000; // 30 seconds
  }
  async initialize() {
    /* istanbul ignore next */
    cov_1rozt51sdu().f[1]++;
    cov_1rozt51sdu().s[8]++;
    if (
    /* istanbul ignore next */
    (cov_1rozt51sdu().b[1][0]++, this.isInitialized) &&
    /* istanbul ignore next */
    (cov_1rozt51sdu().b[1][1]++, this.pool)) {
      /* istanbul ignore next */
      cov_1rozt51sdu().b[0][0]++;
      cov_1rozt51sdu().s[9]++;
      return this.pool;
    } else
    /* istanbul ignore next */
    {
      cov_1rozt51sdu().b[0][1]++;
    }
    cov_1rozt51sdu().s[10]++;
    try {
      /* istanbul ignore next */
      cov_1rozt51sdu().s[11]++;
      console.log('🔄 Initializing database connection with circuit breaker...');

      // Get database configuration
      /* istanbul ignore next */
      cov_1rozt51sdu().s[12]++;
      this.config = await this.getDbConfig();

      // Create connection pool
      /* istanbul ignore next */
      cov_1rozt51sdu().s[13]++;
      this.pool = new Pool({
        ...this.config,
        // Lambda-optimized settings
        max: 10,
        // Maximum connections
        min: 1,
        // Minimum connections
        acquireTimeoutMillis: 15000,
        // 15 seconds
        createTimeoutMillis: 20000,
        // 20 seconds
        destroyTimeoutMillis: 5000,
        // 5 seconds
        idleTimeoutMillis: 30000,
        // 30 seconds
        reapIntervalMillis: 1000,
        // 1 second
        createRetryIntervalMillis: 200,
        // 200ms
        keepAlive: true,
        keepAliveInitialDelayMillis: 10000
      });

      // Test initial connection
      /* istanbul ignore next */
      cov_1rozt51sdu().s[14]++;
      await this.testConnection();
      /* istanbul ignore next */
      cov_1rozt51sdu().s[15]++;
      this.isInitialized = true;
      /* istanbul ignore next */
      cov_1rozt51sdu().s[16]++;
      console.log('✅ Database connection initialized successfully');
      /* istanbul ignore next */
      cov_1rozt51sdu().s[17]++;
      return this.pool;
    } catch (error) {
      /* istanbul ignore next */
      cov_1rozt51sdu().s[18]++;
      console.error('❌ Database initialization failed:', error);
      /* istanbul ignore next */
      cov_1rozt51sdu().s[19]++;
      this.pool = null;
      /* istanbul ignore next */
      cov_1rozt51sdu().s[20]++;
      this.isInitialized = false;
      /* istanbul ignore next */
      cov_1rozt51sdu().s[21]++;
      throw error;
    }
  }
  async getDbConfig() {
    /* istanbul ignore next */
    cov_1rozt51sdu().f[2]++;
    cov_1rozt51sdu().s[22]++;
    // Try environment variables first
    if (
    /* istanbul ignore next */
    (cov_1rozt51sdu().b[3][0]++, process.env.DB_HOST) &&
    /* istanbul ignore next */
    (cov_1rozt51sdu().b[3][1]++, process.env.DB_USER) &&
    /* istanbul ignore next */
    (cov_1rozt51sdu().b[3][2]++, process.env.DB_PASSWORD)) {
      /* istanbul ignore next */
      cov_1rozt51sdu().b[2][0]++;
      cov_1rozt51sdu().s[23]++;
      console.log('🔧 Using direct environment variables');
      /* istanbul ignore next */
      cov_1rozt51sdu().s[24]++;
      return {
        host: process.env.DB_HOST,
        port:
        /* istanbul ignore next */
        (cov_1rozt51sdu().b[4][0]++, parseInt(process.env.DB_PORT)) ||
        /* istanbul ignore next */
        (cov_1rozt51sdu().b[4][1]++, 5432),
        database:
        /* istanbul ignore next */
        (cov_1rozt51sdu().b[5][0]++, process.env.DB_NAME) ||
        /* istanbul ignore next */
        (cov_1rozt51sdu().b[5][1]++, 'stocks'),
        user: process.env.DB_USER,
        password: process.env.DB_PASSWORD,
        ssl: process.env.DB_SSL === 'true' ?
        /* istanbul ignore next */
        (cov_1rozt51sdu().b[6][0]++, {
          rejectUnauthorized: false
        }) :
        /* istanbul ignore next */
        (cov_1rozt51sdu().b[6][1]++, false)
      };
    } else
    /* istanbul ignore next */
    {
      cov_1rozt51sdu().b[2][1]++;
    }

    // Fallback to AWS Secrets Manager
    cov_1rozt51sdu().s[25]++;
    if (process.env.DB_SECRET_ARN) {
      /* istanbul ignore next */
      cov_1rozt51sdu().b[7][0]++;
      cov_1rozt51sdu().s[26]++;
      console.log('🔧 Using AWS Secrets Manager fallback');
      const {
        SecretsManagerClient,
        GetSecretValueCommand
      } =
      /* istanbul ignore next */
      (cov_1rozt51sdu().s[27]++, require('@aws-sdk/client-secrets-manager'));
      const client =
      /* istanbul ignore next */
      (cov_1rozt51sdu().s[28]++, new SecretsManagerClient({
        region:
        /* istanbul ignore next */
        (cov_1rozt51sdu().b[8][0]++, process.env.AWS_REGION) ||
        /* istanbul ignore next */
        (cov_1rozt51sdu().b[8][1]++, 'us-east-1')
      }));
      /* istanbul ignore next */
      cov_1rozt51sdu().s[29]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_1rozt51sdu().s[30]++, await client.send(new GetSecretValueCommand({
          SecretId: process.env.DB_SECRET_ARN
        })));

        // Enhanced JSON parsing with error handling
        let secret;
        /* istanbul ignore next */
        cov_1rozt51sdu().s[31]++;
        try {
          /* istanbul ignore next */
          cov_1rozt51sdu().s[32]++;
          secret = JSON.parse(response.SecretString);
        } catch (parseError) {
          /* istanbul ignore next */
          cov_1rozt51sdu().s[33]++;
          console.error('❌ JSON parsing error for secret:', parseError);
          /* istanbul ignore next */
          cov_1rozt51sdu().s[34]++;
          console.error('Secret string length:', response.SecretString?.length);
          /* istanbul ignore next */
          cov_1rozt51sdu().s[35]++;
          console.error('Secret string preview:', response.SecretString?.substring(0, 100));
          /* istanbul ignore next */
          cov_1rozt51sdu().s[36]++;
          throw new Error('Failed to parse database secret JSON: ' + parseError.message);
        }
        /* istanbul ignore next */
        cov_1rozt51sdu().s[37]++;
        return {
          host:
          /* istanbul ignore next */
          (cov_1rozt51sdu().b[9][0]++, secret.host) ||
          /* istanbul ignore next */
          (cov_1rozt51sdu().b[9][1]++, process.env.DB_HOST),
          port:
          /* istanbul ignore next */
          (cov_1rozt51sdu().b[10][0]++, secret.port) ||
          /* istanbul ignore next */
          (cov_1rozt51sdu().b[10][1]++, parseInt(process.env.DB_PORT)) ||
          /* istanbul ignore next */
          (cov_1rozt51sdu().b[10][2]++, 5432),
          database:
          /* istanbul ignore next */
          (cov_1rozt51sdu().b[11][0]++, secret.dbname) ||
          /* istanbul ignore next */
          (cov_1rozt51sdu().b[11][1]++, secret.database) ||
          /* istanbul ignore next */
          (cov_1rozt51sdu().b[11][2]++, 'stocks'),
          user:
          /* istanbul ignore next */
          (cov_1rozt51sdu().b[12][0]++, secret.username) ||
          /* istanbul ignore next */
          (cov_1rozt51sdu().b[12][1]++, secret.user),
          password: secret.password,
          ssl: false // Public subnet RDS typically doesn't use SSL
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_1rozt51sdu().s[38]++;
        console.error('❌ Failed to get secret from AWS Secrets Manager:', error);
        /* istanbul ignore next */
        cov_1rozt51sdu().s[39]++;
        throw error;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1rozt51sdu().b[7][1]++;
    }
    cov_1rozt51sdu().s[40]++;
    throw new Error('No database configuration found (no env vars or secret ARN)');
  }
  async testConnection() {
    /* istanbul ignore next */
    cov_1rozt51sdu().f[3]++;
    cov_1rozt51sdu().s[41]++;
    return this.circuitBreaker.execute(async () => {
      /* istanbul ignore next */
      cov_1rozt51sdu().f[4]++;
      const client =
      /* istanbul ignore next */
      (cov_1rozt51sdu().s[42]++, await this.pool.connect());
      /* istanbul ignore next */
      cov_1rozt51sdu().s[43]++;
      try {
        /* istanbul ignore next */
        cov_1rozt51sdu().s[44]++;
        await client.query('SELECT 1');
        /* istanbul ignore next */
        cov_1rozt51sdu().s[45]++;
        return true;
      } finally {
        /* istanbul ignore next */
        cov_1rozt51sdu().s[46]++;
        client.release();
      }
    }, 'connection-test');
  }
  async query(text, params =
  /* istanbul ignore next */
  (cov_1rozt51sdu().b[13][0]++, [])) {
    /* istanbul ignore next */
    cov_1rozt51sdu().f[5]++;
    cov_1rozt51sdu().s[47]++;
    // Initialize if needed
    if (!this.isInitialized) {
      /* istanbul ignore next */
      cov_1rozt51sdu().b[14][0]++;
      cov_1rozt51sdu().s[48]++;
      await this.initialize();
    } else
    /* istanbul ignore next */
    {
      cov_1rozt51sdu().b[14][1]++;
    }

    // Periodic health check
    const now =
    /* istanbul ignore next */
    (cov_1rozt51sdu().s[49]++, Date.now());
    /* istanbul ignore next */
    cov_1rozt51sdu().s[50]++;
    if (now - this.lastHealthCheck > this.healthCheckInterval) {
      /* istanbul ignore next */
      cov_1rozt51sdu().b[15][0]++;
      cov_1rozt51sdu().s[51]++;
      try {
        /* istanbul ignore next */
        cov_1rozt51sdu().s[52]++;
        await this.testConnection();
        /* istanbul ignore next */
        cov_1rozt51sdu().s[53]++;
        this.lastHealthCheck = now;
      } catch (error) {
        /* istanbul ignore next */
        cov_1rozt51sdu().s[54]++;
        console.warn('⚠️ Health check failed:', error.message);
      }
    } else
    /* istanbul ignore next */
    {
      cov_1rozt51sdu().b[15][1]++;
    }

    // Execute query through circuit breaker
    cov_1rozt51sdu().s[55]++;
    return this.circuitBreaker.execute(async () => {
      /* istanbul ignore next */
      cov_1rozt51sdu().f[6]++;
      const client =
      /* istanbul ignore next */
      (cov_1rozt51sdu().s[56]++, await this.pool.connect());
      /* istanbul ignore next */
      cov_1rozt51sdu().s[57]++;
      try {
        const result =
        /* istanbul ignore next */
        (cov_1rozt51sdu().s[58]++, await client.query(text, params));
        /* istanbul ignore next */
        cov_1rozt51sdu().s[59]++;
        return result;
      } finally {
        /* istanbul ignore next */
        cov_1rozt51sdu().s[60]++;
        client.release();
      }
    }, 'database-query');
  }
  getStatus() {
    /* istanbul ignore next */
    cov_1rozt51sdu().f[7]++;
    cov_1rozt51sdu().s[61]++;
    return {
      initialized: this.isInitialized,
      pool: this.pool ?
      /* istanbul ignore next */
      (cov_1rozt51sdu().b[16][0]++, {
        totalCount: this.pool.totalCount,
        idleCount: this.pool.idleCount,
        waitingCount: this.pool.waitingCount
      }) :
      /* istanbul ignore next */
      (cov_1rozt51sdu().b[16][1]++, null),
      circuitBreaker: this.circuitBreaker.getStatus()
    };
  }

  // Emergency recovery methods
  async forceReset() {
    /* istanbul ignore next */
    cov_1rozt51sdu().f[8]++;
    cov_1rozt51sdu().s[62]++;
    console.log('🚨 EMERGENCY: Force resetting database connection...');
    /* istanbul ignore next */
    cov_1rozt51sdu().s[63]++;
    this.circuitBreaker.forceReset();
    /* istanbul ignore next */
    cov_1rozt51sdu().s[64]++;
    if (this.pool) {
      /* istanbul ignore next */
      cov_1rozt51sdu().b[17][0]++;
      cov_1rozt51sdu().s[65]++;
      await this.pool.end();
      /* istanbul ignore next */
      cov_1rozt51sdu().s[66]++;
      this.pool = null;
    } else
    /* istanbul ignore next */
    {
      cov_1rozt51sdu().b[17][1]++;
    }
    cov_1rozt51sdu().s[67]++;
    this.isInitialized = false;
    /* istanbul ignore next */
    cov_1rozt51sdu().s[68]++;
    await this.initialize();
    /* istanbul ignore next */
    cov_1rozt51sdu().s[69]++;
    console.log('✅ Database connection force reset completed');
  }
}

// Export singleton instance
/* istanbul ignore next */
cov_1rozt51sdu().s[70]++;
module.exports = new DatabaseConnectionManager();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,