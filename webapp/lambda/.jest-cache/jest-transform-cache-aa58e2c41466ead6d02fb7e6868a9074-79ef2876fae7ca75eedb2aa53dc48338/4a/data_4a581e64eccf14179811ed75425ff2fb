b509560dfa2b08510b6e40da55315bf6
/* istanbul ignore next */
function cov_pmlzhap64() {
  var path = "/home/stocks/algo/webapp/lambda/routes/data.js";
  var hash = "b6eba9351405cea3b3cdd58a9e7e9997f552efa6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/routes/data.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 34
        }
      },
      "1": {
        start: {
          line: 2,
          column: 18
        },
        end: {
          line: 2,
          column: 46
        }
      },
      "2": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 31
        }
      },
      "3": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 35,
          column: 3
        }
      },
      "4": {
        start: {
          line: 8,
          column: 2
        },
        end: {
          line: 34,
          column: 3
        }
      },
      "5": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 49
        }
      },
      "6": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 27,
          column: 7
        }
      },
      "7": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 52
        }
      },
      "8": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 33,
          column: 7
        }
      },
      "9": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 125,
          column: 3
        }
      },
      "10": {
        start: {
          line: 39,
          column: 2
        },
        end: {
          line: 124,
          column: 3
        }
      },
      "11": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 48
        }
      },
      "12": {
        start: {
          line: 43,
          column: 26
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "13": {
        start: {
          line: 71,
          column: 20
        },
        end: {
          line: 71,
          column: 22
        }
      },
      "14": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 95,
          column: 5
        }
      },
      "15": {
        start: {
          line: 74,
          column: 6
        },
        end: {
          line: 94,
          column: 7
        }
      },
      "16": {
        start: {
          line: 75,
          column: 23
        },
        end: {
          line: 75,
          column: 47
        }
      },
      "17": {
        start: {
          line: 76,
          column: 22
        },
        end: {
          line: 76,
          column: 58
        }
      },
      "18": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 84,
          column: 11
        }
      },
      "19": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 93,
          column: 11
        }
      },
      "20": {
        start: {
          line: 98,
          column: 26
        },
        end: {
          line: 98,
          column: 76
        }
      },
      "21": {
        start: {
          line: 98,
          column: 46
        },
        end: {
          line: 98,
          column: 68
        }
      },
      "22": {
        start: {
          line: 99,
          column: 24
        },
        end: {
          line: 99,
          column: 38
        }
      },
      "23": {
        start: {
          line: 100,
          column: 24
        },
        end: {
          line: 100,
          column: 71
        }
      },
      "24": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 114,
          column: 7
        }
      },
      "25": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 117,
          column: 57
        }
      },
      "26": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 123,
          column: 7
        }
      },
      "27": {
        start: {
          line: 128,
          column: 0
        },
        end: {
          line: 259,
          column: 3
        }
      },
      "28": {
        start: {
          line: 129,
          column: 2
        },
        end: {
          line: 258,
          column: 3
        }
      },
      "29": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 130,
          column: 48
        }
      },
      "30": {
        start: {
          line: 133,
          column: 24
        },
        end: {
          line: 182,
          column: 5
        }
      },
      "31": {
        start: {
          line: 185,
          column: 25
        },
        end: {
          line: 234,
          column: 7
        }
      },
      "32": {
        start: {
          line: 186,
          column: 6
        },
        end: {
          line: 233,
          column: 7
        }
      },
      "33": {
        start: {
          line: 187,
          column: 28
        },
        end: {
          line: 187,
          column: 33
        }
      },
      "34": {
        start: {
          line: 188,
          column: 26
        },
        end: {
          line: 188,
          column: 27
        }
      },
      "35": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 217,
          column: 9
        }
      },
      "36": {
        start: {
          line: 192,
          column: 25
        },
        end: {
          line: 194,
          column: 11
        }
      },
      "37": {
        start: {
          line: 195,
          column: 10
        },
        end: {
          line: 195,
          column: 61
        }
      },
      "38": {
        start: {
          line: 196,
          column: 10
        },
        end: {
          line: 196,
          column: 42
        }
      },
      "39": {
        start: {
          line: 197,
          column: 15
        },
        end: {
          line: 217,
          column: 9
        }
      },
      "40": {
        start: {
          line: 198,
          column: 10
        },
        end: {
          line: 206,
          column: 11
        }
      },
      "41": {
        start: {
          line: 199,
          column: 27
        },
        end: {
          line: 201,
          column: 13
        }
      },
      "42": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 63
        }
      },
      "43": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 44
        }
      },
      "44": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 34
        }
      },
      "45": {
        start: {
          line: 207,
          column: 15
        },
        end: {
          line: 217,
          column: 9
        }
      },
      "46": {
        start: {
          line: 208,
          column: 10
        },
        end: {
          line: 216,
          column: 11
        }
      },
      "47": {
        start: {
          line: 209,
          column: 27
        },
        end: {
          line: 211,
          column: 13
        }
      },
      "48": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 63
        }
      },
      "49": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 44
        }
      },
      "50": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 34
        }
      },
      "51": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 224,
          column: 10
        }
      },
      "52": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 232,
          column: 10
        }
      },
      "53": {
        start: {
          line: 236,
          column: 4
        },
        end: {
          line: 248,
          column: 7
        }
      },
      "54": {
        start: {
          line: 242,
          column: 56
        },
        end: {
          line: 242,
          column: 94
        }
      },
      "55": {
        start: {
          line: 243,
          column: 55
        },
        end: {
          line: 243,
          column: 92
        }
      },
      "56": {
        start: {
          line: 244,
          column: 50
        },
        end: {
          line: 244,
          column: 82
        }
      },
      "57": {
        start: {
          line: 251,
          column: 4
        },
        end: {
          line: 251,
          column: 57
        }
      },
      "58": {
        start: {
          line: 252,
          column: 4
        },
        end: {
          line: 257,
          column: 7
        }
      },
      "59": {
        start: {
          line: 262,
          column: 0
        },
        end: {
          line: 330,
          column: 3
        }
      },
      "60": {
        start: {
          line: 263,
          column: 2
        },
        end: {
          line: 329,
          column: 3
        }
      },
      "61": {
        start: {
          line: 264,
          column: 17
        },
        end: {
          line: 264,
          column: 46
        }
      },
      "62": {
        start: {
          line: 265,
          column: 18
        },
        end: {
          line: 265,
          column: 49
        }
      },
      "63": {
        start: {
          line: 266,
          column: 19
        },
        end: {
          line: 266,
          column: 37
        }
      },
      "64": {
        start: {
          line: 267,
          column: 19
        },
        end: {
          line: 267,
          column: 35
        }
      },
      "65": {
        start: {
          line: 269,
          column: 22
        },
        end: {
          line: 269,
          column: 24
        }
      },
      "66": {
        start: {
          line: 270,
          column: 24
        },
        end: {
          line: 270,
          column: 26
        }
      },
      "67": {
        start: {
          line: 271,
          column: 21
        },
        end: {
          line: 271,
          column: 22
        }
      },
      "68": {
        start: {
          line: 273,
          column: 4
        },
        end: {
          line: 277,
          column: 5
        }
      },
      "69": {
        start: {
          line: 274,
          column: 6
        },
        end: {
          line: 274,
          column: 19
        }
      },
      "70": {
        start: {
          line: 275,
          column: 6
        },
        end: {
          line: 275,
          column: 52
        }
      },
      "71": {
        start: {
          line: 276,
          column: 6
        },
        end: {
          line: 276,
          column: 45
        }
      },
      "72": {
        start: {
          line: 279,
          column: 27
        },
        end: {
          line: 294,
          column: 5
        }
      },
      "73": {
        start: {
          line: 296,
          column: 23
        },
        end: {
          line: 298,
          column: 5
        }
      },
      "74": {
        start: {
          line: 300,
          column: 4
        },
        end: {
          line: 300,
          column: 36
        }
      },
      "75": {
        start: {
          line: 302,
          column: 43
        },
        end: {
          line: 305,
          column: 6
        }
      },
      "76": {
        start: {
          line: 307,
          column: 18
        },
        end: {
          line: 307,
          column: 53
        }
      },
      "77": {
        start: {
          line: 308,
          column: 23
        },
        end: {
          line: 308,
          column: 47
        }
      },
      "78": {
        start: {
          line: 310,
          column: 4
        },
        end: {
          line: 312,
          column: 5
        }
      },
      "79": {
        start: {
          line: 311,
          column: 6
        },
        end: {
          line: 311,
          column: 77
        }
      },
      "80": {
        start: {
          line: 314,
          column: 4
        },
        end: {
          line: 324,
          column: 7
        }
      },
      "81": {
        start: {
          line: 327,
          column: 4
        },
        end: {
          line: 327,
          column: 58
        }
      },
      "82": {
        start: {
          line: 328,
          column: 4
        },
        end: {
          line: 328,
          column: 78
        }
      },
      "83": {
        start: {
          line: 333,
          column: 0
        },
        end: {
          line: 402,
          column: 3
        }
      },
      "84": {
        start: {
          line: 334,
          column: 2
        },
        end: {
          line: 401,
          column: 3
        }
      },
      "85": {
        start: {
          line: 335,
          column: 17
        },
        end: {
          line: 335,
          column: 46
        }
      },
      "86": {
        start: {
          line: 336,
          column: 18
        },
        end: {
          line: 336,
          column: 49
        }
      },
      "87": {
        start: {
          line: 337,
          column: 19
        },
        end: {
          line: 337,
          column: 37
        }
      },
      "88": {
        start: {
          line: 338,
          column: 19
        },
        end: {
          line: 338,
          column: 35
        }
      },
      "89": {
        start: {
          line: 340,
          column: 22
        },
        end: {
          line: 340,
          column: 24
        }
      },
      "90": {
        start: {
          line: 341,
          column: 24
        },
        end: {
          line: 341,
          column: 26
        }
      },
      "91": {
        start: {
          line: 342,
          column: 21
        },
        end: {
          line: 342,
          column: 22
        }
      },
      "92": {
        start: {
          line: 344,
          column: 4
        },
        end: {
          line: 348,
          column: 5
        }
      },
      "93": {
        start: {
          line: 345,
          column: 6
        },
        end: {
          line: 345,
          column: 19
        }
      },
      "94": {
        start: {
          line: 346,
          column: 6
        },
        end: {
          line: 346,
          column: 52
        }
      },
      "95": {
        start: {
          line: 347,
          column: 6
        },
        end: {
          line: 347,
          column: 45
        }
      },
      "96": {
        start: {
          line: 350,
          column: 23
        },
        end: {
          line: 366,
          column: 5
        }
      },
      "97": {
        start: {
          line: 368,
          column: 23
        },
        end: {
          line: 370,
          column: 5
        }
      },
      "98": {
        start: {
          line: 372,
          column: 4
        },
        end: {
          line: 372,
          column: 36
        }
      },
      "99": {
        start: {
          line: 374,
          column: 39
        },
        end: {
          line: 377,
          column: 6
        }
      },
      "100": {
        start: {
          line: 379,
          column: 18
        },
        end: {
          line: 379,
          column: 53
        }
      },
      "101": {
        start: {
          line: 380,
          column: 23
        },
        end: {
          line: 380,
          column: 47
        }
      },
      "102": {
        start: {
          line: 382,
          column: 4
        },
        end: {
          line: 384,
          column: 5
        }
      },
      "103": {
        start: {
          line: 383,
          column: 6
        },
        end: {
          line: 383,
          column: 77
        }
      },
      "104": {
        start: {
          line: 386,
          column: 4
        },
        end: {
          line: 396,
          column: 7
        }
      },
      "105": {
        start: {
          line: 399,
          column: 4
        },
        end: {
          line: 399,
          column: 54
        }
      },
      "106": {
        start: {
          line: 400,
          column: 4
        },
        end: {
          line: 400,
          column: 78
        }
      },
      "107": {
        start: {
          line: 405,
          column: 0
        },
        end: {
          line: 472,
          column: 3
        }
      },
      "108": {
        start: {
          line: 406,
          column: 2
        },
        end: {
          line: 471,
          column: 3
        }
      },
      "109": {
        start: {
          line: 407,
          column: 17
        },
        end: {
          line: 407,
          column: 46
        }
      },
      "110": {
        start: {
          line: 408,
          column: 18
        },
        end: {
          line: 408,
          column: 49
        }
      },
      "111": {
        start: {
          line: 409,
          column: 19
        },
        end: {
          line: 409,
          column: 37
        }
      },
      "112": {
        start: {
          line: 410,
          column: 19
        },
        end: {
          line: 410,
          column: 35
        }
      },
      "113": {
        start: {
          line: 412,
          column: 22
        },
        end: {
          line: 412,
          column: 24
        }
      },
      "114": {
        start: {
          line: 413,
          column: 24
        },
        end: {
          line: 413,
          column: 26
        }
      },
      "115": {
        start: {
          line: 414,
          column: 21
        },
        end: {
          line: 414,
          column: 22
        }
      },
      "116": {
        start: {
          line: 416,
          column: 4
        },
        end: {
          line: 420,
          column: 5
        }
      },
      "117": {
        start: {
          line: 417,
          column: 6
        },
        end: {
          line: 417,
          column: 19
        }
      },
      "118": {
        start: {
          line: 418,
          column: 6
        },
        end: {
          line: 418,
          column: 52
        }
      },
      "119": {
        start: {
          line: 419,
          column: 6
        },
        end: {
          line: 419,
          column: 45
        }
      },
      "120": {
        start: {
          line: 422,
          column: 24
        },
        end: {
          line: 436,
          column: 5
        }
      },
      "121": {
        start: {
          line: 438,
          column: 23
        },
        end: {
          line: 440,
          column: 5
        }
      },
      "122": {
        start: {
          line: 442,
          column: 4
        },
        end: {
          line: 442,
          column: 36
        }
      },
      "123": {
        start: {
          line: 444,
          column: 40
        },
        end: {
          line: 447,
          column: 6
        }
      },
      "124": {
        start: {
          line: 449,
          column: 18
        },
        end: {
          line: 449,
          column: 53
        }
      },
      "125": {
        start: {
          line: 450,
          column: 23
        },
        end: {
          line: 450,
          column: 47
        }
      },
      "126": {
        start: {
          line: 452,
          column: 4
        },
        end: {
          line: 454,
          column: 5
        }
      },
      "127": {
        start: {
          line: 453,
          column: 6
        },
        end: {
          line: 453,
          column: 77
        }
      },
      "128": {
        start: {
          line: 456,
          column: 4
        },
        end: {
          line: 466,
          column: 7
        }
      },
      "129": {
        start: {
          line: 469,
          column: 4
        },
        end: {
          line: 469,
          column: 61
        }
      },
      "130": {
        start: {
          line: 470,
          column: 4
        },
        end: {
          line: 470,
          column: 78
        }
      },
      "131": {
        start: {
          line: 475,
          column: 0
        },
        end: {
          line: 541,
          column: 3
        }
      },
      "132": {
        start: {
          line: 476,
          column: 2
        },
        end: {
          line: 540,
          column: 3
        }
      },
      "133": {
        start: {
          line: 477,
          column: 17
        },
        end: {
          line: 477,
          column: 46
        }
      },
      "134": {
        start: {
          line: 478,
          column: 18
        },
        end: {
          line: 478,
          column: 49
        }
      },
      "135": {
        start: {
          line: 479,
          column: 19
        },
        end: {
          line: 479,
          column: 37
        }
      },
      "136": {
        start: {
          line: 480,
          column: 19
        },
        end: {
          line: 480,
          column: 35
        }
      },
      "137": {
        start: {
          line: 482,
          column: 22
        },
        end: {
          line: 482,
          column: 24
        }
      },
      "138": {
        start: {
          line: 483,
          column: 24
        },
        end: {
          line: 483,
          column: 26
        }
      },
      "139": {
        start: {
          line: 484,
          column: 21
        },
        end: {
          line: 484,
          column: 22
        }
      },
      "140": {
        start: {
          line: 486,
          column: 4
        },
        end: {
          line: 490,
          column: 5
        }
      },
      "141": {
        start: {
          line: 487,
          column: 6
        },
        end: {
          line: 487,
          column: 19
        }
      },
      "142": {
        start: {
          line: 488,
          column: 6
        },
        end: {
          line: 488,
          column: 55
        }
      },
      "143": {
        start: {
          line: 489,
          column: 6
        },
        end: {
          line: 489,
          column: 31
        }
      },
      "144": {
        start: {
          line: 492,
          column: 26
        },
        end: {
          line: 505,
          column: 5
        }
      },
      "145": {
        start: {
          line: 507,
          column: 23
        },
        end: {
          line: 509,
          column: 5
        }
      },
      "146": {
        start: {
          line: 511,
          column: 4
        },
        end: {
          line: 511,
          column: 36
        }
      },
      "147": {
        start: {
          line: 513,
          column: 42
        },
        end: {
          line: 516,
          column: 6
        }
      },
      "148": {
        start: {
          line: 518,
          column: 18
        },
        end: {
          line: 518,
          column: 53
        }
      },
      "149": {
        start: {
          line: 519,
          column: 23
        },
        end: {
          line: 519,
          column: 47
        }
      },
      "150": {
        start: {
          line: 521,
          column: 4
        },
        end: {
          line: 523,
          column: 5
        }
      },
      "151": {
        start: {
          line: 522,
          column: 6
        },
        end: {
          line: 522,
          column: 77
        }
      },
      "152": {
        start: {
          line: 525,
          column: 4
        },
        end: {
          line: 535,
          column: 7
        }
      },
      "153": {
        start: {
          line: 538,
          column: 4
        },
        end: {
          line: 538,
          column: 58
        }
      },
      "154": {
        start: {
          line: 539,
          column: 4
        },
        end: {
          line: 539,
          column: 78
        }
      },
      "155": {
        start: {
          line: 544,
          column: 0
        },
        end: {
          line: 577,
          column: 3
        }
      },
      "156": {
        start: {
          line: 545,
          column: 2
        },
        end: {
          line: 576,
          column: 3
        }
      },
      "157": {
        start: {
          line: 546,
          column: 18
        },
        end: {
          line: 546,
          column: 64
        }
      },
      "158": {
        start: {
          line: 547,
          column: 4
        },
        end: {
          line: 547,
          column: 70
        }
      },
      "159": {
        start: {
          line: 549,
          column: 26
        },
        end: {
          line: 554,
          column: 5
        }
      },
      "160": {
        start: {
          line: 556,
          column: 19
        },
        end: {
          line: 556,
          column: 54
        }
      },
      "161": {
        start: {
          line: 558,
          column: 4
        },
        end: {
          line: 560,
          column: 5
        }
      },
      "162": {
        start: {
          line: 559,
          column: 6
        },
        end: {
          line: 559,
          column: 77
        }
      },
      "163": {
        start: {
          line: 562,
          column: 4
        },
        end: {
          line: 567,
          column: 7
        }
      },
      "164": {
        start: {
          line: 570,
          column: 4
        },
        end: {
          line: 570,
          column: 58
        }
      },
      "165": {
        start: {
          line: 571,
          column: 4
        },
        end: {
          line: 575,
          column: 7
        }
      },
      "166": {
        start: {
          line: 580,
          column: 0
        },
        end: {
          line: 609,
          column: 3
        }
      },
      "167": {
        start: {
          line: 581,
          column: 2
        },
        end: {
          line: 608,
          column: 3
        }
      },
      "168": {
        start: {
          line: 582,
          column: 18
        },
        end: {
          line: 582,
          column: 49
        }
      },
      "169": {
        start: {
          line: 583,
          column: 23
        },
        end: {
          line: 592,
          column: 5
        }
      },
      "170": {
        start: {
          line: 594,
          column: 19
        },
        end: {
          line: 594,
          column: 51
        }
      },
      "171": {
        start: {
          line: 596,
          column: 4
        },
        end: {
          line: 598,
          column: 5
        }
      },
      "172": {
        start: {
          line: 597,
          column: 6
        },
        end: {
          line: 597,
          column: 77
        }
      },
      "173": {
        start: {
          line: 600,
          column: 4
        },
        end: {
          line: 603,
          column: 7
        }
      },
      "174": {
        start: {
          line: 606,
          column: 4
        },
        end: {
          line: 606,
          column: 55
        }
      },
      "175": {
        start: {
          line: 607,
          column: 4
        },
        end: {
          line: 607,
          column: 78
        }
      },
      "176": {
        start: {
          line: 612,
          column: 0
        },
        end: {
          line: 640,
          column: 3
        }
      },
      "177": {
        start: {
          line: 613,
          column: 2
        },
        end: {
          line: 639,
          column: 3
        }
      },
      "178": {
        start: {
          line: 614,
          column: 18
        },
        end: {
          line: 614,
          column: 49
        }
      },
      "179": {
        start: {
          line: 614,
          column: 77
        },
        end: {
          line: 623,
          column: 5
        }
      },
      "180": {
        start: {
          line: 625,
          column: 19
        },
        end: {
          line: 625,
          column: 55
        }
      },
      "181": {
        start: {
          line: 627,
          column: 4
        },
        end: {
          line: 629,
          column: 5
        }
      },
      "182": {
        start: {
          line: 628,
          column: 6
        },
        end: {
          line: 628,
          column: 77
        }
      },
      "183": {
        start: {
          line: 631,
          column: 4
        },
        end: {
          line: 634,
          column: 7
        }
      },
      "184": {
        start: {
          line: 637,
          column: 4
        },
        end: {
          line: 637,
          column: 62
        }
      },
      "185": {
        start: {
          line: 638,
          column: 4
        },
        end: {
          line: 638,
          column: 78
        }
      },
      "186": {
        start: {
          line: 643,
          column: 0
        },
        end: {
          line: 709,
          column: 3
        }
      },
      "187": {
        start: {
          line: 644,
          column: 2
        },
        end: {
          line: 708,
          column: 3
        }
      },
      "188": {
        start: {
          line: 646,
          column: 27
        },
        end: {
          line: 646,
          column: 29
        }
      },
      "189": {
        start: {
          line: 648,
          column: 19
        },
        end: {
          line: 661,
          column: 5
        }
      },
      "190": {
        start: {
          line: 663,
          column: 4
        },
        end: {
          line: 697,
          column: 5
        }
      },
      "191": {
        start: {
          line: 664,
          column: 6
        },
        end: {
          line: 696,
          column: 7
        }
      },
      "192": {
        start: {
          line: 666,
          column: 8
        },
        end: {
          line: 682,
          column: 9
        }
      },
      "193": {
        start: {
          line: 667,
          column: 10
        },
        end: {
          line: 673,
          column: 12
        }
      },
      "194": {
        start: {
          line: 675,
          column: 10
        },
        end: {
          line: 681,
          column: 12
        }
      },
      "195": {
        start: {
          line: 684,
          column: 23
        },
        end: {
          line: 684,
          column: 46
        }
      },
      "196": {
        start: {
          line: 685,
          column: 8
        },
        end: {
          line: 687,
          column: 9
        }
      },
      "197": {
        start: {
          line: 686,
          column: 10
        },
        end: {
          line: 686,
          column: 46
        }
      },
      "198": {
        start: {
          line: 690,
          column: 8
        },
        end: {
          line: 695,
          column: 11
        }
      },
      "199": {
        start: {
          line: 699,
          column: 4
        },
        end: {
          line: 703,
          column: 7
        }
      },
      "200": {
        start: {
          line: 706,
          column: 4
        },
        end: {
          line: 706,
          column: 63
        }
      },
      "201": {
        start: {
          line: 707,
          column: 4
        },
        end: {
          line: 707,
          column: 78
        }
      },
      "202": {
        start: {
          line: 712,
          column: 0
        },
        end: {
          line: 780,
          column: 3
        }
      },
      "203": {
        start: {
          line: 713,
          column: 2
        },
        end: {
          line: 779,
          column: 3
        }
      },
      "204": {
        start: {
          line: 714,
          column: 23
        },
        end: {
          line: 714,
          column: 33
        }
      },
      "205": {
        start: {
          line: 715,
          column: 18
        },
        end: {
          line: 715,
          column: 49
        }
      },
      "206": {
        start: {
          line: 718,
          column: 20
        },
        end: {
          line: 727,
          column: 5
        }
      },
      "207": {
        start: {
          line: 729,
          column: 20
        },
        end: {
          line: 729,
          column: 22
        }
      },
      "208": {
        start: {
          line: 731,
          column: 4
        },
        end: {
          line: 764,
          column: 5
        }
      },
      "209": {
        start: {
          line: 732,
          column: 6
        },
        end: {
          line: 763,
          column: 7
        }
      },
      "210": {
        start: {
          line: 733,
          column: 31
        },
        end: {
          line: 739,
          column: 9
        }
      },
      "211": {
        start: {
          line: 741,
          column: 23
        },
        end: {
          line: 741,
          column: 86
        }
      },
      "212": {
        start: {
          line: 744,
          column: 32
        },
        end: {
          line: 744,
          column: 34
        }
      },
      "213": {
        start: {
          line: 745,
          column: 8
        },
        end: {
          line: 754,
          column: 11
        }
      },
      "214": {
        start: {
          line: 746,
          column: 26
        },
        end: {
          line: 746,
          column: 34
        }
      },
      "215": {
        start: {
          line: 747,
          column: 10
        },
        end: {
          line: 752,
          column: 11
        }
      },
      "216": {
        start: {
          line: 748,
          column: 12
        },
        end: {
          line: 751,
          column: 14
        }
      },
      "217": {
        start: {
          line: 753,
          column: 10
        },
        end: {
          line: 753,
          column: 68
        }
      },
      "218": {
        start: {
          line: 756,
          column: 8
        },
        end: {
          line: 758,
          column: 27
        }
      },
      "219": {
        start: {
          line: 757,
          column: 26
        },
        end: {
          line: 757,
          column: 61
        }
      },
      "220": {
        start: {
          line: 761,
          column: 8
        },
        end: {
          line: 761,
          column: 75
        }
      },
      "221": {
        start: {
          line: 762,
          column: 8
        },
        end: {
          line: 762,
          column: 27
        }
      },
      "222": {
        start: {
          line: 766,
          column: 4
        },
        end: {
          line: 768,
          column: 5
        }
      },
      "223": {
        start: {
          line: 766,
          column: 50
        },
        end: {
          line: 766,
          column: 72
        }
      },
      "224": {
        start: {
          line: 767,
          column: 6
        },
        end: {
          line: 767,
          column: 77
        }
      },
      "225": {
        start: {
          line: 770,
          column: 4
        },
        end: {
          line: 774,
          column: 7
        }
      },
      "226": {
        start: {
          line: 777,
          column: 4
        },
        end: {
          line: 777,
          column: 73
        }
      },
      "227": {
        start: {
          line: 778,
          column: 4
        },
        end: {
          line: 778,
          column: 78
        }
      },
      "228": {
        start: {
          line: 783,
          column: 0
        },
        end: {
          line: 824,
          column: 3
        }
      },
      "229": {
        start: {
          line: 784,
          column: 2
        },
        end: {
          line: 823,
          column: 3
        }
      },
      "230": {
        start: {
          line: 785,
          column: 19
        },
        end: {
          line: 788,
          column: 5
        }
      },
      "231": {
        start: {
          line: 790,
          column: 20
        },
        end: {
          line: 790,
          column: 22
        }
      },
      "232": {
        start: {
          line: 792,
          column: 4
        },
        end: {
          line: 808,
          column: 5
        }
      },
      "233": {
        start: {
          line: 793,
          column: 6
        },
        end: {
          line: 807,
          column: 7
        }
      },
      "234": {
        start: {
          line: 794,
          column: 29
        },
        end: {
          line: 799,
          column: 9
        }
      },
      "235": {
        start: {
          line: 801,
          column: 23
        },
        end: {
          line: 801,
          column: 48
        }
      },
      "236": {
        start: {
          line: 802,
          column: 8
        },
        end: {
          line: 802,
          column: 37
        }
      },
      "237": {
        start: {
          line: 805,
          column: 8
        },
        end: {
          line: 805,
          column: 75
        }
      },
      "238": {
        start: {
          line: 806,
          column: 8
        },
        end: {
          line: 806,
          column: 28
        }
      },
      "239": {
        start: {
          line: 810,
          column: 4
        },
        end: {
          line: 812,
          column: 5
        }
      },
      "240": {
        start: {
          line: 810,
          column: 53
        },
        end: {
          line: 810,
          column: 78
        }
      },
      "241": {
        start: {
          line: 811,
          column: 6
        },
        end: {
          line: 811,
          column: 77
        }
      },
      "242": {
        start: {
          line: 814,
          column: 4
        },
        end: {
          line: 818,
          column: 7
        }
      },
      "243": {
        start: {
          line: 821,
          column: 4
        },
        end: {
          line: 821,
          column: 62
        }
      },
      "244": {
        start: {
          line: 822,
          column: 4
        },
        end: {
          line: 822,
          column: 78
        }
      },
      "245": {
        start: {
          line: 827,
          column: 0
        },
        end: {
          line: 875,
          column: 3
        }
      },
      "246": {
        start: {
          line: 828,
          column: 2
        },
        end: {
          line: 874,
          column: 3
        }
      },
      "247": {
        start: {
          line: 829,
          column: 4
        },
        end: {
          line: 829,
          column: 57
        }
      },
      "248": {
        start: {
          line: 831,
          column: 23
        },
        end: {
          line: 845,
          column: 5
        }
      },
      "249": {
        start: {
          line: 847,
          column: 23
        },
        end: {
          line: 847,
          column: 60
        }
      },
      "250": {
        start: {
          line: 848,
          column: 29
        },
        end: {
          line: 848,
          column: 80
        }
      },
      "251": {
        start: {
          line: 850,
          column: 57
        },
        end: {
          line: 854,
          column: 6
        }
      },
      "252": {
        start: {
          line: 856,
          column: 4
        },
        end: {
          line: 856,
          column: 84
        }
      },
      "253": {
        start: {
          line: 858,
          column: 4
        },
        end: {
          line: 864,
          column: 7
        }
      },
      "254": {
        start: {
          line: 867,
          column: 4
        },
        end: {
          line: 867,
          column: 50
        }
      },
      "255": {
        start: {
          line: 868,
          column: 4
        },
        end: {
          line: 873,
          column: 7
        }
      },
      "256": {
        start: {
          line: 878,
          column: 0
        },
        end: {
          line: 921,
          column: 3
        }
      },
      "257": {
        start: {
          line: 879,
          column: 2
        },
        end: {
          line: 920,
          column: 3
        }
      },
      "258": {
        start: {
          line: 880,
          column: 4
        },
        end: {
          line: 880,
          column: 64
        }
      },
      "259": {
        start: {
          line: 882,
          column: 27
        },
        end: {
          line: 891,
          column: 5
        }
      },
      "260": {
        start: {
          line: 893,
          column: 23
        },
        end: {
          line: 893,
          column: 71
        }
      },
      "261": {
        start: {
          line: 894,
          column: 29
        },
        end: {
          line: 894,
          column: 91
        }
      },
      "262": {
        start: {
          line: 896,
          column: 57
        },
        end: {
          line: 900,
          column: 6
        }
      },
      "263": {
        start: {
          line: 902,
          column: 4
        },
        end: {
          line: 902,
          column: 91
        }
      },
      "264": {
        start: {
          line: 904,
          column: 4
        },
        end: {
          line: 910,
          column: 7
        }
      },
      "265": {
        start: {
          line: 913,
          column: 4
        },
        end: {
          line: 913,
          column: 57
        }
      },
      "266": {
        start: {
          line: 914,
          column: 4
        },
        end: {
          line: 919,
          column: 7
        }
      },
      "267": {
        start: {
          line: 924,
          column: 0
        },
        end: {
          line: 968,
          column: 3
        }
      },
      "268": {
        start: {
          line: 925,
          column: 2
        },
        end: {
          line: 967,
          column: 3
        }
      },
      "269": {
        start: {
          line: 926,
          column: 4
        },
        end: {
          line: 926,
          column: 66
        }
      },
      "270": {
        start: {
          line: 928,
          column: 22
        },
        end: {
          line: 938,
          column: 5
        }
      },
      "271": {
        start: {
          line: 940,
          column: 23
        },
        end: {
          line: 940,
          column: 69
        }
      },
      "272": {
        start: {
          line: 941,
          column: 29
        },
        end: {
          line: 941,
          column: 89
        }
      },
      "273": {
        start: {
          line: 943,
          column: 57
        },
        end: {
          line: 947,
          column: 6
        }
      },
      "274": {
        start: {
          line: 949,
          column: 4
        },
        end: {
          line: 949,
          column: 93
        }
      },
      "275": {
        start: {
          line: 951,
          column: 4
        },
        end: {
          line: 957,
          column: 7
        }
      },
      "276": {
        start: {
          line: 960,
          column: 4
        },
        end: {
          line: 960,
          column: 59
        }
      },
      "277": {
        start: {
          line: 961,
          column: 4
        },
        end: {
          line: 966,
          column: 7
        }
      },
      "278": {
        start: {
          line: 971,
          column: 0
        },
        end: {
          line: 1039,
          column: 3
        }
      },
      "279": {
        start: {
          line: 972,
          column: 2
        },
        end: {
          line: 1038,
          column: 3
        }
      },
      "280": {
        start: {
          line: 973,
          column: 4
        },
        end: {
          line: 973,
          column: 65
        }
      },
      "281": {
        start: {
          line: 976,
          column: 24
        },
        end: {
          line: 983,
          column: 5
        }
      },
      "282": {
        start: {
          line: 986,
          column: 24
        },
        end: {
          line: 1004,
          column: 5
        }
      },
      "283": {
        start: {
          line: 1006,
          column: 41
        },
        end: {
          line: 1009,
          column: 6
        }
      },
      "284": {
        start: {
          line: 1011,
          column: 4
        },
        end: {
          line: 1011,
          column: 87
        }
      },
      "285": {
        start: {
          line: 1014,
          column: 20
        },
        end: {
          line: 1019,
          column: 5
        }
      },
      "286": {
        start: {
          line: 1016,
          column: 52
        },
        end: {
          line: 1016,
          column: 79
        }
      },
      "287": {
        start: {
          line: 1017,
          column: 50
        },
        end: {
          line: 1017,
          column: 78
        }
      },
      "288": {
        start: {
          line: 1018,
          column: 57
        },
        end: {
          line: 1018,
          column: 92
        }
      },
      "289": {
        start: {
          line: 1021,
          column: 4
        },
        end: {
          line: 1028,
          column: 7
        }
      },
      "290": {
        start: {
          line: 1031,
          column: 4
        },
        end: {
          line: 1031,
          column: 51
        }
      },
      "291": {
        start: {
          line: 1032,
          column: 4
        },
        end: {
          line: 1037,
          column: 7
        }
      },
      "292": {
        start: {
          line: 1042,
          column: 0
        },
        end: {
          line: 1089,
          column: 3
        }
      },
      "293": {
        start: {
          line: 1043,
          column: 2
        },
        end: {
          line: 1088,
          column: 3
        }
      },
      "294": {
        start: {
          line: 1044,
          column: 27
        },
        end: {
          line: 1044,
          column: 37
        }
      },
      "295": {
        start: {
          line: 1045,
          column: 4
        },
        end: {
          line: 1045,
          column: 71
        }
      },
      "296": {
        start: {
          line: 1048,
          column: 25
        },
        end: {
          line: 1048,
          column: 83
        }
      },
      "297": {
        start: {
          line: 1049,
          column: 4
        },
        end: {
          line: 1055,
          column: 5
        }
      },
      "298": {
        start: {
          line: 1050,
          column: 6
        },
        end: {
          line: 1054,
          column: 9
        }
      },
      "299": {
        start: {
          line: 1059,
          column: 19
        },
        end: {
          line: 1059,
          column: 53
        }
      },
      "300": {
        start: {
          line: 1061,
          column: 4
        },
        end: {
          line: 1061,
          column: 89
        }
      },
      "301": {
        start: {
          line: 1063,
          column: 4
        },
        end: {
          line: 1078,
          column: 7
        }
      },
      "302": {
        start: {
          line: 1081,
          column: 4
        },
        end: {
          line: 1081,
          column: 81
        }
      },
      "303": {
        start: {
          line: 1082,
          column: 4
        },
        end: {
          line: 1087,
          column: 7
        }
      },
      "304": {
        start: {
          line: 1091,
          column: 0
        },
        end: {
          line: 1091,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 16
          },
          end: {
            line: 7,
            column: 17
          }
        },
        loc: {
          start: {
            line: 7,
            column: 36
          },
          end: {
            line: 35,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 38,
            column: 23
          },
          end: {
            line: 38,
            column: 24
          }
        },
        loc: {
          start: {
            line: 38,
            column: 43
          },
          end: {
            line: 125,
            column: 1
          }
        },
        line: 38
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 98,
            column: 41
          },
          end: {
            line: 98,
            column: 42
          }
        },
        loc: {
          start: {
            line: 98,
            column: 46
          },
          end: {
            line: 98,
            column: 68
          }
        },
        line: 98
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 128,
            column: 23
          },
          end: {
            line: 128,
            column: 24
          }
        },
        loc: {
          start: {
            line: 128,
            column: 43
          },
          end: {
            line: 259,
            column: 1
          }
        },
        line: 128
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 185,
            column: 59
          },
          end: {
            line: 185,
            column: 60
          }
        },
        loc: {
          start: {
            line: 185,
            column: 77
          },
          end: {
            line: 234,
            column: 5
          }
        },
        line: 185
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 242,
            column: 51
          },
          end: {
            line: 242,
            column: 52
          }
        },
        loc: {
          start: {
            line: 242,
            column: 56
          },
          end: {
            line: 242,
            column: 94
          }
        },
        line: 242
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 243,
            column: 50
          },
          end: {
            line: 243,
            column: 51
          }
        },
        loc: {
          start: {
            line: 243,
            column: 55
          },
          end: {
            line: 243,
            column: 92
          }
        },
        line: 243
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 244,
            column: 45
          },
          end: {
            line: 244,
            column: 46
          }
        },
        loc: {
          start: {
            line: 244,
            column: 50
          },
          end: {
            line: 244,
            column: 82
          }
        },
        line: 244
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 262,
            column: 29
          },
          end: {
            line: 262,
            column: 30
          }
        },
        loc: {
          start: {
            line: 262,
            column: 49
          },
          end: {
            line: 330,
            column: 1
          }
        },
        line: 262
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 333,
            column: 25
          },
          end: {
            line: 333,
            column: 26
          }
        },
        loc: {
          start: {
            line: 333,
            column: 45
          },
          end: {
            line: 402,
            column: 1
          }
        },
        line: 333
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 405,
            column: 32
          },
          end: {
            line: 405,
            column: 33
          }
        },
        loc: {
          start: {
            line: 405,
            column: 52
          },
          end: {
            line: 472,
            column: 1
          }
        },
        line: 405
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 475,
            column: 24
          },
          end: {
            line: 475,
            column: 25
          }
        },
        loc: {
          start: {
            line: 475,
            column: 44
          },
          end: {
            line: 541,
            column: 1
          }
        },
        line: 475
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 544,
            column: 29
          },
          end: {
            line: 544,
            column: 30
          }
        },
        loc: {
          start: {
            line: 544,
            column: 49
          },
          end: {
            line: 577,
            column: 1
          }
        },
        line: 544
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 580,
            column: 21
          },
          end: {
            line: 580,
            column: 22
          }
        },
        loc: {
          start: {
            line: 580,
            column: 41
          },
          end: {
            line: 609,
            column: 1
          }
        },
        line: 580
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 612,
            column: 26
          },
          end: {
            line: 612,
            column: 27
          }
        },
        loc: {
          start: {
            line: 612,
            column: 46
          },
          end: {
            line: 640,
            column: 1
          }
        },
        line: 612
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 643,
            column: 34
          },
          end: {
            line: 643,
            column: 35
          }
        },
        loc: {
          start: {
            line: 643,
            column: 54
          },
          end: {
            line: 709,
            column: 1
          }
        },
        line: 643
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 712,
            column: 34
          },
          end: {
            line: 712,
            column: 35
          }
        },
        loc: {
          start: {
            line: 712,
            column: 54
          },
          end: {
            line: 780,
            column: 1
          }
        },
        line: 712
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 745,
            column: 28
          },
          end: {
            line: 745,
            column: 29
          }
        },
        loc: {
          start: {
            line: 745,
            column: 35
          },
          end: {
            line: 754,
            column: 9
          }
        },
        line: 745
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 757,
            column: 16
          },
          end: {
            line: 757,
            column: 17
          }
        },
        loc: {
          start: {
            line: 757,
            column: 26
          },
          end: {
            line: 757,
            column: 61
          }
        },
        line: 757
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 766,
            column: 37
          },
          end: {
            line: 766,
            column: 38
          }
        },
        loc: {
          start: {
            line: 766,
            column: 50
          },
          end: {
            line: 766,
            column: 72
          }
        },
        line: 766
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 783,
            column: 33
          },
          end: {
            line: 783,
            column: 34
          }
        },
        loc: {
          start: {
            line: 783,
            column: 53
          },
          end: {
            line: 824,
            column: 1
          }
        },
        line: 783
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 810,
            column: 37
          },
          end: {
            line: 810,
            column: 38
          }
        },
        loc: {
          start: {
            line: 810,
            column: 53
          },
          end: {
            line: 810,
            column: 78
          }
        },
        line: 810
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 827,
            column: 21
          },
          end: {
            line: 827,
            column: 22
          }
        },
        loc: {
          start: {
            line: 827,
            column: 41
          },
          end: {
            line: 875,
            column: 1
          }
        },
        line: 827
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 878,
            column: 26
          },
          end: {
            line: 878,
            column: 27
          }
        },
        loc: {
          start: {
            line: 878,
            column: 46
          },
          end: {
            line: 921,
            column: 1
          }
        },
        line: 878
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 924,
            column: 20
          },
          end: {
            line: 924,
            column: 21
          }
        },
        loc: {
          start: {
            line: 924,
            column: 40
          },
          end: {
            line: 968,
            column: 1
          }
        },
        line: 924
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 971,
            column: 22
          },
          end: {
            line: 971,
            column: 23
          }
        },
        loc: {
          start: {
            line: 971,
            column: 42
          },
          end: {
            line: 1039,
            column: 1
          }
        },
        line: 971
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 1016,
            column: 47
          },
          end: {
            line: 1016,
            column: 48
          }
        },
        loc: {
          start: {
            line: 1016,
            column: 52
          },
          end: {
            line: 1016,
            column: 79
          }
        },
        line: 1016
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 1017,
            column: 45
          },
          end: {
            line: 1017,
            column: 46
          }
        },
        loc: {
          start: {
            line: 1017,
            column: 50
          },
          end: {
            line: 1017,
            column: 78
          }
        },
        line: 1017
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 1018,
            column: 45
          },
          end: {
            line: 1018,
            column: 46
          }
        },
        loc: {
          start: {
            line: 1018,
            column: 57
          },
          end: {
            line: 1018,
            column: 92
          }
        },
        line: 1018
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 1042,
            column: 36
          },
          end: {
            line: 1042,
            column: 37
          }
        },
        loc: {
          start: {
            line: 1042,
            column: 56
          },
          end: {
            line: 1089,
            column: 1
          }
        },
        line: 1042
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 76,
            column: 31
          },
          end: {
            line: 76,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 31
          },
          end: {
            line: 76,
            column: 52
          }
        }, {
          start: {
            line: 76,
            column: 56
          },
          end: {
            line: 76,
            column: 57
          }
        }],
        line: 76
      },
      "1": {
        loc: {
          start: {
            line: 82,
            column: 18
          },
          end: {
            line: 82,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 82,
            column: 30
          },
          end: {
            line: 82,
            column: 39
          }
        }, {
          start: {
            line: 82,
            column: 42
          },
          end: {
            line: 82,
            column: 51
          }
        }],
        line: 82
      },
      "2": {
        loc: {
          start: {
            line: 110,
            column: 18
          },
          end: {
            line: 110,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 110,
            column: 38
          },
          end: {
            line: 110,
            column: 49
          }
        }, {
          start: {
            line: 110,
            column: 52
          },
          end: {
            line: 110,
            column: 116
          }
        }],
        line: 110
      },
      "3": {
        loc: {
          start: {
            line: 110,
            column: 52
          },
          end: {
            line: 110,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 110,
            column: 72
          },
          end: {
            line: 110,
            column: 78
          }
        }, {
          start: {
            line: 110,
            column: 81
          },
          end: {
            line: 110,
            column: 116
          }
        }],
        line: 110
      },
      "4": {
        loc: {
          start: {
            line: 110,
            column: 81
          },
          end: {
            line: 110,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 110,
            column: 101
          },
          end: {
            line: 110,
            column: 107
          }
        }, {
          start: {
            line: 110,
            column: 110
          },
          end: {
            line: 110,
            column: 116
          }
        }],
        line: 110
      },
      "5": {
        loc: {
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        }, {
          start: {
            line: 197,
            column: 15
          },
          end: {
            line: 217,
            column: 9
          }
        }],
        line: 191
      },
      "6": {
        loc: {
          start: {
            line: 195,
            column: 33
          },
          end: {
            line: 195,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 195,
            column: 33
          },
          end: {
            line: 195,
            column: 54
          }
        }, {
          start: {
            line: 195,
            column: 58
          },
          end: {
            line: 195,
            column: 59
          }
        }],
        line: 195
      },
      "7": {
        loc: {
          start: {
            line: 197,
            column: 15
          },
          end: {
            line: 217,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 15
          },
          end: {
            line: 217,
            column: 9
          }
        }, {
          start: {
            line: 207,
            column: 15
          },
          end: {
            line: 217,
            column: 9
          }
        }],
        line: 197
      },
      "8": {
        loc: {
          start: {
            line: 202,
            column: 35
          },
          end: {
            line: 202,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 35
          },
          end: {
            line: 202,
            column: 56
          }
        }, {
          start: {
            line: 202,
            column: 60
          },
          end: {
            line: 202,
            column: 61
          }
        }],
        line: 202
      },
      "9": {
        loc: {
          start: {
            line: 207,
            column: 15
          },
          end: {
            line: 217,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 15
          },
          end: {
            line: 217,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "10": {
        loc: {
          start: {
            line: 212,
            column: 35
          },
          end: {
            line: 212,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 35
          },
          end: {
            line: 212,
            column: 56
          }
        }, {
          start: {
            line: 212,
            column: 60
          },
          end: {
            line: 212,
            column: 61
          }
        }],
        line: 212
      },
      "11": {
        loc: {
          start: {
            line: 223,
            column: 30
          },
          end: {
            line: 223,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 223,
            column: 46
          },
          end: {
            line: 223,
            column: 59
          }
        }, {
          start: {
            line: 223,
            column: 62
          },
          end: {
            line: 223,
            column: 74
          }
        }],
        line: 223
      },
      "12": {
        loc: {
          start: {
            line: 264,
            column: 17
          },
          end: {
            line: 264,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 264,
            column: 17
          },
          end: {
            line: 264,
            column: 41
          }
        }, {
          start: {
            line: 264,
            column: 45
          },
          end: {
            line: 264,
            column: 46
          }
        }],
        line: 264
      },
      "13": {
        loc: {
          start: {
            line: 265,
            column: 18
          },
          end: {
            line: 265,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 265,
            column: 18
          },
          end: {
            line: 265,
            column: 43
          }
        }, {
          start: {
            line: 265,
            column: 47
          },
          end: {
            line: 265,
            column: 49
          }
        }],
        line: 265
      },
      "14": {
        loc: {
          start: {
            line: 273,
            column: 4
          },
          end: {
            line: 277,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 273,
            column: 4
          },
          end: {
            line: 277,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 273
      },
      "15": {
        loc: {
          start: {
            line: 310,
            column: 4
          },
          end: {
            line: 312,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 310,
            column: 4
          },
          end: {
            line: 312,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 310
      },
      "16": {
        loc: {
          start: {
            line: 310,
            column: 8
          },
          end: {
            line: 310,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 310,
            column: 8
          },
          end: {
            line: 310,
            column: 24
          }
        }, {
          start: {
            line: 310,
            column: 28
          },
          end: {
            line: 310,
            column: 64
          }
        }, {
          start: {
            line: 310,
            column: 68
          },
          end: {
            line: 310,
            column: 101
          }
        }],
        line: 310
      },
      "17": {
        loc: {
          start: {
            line: 335,
            column: 17
          },
          end: {
            line: 335,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 335,
            column: 17
          },
          end: {
            line: 335,
            column: 41
          }
        }, {
          start: {
            line: 335,
            column: 45
          },
          end: {
            line: 335,
            column: 46
          }
        }],
        line: 335
      },
      "18": {
        loc: {
          start: {
            line: 336,
            column: 18
          },
          end: {
            line: 336,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 336,
            column: 18
          },
          end: {
            line: 336,
            column: 43
          }
        }, {
          start: {
            line: 336,
            column: 47
          },
          end: {
            line: 336,
            column: 49
          }
        }],
        line: 336
      },
      "19": {
        loc: {
          start: {
            line: 344,
            column: 4
          },
          end: {
            line: 348,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 4
          },
          end: {
            line: 348,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 344
      },
      "20": {
        loc: {
          start: {
            line: 382,
            column: 4
          },
          end: {
            line: 384,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 382,
            column: 4
          },
          end: {
            line: 384,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 382
      },
      "21": {
        loc: {
          start: {
            line: 382,
            column: 8
          },
          end: {
            line: 382,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 382,
            column: 8
          },
          end: {
            line: 382,
            column: 20
          }
        }, {
          start: {
            line: 382,
            column: 24
          },
          end: {
            line: 382,
            column: 56
          }
        }, {
          start: {
            line: 382,
            column: 60
          },
          end: {
            line: 382,
            column: 89
          }
        }],
        line: 382
      },
      "22": {
        loc: {
          start: {
            line: 407,
            column: 17
          },
          end: {
            line: 407,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 407,
            column: 17
          },
          end: {
            line: 407,
            column: 41
          }
        }, {
          start: {
            line: 407,
            column: 45
          },
          end: {
            line: 407,
            column: 46
          }
        }],
        line: 407
      },
      "23": {
        loc: {
          start: {
            line: 408,
            column: 18
          },
          end: {
            line: 408,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 408,
            column: 18
          },
          end: {
            line: 408,
            column: 43
          }
        }, {
          start: {
            line: 408,
            column: 47
          },
          end: {
            line: 408,
            column: 49
          }
        }],
        line: 408
      },
      "24": {
        loc: {
          start: {
            line: 416,
            column: 4
          },
          end: {
            line: 420,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 416,
            column: 4
          },
          end: {
            line: 420,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 416
      },
      "25": {
        loc: {
          start: {
            line: 452,
            column: 4
          },
          end: {
            line: 454,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 452,
            column: 4
          },
          end: {
            line: 454,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 452
      },
      "26": {
        loc: {
          start: {
            line: 452,
            column: 8
          },
          end: {
            line: 452,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 452,
            column: 8
          },
          end: {
            line: 452,
            column: 21
          }
        }, {
          start: {
            line: 452,
            column: 25
          },
          end: {
            line: 452,
            column: 58
          }
        }, {
          start: {
            line: 452,
            column: 62
          },
          end: {
            line: 452,
            column: 92
          }
        }],
        line: 452
      },
      "27": {
        loc: {
          start: {
            line: 477,
            column: 17
          },
          end: {
            line: 477,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 477,
            column: 17
          },
          end: {
            line: 477,
            column: 41
          }
        }, {
          start: {
            line: 477,
            column: 45
          },
          end: {
            line: 477,
            column: 46
          }
        }],
        line: 477
      },
      "28": {
        loc: {
          start: {
            line: 478,
            column: 18
          },
          end: {
            line: 478,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 478,
            column: 18
          },
          end: {
            line: 478,
            column: 43
          }
        }, {
          start: {
            line: 478,
            column: 47
          },
          end: {
            line: 478,
            column: 49
          }
        }],
        line: 478
      },
      "29": {
        loc: {
          start: {
            line: 486,
            column: 4
          },
          end: {
            line: 490,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 486,
            column: 4
          },
          end: {
            line: 490,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 486
      },
      "30": {
        loc: {
          start: {
            line: 521,
            column: 4
          },
          end: {
            line: 523,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 521,
            column: 4
          },
          end: {
            line: 523,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 521
      },
      "31": {
        loc: {
          start: {
            line: 521,
            column: 8
          },
          end: {
            line: 521,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 521,
            column: 8
          },
          end: {
            line: 521,
            column: 23
          }
        }, {
          start: {
            line: 521,
            column: 27
          },
          end: {
            line: 521,
            column: 62
          }
        }, {
          start: {
            line: 521,
            column: 66
          },
          end: {
            line: 521,
            column: 98
          }
        }],
        line: 521
      },
      "32": {
        loc: {
          start: {
            line: 546,
            column: 27
          },
          end: {
            line: 546,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 546,
            column: 27
          },
          end: {
            line: 546,
            column: 52
          }
        }, {
          start: {
            line: 546,
            column: 56
          },
          end: {
            line: 546,
            column: 58
          }
        }],
        line: 546
      },
      "33": {
        loc: {
          start: {
            line: 558,
            column: 4
          },
          end: {
            line: 560,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 558,
            column: 4
          },
          end: {
            line: 560,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 558
      },
      "34": {
        loc: {
          start: {
            line: 558,
            column: 8
          },
          end: {
            line: 558,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 558,
            column: 8
          },
          end: {
            line: 558,
            column: 15
          }
        }, {
          start: {
            line: 558,
            column: 19
          },
          end: {
            line: 558,
            column: 46
          }
        }, {
          start: {
            line: 558,
            column: 50
          },
          end: {
            line: 558,
            column: 74
          }
        }],
        line: 558
      },
      "35": {
        loc: {
          start: {
            line: 582,
            column: 18
          },
          end: {
            line: 582,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 582,
            column: 18
          },
          end: {
            line: 582,
            column: 43
          }
        }, {
          start: {
            line: 582,
            column: 47
          },
          end: {
            line: 582,
            column: 49
          }
        }],
        line: 582
      },
      "36": {
        loc: {
          start: {
            line: 596,
            column: 4
          },
          end: {
            line: 598,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 596,
            column: 4
          },
          end: {
            line: 598,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 596
      },
      "37": {
        loc: {
          start: {
            line: 596,
            column: 8
          },
          end: {
            line: 596,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 596,
            column: 8
          },
          end: {
            line: 596,
            column: 15
          }
        }, {
          start: {
            line: 596,
            column: 19
          },
          end: {
            line: 596,
            column: 46
          }
        }, {
          start: {
            line: 596,
            column: 50
          },
          end: {
            line: 596,
            column: 74
          }
        }],
        line: 596
      },
      "38": {
        loc: {
          start: {
            line: 614,
            column: 18
          },
          end: {
            line: 614,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 614,
            column: 18
          },
          end: {
            line: 614,
            column: 43
          }
        }, {
          start: {
            line: 614,
            column: 47
          },
          end: {
            line: 614,
            column: 49
          }
        }],
        line: 614
      },
      "39": {
        loc: {
          start: {
            line: 627,
            column: 4
          },
          end: {
            line: 629,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 627,
            column: 4
          },
          end: {
            line: 629,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 627
      },
      "40": {
        loc: {
          start: {
            line: 627,
            column: 8
          },
          end: {
            line: 627,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 627,
            column: 8
          },
          end: {
            line: 627,
            column: 15
          }
        }, {
          start: {
            line: 627,
            column: 19
          },
          end: {
            line: 627,
            column: 46
          }
        }, {
          start: {
            line: 627,
            column: 50
          },
          end: {
            line: 627,
            column: 74
          }
        }],
        line: 627
      },
      "41": {
        loc: {
          start: {
            line: 666,
            column: 8
          },
          end: {
            line: 682,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 666,
            column: 8
          },
          end: {
            line: 682,
            column: 9
          }
        }, {
          start: {
            line: 674,
            column: 15
          },
          end: {
            line: 682,
            column: 9
          }
        }],
        line: 666
      },
      "42": {
        loc: {
          start: {
            line: 685,
            column: 8
          },
          end: {
            line: 687,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 685,
            column: 8
          },
          end: {
            line: 687,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 685
      },
      "43": {
        loc: {
          start: {
            line: 715,
            column: 18
          },
          end: {
            line: 715,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 715,
            column: 18
          },
          end: {
            line: 715,
            column: 43
          }
        }, {
          start: {
            line: 715,
            column: 47
          },
          end: {
            line: 715,
            column: 49
          }
        }],
        line: 715
      },
      "44": {
        loc: {
          start: {
            line: 747,
            column: 10
          },
          end: {
            line: 752,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 747,
            column: 10
          },
          end: {
            line: 752,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 747
      },
      "45": {
        loc: {
          start: {
            line: 766,
            column: 4
          },
          end: {
            line: 768,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 766,
            column: 4
          },
          end: {
            line: 768,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 766
      },
      "46": {
        loc: {
          start: {
            line: 810,
            column: 4
          },
          end: {
            line: 812,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 810,
            column: 4
          },
          end: {
            line: 812,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 810
      },
      "47": {
        loc: {
          start: {
            line: 861,
            column: 22
          },
          end: {
            line: 861,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 861,
            column: 22
          },
          end: {
            line: 861,
            column: 48
          }
        }, {
          start: {
            line: 861,
            column: 52
          },
          end: {
            line: 861,
            column: 53
          }
        }],
        line: 861
      },
      "48": {
        loc: {
          start: {
            line: 907,
            column: 22
          },
          end: {
            line: 907,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 907,
            column: 22
          },
          end: {
            line: 907,
            column: 48
          }
        }, {
          start: {
            line: 907,
            column: 52
          },
          end: {
            line: 907,
            column: 53
          }
        }],
        line: 907
      },
      "49": {
        loc: {
          start: {
            line: 954,
            column: 22
          },
          end: {
            line: 954,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 954,
            column: 22
          },
          end: {
            line: 954,
            column: 48
          }
        }, {
          start: {
            line: 954,
            column: 52
          },
          end: {
            line: 954,
            column: 53
          }
        }],
        line: 954
      },
      "50": {
        loc: {
          start: {
            line: 1018,
            column: 72
          },
          end: {
            line: 1018,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1018,
            column: 72
          },
          end: {
            line: 1018,
            column: 86
          }
        }, {
          start: {
            line: 1018,
            column: 90
          },
          end: {
            line: 1018,
            column: 91
          }
        }],
        line: 1018
      },
      "51": {
        loc: {
          start: {
            line: 1049,
            column: 4
          },
          end: {
            line: 1055,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1049,
            column: 4
          },
          end: {
            line: 1055,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1049
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b6eba9351405cea3b3cdd58a9e7e9997f552efa6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_pmlzhap64 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_pmlzhap64();
const express =
/* istanbul ignore next */
(cov_pmlzhap64().s[0]++, require('express'));
const {
  query
} =
/* istanbul ignore next */
(cov_pmlzhap64().s[1]++, require('../utils/database'));
const router =
/* istanbul ignore next */
(cov_pmlzhap64().s[2]++, express.Router());

// Root data endpoint - overview of data management
/* istanbul ignore next */
cov_pmlzhap64().s[3]++;
router.get('/', async (req, res) => {
  /* istanbul ignore next */
  cov_pmlzhap64().f[0]++;
  cov_pmlzhap64().s[4]++;
  try {
    /* istanbul ignore next */
    cov_pmlzhap64().s[5]++;
    console.log('Data overview endpoint called');

    // Provide overview of data management system
    /* istanbul ignore next */
    cov_pmlzhap64().s[6]++;
    res.json({
      success: true,
      data: {
        system: 'Data Management API',
        version: '1.0.0',
        status: 'operational',
        available_endpoints: ['/data/quality - Data quality checks across all tables', '/data/sources - Data source status and health', '/data/metrics - Data freshness and completeness metrics'],
        last_updated: new Date().toISOString()
      },
      status: 'operational',
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_pmlzhap64().s[7]++;
    console.error('Error in data overview:', error);
    /* istanbul ignore next */
    cov_pmlzhap64().s[8]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch data overview'
    });
  }
});

// Data quality endpoint
/* istanbul ignore next */
cov_pmlzhap64().s[9]++;
router.get('/quality', async (req, res) => {
  /* istanbul ignore next */
  cov_pmlzhap64().f[1]++;
  cov_pmlzhap64().s[10]++;
  try {
    /* istanbul ignore next */
    cov_pmlzhap64().s[11]++;
    console.log('Data quality endpoint called');

    // Check data quality across key tables
    const qualityChecks =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[12]++, [{
      name: 'Stock Symbols',
      table: 'stock_symbols',
      query: 'SELECT COUNT(*) as count FROM stock_symbols WHERE symbol IS NOT NULL'
    }, {
      name: 'Company Profiles',
      table: 'company_profile',
      query: 'SELECT COUNT(*) as count FROM company_profile WHERE symbol IS NOT NULL'
    }, {
      name: 'Market Data',
      table: 'market_data',
      query: 'SELECT COUNT(*) as count FROM market_data WHERE symbol IS NOT NULL'
    }, {
      name: 'Price Data Daily',
      table: 'price_daily',
      query: 'SELECT COUNT(*) as count FROM price_daily WHERE symbol IS NOT NULL AND date > CURRENT_DATE - INTERVAL \'7 days\''
    }, {
      name: 'Technical Data',
      table: 'technical_data_daily',
      query: 'SELECT COUNT(*) as count FROM technical_data_daily WHERE symbol IS NOT NULL AND date > CURRENT_DATE - INTERVAL \'7 days\''
    }]);
    const results =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[13]++, []);
    /* istanbul ignore next */
    cov_pmlzhap64().s[14]++;
    for (const check of qualityChecks) {
      /* istanbul ignore next */
      cov_pmlzhap64().s[15]++;
      try {
        const result =
        /* istanbul ignore next */
        (cov_pmlzhap64().s[16]++, await query(check.query));
        const count =
        /* istanbul ignore next */
        (cov_pmlzhap64().s[17]++, parseInt(
        /* istanbul ignore next */
        (cov_pmlzhap64().b[0][0]++, result.rows[0]?.count) ||
        /* istanbul ignore next */
        (cov_pmlzhap64().b[0][1]++, 0)));
        /* istanbul ignore next */
        cov_pmlzhap64().s[18]++;
        results.push({
          table: check.name,
          table_name: check.table,
          record_count: count,
          status: count > 0 ?
          /* istanbul ignore next */
          (cov_pmlzhap64().b[1][0]++, 'healthy') :
          /* istanbul ignore next */
          (cov_pmlzhap64().b[1][1]++, 'no_data'),
          last_checked: new Date().toISOString()
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_pmlzhap64().s[19]++;
        results.push({
          table: check.name,
          table_name: check.table,
          record_count: 0,
          status: 'error',
          error: error.message,
          last_checked: new Date().toISOString()
        });
      }
    }

    // Calculate overall health score
    const healthyTables =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[20]++, results.filter(r => {
      /* istanbul ignore next */
      cov_pmlzhap64().f[2]++;
      cov_pmlzhap64().s[21]++;
      return r.status === 'healthy';
    }).length);
    const totalTables =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[22]++, results.length);
    const healthScore =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[23]++, Math.round(healthyTables / totalTables * 100));
    /* istanbul ignore next */
    cov_pmlzhap64().s[24]++;
    res.json({
      success: true,
      data: {
        quality_checks: results,
        summary: {
          healthy_tables: healthyTables,
          total_tables: totalTables,
          health_score: healthScore,
          status: healthScore >= 80 ?
          /* istanbul ignore next */
          (cov_pmlzhap64().b[2][0]++, 'excellent') :
          /* istanbul ignore next */
          (cov_pmlzhap64().b[2][1]++, healthScore >= 60 ?
          /* istanbul ignore next */
          (cov_pmlzhap64().b[3][0]++, 'good') :
          /* istanbul ignore next */
          (cov_pmlzhap64().b[3][1]++, healthScore >= 40 ?
          /* istanbul ignore next */
          (cov_pmlzhap64().b[4][0]++, 'fair') :
          /* istanbul ignore next */
          (cov_pmlzhap64().b[4][1]++, 'poor')))
        }
      },
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_pmlzhap64().s[25]++;
    console.error('Error in data quality check:', error);
    /* istanbul ignore next */
    cov_pmlzhap64().s[26]++;
    res.status(500).json({
      success: false,
      error: 'Failed to check data quality',
      details: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Data sources endpoint
/* istanbul ignore next */
cov_pmlzhap64().s[27]++;
router.get('/sources', async (req, res) => {
  /* istanbul ignore next */
  cov_pmlzhap64().f[3]++;
  cov_pmlzhap64().s[28]++;
  try {
    /* istanbul ignore next */
    cov_pmlzhap64().s[29]++;
    console.log('Data sources endpoint called');

    // Define all data sources and their status
    const dataSources =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[30]++, [{
      name: 'Yahoo Finance',
      type: 'Market Data',
      status: 'active',
      description: 'Real-time and historical stock prices, company profiles',
      endpoints: ['Price Data', 'Company Info', 'Historical Data'],
      last_updated: new Date().toISOString()
    }, {
      name: 'Alpha Vantage',
      type: 'Technical Analysis',
      status: 'configured',
      description: 'Technical indicators and advanced market analytics',
      endpoints: ['Technical Indicators', 'Economic Data'],
      last_updated: new Date().toISOString()
    }, {
      name: 'FRED Economic Data',
      type: 'Economic Indicators',
      status: 'available',
      description: 'Federal Reserve Economic Data',
      endpoints: ['GDP', 'Inflation', 'Interest Rates', 'Employment'],
      last_updated: new Date().toISOString()
    }, {
      name: 'CNN Fear & Greed Index',
      type: 'Market Sentiment',
      status: 'available',
      description: 'Market sentiment indicator',
      endpoints: ['Fear & Greed Index'],
      last_updated: new Date().toISOString()
    }, {
      name: 'NAAIM Exposure Index',
      type: 'Professional Sentiment',
      status: 'available',
      description: 'National Association of Active Investment Managers exposure data',
      endpoints: ['NAAIM Exposure'],
      last_updated: new Date().toISOString()
    }, {
      name: 'AAII Sentiment Survey',
      type: 'Retail Sentiment',
      status: 'available',
      description: 'American Association of Individual Investors sentiment survey',
      endpoints: ['Bullish/Bearish Sentiment'],
      last_updated: new Date().toISOString()
    }]);

    // Check which data sources have recent data
    const sourceStatus =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[31]++, await Promise.all(dataSources.map(async source => {
      /* istanbul ignore next */
      cov_pmlzhap64().f[4]++;
      cov_pmlzhap64().s[32]++;
      try {
        let hasRecentData =
        /* istanbul ignore next */
        (cov_pmlzhap64().s[33]++, false);
        let recordCount =
        /* istanbul ignore next */
        (cov_pmlzhap64().s[34]++, 0);

        // Check for recent data based on source type
        /* istanbul ignore next */
        cov_pmlzhap64().s[35]++;
        if (source.name === 'Yahoo Finance') {
          /* istanbul ignore next */
          cov_pmlzhap64().b[5][0]++;
          const result =
          /* istanbul ignore next */
          (cov_pmlzhap64().s[36]++, await query(`SELECT COUNT(*) as count FROM market_data WHERE fetched_at > CURRENT_DATE - INTERVAL '7 days'`));
          /* istanbul ignore next */
          cov_pmlzhap64().s[37]++;
          recordCount = parseInt(
          /* istanbul ignore next */
          (cov_pmlzhap64().b[6][0]++, result.rows[0]?.count) ||
          /* istanbul ignore next */
          (cov_pmlzhap64().b[6][1]++, 0));
          /* istanbul ignore next */
          cov_pmlzhap64().s[38]++;
          hasRecentData = recordCount > 0;
        } else {
          /* istanbul ignore next */
          cov_pmlzhap64().b[5][1]++;
          cov_pmlzhap64().s[39]++;
          if (source.name === 'CNN Fear & Greed Index') {
            /* istanbul ignore next */
            cov_pmlzhap64().b[7][0]++;
            cov_pmlzhap64().s[40]++;
            try {
              const result =
              /* istanbul ignore next */
              (cov_pmlzhap64().s[41]++, await query(`SELECT COUNT(*) as count FROM fear_greed_index WHERE date > CURRENT_DATE - INTERVAL '30 days'`));
              /* istanbul ignore next */
              cov_pmlzhap64().s[42]++;
              recordCount = parseInt(
              /* istanbul ignore next */
              (cov_pmlzhap64().b[8][0]++, result.rows[0]?.count) ||
              /* istanbul ignore next */
              (cov_pmlzhap64().b[8][1]++, 0));
              /* istanbul ignore next */
              cov_pmlzhap64().s[43]++;
              hasRecentData = recordCount > 0;
            } catch {
              /* istanbul ignore next */
              cov_pmlzhap64().s[44]++;
              hasRecentData = false;
            }
          } else {
            /* istanbul ignore next */
            cov_pmlzhap64().b[7][1]++;
            cov_pmlzhap64().s[45]++;
            if (source.name === 'NAAIM Exposure Index') {
              /* istanbul ignore next */
              cov_pmlzhap64().b[9][0]++;
              cov_pmlzhap64().s[46]++;
              try {
                const result =
                /* istanbul ignore next */
                (cov_pmlzhap64().s[47]++, await query(`SELECT COUNT(*) as count FROM naaim WHERE date > CURRENT_DATE - INTERVAL '30 days'`));
                /* istanbul ignore next */
                cov_pmlzhap64().s[48]++;
                recordCount = parseInt(
                /* istanbul ignore next */
                (cov_pmlzhap64().b[10][0]++, result.rows[0]?.count) ||
                /* istanbul ignore next */
                (cov_pmlzhap64().b[10][1]++, 0));
                /* istanbul ignore next */
                cov_pmlzhap64().s[49]++;
                hasRecentData = recordCount > 0;
              } catch {
                /* istanbul ignore next */
                cov_pmlzhap64().s[50]++;
                hasRecentData = false;
              }
            } else
            /* istanbul ignore next */
            {
              cov_pmlzhap64().b[9][1]++;
            }
          }
        }
        /* istanbul ignore next */
        cov_pmlzhap64().s[51]++;
        return {
          ...source,
          has_recent_data: hasRecentData,
          record_count: recordCount,
          operational_status: hasRecentData ?
          /* istanbul ignore next */
          (cov_pmlzhap64().b[11][0]++, 'operational') :
          /* istanbul ignore next */
          (cov_pmlzhap64().b[11][1]++, 'configured')
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_pmlzhap64().s[52]++;
        return {
          ...source,
          has_recent_data: false,
          record_count: 0,
          operational_status: 'error',
          error: error.message
        };
      }
    })));
    /* istanbul ignore next */
    cov_pmlzhap64().s[53]++;
    res.json({
      success: true,
      data: {
        sources: sourceStatus,
        summary: {
          total_sources: sourceStatus.length,
          operational_sources: sourceStatus.filter(s => {
            /* istanbul ignore next */
            cov_pmlzhap64().f[5]++;
            cov_pmlzhap64().s[54]++;
            return s.operational_status === 'operational';
          }).length,
          configured_sources: sourceStatus.filter(s => {
            /* istanbul ignore next */
            cov_pmlzhap64().f[6]++;
            cov_pmlzhap64().s[55]++;
            return s.operational_status === 'configured';
          }).length,
          error_sources: sourceStatus.filter(s => {
            /* istanbul ignore next */
            cov_pmlzhap64().f[7]++;
            cov_pmlzhap64().s[56]++;
            return s.operational_status === 'error';
          }).length
        }
      },
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_pmlzhap64().s[57]++;
    console.error('Error fetching data sources:', error);
    /* istanbul ignore next */
    cov_pmlzhap64().s[58]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch data sources',
      details: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Get EPS revisions data
/* istanbul ignore next */
cov_pmlzhap64().s[59]++;
router.get('/eps-revisions', async (req, res) => {
  /* istanbul ignore next */
  cov_pmlzhap64().f[8]++;
  cov_pmlzhap64().s[60]++;
  try {
    const page =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[61]++,
    /* istanbul ignore next */
    (cov_pmlzhap64().b[12][0]++, parseInt(req.query.page)) ||
    /* istanbul ignore next */
    (cov_pmlzhap64().b[12][1]++, 1));
    const limit =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[62]++,
    /* istanbul ignore next */
    (cov_pmlzhap64().b[13][0]++, parseInt(req.query.limit)) ||
    /* istanbul ignore next */
    (cov_pmlzhap64().b[13][1]++, 25));
    const offset =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[63]++, (page - 1) * limit);
    const symbol =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[64]++, req.query.symbol);
    let whereClause =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[65]++, '');
    const queryParams =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[66]++, []);
    let paramCount =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[67]++, 0);
    /* istanbul ignore next */
    cov_pmlzhap64().s[68]++;
    if (symbol) {
      /* istanbul ignore next */
      cov_pmlzhap64().b[14][0]++;
      cov_pmlzhap64().s[69]++;
      paramCount++;
      /* istanbul ignore next */
      cov_pmlzhap64().s[70]++;
      whereClause = `WHERE symbol = $${paramCount}`;
      /* istanbul ignore next */
      cov_pmlzhap64().s[71]++;
      queryParams.push(symbol.toUpperCase());
    } else
    /* istanbul ignore next */
    {
      cov_pmlzhap64().b[14][1]++;
    }
    const revisionsQuery =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[72]++, `
      SELECT 
        symbol,
        period,
        current_estimate,
        seven_days_ago,
        thirty_days_ago,
        sixty_days_ago,
        ninety_days_ago,
        revision_direction,
        fetched_at
      FROM eps_revisions
      ${whereClause}
      ORDER BY symbol, period DESC
      LIMIT $${paramCount + 1} OFFSET $${paramCount + 2}
    `);
    const countQuery =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[73]++, `
      SELECT COUNT(*) as total FROM eps_revisions ${whereClause}
    `);
    /* istanbul ignore next */
    cov_pmlzhap64().s[74]++;
    queryParams.push(limit, offset);
    const [revisionsResult, countResult] =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[75]++, await Promise.all([query(revisionsQuery, queryParams), query(countQuery, queryParams.slice(0, paramCount))]));
    const total =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[76]++, parseInt(countResult.rows[0].total));
    const totalPages =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[77]++, Math.ceil(total / limit));
    /* istanbul ignore next */
    cov_pmlzhap64().s[78]++;
    if (
    /* istanbul ignore next */
    (cov_pmlzhap64().b[16][0]++, !revisionsResult) ||
    /* istanbul ignore next */
    (cov_pmlzhap64().b[16][1]++, !Array.isArray(revisionsResult.rows)) ||
    /* istanbul ignore next */
    (cov_pmlzhap64().b[16][2]++, revisionsResult.rows.length === 0)) {
      /* istanbul ignore next */
      cov_pmlzhap64().b[15][0]++;
      cov_pmlzhap64().s[79]++;
      return res.status(404).json({
        error: 'No data found for this query'
      });
    } else
    /* istanbul ignore next */
    {
      cov_pmlzhap64().b[15][1]++;
    }
    cov_pmlzhap64().s[80]++;
    res.json({
      data: revisionsResult.rows,
      pagination: {
        page,
        limit,
        total,
        totalPages,
        hasNext: page < totalPages,
        hasPrev: page > 1
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_pmlzhap64().s[81]++;
    console.error('Error fetching EPS revisions:', error);
    /* istanbul ignore next */
    cov_pmlzhap64().s[82]++;
    res.status(500).json({
      error: 'Database error',
      details: error.message
    });
  }
});

// Get EPS trend data
/* istanbul ignore next */
cov_pmlzhap64().s[83]++;
router.get('/eps-trend', async (req, res) => {
  /* istanbul ignore next */
  cov_pmlzhap64().f[9]++;
  cov_pmlzhap64().s[84]++;
  try {
    const page =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[85]++,
    /* istanbul ignore next */
    (cov_pmlzhap64().b[17][0]++, parseInt(req.query.page)) ||
    /* istanbul ignore next */
    (cov_pmlzhap64().b[17][1]++, 1));
    const limit =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[86]++,
    /* istanbul ignore next */
    (cov_pmlzhap64().b[18][0]++, parseInt(req.query.limit)) ||
    /* istanbul ignore next */
    (cov_pmlzhap64().b[18][1]++, 25));
    const offset =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[87]++, (page - 1) * limit);
    const symbol =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[88]++, req.query.symbol);
    let whereClause =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[89]++, '');
    const queryParams =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[90]++, []);
    let paramCount =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[91]++, 0);
    /* istanbul ignore next */
    cov_pmlzhap64().s[92]++;
    if (symbol) {
      /* istanbul ignore next */
      cov_pmlzhap64().b[19][0]++;
      cov_pmlzhap64().s[93]++;
      paramCount++;
      /* istanbul ignore next */
      cov_pmlzhap64().s[94]++;
      whereClause = `WHERE symbol = $${paramCount}`;
      /* istanbul ignore next */
      cov_pmlzhap64().s[95]++;
      queryParams.push(symbol.toUpperCase());
    } else
    /* istanbul ignore next */
    {
      cov_pmlzhap64().b[19][1]++;
    }
    const trendQuery =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[96]++, `
      SELECT 
        symbol,
        period,
        current_estimate,
        seven_days_ago,
        thirty_days_ago,
        sixty_days_ago,
        ninety_days_ago,
        number_of_revisions_up,
        number_of_revisions_down,
        fetched_at
      FROM eps_trend
      ${whereClause}
      ORDER BY symbol, period DESC
      LIMIT $${paramCount + 1} OFFSET $${paramCount + 2}
    `);
    const countQuery =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[97]++, `
      SELECT COUNT(*) as total FROM eps_trend ${whereClause}
    `);
    /* istanbul ignore next */
    cov_pmlzhap64().s[98]++;
    queryParams.push(limit, offset);
    const [trendResult, countResult] =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[99]++, await Promise.all([query(trendQuery, queryParams), query(countQuery, queryParams.slice(0, paramCount))]));
    const total =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[100]++, parseInt(countResult.rows[0].total));
    const totalPages =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[101]++, Math.ceil(total / limit));
    /* istanbul ignore next */
    cov_pmlzhap64().s[102]++;
    if (
    /* istanbul ignore next */
    (cov_pmlzhap64().b[21][0]++, !trendResult) ||
    /* istanbul ignore next */
    (cov_pmlzhap64().b[21][1]++, !Array.isArray(trendResult.rows)) ||
    /* istanbul ignore next */
    (cov_pmlzhap64().b[21][2]++, trendResult.rows.length === 0)) {
      /* istanbul ignore next */
      cov_pmlzhap64().b[20][0]++;
      cov_pmlzhap64().s[103]++;
      return res.status(404).json({
        error: 'No data found for this query'
      });
    } else
    /* istanbul ignore next */
    {
      cov_pmlzhap64().b[20][1]++;
    }
    cov_pmlzhap64().s[104]++;
    res.json({
      data: trendResult.rows,
      pagination: {
        page,
        limit,
        total,
        totalPages,
        hasNext: page < totalPages,
        hasPrev: page > 1
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_pmlzhap64().s[105]++;
    console.error('Error fetching EPS trend:', error);
    /* istanbul ignore next */
    cov_pmlzhap64().s[106]++;
    res.status(500).json({
      error: 'Database error',
      details: error.message
    });
  }
});

// Get growth estimates data
/* istanbul ignore next */
cov_pmlzhap64().s[107]++;
router.get('/growth-estimates', async (req, res) => {
  /* istanbul ignore next */
  cov_pmlzhap64().f[10]++;
  cov_pmlzhap64().s[108]++;
  try {
    const page =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[109]++,
    /* istanbul ignore next */
    (cov_pmlzhap64().b[22][0]++, parseInt(req.query.page)) ||
    /* istanbul ignore next */
    (cov_pmlzhap64().b[22][1]++, 1));
    const limit =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[110]++,
    /* istanbul ignore next */
    (cov_pmlzhap64().b[23][0]++, parseInt(req.query.limit)) ||
    /* istanbul ignore next */
    (cov_pmlzhap64().b[23][1]++, 25));
    const offset =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[111]++, (page - 1) * limit);
    const symbol =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[112]++, req.query.symbol);
    let whereClause =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[113]++, '');
    const queryParams =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[114]++, []);
    let paramCount =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[115]++, 0);
    /* istanbul ignore next */
    cov_pmlzhap64().s[116]++;
    if (symbol) {
      /* istanbul ignore next */
      cov_pmlzhap64().b[24][0]++;
      cov_pmlzhap64().s[117]++;
      paramCount++;
      /* istanbul ignore next */
      cov_pmlzhap64().s[118]++;
      whereClause = `WHERE symbol = $${paramCount}`;
      /* istanbul ignore next */
      cov_pmlzhap64().s[119]++;
      queryParams.push(symbol.toUpperCase());
    } else
    /* istanbul ignore next */
    {
      cov_pmlzhap64().b[24][1]++;
    }
    const growthQuery =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[120]++, `
      SELECT 
        symbol,
        period,
        growth_estimate,
        number_of_analysts,
        low_estimate,
        high_estimate,
        mean_estimate,
        fetched_at
      FROM growth_estimates
      ${whereClause}
      ORDER BY symbol, period DESC
      LIMIT $${paramCount + 1} OFFSET $${paramCount + 2}
    `);
    const countQuery =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[121]++, `
      SELECT COUNT(*) as total FROM growth_estimates ${whereClause}
    `);
    /* istanbul ignore next */
    cov_pmlzhap64().s[122]++;
    queryParams.push(limit, offset);
    const [growthResult, countResult] =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[123]++, await Promise.all([query(growthQuery, queryParams), query(countQuery, queryParams.slice(0, paramCount))]));
    const total =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[124]++, parseInt(countResult.rows[0].total));
    const totalPages =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[125]++, Math.ceil(total / limit));
    /* istanbul ignore next */
    cov_pmlzhap64().s[126]++;
    if (
    /* istanbul ignore next */
    (cov_pmlzhap64().b[26][0]++, !growthResult) ||
    /* istanbul ignore next */
    (cov_pmlzhap64().b[26][1]++, !Array.isArray(growthResult.rows)) ||
    /* istanbul ignore next */
    (cov_pmlzhap64().b[26][2]++, growthResult.rows.length === 0)) {
      /* istanbul ignore next */
      cov_pmlzhap64().b[25][0]++;
      cov_pmlzhap64().s[127]++;
      return res.status(404).json({
        error: 'No data found for this query'
      });
    } else
    /* istanbul ignore next */
    {
      cov_pmlzhap64().b[25][1]++;
    }
    cov_pmlzhap64().s[128]++;
    res.json({
      data: growthResult.rows,
      pagination: {
        page,
        limit,
        total,
        totalPages,
        hasNext: page < totalPages,
        hasPrev: page > 1
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_pmlzhap64().s[129]++;
    console.error('Error fetching growth estimates:', error);
    /* istanbul ignore next */
    cov_pmlzhap64().s[130]++;
    res.status(500).json({
      error: 'Database error',
      details: error.message
    });
  }
});

// Get economic data
/* istanbul ignore next */
cov_pmlzhap64().s[131]++;
router.get('/economic', async (req, res) => {
  /* istanbul ignore next */
  cov_pmlzhap64().f[11]++;
  cov_pmlzhap64().s[132]++;
  try {
    const page =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[133]++,
    /* istanbul ignore next */
    (cov_pmlzhap64().b[27][0]++, parseInt(req.query.page)) ||
    /* istanbul ignore next */
    (cov_pmlzhap64().b[27][1]++, 1));
    const limit =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[134]++,
    /* istanbul ignore next */
    (cov_pmlzhap64().b[28][0]++, parseInt(req.query.limit)) ||
    /* istanbul ignore next */
    (cov_pmlzhap64().b[28][1]++, 25));
    const offset =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[135]++, (page - 1) * limit);
    const series =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[136]++, req.query.series);
    let whereClause =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[137]++, '');
    const queryParams =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[138]++, []);
    let paramCount =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[139]++, 0);
    /* istanbul ignore next */
    cov_pmlzhap64().s[140]++;
    if (series) {
      /* istanbul ignore next */
      cov_pmlzhap64().b[29][0]++;
      cov_pmlzhap64().s[141]++;
      paramCount++;
      /* istanbul ignore next */
      cov_pmlzhap64().s[142]++;
      whereClause = `WHERE series_id = $${paramCount}`;
      /* istanbul ignore next */
      cov_pmlzhap64().s[143]++;
      queryParams.push(series);
    } else
    /* istanbul ignore next */
    {
      cov_pmlzhap64().b[29][1]++;
    }
    const economicQuery =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[144]++, `
      SELECT 
        series_id,
        date,
        value,
        title,
        units,
        frequency,
        last_updated
      FROM economic_data
      ${whereClause}
      ORDER BY series_id, date DESC
      LIMIT $${paramCount + 1} OFFSET $${paramCount + 2}
    `);
    const countQuery =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[145]++, `
      SELECT COUNT(*) as total FROM economic_data ${whereClause}
    `);
    /* istanbul ignore next */
    cov_pmlzhap64().s[146]++;
    queryParams.push(limit, offset);
    const [economicResult, countResult] =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[147]++, await Promise.all([query(economicQuery, queryParams), query(countQuery, queryParams.slice(0, paramCount))]));
    const total =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[148]++, parseInt(countResult.rows[0].total));
    const totalPages =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[149]++, Math.ceil(total / limit));
    /* istanbul ignore next */
    cov_pmlzhap64().s[150]++;
    if (
    /* istanbul ignore next */
    (cov_pmlzhap64().b[31][0]++, !economicResult) ||
    /* istanbul ignore next */
    (cov_pmlzhap64().b[31][1]++, !Array.isArray(economicResult.rows)) ||
    /* istanbul ignore next */
    (cov_pmlzhap64().b[31][2]++, economicResult.rows.length === 0)) {
      /* istanbul ignore next */
      cov_pmlzhap64().b[30][0]++;
      cov_pmlzhap64().s[151]++;
      return res.status(404).json({
        error: 'No data found for this query'
      });
    } else
    /* istanbul ignore next */
    {
      cov_pmlzhap64().b[30][1]++;
    }
    cov_pmlzhap64().s[152]++;
    res.json({
      data: economicResult.rows,
      pagination: {
        page,
        limit,
        total,
        totalPages,
        hasNext: page < totalPages,
        hasPrev: page > 1
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_pmlzhap64().s[153]++;
    console.error('Error fetching economic data:', error);
    /* istanbul ignore next */
    cov_pmlzhap64().s[154]++;
    res.status(500).json({
      error: 'Database error',
      details: error.message
    });
  }
});

// Get economic data (for DataValidation page - matches frontend expectation)
/* istanbul ignore next */
cov_pmlzhap64().s[155]++;
router.get('/economic/data', async (req, res) => {
  /* istanbul ignore next */
  cov_pmlzhap64().f[12]++;
  cov_pmlzhap64().s[156]++;
  try {
    const limit =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[157]++, Math.min(
    /* istanbul ignore next */
    (cov_pmlzhap64().b[32][0]++, parseInt(req.query.limit)) ||
    /* istanbul ignore next */
    (cov_pmlzhap64().b[32][1]++, 50), 100));
    /* istanbul ignore next */
    cov_pmlzhap64().s[158]++;
    console.log(`Economic data endpoint called with limit: ${limit}`);
    const economicQuery =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[159]++, `
      SELECT series_id, date, value
      FROM economic_data 
      ORDER BY date DESC, series_id ASC
      LIMIT $1
    `);
    const result =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[160]++, await query(economicQuery, [limit]));
    /* istanbul ignore next */
    cov_pmlzhap64().s[161]++;
    if (
    /* istanbul ignore next */
    (cov_pmlzhap64().b[34][0]++, !result) ||
    /* istanbul ignore next */
    (cov_pmlzhap64().b[34][1]++, !Array.isArray(result.rows)) ||
    /* istanbul ignore next */
    (cov_pmlzhap64().b[34][2]++, result.rows.length === 0)) {
      /* istanbul ignore next */
      cov_pmlzhap64().b[33][0]++;
      cov_pmlzhap64().s[162]++;
      return res.status(404).json({
        error: 'No data found for this query'
      });
    } else
    /* istanbul ignore next */
    {
      cov_pmlzhap64().b[33][1]++;
    }
    cov_pmlzhap64().s[163]++;
    res.json({
      data: result.rows,
      count: result.rows.length,
      limit: limit,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_pmlzhap64().s[164]++;
    console.error('Error fetching economic data:', error);
    /* istanbul ignore next */
    cov_pmlzhap64().s[165]++;
    res.status(500).json({
      error: 'Database error',
      details: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Get NAAIM exposure data
/* istanbul ignore next */
cov_pmlzhap64().s[166]++;
router.get('/naaim', async (req, res) => {
  /* istanbul ignore next */
  cov_pmlzhap64().f[13]++;
  cov_pmlzhap64().s[167]++;
  try {
    const limit =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[168]++,
    /* istanbul ignore next */
    (cov_pmlzhap64().b[35][0]++, parseInt(req.query.limit)) ||
    /* istanbul ignore next */
    (cov_pmlzhap64().b[35][1]++, 50));
    const naaimQuery =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[169]++, `
      SELECT 
        date,
        naaim_number_mean,
        bearish,
        bullish
      FROM naaim
      ORDER BY date DESC
      LIMIT $1
    `);
    const result =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[170]++, await query(naaimQuery, [limit]));
    /* istanbul ignore next */
    cov_pmlzhap64().s[171]++;
    if (
    /* istanbul ignore next */
    (cov_pmlzhap64().b[37][0]++, !result) ||
    /* istanbul ignore next */
    (cov_pmlzhap64().b[37][1]++, !Array.isArray(result.rows)) ||
    /* istanbul ignore next */
    (cov_pmlzhap64().b[37][2]++, result.rows.length === 0)) {
      /* istanbul ignore next */
      cov_pmlzhap64().b[36][0]++;
      cov_pmlzhap64().s[172]++;
      return res.status(404).json({
        error: 'No data found for this query'
      });
    } else
    /* istanbul ignore next */
    {
      cov_pmlzhap64().b[36][1]++;
    }
    cov_pmlzhap64().s[173]++;
    res.json({
      data: result.rows,
      count: result.rows.length
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_pmlzhap64().s[174]++;
    console.error('Error fetching NAAIM data:', error);
    /* istanbul ignore next */
    cov_pmlzhap64().s[175]++;
    res.status(500).json({
      error: 'Database error',
      details: error.message
    });
  }
});

// Get Fear & Greed Index data
/* istanbul ignore next */
cov_pmlzhap64().s[176]++;
router.get('/fear-greed', async (req, res) => {
  /* istanbul ignore next */
  cov_pmlzhap64().f[14]++;
  cov_pmlzhap64().s[177]++;
  try {
    const limit =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[178]++,
    /* istanbul ignore next */
    (cov_pmlzhap64().b[38][0]++, parseInt(req.query.limit)) ||
    /* istanbul ignore next */
    (cov_pmlzhap64().b[38][1]++, 50));
    const fearGreedQuery =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[179]++, `
      SELECT 
        date,
        index_value,
        rating,
        fetched_at
      FROM fear_greed_index
      ORDER BY date DESC
      LIMIT $1
    `);
    const result =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[180]++, await query(fearGreedQuery, [limit]));
    /* istanbul ignore next */
    cov_pmlzhap64().s[181]++;
    if (
    /* istanbul ignore next */
    (cov_pmlzhap64().b[40][0]++, !result) ||
    /* istanbul ignore next */
    (cov_pmlzhap64().b[40][1]++, !Array.isArray(result.rows)) ||
    /* istanbul ignore next */
    (cov_pmlzhap64().b[40][2]++, result.rows.length === 0)) {
      /* istanbul ignore next */
      cov_pmlzhap64().b[39][0]++;
      cov_pmlzhap64().s[182]++;
      return res.status(404).json({
        error: 'No data found for this query'
      });
    } else
    /* istanbul ignore next */
    {
      cov_pmlzhap64().b[39][1]++;
    }
    cov_pmlzhap64().s[183]++;
    res.json({
      data: result.rows,
      count: result.rows.length
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_pmlzhap64().s[184]++;
    console.error('Error fetching Fear & Greed data:', error);
    /* istanbul ignore next */
    cov_pmlzhap64().s[185]++;
    res.status(500).json({
      error: 'Database error',
      details: error.message
    });
  }
});

// Get data validation summary
/* istanbul ignore next */
cov_pmlzhap64().s[186]++;
router.get('/validation-summary', async (req, res) => {
  /* istanbul ignore next */
  cov_pmlzhap64().f[15]++;
  cov_pmlzhap64().s[187]++;
  try {
    // Check each table individually to avoid errors from missing tables
    const validationData =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[188]++, []);
    const tables =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[189]++, [{
      name: 'stock_symbols',
      hasTimestamp: false
    }, {
      name: 'earnings_estimates',
      hasTimestamp: true
    }, {
      name: 'earnings_history',
      hasTimestamp: true
    }, {
      name: 'revenue_estimates',
      hasTimestamp: true
    }, {
      name: 'growth_estimates',
      hasTimestamp: true
    }, {
      name: 'eps_revisions',
      hasTimestamp: true
    }, {
      name: 'eps_trend',
      hasTimestamp: true
    }, {
      name: 'technical_data_daily',
      hasTimestamp: true
    }, {
      name: 'analyst_recommendations',
      hasTimestamp: true
    }, {
      name: 'economic_data',
      hasTimestamp: false
    }, {
      name: 'naaim',
      hasTimestamp: true
    }, {
      name: 'fear_greed_index',
      hasTimestamp: true
    }]);
    /* istanbul ignore next */
    cov_pmlzhap64().s[190]++;
    for (const table of tables) {
      /* istanbul ignore next */
      cov_pmlzhap64().s[191]++;
      try {
        let tableQuery;
        /* istanbul ignore next */
        cov_pmlzhap64().s[192]++;
        if (table.hasTimestamp) {
          /* istanbul ignore next */
          cov_pmlzhap64().b[41][0]++;
          cov_pmlzhap64().s[193]++;
          tableQuery = `
            SELECT 
              '${table.name}' as table_name,
              COUNT(*) as record_count,
              MAX(fetched_at) as last_updated
            FROM ${table.name}
          `;
        } else {
          /* istanbul ignore next */
          cov_pmlzhap64().b[41][1]++;
          cov_pmlzhap64().s[194]++;
          tableQuery = `
            SELECT 
              '${table.name}' as table_name,
              COUNT(*) as record_count,
              NULL as last_updated
            FROM ${table.name}
          `;
        }
        const result =
        /* istanbul ignore next */
        (cov_pmlzhap64().s[195]++, await query(tableQuery));
        /* istanbul ignore next */
        cov_pmlzhap64().s[196]++;
        if (result.rows.length > 0) {
          /* istanbul ignore next */
          cov_pmlzhap64().b[42][0]++;
          cov_pmlzhap64().s[197]++;
          validationData.push(result.rows[0]);
        } else
        /* istanbul ignore next */
        {
          cov_pmlzhap64().b[42][1]++;
        }
      } catch (tableError) {
        /* istanbul ignore next */
        cov_pmlzhap64().s[198]++;
        // Add error entry for missing table
        validationData.push({
          table_name: table.name,
          record_count: 0,
          last_updated: null,
          error: tableError.message
        });
      }
    }
    /* istanbul ignore next */
    cov_pmlzhap64().s[199]++;
    res.json({
      success: true,
      data: validationData,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_pmlzhap64().s[200]++;
    console.error('Error fetching validation summary:', error);
    /* istanbul ignore next */
    cov_pmlzhap64().s[201]++;
    res.status(500).json({
      error: 'Database error',
      details: error.message
    });
  }
});

// Get all financial data for a symbol across all statement types
/* istanbul ignore next */
cov_pmlzhap64().s[202]++;
router.get('/financials/:symbol', async (req, res) => {
  /* istanbul ignore next */
  cov_pmlzhap64().f[16]++;
  cov_pmlzhap64().s[203]++;
  try {
    const {
      symbol
    } =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[204]++, req.params);
    const limit =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[205]++,
    /* istanbul ignore next */
    (cov_pmlzhap64().b[43][0]++, parseInt(req.query.limit)) ||
    /* istanbul ignore next */
    (cov_pmlzhap64().b[43][1]++, 10));

    // Query all financial statement types
    const queries =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[206]++, [{
      name: 'TTM Income Statement',
      table: 'ttm_income_stmt'
    }, {
      name: 'TTM Cash Flow',
      table: 'ttm_cashflow'
    }, {
      name: 'Annual Income Statement',
      table: 'income_stmt'
    }, {
      name: 'Annual Cash Flow',
      table: 'cash_flow'
    }, {
      name: 'Balance Sheet',
      table: 'balance_sheet'
    }, {
      name: 'Quarterly Income Statement',
      table: 'quarterly_income_stmt'
    }, {
      name: 'Quarterly Cash Flow',
      table: 'quarterly_cashflow'
    }, {
      name: 'Quarterly Balance Sheet',
      table: 'quarterly_balance_sheet'
    }]);
    const results =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[207]++, {});
    /* istanbul ignore next */
    cov_pmlzhap64().s[208]++;
    for (const {
      name,
      table
    } of queries) {
      /* istanbul ignore next */
      cov_pmlzhap64().s[209]++;
      try {
        const financialQuery =
        /* istanbul ignore next */
        (cov_pmlzhap64().s[210]++, `
          SELECT date, item_name, value
          FROM ${table}
          WHERE symbol = $1
          ORDER BY date DESC, item_name
          LIMIT $2
        `);
        const result =
        /* istanbul ignore next */
        (cov_pmlzhap64().s[211]++, await query(financialQuery, [symbol.toUpperCase(), limit * 50])); // Get more items per date

        // Transform the data by date
        const transformedData =
        /* istanbul ignore next */
        (cov_pmlzhap64().s[212]++, {});
        /* istanbul ignore next */
        cov_pmlzhap64().s[213]++;
        result.rows.forEach(row => {
          /* istanbul ignore next */
          cov_pmlzhap64().f[17]++;
          const dateKey =
          /* istanbul ignore next */
          (cov_pmlzhap64().s[214]++, row.date);
          /* istanbul ignore next */
          cov_pmlzhap64().s[215]++;
          if (!transformedData[dateKey]) {
            /* istanbul ignore next */
            cov_pmlzhap64().b[44][0]++;
            cov_pmlzhap64().s[216]++;
            transformedData[dateKey] = {
              date: row.date,
              items: {}
            };
          } else
          /* istanbul ignore next */
          {
            cov_pmlzhap64().b[44][1]++;
          }
          cov_pmlzhap64().s[217]++;
          transformedData[dateKey].items[row.item_name] = row.value;
        });
        /* istanbul ignore next */
        cov_pmlzhap64().s[218]++;
        results[name] = Object.values(transformedData).sort((a, b) => {
          /* istanbul ignore next */
          cov_pmlzhap64().f[18]++;
          cov_pmlzhap64().s[219]++;
          return new Date(b.date) - new Date(a.date);
        }).slice(0, limit);
      } catch (tableError) {
        /* istanbul ignore next */
        cov_pmlzhap64().s[220]++;
        console.warn(`Table ${table} not accessible:`, tableError.message);
        /* istanbul ignore next */
        cov_pmlzhap64().s[221]++;
        results[name] = [];
      }
    }
    /* istanbul ignore next */
    cov_pmlzhap64().s[222]++;
    if (Object.values(results).every(tableData => {
      /* istanbul ignore next */
      cov_pmlzhap64().f[19]++;
      cov_pmlzhap64().s[223]++;
      return tableData.length === 0;
    })) {
      /* istanbul ignore next */
      cov_pmlzhap64().b[45][0]++;
      cov_pmlzhap64().s[224]++;
      return res.status(404).json({
        error: 'No data found for this query'
      });
    } else
    /* istanbul ignore next */
    {
      cov_pmlzhap64().b[45][1]++;
    }
    cov_pmlzhap64().s[225]++;
    res.json({
      symbol: symbol.toUpperCase(),
      data: results,
      limit
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_pmlzhap64().s[226]++;
    console.error('Error fetching comprehensive financial data:', error);
    /* istanbul ignore next */
    cov_pmlzhap64().s[227]++;
    res.status(500).json({
      error: 'Database error',
      details: error.message
    });
  }
});

// Get all available financial metrics (item names) across all tables
/* istanbul ignore next */
cov_pmlzhap64().s[228]++;
router.get('/financial-metrics', async (req, res) => {
  /* istanbul ignore next */
  cov_pmlzhap64().f[20]++;
  cov_pmlzhap64().s[229]++;
  try {
    const tables =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[230]++, ['ttm_income_stmt', 'ttm_cashflow', 'income_stmt', 'cash_flow', 'balance_sheet', 'quarterly_income_stmt', 'quarterly_cashflow', 'quarterly_balance_sheet']);
    const metrics =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[231]++, {});
    /* istanbul ignore next */
    cov_pmlzhap64().s[232]++;
    for (const table of tables) {
      /* istanbul ignore next */
      cov_pmlzhap64().s[233]++;
      try {
        const metricsQuery =
        /* istanbul ignore next */
        (cov_pmlzhap64().s[234]++, `
          SELECT DISTINCT item_name, COUNT(*) as occurrence_count
          FROM ${table}
          GROUP BY item_name
          ORDER BY item_name
        `);
        const result =
        /* istanbul ignore next */
        (cov_pmlzhap64().s[235]++, await query(metricsQuery));
        /* istanbul ignore next */
        cov_pmlzhap64().s[236]++;
        metrics[table] = result.rows;
      } catch (tableError) {
        /* istanbul ignore next */
        cov_pmlzhap64().s[237]++;
        console.warn(`Table ${table} not accessible:`, tableError.message);
        /* istanbul ignore next */
        cov_pmlzhap64().s[238]++;
        metrics[table] = [];
      }
    }
    /* istanbul ignore next */
    cov_pmlzhap64().s[239]++;
    if (Object.values(metrics).every(tableMetrics => {
      /* istanbul ignore next */
      cov_pmlzhap64().f[21]++;
      cov_pmlzhap64().s[240]++;
      return tableMetrics.length === 0;
    })) {
      /* istanbul ignore next */
      cov_pmlzhap64().b[46][0]++;
      cov_pmlzhap64().s[241]++;
      return res.status(404).json({
        error: 'No data found for this query'
      });
    } else
    /* istanbul ignore next */
    {
      cov_pmlzhap64().b[46][1]++;
    }
    cov_pmlzhap64().s[242]++;
    res.json({
      metrics,
      tables: tables,
      generated_at: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_pmlzhap64().s[243]++;
    console.error('Error fetching financial metrics:', error);
    /* istanbul ignore next */
    cov_pmlzhap64().s[244]++;
    res.status(500).json({
      error: 'Database error',
      details: error.message
    });
  }
});

// NAAIM data endpoint for ServiceHealth monitoring
/* istanbul ignore next */
cov_pmlzhap64().s[245]++;
router.get('/naaim', async (req, res) => {
  /* istanbul ignore next */
  cov_pmlzhap64().f[22]++;
  cov_pmlzhap64().s[246]++;
  try {
    /* istanbul ignore next */
    cov_pmlzhap64().s[247]++;
    console.log('📊 [DATA] NAAIM data request received');
    const naaimQuery =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[248]++, `
      SELECT 
        date,
        naaim_number_mean,
        bearish,
        quart1,
        quart2,
        quart3,
        bullish,
        deviation,
        fetched_at
      FROM naaim
      ORDER BY date DESC
      LIMIT 100
    `);
    const countQuery =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[249]++, `SELECT COUNT(*) as total FROM naaim`);
    const lastUpdatedQuery =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[250]++, `SELECT MAX(fetched_at) as last_updated FROM naaim`);
    const [dataResult, countResult, lastUpdatedResult] =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[251]++, await Promise.all([query(naaimQuery), query(countQuery), query(lastUpdatedQuery)]));
    /* istanbul ignore next */
    cov_pmlzhap64().s[252]++;
    console.log(`📊 [DATA] NAAIM query returned ${dataResult.rows.length} records`);
    /* istanbul ignore next */
    cov_pmlzhap64().s[253]++;
    res.json({
      success: true,
      data: dataResult.rows,
      count: parseInt(
      /* istanbul ignore next */
      (cov_pmlzhap64().b[47][0]++, countResult.rows[0]?.total) ||
      /* istanbul ignore next */
      (cov_pmlzhap64().b[47][1]++, 0)),
      lastUpdated: lastUpdatedResult.rows[0]?.last_updated,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_pmlzhap64().s[254]++;
    console.error('❌ [DATA] NAAIM error:', error);
    /* istanbul ignore next */
    cov_pmlzhap64().s[255]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch NAAIM data',
      details: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Fear & Greed index endpoint for ServiceHealth monitoring  
/* istanbul ignore next */
cov_pmlzhap64().s[256]++;
router.get('/fear-greed', async (req, res) => {
  /* istanbul ignore next */
  cov_pmlzhap64().f[23]++;
  cov_pmlzhap64().s[257]++;
  try {
    /* istanbul ignore next */
    cov_pmlzhap64().s[258]++;
    console.log('😨 [DATA] Fear & Greed data request received');
    const fearGreedQuery =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[259]++, `
      SELECT 
        date,
        index_value,
        rating,
        fetched_at
      FROM fear_greed_index
      ORDER BY date DESC
      LIMIT 100
    `);
    const countQuery =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[260]++, `SELECT COUNT(*) as total FROM fear_greed_index`);
    const lastUpdatedQuery =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[261]++, `SELECT MAX(fetched_at) as last_updated FROM fear_greed_index`);
    const [dataResult, countResult, lastUpdatedResult] =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[262]++, await Promise.all([query(fearGreedQuery), query(countQuery), query(lastUpdatedQuery)]));
    /* istanbul ignore next */
    cov_pmlzhap64().s[263]++;
    console.log(`😨 [DATA] Fear & Greed query returned ${dataResult.rows.length} records`);
    /* istanbul ignore next */
    cov_pmlzhap64().s[264]++;
    res.json({
      success: true,
      data: dataResult.rows,
      count: parseInt(
      /* istanbul ignore next */
      (cov_pmlzhap64().b[48][0]++, countResult.rows[0]?.total) ||
      /* istanbul ignore next */
      (cov_pmlzhap64().b[48][1]++, 0)),
      lastUpdated: lastUpdatedResult.rows[0]?.last_updated,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_pmlzhap64().s[265]++;
    console.error('❌ [DATA] Fear & Greed error:', error);
    /* istanbul ignore next */
    cov_pmlzhap64().s[266]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch Fear & Greed data',
      details: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// AAII sentiment data endpoint for ServiceHealth monitoring
/* istanbul ignore next */
cov_pmlzhap64().s[267]++;
router.get('/aaii', async (req, res) => {
  /* istanbul ignore next */
  cov_pmlzhap64().f[24]++;
  cov_pmlzhap64().s[268]++;
  try {
    /* istanbul ignore next */
    cov_pmlzhap64().s[269]++;
    console.log('📈 [DATA] AAII sentiment data request received');
    const aaiiQuery =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[270]++, `
      SELECT 
        date,
        bullish,
        neutral,
        bearish,
        fetched_at
      FROM aaii_sentiment
      ORDER BY date DESC
      LIMIT 100
    `);
    const countQuery =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[271]++, `SELECT COUNT(*) as total FROM aaii_sentiment`);
    const lastUpdatedQuery =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[272]++, `SELECT MAX(fetched_at) as last_updated FROM aaii_sentiment`);
    const [dataResult, countResult, lastUpdatedResult] =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[273]++, await Promise.all([query(aaiiQuery), query(countQuery), query(lastUpdatedQuery)]));
    /* istanbul ignore next */
    cov_pmlzhap64().s[274]++;
    console.log(`📈 [DATA] AAII sentiment query returned ${dataResult.rows.length} records`);
    /* istanbul ignore next */
    cov_pmlzhap64().s[275]++;
    res.json({
      success: true,
      data: dataResult.rows,
      count: parseInt(
      /* istanbul ignore next */
      (cov_pmlzhap64().b[49][0]++, countResult.rows[0]?.total) ||
      /* istanbul ignore next */
      (cov_pmlzhap64().b[49][1]++, 0)),
      lastUpdated: lastUpdatedResult.rows[0]?.last_updated,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_pmlzhap64().s[276]++;
    console.error('❌ [DATA] AAII sentiment error:', error);
    /* istanbul ignore next */
    cov_pmlzhap64().s[277]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch AAII sentiment data',
      details: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Data loader status endpoint for monitoring ECS tasks
/* istanbul ignore next */
cov_pmlzhap64().s[278]++;
router.get('/status', async (req, res) => {
  /* istanbul ignore next */
  cov_pmlzhap64().f[25]++;
  cov_pmlzhap64().s[279]++;
  try {
    /* istanbul ignore next */
    cov_pmlzhap64().s[280]++;
    console.log('⚙️ [DATA] Data loader status request received');

    // Check last_updated table for loader status
    const statusQuery =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[281]++, `
      SELECT 
        script_name,
        last_run,
        EXTRACT(EPOCH FROM (NOW() - last_run)) / 3600 as hours_since_last_run
      FROM last_updated
      ORDER BY last_run DESC
    `);

    // Check table record counts for data freshness
    const tablesQuery =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[282]++, `
      SELECT 
        'naaim' as table_name,
        COUNT(*) as record_count,
        MAX(fetched_at) as last_updated
      FROM naaim
      UNION ALL
      SELECT 
        'aaii_sentiment' as table_name,
        COUNT(*) as record_count,
        MAX(fetched_at) as last_updated
      FROM aaii_sentiment
      UNION ALL
      SELECT 
        'fear_greed_index' as table_name,
        COUNT(*) as record_count,
        MAX(fetched_at) as last_updated
      FROM fear_greed_index
    `);
    const [statusResult, tablesResult] =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[283]++, await Promise.all([query(statusQuery), query(tablesQuery)]));
    /* istanbul ignore next */
    cov_pmlzhap64().s[284]++;
    console.log(`⚙️ [DATA] Status query returned ${statusResult.rows.length} loaders`);

    // Calculate summary statistics
    const summary =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[285]++, {
      totalLoaders: statusResult.rows.length,
      healthyLoaders: statusResult.rows.filter(l => {
        /* istanbul ignore next */
        cov_pmlzhap64().f[26]++;
        cov_pmlzhap64().s[286]++;
        return l.hours_since_last_run < 24;
      }).length,
      staleLoaders: statusResult.rows.filter(l => {
        /* istanbul ignore next */
        cov_pmlzhap64().f[27]++;
        cov_pmlzhap64().s[287]++;
        return l.hours_since_last_run >= 24;
      }).length,
      totalRecords: tablesResult.rows.reduce((sum, t) => {
        /* istanbul ignore next */
        cov_pmlzhap64().f[28]++;
        cov_pmlzhap64().s[288]++;
        return sum + parseInt(
        /* istanbul ignore next */
        (cov_pmlzhap64().b[50][0]++, t.record_count) ||
        /* istanbul ignore next */
        (cov_pmlzhap64().b[50][1]++, 0));
      }, 0)
    });
    /* istanbul ignore next */
    cov_pmlzhap64().s[289]++;
    res.json({
      success: true,
      data: statusResult.rows,
      tables: tablesResult.rows,
      summary,
      lastUpdated: new Date().toISOString(),
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_pmlzhap64().s[290]++;
    console.error('❌ [DATA] Status error:', error);
    /* istanbul ignore next */
    cov_pmlzhap64().s[291]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch data loader status',
      details: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Data loader trigger endpoint (placeholder for ECS task triggering)
/* istanbul ignore next */
cov_pmlzhap64().s[292]++;
router.post('/trigger/:loaderName', async (req, res) => {
  /* istanbul ignore next */
  cov_pmlzhap64().f[29]++;
  cov_pmlzhap64().s[293]++;
  try {
    const {
      loaderName
    } =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[294]++, req.params);
    /* istanbul ignore next */
    cov_pmlzhap64().s[295]++;
    console.log(`🚀 [DATA] Trigger request for loader: ${loaderName}`);

    // Validate loader name
    const validLoaders =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[296]++, ['naaim', 'aaii', 'feargreed', 'stocksymbols', 'loadinfo']);
    /* istanbul ignore next */
    cov_pmlzhap64().s[297]++;
    if (!validLoaders.includes(loaderName)) {
      /* istanbul ignore next */
      cov_pmlzhap64().b[51][0]++;
      cov_pmlzhap64().s[298]++;
      return res.status(400).json({
        success: false,
        error: `Invalid loader name. Valid loaders: ${validLoaders.join(', ')}`,
        timestamp: new Date().toISOString()
      });
    } else
    /* istanbul ignore next */
    {
      cov_pmlzhap64().b[51][1]++;
    }

    // In a full implementation, this would trigger the ECS task
    // For now, return a placeholder response
    const taskId =
    /* istanbul ignore next */
    (cov_pmlzhap64().s[299]++, `task-${loaderName}-${Date.now()}`);
    /* istanbul ignore next */
    cov_pmlzhap64().s[300]++;
    console.log(`🚀 [DATA] Would trigger ECS task for ${loaderName} with ID: ${taskId}`);
    /* istanbul ignore next */
    cov_pmlzhap64().s[301]++;
    res.json({
      success: false,
      error: 'ECS task triggering requires additional infrastructure setup',
      message: `Data loader '${loaderName}' cannot be triggered without ECS integration`,
      data: {
        requestedLoader: loaderName,
        taskId,
        requirements: {
          infrastructure: 'ECS cluster with task definitions for each loader',
          permissions: 'Lambda needs ECS:RunTask and PassRole permissions',
          implementation: 'AWS SDK ECS client integration needed'
        },
        alternativeSolution: 'Use direct database loading scripts for data population'
      },
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_pmlzhap64().s[302]++;
    console.error(`❌ [DATA] Trigger error for ${req.params.loaderName}:`, error);
    /* istanbul ignore next */
    cov_pmlzhap64().s[303]++;
    res.status(500).json({
      success: false,
      error: 'Failed to trigger data loader',
      details: error.message,
      timestamp: new Date().toISOString()
    });
  }
});
/* istanbul ignore next */
cov_pmlzhap64().s[304]++;
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,