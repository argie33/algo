{"version":3,"names":["TechnicalAnalysisService","constructor","indicators","calculateRSI","bind","calculateMACD","calculateBollingerBands","calculateSMA","calculateEMA","calculateStochastic","calculateWilliamsR","calculateCCI","calculateATR","calculateVWAP","calculateIndicators","data","Array","isArray","length","Error","results","forEach","indicator","error","console","message","period","prices","map","d","close","price","changes","i","push","rsiValues","gains","losses","Math","abs","avgGain","reduce","sum","gain","avgLoss","loss","rs","rsi","index","value","timestamp","change","signal","values","current","interpretation","interpretRSI","fastPeriod","slowPeriod","signalPeriod","fastEMA","calculateEMAValues","slowEMA","macdLine","startIndex","macdValue","signalLine","histogram","signalStartIndex","finalStartIndex","dataIndex","macd","crossover","detectMACDCrossover","parameters","interpretMACD","stdDev","slice","sma","variance","pow","standardDeviation","sqrt","upperBand","lowerBand","currentPrice","bandWidth","percentB","middleBand","position","squeeze","interpretBollingerBands","trend","emaValues","kPeriod","dPeriod","highestHigh","max","high","lowestLow","min","low","currentClose","kPercent","dPercent","item","williamsR","multiplier","firstSMA","ema","prevMACD","prevSignal","currentMACD","currentSignal","strength","description","macdData","bandData","generateTradingSignal","analysis","signals","totalScore","maxScore","Object","keys","score","scoreRatio","overallSignal","confidence","Date","toISOString","symbol","round","recommendation","generateRecommendation","strongSignals","filter","s","consensusSignals","module","exports"],"sources":["technicalAnalysisService.js"],"sourcesContent":["// Technical Analysis Service\n// Implements RSI, MACD, Bollinger Bands, and other technical indicators\n\nclass TechnicalAnalysisService {\n  constructor() {\n    this.indicators = {\n      'RSI': this.calculateRSI.bind(this),\n      'MACD': this.calculateMACD.bind(this),\n      'BOLLINGER_BANDS': this.calculateBollingerBands.bind(this),\n      'SMA': this.calculateSMA.bind(this),\n      'EMA': this.calculateEMA.bind(this),\n      'STOCHASTIC': this.calculateStochastic.bind(this),\n      'WILLIAMS_R': this.calculateWilliamsR.bind(this),\n      'CCI': this.calculateCCI.bind(this),\n      'ATR': this.calculateATR.bind(this),\n      'VOLUME_WEIGHTED_AVERAGE_PRICE': this.calculateVWAP.bind(this)\n    };\n  }\n\n  // Calculate multiple indicators for a dataset\n  calculateIndicators(data, indicators = ['RSI', 'MACD', 'BOLLINGER_BANDS']) {\n    if (!Array.isArray(data) || data.length === 0) {\n      throw new Error('Invalid data: expected non-empty array');\n    }\n\n    const results = {};\n    \n    indicators.forEach(indicator => {\n      if (this.indicators[indicator]) {\n        try {\n          results[indicator] = this.indicators[indicator](data);\n        } catch (error) {\n          console.error(`Failed to calculate ${indicator}:`, error.message);\n          results[indicator] = { error: error.message };\n        }\n      } else {\n        results[indicator] = { error: `Unknown indicator: ${indicator}` };\n      }\n    });\n\n    return results;\n  }\n\n  // RSI (Relative Strength Index)\n  calculateRSI(data, period = 14) {\n    if (data.length < period + 1) {\n      throw new Error(`Insufficient data for RSI: need at least ${period + 1} points`);\n    }\n\n    const prices = data.map(d => d.close || d.price);\n    const changes = [];\n    \n    // Calculate price changes\n    for (let i = 1; i < prices.length; i++) {\n      changes.push(prices[i] - prices[i - 1]);\n    }\n\n    const rsiValues = [];\n    let gains = [];\n    let losses = [];\n\n    // Initial calculation\n    for (let i = 0; i < period; i++) {\n      if (changes[i] > 0) {\n        gains.push(changes[i]);\n        losses.push(0);\n      } else {\n        gains.push(0);\n        losses.push(Math.abs(changes[i]));\n      }\n    }\n\n    let avgGain = gains.reduce((sum, gain) => sum + gain, 0) / period;\n    let avgLoss = losses.reduce((sum, loss) => sum + loss, 0) / period;\n\n    // Calculate initial RSI\n    let rs = avgGain / (avgLoss || 0.001); // Prevent division by zero\n    let rsi = 100 - (100 / (1 + rs));\n    rsiValues.push({\n      index: period,\n      value: rsi,\n      timestamp: data[period].timestamp || null\n    });\n\n    // Rolling calculation\n    for (let i = period; i < changes.length; i++) {\n      const change = changes[i];\n      const gain = change > 0 ? change : 0;\n      const loss = change < 0 ? Math.abs(change) : 0;\n\n      // Smoothed moving averages\n      avgGain = ((avgGain * (period - 1)) + gain) / period;\n      avgLoss = ((avgLoss * (period - 1)) + loss) / period;\n\n      rs = avgGain / (avgLoss || 0.001);\n      rsi = 100 - (100 / (1 + rs));\n\n      rsiValues.push({\n        index: i + 1,\n        value: rsi,\n        timestamp: data[i + 1].timestamp || null,\n        signal: rsi > 70 ? 'OVERBOUGHT' : rsi < 30 ? 'OVERSOLD' : 'NEUTRAL'\n      });\n    }\n\n    return {\n      values: rsiValues,\n      current: rsiValues[rsiValues.length - 1],\n      period,\n      interpretation: this.interpretRSI(rsiValues[rsiValues.length - 1].value)\n    };\n  }\n\n  // MACD (Moving Average Convergence Divergence)\n  calculateMACD(data, fastPeriod = 12, slowPeriod = 26, signalPeriod = 9) {\n    if (data.length < slowPeriod) {\n      throw new Error(`Insufficient data for MACD: need at least ${slowPeriod} points`);\n    }\n\n    const prices = data.map(d => d.close || d.price);\n    \n    // Calculate EMAs\n    const fastEMA = this.calculateEMAValues(prices, fastPeriod);\n    const slowEMA = this.calculateEMAValues(prices, slowPeriod);\n    \n    const macdLine = [];\n    const startIndex = slowPeriod - 1;\n\n    // Calculate MACD line\n    for (let i = startIndex; i < prices.length; i++) {\n      const macdValue = fastEMA[i] - slowEMA[i];\n      macdLine.push(macdValue);\n    }\n\n    // Calculate Signal line (EMA of MACD)\n    const signalLine = this.calculateEMAValues(macdLine, signalPeriod);\n    \n    // Calculate Histogram\n    const histogram = [];\n    const signalStartIndex = signalPeriod - 1;\n    \n    for (let i = signalStartIndex; i < macdLine.length; i++) {\n      histogram.push(macdLine[i] - signalLine[i]);\n    }\n\n    const results = [];\n    const finalStartIndex = startIndex + signalStartIndex;\n\n    for (let i = 0; i < histogram.length; i++) {\n      const dataIndex = finalStartIndex + i;\n      results.push({\n        index: dataIndex,\n        timestamp: data[dataIndex].timestamp || null,\n        macd: macdLine[signalStartIndex + i],\n        signal: signalLine[signalStartIndex + i],\n        histogram: histogram[i],\n        crossover: i > 0 ? this.detectMACDCrossover(\n          macdLine[signalStartIndex + i - 1], \n          signalLine[signalStartIndex + i - 1],\n          macdLine[signalStartIndex + i], \n          signalLine[signalStartIndex + i]\n        ) : null\n      });\n    }\n\n    return {\n      values: results,\n      current: results[results.length - 1],\n      parameters: { fastPeriod, slowPeriod, signalPeriod },\n      interpretation: this.interpretMACD(results[results.length - 1])\n    };\n  }\n\n  // Bollinger Bands\n  calculateBollingerBands(data, period = 20, stdDev = 2) {\n    if (data.length < period) {\n      throw new Error(`Insufficient data for Bollinger Bands: need at least ${period} points`);\n    }\n\n    const prices = data.map(d => d.close || d.price);\n    const results = [];\n\n    for (let i = period - 1; i < prices.length; i++) {\n      const slice = prices.slice(i - period + 1, i + 1);\n      \n      // Calculate SMA\n      const sma = slice.reduce((sum, price) => sum + price, 0) / period;\n      \n      // Calculate standard deviation\n      const variance = slice.reduce((sum, price) => sum + Math.pow(price - sma, 2), 0) / period;\n      const standardDeviation = Math.sqrt(variance);\n      \n      // Calculate bands\n      const upperBand = sma + (stdDev * standardDeviation);\n      const lowerBand = sma - (stdDev * standardDeviation);\n      \n      const currentPrice = prices[i];\n      const bandWidth = (upperBand - lowerBand) / sma * 100;\n      const percentB = (currentPrice - lowerBand) / (upperBand - lowerBand);\n\n      results.push({\n        index: i,\n        timestamp: data[i].timestamp || null,\n        upperBand,\n        middleBand: sma,\n        lowerBand,\n        price: currentPrice,\n        bandWidth,\n        percentB,\n        position: currentPrice > upperBand ? 'ABOVE_UPPER' : \n                 currentPrice < lowerBand ? 'BELOW_LOWER' : 'WITHIN_BANDS',\n        squeeze: bandWidth < 10 // Bollinger Band squeeze indicator\n      });\n    }\n\n    return {\n      values: results,\n      current: results[results.length - 1],\n      parameters: { period, stdDev },\n      interpretation: this.interpretBollingerBands(results[results.length - 1])\n    };\n  }\n\n  // Simple Moving Average\n  calculateSMA(data, period = 20) {\n    if (data.length < period) {\n      throw new Error(`Insufficient data for SMA: need at least ${period} points`);\n    }\n\n    const prices = data.map(d => d.close || d.price);\n    const results = [];\n\n    for (let i = period - 1; i < prices.length; i++) {\n      const slice = prices.slice(i - period + 1, i + 1);\n      const sma = slice.reduce((sum, price) => sum + price, 0) / period;\n      \n      results.push({\n        index: i,\n        timestamp: data[i].timestamp || null,\n        value: sma,\n        price: prices[i],\n        trend: i > period - 1 ? (sma > results[results.length - 1].value ? 'UP' : 'DOWN') : 'NEUTRAL'\n      });\n    }\n\n    return {\n      values: results,\n      current: results[results.length - 1],\n      period\n    };\n  }\n\n  // Exponential Moving Average\n  calculateEMA(data, period = 20) {\n    if (data.length < period) {\n      throw new Error(`Insufficient data for EMA: need at least ${period} points`);\n    }\n\n    const prices = data.map(d => d.close || d.price);\n    const emaValues = this.calculateEMAValues(prices, period);\n    const results = [];\n\n    for (let i = period - 1; i < prices.length; i++) {\n      results.push({\n        index: i,\n        timestamp: data[i].timestamp || null,\n        value: emaValues[i],\n        price: prices[i],\n        trend: i > period - 1 ? (emaValues[i] > emaValues[i - 1] ? 'UP' : 'DOWN') : 'NEUTRAL'\n      });\n    }\n\n    return {\n      values: results,\n      current: results[results.length - 1],\n      period\n    };\n  }\n\n  // Stochastic Oscillator\n  calculateStochastic(data, kPeriod = 14, dPeriod = 3) {\n    if (data.length < kPeriod) {\n      throw new Error(`Insufficient data for Stochastic: need at least ${kPeriod} points`);\n    }\n\n    const results = [];\n\n    for (let i = kPeriod - 1; i < data.length; i++) {\n      const slice = data.slice(i - kPeriod + 1, i + 1);\n      const highestHigh = Math.max(...slice.map(d => d.high));\n      const lowestLow = Math.min(...slice.map(d => d.low));\n      const currentClose = data[i].close;\n\n      const kPercent = ((currentClose - lowestLow) / (highestHigh - lowestLow)) * 100;\n      \n      results.push({\n        index: i,\n        timestamp: data[i].timestamp || null,\n        kPercent,\n        highestHigh,\n        lowestLow\n      });\n    }\n\n    // Calculate %D (SMA of %K)\n    for (let i = dPeriod - 1; i < results.length; i++) {\n      const slice = results.slice(i - dPeriod + 1, i + 1);\n      const dPercent = slice.reduce((sum, item) => sum + item.kPercent, 0) / dPeriod;\n      \n      results[i].dPercent = dPercent;\n      results[i].signal = results[i].kPercent > 80 ? 'OVERBOUGHT' : \n                         results[i].kPercent < 20 ? 'OVERSOLD' : 'NEUTRAL';\n    }\n\n    return {\n      values: results.slice(dPeriod - 1),\n      current: results[results.length - 1],\n      parameters: { kPeriod, dPeriod }\n    };\n  }\n\n  // Williams %R\n  calculateWilliamsR(data, period = 14) {\n    if (data.length < period) {\n      throw new Error(`Insufficient data for Williams %R: need at least ${period} points`);\n    }\n\n    const results = [];\n\n    for (let i = period - 1; i < data.length; i++) {\n      const slice = data.slice(i - period + 1, i + 1);\n      const highestHigh = Math.max(...slice.map(d => d.high));\n      const lowestLow = Math.min(...slice.map(d => d.low));\n      const currentClose = data[i].close;\n\n      const williamsR = ((highestHigh - currentClose) / (highestHigh - lowestLow)) * -100;\n      \n      results.push({\n        index: i,\n        timestamp: data[i].timestamp || null,\n        value: williamsR,\n        signal: williamsR > -20 ? 'OVERBOUGHT' : williamsR < -80 ? 'OVERSOLD' : 'NEUTRAL'\n      });\n    }\n\n    return {\n      values: results,\n      current: results[results.length - 1],\n      period\n    };\n  }\n\n  // Helper method to calculate EMA values\n  calculateEMAValues(prices, period) {\n    const multiplier = 2 / (period + 1);\n    const emaValues = [];\n    \n    // Start with SMA for first value\n    const firstSMA = prices.slice(0, period).reduce((sum, price) => sum + price, 0) / period;\n    emaValues[period - 1] = firstSMA;\n    \n    // Calculate EMA for remaining values\n    for (let i = period; i < prices.length; i++) {\n      const ema = (prices[i] * multiplier) + (emaValues[i - 1] * (1 - multiplier));\n      emaValues[i] = ema;\n    }\n    \n    return emaValues;\n  }\n\n  // Detect MACD crossover\n  detectMACDCrossover(prevMACD, prevSignal, currentMACD, currentSignal) {\n    if (prevMACD <= prevSignal && currentMACD > currentSignal) {\n      return 'BULLISH_CROSSOVER';\n    } else if (prevMACD >= prevSignal && currentMACD < currentSignal) {\n      return 'BEARISH_CROSSOVER';\n    }\n    return null;\n  }\n\n  // Interpretation methods\n  interpretRSI(rsi) {\n    if (rsi > 70) {\n      return {\n        signal: 'SELL',\n        strength: 'STRONG',\n        description: 'Overbought conditions - potential sell signal'\n      };\n    } else if (rsi < 30) {\n      return {\n        signal: 'BUY',\n        strength: 'STRONG',\n        description: 'Oversold conditions - potential buy signal'\n      };\n    } else if (rsi > 60) {\n      return {\n        signal: 'SELL',\n        strength: 'WEAK',\n        description: 'Approaching overbought territory'\n      };\n    } else if (rsi < 40) {\n      return {\n        signal: 'BUY',\n        strength: 'WEAK',\n        description: 'Approaching oversold territory'\n      };\n    }\n    return {\n      signal: 'HOLD',\n      strength: 'NEUTRAL',\n      description: 'RSI in neutral territory'\n    };\n  }\n\n  interpretMACD(macdData) {\n    const { macd, signal, histogram, crossover } = macdData;\n    \n    if (crossover === 'BULLISH_CROSSOVER') {\n      return {\n        signal: 'BUY',\n        strength: 'STRONG',\n        description: 'MACD bullish crossover - potential buy signal'\n      };\n    } else if (crossover === 'BEARISH_CROSSOVER') {\n      return {\n        signal: 'SELL',\n        strength: 'STRONG',\n        description: 'MACD bearish crossover - potential sell signal'\n      };\n    } else if (macd > signal && histogram > 0) {\n      return {\n        signal: 'BUY',\n        strength: 'MODERATE',\n        description: 'MACD above signal line with positive histogram'\n      };\n    } else if (macd < signal && histogram < 0) {\n      return {\n        signal: 'SELL',\n        strength: 'MODERATE',\n        description: 'MACD below signal line with negative histogram'\n      };\n    }\n    \n    return {\n      signal: 'HOLD',\n      strength: 'NEUTRAL',\n      description: 'MACD signals are mixed'\n    };\n  }\n\n  interpretBollingerBands(bandData) {\n    const { position, percentB, squeeze } = bandData;\n    \n    if (squeeze) {\n      return {\n        signal: 'WATCH',\n        strength: 'HIGH',\n        description: 'Bollinger Band squeeze - expect breakout'\n      };\n    } else if (position === 'ABOVE_UPPER') {\n      return {\n        signal: 'SELL',\n        strength: 'MODERATE',\n        description: 'Price above upper band - potentially overbought'\n      };\n    } else if (position === 'BELOW_LOWER') {\n      return {\n        signal: 'BUY',\n        strength: 'MODERATE',\n        description: 'Price below lower band - potentially oversold'\n      };\n    } else if (percentB > 0.8) {\n      return {\n        signal: 'SELL',\n        strength: 'WEAK',\n        description: 'Price in upper portion of bands'\n      };\n    } else if (percentB < 0.2) {\n      return {\n        signal: 'BUY',\n        strength: 'WEAK',\n        description: 'Price in lower portion of bands'\n      };\n    }\n    \n    return {\n      signal: 'HOLD',\n      strength: 'NEUTRAL',\n      description: 'Price within normal band range'\n    };\n  }\n\n  // Generate trading signals based on multiple indicators\n  generateTradingSignal(data, indicators = ['RSI', 'MACD', 'BOLLINGER_BANDS']) {\n    const analysis = this.calculateIndicators(data, indicators);\n    const signals = [];\n    let totalScore = 0;\n    let maxScore = 0;\n\n    Object.keys(analysis).forEach(indicator => {\n      if (analysis[indicator].interpretation) {\n        const interpretation = analysis[indicator].interpretation;\n        let score = 0;\n\n        // Score the signals\n        if (interpretation.signal === 'BUY') {\n          score = interpretation.strength === 'STRONG' ? 3 : \n                 interpretation.strength === 'MODERATE' ? 2 : 1;\n        } else if (interpretation.signal === 'SELL') {\n          score = interpretation.strength === 'STRONG' ? -3 : \n                 interpretation.strength === 'MODERATE' ? -2 : -1;\n        }\n\n        signals.push({\n          indicator,\n          signal: interpretation.signal,\n          strength: interpretation.strength,\n          score,\n          description: interpretation.description\n        });\n\n        totalScore += score;\n        maxScore += 3; // Maximum possible score per indicator\n      }\n    });\n\n    // Calculate overall signal\n    const scoreRatio = totalScore / maxScore;\n    let overallSignal, confidence;\n\n    if (scoreRatio > 0.3) {\n      overallSignal = 'BUY';\n      confidence = Math.min(scoreRatio * 100, 100);\n    } else if (scoreRatio < -0.3) {\n      overallSignal = 'SELL';\n      confidence = Math.min(Math.abs(scoreRatio) * 100, 100);\n    } else {\n      overallSignal = 'HOLD';\n      confidence = 100 - Math.abs(scoreRatio) * 100;\n    }\n\n    return {\n      timestamp: new Date().toISOString(),\n      symbol: data[0]?.symbol || 'UNKNOWN',\n      overallSignal,\n      confidence: Math.round(confidence),\n      totalScore,\n      maxScore,\n      signals,\n      analysis,\n      recommendation: this.generateRecommendation(overallSignal, confidence, signals)\n    };\n  }\n\n  generateRecommendation(signal, confidence, signals) {\n    const strongSignals = signals.filter(s => s.strength === 'STRONG').length;\n    const consensusSignals = signals.filter(s => s.signal === signal).length;\n    \n    let recommendation = '';\n    \n    if (signal === 'BUY' && confidence > 70) {\n      recommendation = `Strong BUY signal with ${confidence}% confidence. `;\n    } else if (signal === 'SELL' && confidence > 70) {\n      recommendation = `Strong SELL signal with ${confidence}% confidence. `;\n    } else if (signal === 'BUY' && confidence > 50) {\n      recommendation = `Moderate BUY signal with ${confidence}% confidence. `;\n    } else if (signal === 'SELL' && confidence > 50) {\n      recommendation = `Moderate SELL signal with ${confidence}% confidence. `;\n    } else {\n      recommendation = `HOLD position. Signals are mixed with ${confidence}% confidence. `;\n    }\n    \n    if (strongSignals > 0) {\n      recommendation += `${strongSignals} strong indicator(s) support this signal. `;\n    }\n    \n    if (consensusSignals === signals.length) {\n      recommendation += 'All indicators agree. ';\n    } else {\n      recommendation += `${consensusSignals}/${signals.length} indicators agree. `;\n    }\n    \n    recommendation += 'Consider risk management and position sizing.';\n    \n    return recommendation;\n  }\n}\n\nmodule.exports = TechnicalAnalysisService;"],"mappings":"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","ignoreList":[]}