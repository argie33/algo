36bda24f59e2f0421de4169b444e78c8
/* istanbul ignore next */
function cov_1huves6rjc() {
  var path = "/home/stocks/algo/webapp/lambda/routes/security.js";
  var hash = "33640ec24a16d42b2d1a623ba24ab92d34d12026";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/routes/security.js",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 16
        },
        end: {
          line: 6,
          column: 34
        }
      },
      "1": {
        start: {
          line: 7,
          column: 27
        },
        end: {
          line: 7,
          column: 64
        }
      },
      "2": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 9,
          column: 31
        }
      },
      "3": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 45,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 25
        },
        end: {
          line: 16,
          column: 64
        }
      },
      "5": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 73
        }
      },
      "6": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "7": {
        start: {
          line: 22,
          column: 32
        },
        end: {
          line: 22,
          column: 62
        }
      },
      "8": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 29,
          column: 9
        }
      },
      "9": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 28,
          column: 16
        }
      },
      "10": {
        start: {
          line: 31,
          column: 26
        },
        end: {
          line: 31,
          column: 64
        }
      },
      "11": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 113
        }
      },
      "12": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 39,
          column: 12
        }
      },
      "13": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 87
        }
      },
      "14": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 90
        }
      },
      "15": {
        start: {
          line: 51,
          column: 0
        },
        end: {
          line: 80,
          column: 3
        }
      },
      "16": {
        start: {
          line: 52,
          column: 25
        },
        end: {
          line: 52,
          column: 64
        }
      },
      "17": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 70
        }
      },
      "18": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "19": {
        start: {
          line: 57,
          column: 32
        },
        end: {
          line: 57,
          column: 62
        }
      },
      "20": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "21": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 63,
          column: 16
        }
      },
      "22": {
        start: {
          line: 66,
          column: 24
        },
        end: {
          line: 66,
          column: 52
        }
      },
      "23": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 114
        }
      },
      "24": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 74,
          column: 12
        }
      },
      "25": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 85
        }
      },
      "26": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 88
        }
      },
      "27": {
        start: {
          line: 86,
          column: 0
        },
        end: {
          line: 164,
          column: 3
        }
      },
      "28": {
        start: {
          line: 87,
          column: 25
        },
        end: {
          line: 87,
          column: 64
        }
      },
      "29": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 89,
          column: 69
        }
      },
      "30": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 163,
          column: 5
        }
      },
      "31": {
        start: {
          line: 92,
          column: 32
        },
        end: {
          line: 92,
          column: 62
        }
      },
      "32": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 98,
          column: 9
        }
      },
      "33": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 97,
          column: 16
        }
      },
      "34": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 21
        }
      },
      "35": {
        start: {
          line: 112,
          column: 26
        },
        end: {
          line: 126,
          column: 10
        }
      },
      "36": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 115,
          column: 13
        }
      },
      "37": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 29
        }
      },
      "38": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 118,
          column: 13
        }
      },
      "39": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 117,
          column: 29
        }
      },
      "40": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 121,
          column: 13
        }
      },
      "41": {
        start: {
          line: 120,
          column: 16
        },
        end: {
          line: 120,
          column: 29
        }
      },
      "42": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 124,
          column: 13
        }
      },
      "43": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 29
        }
      },
      "44": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 24
        }
      },
      "45": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 60
        }
      },
      "46": {
        start: {
          line: 129,
          column: 33
        },
        end: {
          line: 129,
          column: 58
        }
      },
      "47": {
        start: {
          line: 132,
          column: 32
        },
        end: {
          line: 132,
          column: 101
        }
      },
      "48": {
        start: {
          line: 134,
          column: 25
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "49": {
        start: {
          line: 144,
          column: 50
        },
        end: {
          line: 153,
          column: 13
        }
      },
      "50": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 124
        }
      },
      "51": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 36
        }
      },
      "52": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 84
        }
      },
      "53": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 87
        }
      },
      "54": {
        start: {
          line: 170,
          column: 0
        },
        end: {
          line: 217,
          column: 3
        }
      },
      "55": {
        start: {
          line: 171,
          column: 25
        },
        end: {
          line: 171,
          column: 64
        }
      },
      "56": {
        start: {
          line: 173,
          column: 4
        },
        end: {
          line: 173,
          column: 76
        }
      },
      "57": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 216,
          column: 5
        }
      },
      "58": {
        start: {
          line: 176,
          column: 32
        },
        end: {
          line: 176,
          column: 62
        }
      },
      "59": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 182,
          column: 9
        }
      },
      "60": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 181,
          column: 16
        }
      },
      "61": {
        start: {
          line: 184,
          column: 49
        },
        end: {
          line: 184,
          column: 57
        }
      },
      "62": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 192,
          column: 9
        }
      },
      "63": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 191,
          column: 16
        }
      },
      "64": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 201,
          column: 9
        }
      },
      "65": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 200,
          column: 16
        }
      },
      "66": {
        start: {
          line: 203,
          column: 24
        },
        end: {
          line: 203,
          column: 91
        }
      },
      "67": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 78
        }
      },
      "68": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 211,
          column: 12
        }
      },
      "69": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 91
        }
      },
      "70": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 90
        }
      },
      "71": {
        start: {
          line: 223,
          column: 0
        },
        end: {
          line: 275,
          column: 3
        }
      },
      "72": {
        start: {
          line: 224,
          column: 25
        },
        end: {
          line: 224,
          column: 64
        }
      },
      "73": {
        start: {
          line: 226,
          column: 4
        },
        end: {
          line: 226,
          column: 76
        }
      },
      "74": {
        start: {
          line: 228,
          column: 4
        },
        end: {
          line: 274,
          column: 5
        }
      },
      "75": {
        start: {
          line: 229,
          column: 32
        },
        end: {
          line: 229,
          column: 62
        }
      },
      "76": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 235,
          column: 9
        }
      },
      "77": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 234,
          column: 16
        }
      },
      "78": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 21
        }
      },
      "79": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 249,
          column: 9
        }
      },
      "80": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 248,
          column: 16
        }
      },
      "81": {
        start: {
          line: 251,
          column: 27
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "82": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 267,
          column: 9
        }
      },
      "83": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 258,
          column: 54
        }
      },
      "84": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 259,
          column: 109
        }
      },
      "85": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 260,
          column: 33
        }
      },
      "86": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 266,
          column: 16
        }
      },
      "87": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 269,
          column: 87
        }
      },
      "88": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 272,
          column: 91
        }
      },
      "89": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 273,
          column: 94
        }
      },
      "90": {
        start: {
          line: 281,
          column: 0
        },
        end: {
          line: 312,
          column: 3
        }
      },
      "91": {
        start: {
          line: 282,
          column: 25
        },
        end: {
          line: 282,
          column: 64
        }
      },
      "92": {
        start: {
          line: 284,
          column: 4
        },
        end: {
          line: 284,
          column: 77
        }
      },
      "93": {
        start: {
          line: 286,
          column: 4
        },
        end: {
          line: 311,
          column: 5
        }
      },
      "94": {
        start: {
          line: 287,
          column: 32
        },
        end: {
          line: 287,
          column: 62
        }
      },
      "95": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 293,
          column: 9
        }
      },
      "96": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 292,
          column: 16
        }
      },
      "97": {
        start: {
          line: 295,
          column: 56
        },
        end: {
          line: 295,
          column: 64
        }
      },
      "98": {
        start: {
          line: 297,
          column: 29
        },
        end: {
          line: 297,
          column: 80
        }
      },
      "99": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 299,
          column: 110
        }
      },
      "100": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 306,
          column: 12
        }
      },
      "101": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 309,
          column: 92
        }
      },
      "102": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 310,
          column: 95
        }
      },
      "103": {
        start: {
          line: 318,
          column: 0
        },
        end: {
          line: 367,
          column: 3
        }
      },
      "104": {
        start: {
          line: 319,
          column: 25
        },
        end: {
          line: 319,
          column: 64
        }
      },
      "105": {
        start: {
          line: 321,
          column: 4
        },
        end: {
          line: 321,
          column: 77
        }
      },
      "106": {
        start: {
          line: 323,
          column: 4
        },
        end: {
          line: 366,
          column: 5
        }
      },
      "107": {
        start: {
          line: 324,
          column: 32
        },
        end: {
          line: 324,
          column: 62
        }
      },
      "108": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 330,
          column: 9
        }
      },
      "109": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 329,
          column: 16
        }
      },
      "110": {
        start: {
          line: 332,
          column: 28
        },
        end: {
          line: 332,
          column: 38
        }
      },
      "111": {
        start: {
          line: 333,
          column: 25
        },
        end: {
          line: 333,
          column: 55
        }
      },
      "112": {
        start: {
          line: 335,
          column: 29
        },
        end: {
          line: 337,
          column: 9
        }
      },
      "113": {
        start: {
          line: 336,
          column: 21
        },
        end: {
          line: 336,
          column: 47
        }
      },
      "114": {
        start: {
          line: 339,
          column: 33
        },
        end: {
          line: 353,
          column: 9
        }
      },
      "115": {
        start: {
          line: 344,
          column: 57
        },
        end: {
          line: 344,
          column: 82
        }
      },
      "116": {
        start: {
          line: 345,
          column: 56
        },
        end: {
          line: 345,
          column: 80
        }
      },
      "117": {
        start: {
          line: 346,
          column: 57
        },
        end: {
          line: 346,
          column: 67
        }
      },
      "118": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 355,
          column: 102
        }
      },
      "119": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 361,
          column: 12
        }
      },
      "120": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 364,
          column: 92
        }
      },
      "121": {
        start: {
          line: 365,
          column: 8
        },
        end: {
          line: 365,
          column: 95
        }
      },
      "122": {
        start: {
          line: 373,
          column: 0
        },
        end: {
          line: 428,
          column: 3
        }
      },
      "123": {
        start: {
          line: 374,
          column: 25
        },
        end: {
          line: 374,
          column: 64
        }
      },
      "124": {
        start: {
          line: 376,
          column: 4
        },
        end: {
          line: 376,
          column: 76
        }
      },
      "125": {
        start: {
          line: 378,
          column: 4
        },
        end: {
          line: 427,
          column: 5
        }
      },
      "126": {
        start: {
          line: 380,
          column: 32
        },
        end: {
          line: 380,
          column: 62
        }
      },
      "127": {
        start: {
          line: 381,
          column: 39
        },
        end: {
          line: 381,
          column: 76
        }
      },
      "128": {
        start: {
          line: 382,
          column: 31
        },
        end: {
          line: 382,
          column: 60
        }
      },
      "129": {
        start: {
          line: 384,
          column: 23
        },
        end: {
          line: 403,
          column: 9
        }
      },
      "130": {
        start: {
          line: 406,
          column: 31
        },
        end: {
          line: 406,
          column: 103
        }
      },
      "131": {
        start: {
          line: 406,
          column: 74
        },
        end: {
          line: 406,
          column: 95
        }
      },
      "132": {
        start: {
          line: 407,
          column: 30
        },
        end: {
          line: 407,
          column: 65
        }
      },
      "133": {
        start: {
          line: 409,
          column: 8
        },
        end: {
          line: 415,
          column: 9
        }
      },
      "134": {
        start: {
          line: 410,
          column: 12
        },
        end: {
          line: 410,
          column: 39
        }
      },
      "135": {
        start: {
          line: 411,
          column: 15
        },
        end: {
          line: 415,
          column: 9
        }
      },
      "136": {
        start: {
          line: 412,
          column: 12
        },
        end: {
          line: 412,
          column: 40
        }
      },
      "137": {
        start: {
          line: 414,
          column: 12
        },
        end: {
          line: 414,
          column: 40
        }
      },
      "138": {
        start: {
          line: 417,
          column: 8
        },
        end: {
          line: 417,
          column: 86
        }
      },
      "139": {
        start: {
          line: 419,
          column: 8
        },
        end: {
          line: 422,
          column: 12
        }
      },
      "140": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 425,
          column: 91
        }
      },
      "141": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 426,
          column: 94
        }
      },
      "142": {
        start: {
          line: 430,
          column: 0
        },
        end: {
          line: 430,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 15,
            column: 26
          }
        },
        loc: {
          start: {
            line: 15,
            column: 45
          },
          end: {
            line: 45,
            column: 1
          }
        },
        line: 15
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 51,
            column: 23
          },
          end: {
            line: 51,
            column: 24
          }
        },
        loc: {
          start: {
            line: 51,
            column: 43
          },
          end: {
            line: 80,
            column: 1
          }
        },
        line: 51
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 86,
            column: 22
          },
          end: {
            line: 86,
            column: 23
          }
        },
        loc: {
          start: {
            line: 86,
            column: 42
          },
          end: {
            line: 164,
            column: 1
          }
        },
        line: 86
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 112,
            column: 64
          },
          end: {
            line: 112,
            column: 65
          }
        },
        loc: {
          start: {
            line: 112,
            column: 73
          },
          end: {
            line: 126,
            column: 9
          }
        },
        line: 112
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 129,
            column: 23
          },
          end: {
            line: 129,
            column: 24
          }
        },
        loc: {
          start: {
            line: 129,
            column: 33
          },
          end: {
            line: 129,
            column: 58
          }
        },
        line: 129
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 144,
            column: 40
          },
          end: {
            line: 144,
            column: 41
          }
        },
        loc: {
          start: {
            line: 144,
            column: 50
          },
          end: {
            line: 153,
            column: 13
          }
        },
        line: 144
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 170,
            column: 22
          },
          end: {
            line: 170,
            column: 23
          }
        },
        loc: {
          start: {
            line: 170,
            column: 42
          },
          end: {
            line: 217,
            column: 1
          }
        },
        line: 170
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 223,
            column: 22
          },
          end: {
            line: 223,
            column: 23
          }
        },
        loc: {
          start: {
            line: 223,
            column: 42
          },
          end: {
            line: 275,
            column: 1
          }
        },
        line: 223
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 281,
            column: 33
          },
          end: {
            line: 281,
            column: 34
          }
        },
        loc: {
          start: {
            line: 281,
            column: 53
          },
          end: {
            line: 312,
            column: 1
          }
        },
        line: 281
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 318,
            column: 28
          },
          end: {
            line: 318,
            column: 29
          }
        },
        loc: {
          start: {
            line: 318,
            column: 48
          },
          end: {
            line: 367,
            column: 1
          }
        },
        line: 318
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 336,
            column: 12
          },
          end: {
            line: 336,
            column: 13
          }
        },
        loc: {
          start: {
            line: 336,
            column: 21
          },
          end: {
            line: 336,
            column: 47
          }
        },
        line: 336
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 344,
            column: 52
          },
          end: {
            line: 344,
            column: 53
          }
        },
        loc: {
          start: {
            line: 344,
            column: 57
          },
          end: {
            line: 344,
            column: 82
          }
        },
        line: 344
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 345,
            column: 51
          },
          end: {
            line: 345,
            column: 52
          }
        },
        loc: {
          start: {
            line: 345,
            column: 56
          },
          end: {
            line: 345,
            column: 80
          }
        },
        line: 345
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 346,
            column: 52
          },
          end: {
            line: 346,
            column: 53
          }
        },
        loc: {
          start: {
            line: 346,
            column: 57
          },
          end: {
            line: 346,
            column: 67
          }
        },
        line: 346
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 373,
            column: 22
          },
          end: {
            line: 373,
            column: 23
          }
        },
        loc: {
          start: {
            line: 373,
            column: 42
          },
          end: {
            line: 428,
            column: 1
          }
        },
        line: 373
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 406,
            column: 69
          },
          end: {
            line: 406,
            column: 70
          }
        },
        loc: {
          start: {
            line: 406,
            column: 74
          },
          end: {
            line: 406,
            column: 95
          }
        },
        line: 406
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "2": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "3": {
        loc: {
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 102,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 102,
            column: 24
          },
          end: {
            line: 102,
            column: 58
          }
        }],
        line: 102
      },
      "4": {
        loc: {
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 103,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 103,
            column: 22
          },
          end: {
            line: 103,
            column: 32
          }
        }],
        line: 103
      },
      "5": {
        loc: {
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 107,
            column: 23
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 107,
            column: 20
          },
          end: {
            line: 107,
            column: 23
          }
        }],
        line: 107
      },
      "6": {
        loc: {
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 108,
            column: 22
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 108,
            column: 21
          },
          end: {
            line: 108,
            column: 22
          }
        }],
        line: 108
      },
      "7": {
        loc: {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "8": {
        loc: {
          start: {
            line: 113,
            column: 16
          },
          end: {
            line: 113,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 16
          },
          end: {
            line: 113,
            column: 53
          }
        }, {
          start: {
            line: 113,
            column: 57
          },
          end: {
            line: 113,
            column: 92
          }
        }],
        line: 113
      },
      "9": {
        loc: {
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 118,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 118,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "10": {
        loc: {
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 116,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 116,
            column: 25
          }
        }, {
          start: {
            line: 116,
            column: 29
          },
          end: {
            line: 116,
            column: 58
          }
        }],
        line: 116
      },
      "11": {
        loc: {
          start: {
            line: 119,
            column: 12
          },
          end: {
            line: 121,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 12
          },
          end: {
            line: 121,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "12": {
        loc: {
          start: {
            line: 119,
            column: 16
          },
          end: {
            line: 119,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 16
          },
          end: {
            line: 119,
            column: 24
          }
        }, {
          start: {
            line: 119,
            column: 28
          },
          end: {
            line: 119,
            column: 55
          }
        }],
        line: 119
      },
      "13": {
        loc: {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "14": {
        loc: {
          start: {
            line: 122,
            column: 16
          },
          end: {
            line: 122,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 16
          },
          end: {
            line: 122,
            column: 24
          }
        }, {
          start: {
            line: 122,
            column: 28
          },
          end: {
            line: 122,
            column: 55
          }
        }],
        line: 122
      },
      "15": {
        loc: {
          start: {
            line: 178,
            column: 8
          },
          end: {
            line: 182,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 8
          },
          end: {
            line: 182,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "16": {
        loc: {
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "17": {
        loc: {
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 187,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 187,
            column: 22
          }
        }, {
          start: {
            line: 187,
            column: 26
          },
          end: {
            line: 187,
            column: 35
          }
        }],
        line: 187
      },
      "18": {
        loc: {
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "19": {
        loc: {
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 235,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 235,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 231
      },
      "20": {
        loc: {
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 238,
            column: 62
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 238,
            column: 24
          },
          end: {
            line: 238,
            column: 62
          }
        }],
        line: 238
      },
      "21": {
        loc: {
          start: {
            line: 239,
            column: 12
          },
          end: {
            line: 239,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 239,
            column: 22
          },
          end: {
            line: 239,
            column: 32
          }
        }],
        line: 239
      },
      "22": {
        loc: {
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 240,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 240,
            column: 21
          },
          end: {
            line: 240,
            column: 27
          }
        }],
        line: 240
      },
      "23": {
        loc: {
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "24": {
        loc: {
          start: {
            line: 257,
            column: 8
          },
          end: {
            line: 267,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 257,
            column: 8
          },
          end: {
            line: 267,
            column: 9
          }
        }, {
          start: {
            line: 261,
            column: 15
          },
          end: {
            line: 267,
            column: 9
          }
        }],
        line: 257
      },
      "25": {
        loc: {
          start: {
            line: 289,
            column: 8
          },
          end: {
            line: 293,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 289,
            column: 8
          },
          end: {
            line: 293,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 289
      },
      "26": {
        loc: {
          start: {
            line: 295,
            column: 16
          },
          end: {
            line: 295,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 295,
            column: 28
          },
          end: {
            line: 295,
            column: 51
          }
        }],
        line: 295
      },
      "27": {
        loc: {
          start: {
            line: 326,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 326,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 326
      },
      "28": {
        loc: {
          start: {
            line: 350,
            column: 24
          },
          end: {
            line: 350,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 350,
            column: 24
          },
          end: {
            line: 350,
            column: 48
          }
        }, {
          start: {
            line: 350,
            column: 52
          },
          end: {
            line: 350,
            column: 77
          }
        }],
        line: 350
      },
      "29": {
        loc: {
          start: {
            line: 389,
            column: 28
          },
          end: {
            line: 389,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 389,
            column: 46
          },
          end: {
            line: 389,
            column: 54
          }
        }, {
          start: {
            line: 389,
            column: 57
          },
          end: {
            line: 389,
            column: 67
          }
        }],
        line: 389
      },
      "30": {
        loc: {
          start: {
            line: 390,
            column: 33
          },
          end: {
            line: 390,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 390,
            column: 33
          },
          end: {
            line: 390,
            column: 61
          }
        }, {
          start: {
            line: 390,
            column: 65
          },
          end: {
            line: 390,
            column: 74
          }
        }],
        line: 390
      },
      "31": {
        loc: {
          start: {
            line: 391,
            column: 32
          },
          end: {
            line: 391,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 391,
            column: 32
          },
          end: {
            line: 391,
            column: 71
          }
        }, {
          start: {
            line: 391,
            column: 75
          },
          end: {
            line: 391,
            column: 76
          }
        }],
        line: 391
      },
      "32": {
        loc: {
          start: {
            line: 394,
            column: 28
          },
          end: {
            line: 394,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 394,
            column: 53
          },
          end: {
            line: 394,
            column: 61
          }
        }, {
          start: {
            line: 394,
            column: 64
          },
          end: {
            line: 394,
            column: 74
          }
        }],
        line: 394
      },
      "33": {
        loc: {
          start: {
            line: 395,
            column: 27
          },
          end: {
            line: 395,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 395,
            column: 27
          },
          end: {
            line: 395,
            column: 61
          }
        }, {
          start: {
            line: 395,
            column: 65
          },
          end: {
            line: 395,
            column: 69
          }
        }],
        line: 395
      },
      "34": {
        loc: {
          start: {
            line: 398,
            column: 28
          },
          end: {
            line: 398,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 398,
            column: 45
          },
          end: {
            line: 398,
            column: 53
          }
        }, {
          start: {
            line: 398,
            column: 56
          },
          end: {
            line: 398,
            column: 66
          }
        }],
        line: 398
      },
      "35": {
        loc: {
          start: {
            line: 399,
            column: 27
          },
          end: {
            line: 399,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 399,
            column: 27
          },
          end: {
            line: 399,
            column: 53
          }
        }, {
          start: {
            line: 399,
            column: 57
          },
          end: {
            line: 399,
            column: 61
          }
        }],
        line: 399
      },
      "36": {
        loc: {
          start: {
            line: 409,
            column: 8
          },
          end: {
            line: 415,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 409,
            column: 8
          },
          end: {
            line: 415,
            column: 9
          }
        }, {
          start: {
            line: 411,
            column: 15
          },
          end: {
            line: 415,
            column: 9
          }
        }],
        line: 409
      },
      "37": {
        loc: {
          start: {
            line: 411,
            column: 15
          },
          end: {
            line: 415,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 411,
            column: 15
          },
          end: {
            line: 415,
            column: 9
          }
        }, {
          start: {
            line: 413,
            column: 15
          },
          end: {
            line: 415,
            column: 9
          }
        }],
        line: 411
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0],
      "21": [0],
      "22": [0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "33640ec24a16d42b2d1a623ba24ab92d34d12026"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1huves6rjc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1huves6rjc();
/**
 * Security Management Routes
 * Security dashboard, event monitoring, and threat management
 */

const express =
/* istanbul ignore next */
(cov_1huves6rjc().s[0]++, require('express'));
const {
  success,
  error
} =
/* istanbul ignore next */
(cov_1huves6rjc().s[1]++, require('../utils/responseFormatter'));
const router =
/* istanbul ignore next */
(cov_1huves6rjc().s[2]++, express.Router());

/**
 * GET /api/security/dashboard
 * Security dashboard with real-time threat monitoring
 */
/* istanbul ignore next */
cov_1huves6rjc().s[3]++;
router.get('/dashboard', async (req, res) => {
  /* istanbul ignore next */
  cov_1huves6rjc().f[0]++;
  const diagnosticId =
  /* istanbul ignore next */
  (cov_1huves6rjc().s[4]++, Math.random().toString(36).substr(2, 9));
  /* istanbul ignore next */
  cov_1huves6rjc().s[5]++;
  console.log(`🛡️ [${diagnosticId}] Security dashboard requested...`);
  /* istanbul ignore next */
  cov_1huves6rjc().s[6]++;
  try {
    // Get security service instance (lazy loaded from main app)
    const securityService =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[7]++, req.app.locals.securityService);
    /* istanbul ignore next */
    cov_1huves6rjc().s[8]++;
    if (!securityService) {
      /* istanbul ignore next */
      cov_1huves6rjc().b[0][0]++;
      cov_1huves6rjc().s[9]++;
      return res.json(error('Security service not available', {
        diagnosticId,
        message: 'Security monitoring service is not initialized'
      }));
    } else
    /* istanbul ignore next */
    {
      cov_1huves6rjc().b[0][1]++;
    }
    const dashboard =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[10]++, securityService.getSecurityDashboard());
    /* istanbul ignore next */
    cov_1huves6rjc().s[11]++;
    console.log(`🛡️ [${diagnosticId}] Security dashboard generated: ${dashboard.threatLevel} threat level`);
    /* istanbul ignore next */
    cov_1huves6rjc().s[12]++;
    res.json(success({
      ...dashboard,
      diagnosticId,
      message: 'Security dashboard retrieved successfully'
    }));
  } catch (error) {
    /* istanbul ignore next */
    cov_1huves6rjc().s[13]++;
    console.error(`❌ [${diagnosticId}] Security dashboard failed:`, error.message);
    /* istanbul ignore next */
    cov_1huves6rjc().s[14]++;
    res.json(error(error.message, {
      diagnosticId,
      operation: 'security-dashboard'
    }));
  }
});

/**
 * GET /api/security/metrics
 * Security metrics and statistics
 */
/* istanbul ignore next */
cov_1huves6rjc().s[15]++;
router.get('/metrics', async (req, res) => {
  /* istanbul ignore next */
  cov_1huves6rjc().f[1]++;
  const diagnosticId =
  /* istanbul ignore next */
  (cov_1huves6rjc().s[16]++, Math.random().toString(36).substr(2, 9));
  /* istanbul ignore next */
  cov_1huves6rjc().s[17]++;
  console.log(`📊 [${diagnosticId}] Security metrics requested...`);
  /* istanbul ignore next */
  cov_1huves6rjc().s[18]++;
  try {
    const securityService =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[19]++, req.app.locals.securityService);
    /* istanbul ignore next */
    cov_1huves6rjc().s[20]++;
    if (!securityService) {
      /* istanbul ignore next */
      cov_1huves6rjc().b[1][0]++;
      cov_1huves6rjc().s[21]++;
      return res.json(error('Security service not available', {
        diagnosticId,
        message: 'Security monitoring service is not initialized'
      }));
    } else
    /* istanbul ignore next */
    {
      cov_1huves6rjc().b[1][1]++;
    }
    const metrics =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[22]++, securityService.getMetrics());
    /* istanbul ignore next */
    cov_1huves6rjc().s[23]++;
    console.log(`📊 [${diagnosticId}] Security metrics retrieved: ${metrics.recentEventCount} recent events`);
    /* istanbul ignore next */
    cov_1huves6rjc().s[24]++;
    res.json(success({
      ...metrics,
      diagnosticId,
      message: 'Security metrics retrieved successfully'
    }));
  } catch (error) {
    /* istanbul ignore next */
    cov_1huves6rjc().s[25]++;
    console.error(`❌ [${diagnosticId}] Security metrics failed:`, error.message);
    /* istanbul ignore next */
    cov_1huves6rjc().s[26]++;
    res.json(error(error.message, {
      diagnosticId,
      operation: 'security-metrics'
    }));
  }
});

/**
 * GET /api/security/events
 * Security events with filtering and pagination
 */
/* istanbul ignore next */
cov_1huves6rjc().s[27]++;
router.get('/events', async (req, res) => {
  /* istanbul ignore next */
  cov_1huves6rjc().f[2]++;
  const diagnosticId =
  /* istanbul ignore next */
  (cov_1huves6rjc().s[28]++, Math.random().toString(36).substr(2, 9));
  /* istanbul ignore next */
  cov_1huves6rjc().s[29]++;
  console.log(`📋 [${diagnosticId}] Security events requested...`);
  /* istanbul ignore next */
  cov_1huves6rjc().s[30]++;
  try {
    const securityService =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[31]++, req.app.locals.securityService);
    /* istanbul ignore next */
    cov_1huves6rjc().s[32]++;
    if (!securityService) {
      /* istanbul ignore next */
      cov_1huves6rjc().b[2][0]++;
      cov_1huves6rjc().s[33]++;
      return res.json(error('Security service not available', {
        diagnosticId
      }));
    } else
    /* istanbul ignore next */
    {
      cov_1huves6rjc().b[2][1]++;
    }

    // Parse query parameters
    const {
      startTime =
      /* istanbul ignore next */
      (cov_1huves6rjc().b[3][0]++, Date.now() - 24 * 60 * 60 * 1000),
      // Last 24 hours default
      endTime =
      /* istanbul ignore next */
      (cov_1huves6rjc().b[4][0]++, Date.now()),
      eventType,
      severity,
      sourceIP,
      limit =
      /* istanbul ignore next */
      (cov_1huves6rjc().b[5][0]++, 100),
      offset =
      /* istanbul ignore next */
      (cov_1huves6rjc().b[6][0]++, 0)
    } =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[34]++, req.query);

    // Get all events in time range
    const allEvents =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[35]++, securityService.securityEvents.filter(event => {
      /* istanbul ignore next */
      cov_1huves6rjc().f[3]++;
      cov_1huves6rjc().s[36]++;
      if (
      /* istanbul ignore next */
      (cov_1huves6rjc().b[8][0]++, event.timestamp < parseInt(startTime)) ||
      /* istanbul ignore next */
      (cov_1huves6rjc().b[8][1]++, event.timestamp > parseInt(endTime))) {
        /* istanbul ignore next */
        cov_1huves6rjc().b[7][0]++;
        cov_1huves6rjc().s[37]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1huves6rjc().b[7][1]++;
      }
      cov_1huves6rjc().s[38]++;
      if (
      /* istanbul ignore next */
      (cov_1huves6rjc().b[10][0]++, eventType) &&
      /* istanbul ignore next */
      (cov_1huves6rjc().b[10][1]++, event.eventType !== eventType)) {
        /* istanbul ignore next */
        cov_1huves6rjc().b[9][0]++;
        cov_1huves6rjc().s[39]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1huves6rjc().b[9][1]++;
      }
      cov_1huves6rjc().s[40]++;
      if (
      /* istanbul ignore next */
      (cov_1huves6rjc().b[12][0]++, severity) &&
      /* istanbul ignore next */
      (cov_1huves6rjc().b[12][1]++, event.severity !== severity)) {
        /* istanbul ignore next */
        cov_1huves6rjc().b[11][0]++;
        cov_1huves6rjc().s[41]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1huves6rjc().b[11][1]++;
      }
      cov_1huves6rjc().s[42]++;
      if (
      /* istanbul ignore next */
      (cov_1huves6rjc().b[14][0]++, sourceIP) &&
      /* istanbul ignore next */
      (cov_1huves6rjc().b[14][1]++, event.sourceIP !== sourceIP)) {
        /* istanbul ignore next */
        cov_1huves6rjc().b[13][0]++;
        cov_1huves6rjc().s[43]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1huves6rjc().b[13][1]++;
      }
      cov_1huves6rjc().s[44]++;
      return true;
    }));

    // Sort by timestamp (newest first)
    /* istanbul ignore next */
    cov_1huves6rjc().s[45]++;
    allEvents.sort((a, b) => {
      /* istanbul ignore next */
      cov_1huves6rjc().f[4]++;
      cov_1huves6rjc().s[46]++;
      return b.timestamp - a.timestamp;
    });

    // Apply pagination
    const paginatedEvents =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[47]++, allEvents.slice(parseInt(offset), parseInt(offset) + parseInt(limit)));
    const response =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[48]++, {
      diagnosticId,
      timeRange: {
        startTime: parseInt(startTime),
        endTime: parseInt(endTime)
      },
      filters: {
        eventType,
        severity,
        sourceIP
      },
      pagination: {
        total: allEvents.length,
        limit: parseInt(limit),
        offset: parseInt(offset),
        hasMore: parseInt(offset) + parseInt(limit) < allEvents.length
      },
      events: paginatedEvents.map(event => {
        /* istanbul ignore next */
        cov_1huves6rjc().f[5]++;
        cov_1huves6rjc().s[49]++;
        return {
          id: event.id,
          timestamp: event.timestamp,
          eventType: event.eventType,
          severity: event.severity,
          sourceIP: event.sourceIP,
          userAgent: event.userAgent,
          userId: event.userId,
          details: event.details
        };
      })
    });
    /* istanbul ignore next */
    cov_1huves6rjc().s[50]++;
    console.log(`📋 [${diagnosticId}] Security events retrieved: ${paginatedEvents.length}/${allEvents.length} events`);
    /* istanbul ignore next */
    cov_1huves6rjc().s[51]++;
    res.json(success(response));
  } catch (error) {
    /* istanbul ignore next */
    cov_1huves6rjc().s[52]++;
    console.error(`❌ [${diagnosticId}] Security events failed:`, error.message);
    /* istanbul ignore next */
    cov_1huves6rjc().s[53]++;
    res.json(error(error.message, {
      diagnosticId,
      operation: 'security-events'
    }));
  }
});

/**
 * POST /api/security/event
 * Log a security event
 */
/* istanbul ignore next */
cov_1huves6rjc().s[54]++;
router.post('/event', async (req, res) => {
  /* istanbul ignore next */
  cov_1huves6rjc().f[6]++;
  const diagnosticId =
  /* istanbul ignore next */
  (cov_1huves6rjc().s[55]++, Math.random().toString(36).substr(2, 9));
  /* istanbul ignore next */
  cov_1huves6rjc().s[56]++;
  console.log(`📝 [${diagnosticId}] Security event logging requested...`);
  /* istanbul ignore next */
  cov_1huves6rjc().s[57]++;
  try {
    const securityService =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[58]++, req.app.locals.securityService);
    /* istanbul ignore next */
    cov_1huves6rjc().s[59]++;
    if (!securityService) {
      /* istanbul ignore next */
      cov_1huves6rjc().b[15][0]++;
      cov_1huves6rjc().s[60]++;
      return res.json(error('Security service not available', {
        diagnosticId
      }));
    } else
    /* istanbul ignore next */
    {
      cov_1huves6rjc().b[15][1]++;
    }
    const {
      eventType,
      severity,
      details
    } =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[61]++, req.body);

    // Validate required fields
    /* istanbul ignore next */
    cov_1huves6rjc().s[62]++;
    if (
    /* istanbul ignore next */
    (cov_1huves6rjc().b[17][0]++, !eventType) ||
    /* istanbul ignore next */
    (cov_1huves6rjc().b[17][1]++, !severity)) {
      /* istanbul ignore next */
      cov_1huves6rjc().b[16][0]++;
      cov_1huves6rjc().s[63]++;
      return res.json(error('Missing required fields: eventType, severity', {
        diagnosticId,
        provided: {
          eventType: !!eventType,
          severity: !!severity
        }
      }));
    } else
    /* istanbul ignore next */
    {
      cov_1huves6rjc().b[16][1]++;
    }

    // Validate severity
    cov_1huves6rjc().s[64]++;
    if (!['info', 'warning', 'critical'].includes(severity)) {
      /* istanbul ignore next */
      cov_1huves6rjc().b[18][0]++;
      cov_1huves6rjc().s[65]++;
      return res.json(error('Invalid severity level', {
        diagnosticId,
        validSeverities: ['info', 'warning', 'critical'],
        provided: severity
      }));
    } else
    /* istanbul ignore next */
    {
      cov_1huves6rjc().b[18][1]++;
    }
    const eventId =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[66]++, securityService.logSecurityEvent(eventType, severity, details, req));
    /* istanbul ignore next */
    cov_1huves6rjc().s[67]++;
    console.log(`📝 [${diagnosticId}] Security event logged: ${eventId}`);
    /* istanbul ignore next */
    cov_1huves6rjc().s[68]++;
    res.json(success({
      eventId,
      diagnosticId,
      message: 'Security event logged successfully'
    }));
  } catch (error) {
    /* istanbul ignore next */
    cov_1huves6rjc().s[69]++;
    console.error(`❌ [${diagnosticId}] Security event logging failed:`, error.message);
    /* istanbul ignore next */
    cov_1huves6rjc().s[70]++;
    res.json(error(error.message, {
      diagnosticId,
      operation: 'log-security-event'
    }));
  }
});

/**
 * GET /api/security/export
 * Export security events for analysis
 */
/* istanbul ignore next */
cov_1huves6rjc().s[71]++;
router.get('/export', async (req, res) => {
  /* istanbul ignore next */
  cov_1huves6rjc().f[7]++;
  const diagnosticId =
  /* istanbul ignore next */
  (cov_1huves6rjc().s[72]++, Math.random().toString(36).substr(2, 9));
  /* istanbul ignore next */
  cov_1huves6rjc().s[73]++;
  console.log(`📤 [${diagnosticId}] Security events export requested...`);
  /* istanbul ignore next */
  cov_1huves6rjc().s[74]++;
  try {
    const securityService =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[75]++, req.app.locals.securityService);
    /* istanbul ignore next */
    cov_1huves6rjc().s[76]++;
    if (!securityService) {
      /* istanbul ignore next */
      cov_1huves6rjc().b[19][0]++;
      cov_1huves6rjc().s[77]++;
      return res.json(error('Security service not available', {
        diagnosticId
      }));
    } else
    /* istanbul ignore next */
    {
      cov_1huves6rjc().b[19][1]++;
    }
    const {
      startTime =
      /* istanbul ignore next */
      (cov_1huves6rjc().b[20][0]++, Date.now() - 7 * 24 * 60 * 60 * 1000),
      // Last 7 days default
      endTime =
      /* istanbul ignore next */
      (cov_1huves6rjc().b[21][0]++, Date.now()),
      format =
      /* istanbul ignore next */
      (cov_1huves6rjc().b[22][0]++, 'json')
    } =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[78]++, req.query);
    /* istanbul ignore next */
    cov_1huves6rjc().s[79]++;
    if (!['json', 'csv'].includes(format)) {
      /* istanbul ignore next */
      cov_1huves6rjc().b[23][0]++;
      cov_1huves6rjc().s[80]++;
      return res.json(error('Invalid export format', {
        diagnosticId,
        validFormats: ['json', 'csv'],
        provided: format
      }));
    } else
    /* istanbul ignore next */
    {
      cov_1huves6rjc().b[23][1]++;
    }
    const exportData =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[81]++, securityService.exportSecurityEvents(parseInt(startTime), parseInt(endTime), format));
    /* istanbul ignore next */
    cov_1huves6rjc().s[82]++;
    if (format === 'csv') {
      /* istanbul ignore next */
      cov_1huves6rjc().b[24][0]++;
      cov_1huves6rjc().s[83]++;
      res.setHeader('Content-Type', 'text/csv');
      /* istanbul ignore next */
      cov_1huves6rjc().s[84]++;
      res.setHeader('Content-Disposition', `attachment; filename="security-events-${Date.now()}.csv"`);
      /* istanbul ignore next */
      cov_1huves6rjc().s[85]++;
      res.send(exportData);
    } else {
      /* istanbul ignore next */
      cov_1huves6rjc().b[24][1]++;
      cov_1huves6rjc().s[86]++;
      res.json(success({
        ...exportData,
        diagnosticId,
        message: 'Security events exported successfully'
      }));
    }
    /* istanbul ignore next */
    cov_1huves6rjc().s[87]++;
    console.log(`📤 [${diagnosticId}] Security events exported: ${format} format`);
  } catch (error) {
    /* istanbul ignore next */
    cov_1huves6rjc().s[88]++;
    console.error(`❌ [${diagnosticId}] Security events export failed:`, error.message);
    /* istanbul ignore next */
    cov_1huves6rjc().s[89]++;
    res.json(error(error.message, {
      diagnosticId,
      operation: 'export-security-events'
    }));
  }
});

/**
 * DELETE /api/security/events/cleanup
 * Clean up old security events
 */
/* istanbul ignore next */
cov_1huves6rjc().s[90]++;
router.delete('/events/cleanup', async (req, res) => {
  /* istanbul ignore next */
  cov_1huves6rjc().f[8]++;
  const diagnosticId =
  /* istanbul ignore next */
  (cov_1huves6rjc().s[91]++, Math.random().toString(36).substr(2, 9));
  /* istanbul ignore next */
  cov_1huves6rjc().s[92]++;
  console.log(`🧹 [${diagnosticId}] Security events cleanup requested...`);
  /* istanbul ignore next */
  cov_1huves6rjc().s[93]++;
  try {
    const securityService =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[94]++, req.app.locals.securityService);
    /* istanbul ignore next */
    cov_1huves6rjc().s[95]++;
    if (!securityService) {
      /* istanbul ignore next */
      cov_1huves6rjc().b[25][0]++;
      cov_1huves6rjc().s[96]++;
      return res.json(error('Security service not available', {
        diagnosticId
      }));
    } else
    /* istanbul ignore next */
    {
      cov_1huves6rjc().b[25][1]++;
    }
    const {
      olderThan =
      /* istanbul ignore next */
      (cov_1huves6rjc().b[26][0]++, 7 * 24 * 60 * 60 * 1000)
    } =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[97]++, req.body); // 7 days default

    const removedCount =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[98]++, securityService.clearOldEvents(parseInt(olderThan)));
    /* istanbul ignore next */
    cov_1huves6rjc().s[99]++;
    console.log(`🧹 [${diagnosticId}] Security events cleanup completed: ${removedCount} events removed`);
    /* istanbul ignore next */
    cov_1huves6rjc().s[100]++;
    res.json(success({
      removedCount,
      olderThan: parseInt(olderThan),
      diagnosticId,
      message: `Cleaned up ${removedCount} old security events`
    }));
  } catch (error) {
    /* istanbul ignore next */
    cov_1huves6rjc().s[101]++;
    console.error(`❌ [${diagnosticId}] Security events cleanup failed:`, error.message);
    /* istanbul ignore next */
    cov_1huves6rjc().s[102]++;
    res.json(error(error.message, {
      diagnosticId,
      operation: 'cleanup-security-events'
    }));
  }
});

/**
 * GET /api/security/threat-level
 * Current threat level assessment
 */
/* istanbul ignore next */
cov_1huves6rjc().s[103]++;
router.get('/threat-level', async (req, res) => {
  /* istanbul ignore next */
  cov_1huves6rjc().f[9]++;
  const diagnosticId =
  /* istanbul ignore next */
  (cov_1huves6rjc().s[104]++, Math.random().toString(36).substr(2, 9));
  /* istanbul ignore next */
  cov_1huves6rjc().s[105]++;
  console.log(`🎯 [${diagnosticId}] Threat level assessment requested...`);
  /* istanbul ignore next */
  cov_1huves6rjc().s[106]++;
  try {
    const securityService =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[107]++, req.app.locals.securityService);
    /* istanbul ignore next */
    cov_1huves6rjc().s[108]++;
    if (!securityService) {
      /* istanbul ignore next */
      cov_1huves6rjc().b[27][0]++;
      cov_1huves6rjc().s[109]++;
      return res.json(error('Security service not available', {
        diagnosticId
      }));
    } else
    /* istanbul ignore next */
    {
      cov_1huves6rjc().b[27][1]++;
    }
    const currentTime =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[110]++, Date.now());
    const lastHour =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[111]++, currentTime - 60 * 60 * 1000);
    const recentEvents =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[112]++, securityService.securityEvents.filter(event => {
      /* istanbul ignore next */
      cov_1huves6rjc().f[10]++;
      cov_1huves6rjc().s[113]++;
      return event.timestamp > lastHour;
    }));
    const threatAssessment =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[114]++, {
      currentLevel: securityService.threatLevel,
      lastAssessment: securityService.metrics.lastThreatAssessment,
      recentActivity: {
        totalEvents: recentEvents.length,
        criticalEvents: recentEvents.filter(e => {
          /* istanbul ignore next */
          cov_1huves6rjc().f[11]++;
          cov_1huves6rjc().s[115]++;
          return e.severity === 'critical';
        }).length,
        warningEvents: recentEvents.filter(e => {
          /* istanbul ignore next */
          cov_1huves6rjc().f[12]++;
          cov_1huves6rjc().s[116]++;
          return e.severity === 'warning';
        }).length,
        uniqueIPs: new Set(recentEvents.map(e => {
          /* istanbul ignore next */
          cov_1huves6rjc().f[13]++;
          cov_1huves6rjc().s[117]++;
          return e.sourceIP;
        })).size
      },
      trends: {
        increasing: recentEvents.length > 20,
        stable:
        /* istanbul ignore next */
        (cov_1huves6rjc().b[28][0]++, recentEvents.length >= 5) &&
        /* istanbul ignore next */
        (cov_1huves6rjc().b[28][1]++, recentEvents.length <= 20),
        decreasing: recentEvents.length < 5
      }
    });
    /* istanbul ignore next */
    cov_1huves6rjc().s[118]++;
    console.log(`🎯 [${diagnosticId}] Threat level assessment: ${threatAssessment.currentLevel}`);
    /* istanbul ignore next */
    cov_1huves6rjc().s[119]++;
    res.json(success({
      ...threatAssessment,
      diagnosticId,
      message: 'Threat level assessment retrieved successfully'
    }));
  } catch (error) {
    /* istanbul ignore next */
    cov_1huves6rjc().s[120]++;
    console.error(`❌ [${diagnosticId}] Threat level assessment failed:`, error.message);
    /* istanbul ignore next */
    cov_1huves6rjc().s[121]++;
    res.json(error(error.message, {
      diagnosticId,
      operation: 'threat-level-assessment'
    }));
  }
});

/**
 * GET /api/security/status
 * Overall security system status
 */
/* istanbul ignore next */
cov_1huves6rjc().s[122]++;
router.get('/status', async (req, res) => {
  /* istanbul ignore next */
  cov_1huves6rjc().f[14]++;
  const diagnosticId =
  /* istanbul ignore next */
  (cov_1huves6rjc().s[123]++, Math.random().toString(36).substr(2, 9));
  /* istanbul ignore next */
  cov_1huves6rjc().s[124]++;
  console.log(`🔍 [${diagnosticId}] Security system status requested...`);
  /* istanbul ignore next */
  cov_1huves6rjc().s[125]++;
  try {
    // Check for security middleware availability
    const securityService =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[126]++, req.app.locals.securityService);
    const rateLimitingMiddleware =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[127]++, req.app.locals.rateLimitingMiddleware);
    const authMiddleware =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[128]++, req.app.locals.authMiddleware);
    const status =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[129]++, {
      timestamp: Date.now(),
      diagnosticId,
      services: {
        securityService: {
          status: securityService ?
          /* istanbul ignore next */
          (cov_1huves6rjc().b[29][0]++, 'active') :
          /* istanbul ignore next */
          (cov_1huves6rjc().b[29][1]++, 'inactive'),
          threatLevel:
          /* istanbul ignore next */
          (cov_1huves6rjc().b[30][0]++, securityService?.threatLevel) ||
          /* istanbul ignore next */
          (cov_1huves6rjc().b[30][1]++, 'unknown'),
          eventCount:
          /* istanbul ignore next */
          (cov_1huves6rjc().b[31][0]++, securityService?.securityEvents?.length) ||
          /* istanbul ignore next */
          (cov_1huves6rjc().b[31][1]++, 0)
        },
        rateLimiting: {
          status: rateLimitingMiddleware ?
          /* istanbul ignore next */
          (cov_1huves6rjc().b[32][0]++, 'active') :
          /* istanbul ignore next */
          (cov_1huves6rjc().b[32][1]++, 'inactive'),
          stats:
          /* istanbul ignore next */
          (cov_1huves6rjc().b[33][0]++, rateLimitingMiddleware?.getStats()) ||
          /* istanbul ignore next */
          (cov_1huves6rjc().b[33][1]++, null)
        },
        authentication: {
          status: authMiddleware ?
          /* istanbul ignore next */
          (cov_1huves6rjc().b[34][0]++, 'active') :
          /* istanbul ignore next */
          (cov_1huves6rjc().b[34][1]++, 'inactive'),
          stats:
          /* istanbul ignore next */
          (cov_1huves6rjc().b[35][0]++, authMiddleware?.getStats()) ||
          /* istanbul ignore next */
          (cov_1huves6rjc().b[35][1]++, null)
        }
      },
      overall: 'unknown'
    });

    // Calculate overall status
    const activeServices =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[130]++, Object.values(status.services).filter(s => {
      /* istanbul ignore next */
      cov_1huves6rjc().f[15]++;
      cov_1huves6rjc().s[131]++;
      return s.status === 'active';
    }).length);
    const totalServices =
    /* istanbul ignore next */
    (cov_1huves6rjc().s[132]++, Object.keys(status.services).length);
    /* istanbul ignore next */
    cov_1huves6rjc().s[133]++;
    if (activeServices === totalServices) {
      /* istanbul ignore next */
      cov_1huves6rjc().b[36][0]++;
      cov_1huves6rjc().s[134]++;
      status.overall = 'healthy';
    } else {
      /* istanbul ignore next */
      cov_1huves6rjc().b[36][1]++;
      cov_1huves6rjc().s[135]++;
      if (activeServices > totalServices / 2) {
        /* istanbul ignore next */
        cov_1huves6rjc().b[37][0]++;
        cov_1huves6rjc().s[136]++;
        status.overall = 'degraded';
      } else {
        /* istanbul ignore next */
        cov_1huves6rjc().b[37][1]++;
        cov_1huves6rjc().s[137]++;
        status.overall = 'critical';
      }
    }
    /* istanbul ignore next */
    cov_1huves6rjc().s[138]++;
    console.log(`🔍 [${diagnosticId}] Security system status: ${status.overall}`);
    /* istanbul ignore next */
    cov_1huves6rjc().s[139]++;
    res.json(success({
      ...status,
      message: 'Security system status retrieved successfully'
    }));
  } catch (error) {
    /* istanbul ignore next */
    cov_1huves6rjc().s[140]++;
    console.error(`❌ [${diagnosticId}] Security system status failed:`, error.message);
    /* istanbul ignore next */
    cov_1huves6rjc().s[141]++;
    res.json(error(error.message, {
      diagnosticId,
      operation: 'security-system-status'
    }));
  }
});
/* istanbul ignore next */
cov_1huves6rjc().s[142]++;
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,