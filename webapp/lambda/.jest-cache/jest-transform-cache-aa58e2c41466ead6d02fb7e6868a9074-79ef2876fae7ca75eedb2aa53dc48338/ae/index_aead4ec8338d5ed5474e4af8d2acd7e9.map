{"version":3,"names":["__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__name","target","value","configurable","__export","all","name","get","enumerable","__copyProps","to","from","except","desc","key","call","__toCommonJS","mod","index_exports","AwsEc2QueryProtocol","AwsJson1_0Protocol","AwsJson1_1Protocol","AwsJsonRpcProtocol","AwsQueryProtocol","AwsRestJsonProtocol","AwsRestXmlProtocol","JsonCodec","JsonShapeDeserializer","JsonShapeSerializer","XmlCodec","XmlShapeDeserializer","XmlShapeSerializer","_toBool","_toNum","_toStr","awsExpectUnion","loadRestJsonErrorCode","loadRestXmlErrorCode","parseJsonBody","parseJsonErrorBody","parseXmlBody","parseXmlErrorBody","module","exports","val","warning","Error","console","warn","String","lowercase","toLowerCase","num","Number","toString","import_protocols","require","import_schema3","import_util_body_length_browser","SerdeContextConfig","serdeContext","setSerdeContext","import_schema","import_serde2","import_util_base64","import_serde","jsonReviver","context","source","numericString","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","isFractional","includes","NumericValue","BigInt","import_smithy_client","collectBodyString","streamBody","collectBody","then","body","utf8Encoder","encoded","length","JSON","parse","e","errorBody","message","Message","output","data","findKey","object","keys","find","k","sanitizeErrorCode","rawValue","cleanValue","indexOf","split","headerKey","headers","codeKey","constructor","settings","read","schema","_read","readObject","isObject","ns","NormalizedSchema","of","isListSchema","Array","isArray","listMember","getValueSchema","out","sparse","getMergedTraits","item","push","isMapSchema","mapMember","_k","_v","entries","isStructSchema","memberName","memberSchema","structIterator","fromKey","jsonName","deserializedValue","isBlobSchema","fromBase64","mediaType","isStringSchema","isJson","endsWith","LazyJsonString","isTimestampSchema","options","timestampFormat","format","useTrait","getSchema","SCHEMA","TIMESTAMP_DEFAULT","default","TIMESTAMP_DATE_TIME","parseRfc3339DateTimeWithOffset","TIMESTAMP_HTTP_DATE","parseRfc7231DateTime","TIMESTAMP_EPOCH_SECONDS","parseEpochTimestamp","Date","isBigIntegerSchema","isBigDecimalSchema","isNumericSchema","Infinity","NaN","import_schema2","import_serde4","import_serde5","import_serde3","NUMERIC_CONTROL_CHAR","fromCharCode","JsonReplacer","values","Map","counter","stage","createReplacer","v","string","set","s","replaceInJson","json","replace","buffer","rootSchema","write","_write","flush","isDocumentSchema","replacer","stringify","container","targetKey","serializableValue","Uint8Array","base64Encoder","toISOString","dateToUtcString","getTime","Math","abs","isNaN","createSerializer","serializer","createDeserializer","deserializer","RpcProtocol","codec","defaultNamespace","serializeRequest","operationSchema","input","request","path","assign","getJsonRpcVersion","getName","deref","calculateBodyLength","getPayloadCodec","handleError","response","dataObject","metadata","errorIdentifier","namespace","errorName","registry","TypeRegistry","for","errorSchema","baseExceptionSchema","getBaseException","ErrorCtor","ctor","exception","deserializeHttpMessage","member","$metadata","$response","$fault","error","getShapeId","import_protocols2","import_schema4","import_util_body_length_browser2","HttpBindingProtocol","httpBindings","HttpInterceptingShapeSerializer","HttpInterceptingShapeDeserializer","inputSchema","members","getMemberSchemas","httpPayloadMember","m","httpPayload","isUnitSchema","hasBody","httpQuery","httpQueryParams","httpHeader","httpLabel","httpPrefixHeaders","import_smithy_client2","__type","expectUnion","import_protocols5","import_schema7","import_util_body_length_browser3","import_protocols3","import_schema5","import_smithy_client3","import_util_utf8","import_fast_xml_parser","stringDeserializer","FromStringShapeDeserializer","bytes","memberSchemas","isEventPayload","isMemberSchema","memberNs","getMemberTraits","eventPayload","eventMemberSchema","xmlString","toUtf8","parsedObject","parseXml","readSchema","_schema","traits","flat","xmlFlattened","listValue","buffer2","sourceKey","xmlName","sourceArray","keyNs","getKeySchema","entry","keyProperty","valueProperty","value2","memberTraits","xmlObjectKey","xml","parser","XMLParser","attributeNamePrefix","htmlEntities","ignoreAttributes","ignoreDeclaration","parseTagValue","trimValues","tagValueProcessor","_","trim","addEntity","parsedObj","textNodeName","parsedObjToReturn","getValueFromTextNode","import_protocols4","import_schema6","import_serde6","import_smithy_client4","import_util_base642","QueryShapeSerializer","prefix","writeKey","writeValue","toBase64","isBooleanSchema","determineTimestampFormat","serializeEmptyLists","flattenLists","i","suffix","getKey","keySchema","keySuffix","valueSuffix","valueKey","str","capitalizeKeys","toUpperCase","slice","extendedEncodeURIComponent","xmlNamespace","serviceNamespace","version","deserializeResponse","statusCode","bytes2","byteLength","DOCUMENT","deserializeMetadata","header","awsQueryResultKey","useNestedResult","loadQueryErrorCode","errorDataSource","loadQueryError","awsQueryError","loadQueryErrorMessage","code","Errors","Code","errorData","ec2Settings","import_protocols6","import_schema9","import_util_body_length_browser4","import_smithy_client5","import_fast_xml_parser2","import_xml_builder","import_schema8","import_serde7","import_smithy_client6","import_util_base643","stringBuffer","byteBuffer","base64Decoder","writeStruct","withName","attributes","addAttribute","parentXmlns","getMemberName","structXmlNode","XmlNode","xmlnsAttr","xmlns","getXmlnsAttribute","xmlAttribute","writeSimple","writeList","writeMap","addChildNode","memberNode","writeSimpleInto","array","listTraits","listValueSchema","listValueTraits","writeItem","container2","struct","listItemNode","listNode","map","containerIsMap","mapTraits","mapKeySchema","mapKeyTraits","keyTag","mapValueSchema","mapValueTraits","valueTag","addKeyValue","keyNode","keyXmlnsAttr","keyXmlns","valueNode","mapNode","nodeContents","into","content","XmlText","filter","segment","join"],"sources":["index.js"],"sourcesContent":["\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/submodules/protocols/index.ts\nvar index_exports = {};\n__export(index_exports, {\n  AwsEc2QueryProtocol: () => AwsEc2QueryProtocol,\n  AwsJson1_0Protocol: () => AwsJson1_0Protocol,\n  AwsJson1_1Protocol: () => AwsJson1_1Protocol,\n  AwsJsonRpcProtocol: () => AwsJsonRpcProtocol,\n  AwsQueryProtocol: () => AwsQueryProtocol,\n  AwsRestJsonProtocol: () => AwsRestJsonProtocol,\n  AwsRestXmlProtocol: () => AwsRestXmlProtocol,\n  JsonCodec: () => JsonCodec,\n  JsonShapeDeserializer: () => JsonShapeDeserializer,\n  JsonShapeSerializer: () => JsonShapeSerializer,\n  XmlCodec: () => XmlCodec,\n  XmlShapeDeserializer: () => XmlShapeDeserializer,\n  XmlShapeSerializer: () => XmlShapeSerializer,\n  _toBool: () => _toBool,\n  _toNum: () => _toNum,\n  _toStr: () => _toStr,\n  awsExpectUnion: () => awsExpectUnion,\n  loadRestJsonErrorCode: () => loadRestJsonErrorCode,\n  loadRestXmlErrorCode: () => loadRestXmlErrorCode,\n  parseJsonBody: () => parseJsonBody,\n  parseJsonErrorBody: () => parseJsonErrorBody,\n  parseXmlBody: () => parseXmlBody,\n  parseXmlErrorBody: () => parseXmlErrorBody\n});\nmodule.exports = __toCommonJS(index_exports);\n\n// src/submodules/protocols/coercing-serializers.ts\nvar _toStr = /* @__PURE__ */ __name((val) => {\n  if (val == null) {\n    return val;\n  }\n  if (typeof val === \"number\" || typeof val === \"bigint\") {\n    const warning = new Error(`Received number ${val} where a string was expected.`);\n    warning.name = \"Warning\";\n    console.warn(warning);\n    return String(val);\n  }\n  if (typeof val === \"boolean\") {\n    const warning = new Error(`Received boolean ${val} where a string was expected.`);\n    warning.name = \"Warning\";\n    console.warn(warning);\n    return String(val);\n  }\n  return val;\n}, \"_toStr\");\nvar _toBool = /* @__PURE__ */ __name((val) => {\n  if (val == null) {\n    return val;\n  }\n  if (typeof val === \"number\") {\n  }\n  if (typeof val === \"string\") {\n    const lowercase = val.toLowerCase();\n    if (val !== \"\" && lowercase !== \"false\" && lowercase !== \"true\") {\n      const warning = new Error(`Received string \"${val}\" where a boolean was expected.`);\n      warning.name = \"Warning\";\n      console.warn(warning);\n    }\n    return val !== \"\" && lowercase !== \"false\";\n  }\n  return val;\n}, \"_toBool\");\nvar _toNum = /* @__PURE__ */ __name((val) => {\n  if (val == null) {\n    return val;\n  }\n  if (typeof val === \"boolean\") {\n  }\n  if (typeof val === \"string\") {\n    const num = Number(val);\n    if (num.toString() !== val) {\n      const warning = new Error(`Received string \"${val}\" where a number was expected.`);\n      warning.name = \"Warning\";\n      console.warn(warning);\n      return val;\n    }\n    return num;\n  }\n  return val;\n}, \"_toNum\");\n\n// src/submodules/protocols/json/AwsJsonRpcProtocol.ts\nvar import_protocols = require(\"@smithy/core/protocols\");\nvar import_schema3 = require(\"@smithy/core/schema\");\nvar import_util_body_length_browser = require(\"@smithy/util-body-length-browser\");\n\n// src/submodules/protocols/ConfigurableSerdeContext.ts\nvar SerdeContextConfig = class {\n  static {\n    __name(this, \"SerdeContextConfig\");\n  }\n  serdeContext;\n  setSerdeContext(serdeContext) {\n    this.serdeContext = serdeContext;\n  }\n};\n\n// src/submodules/protocols/json/JsonShapeDeserializer.ts\nvar import_schema = require(\"@smithy/core/schema\");\nvar import_serde2 = require(\"@smithy/core/serde\");\nvar import_util_base64 = require(\"@smithy/util-base64\");\n\n// src/submodules/protocols/json/jsonReviver.ts\nvar import_serde = require(\"@smithy/core/serde\");\nfunction jsonReviver(key, value, context) {\n  if (context?.source) {\n    const numericString = context.source;\n    if (typeof value === \"number\") {\n      if (value > Number.MAX_SAFE_INTEGER || value < Number.MIN_SAFE_INTEGER || numericString !== String(value)) {\n        const isFractional = numericString.includes(\".\");\n        if (isFractional) {\n          return new import_serde.NumericValue(numericString, \"bigDecimal\");\n        } else {\n          return BigInt(numericString);\n        }\n      }\n    }\n  }\n  return value;\n}\n__name(jsonReviver, \"jsonReviver\");\n\n// src/submodules/protocols/common.ts\nvar import_smithy_client = require(\"@smithy/smithy-client\");\nvar collectBodyString = /* @__PURE__ */ __name((streamBody, context) => (0, import_smithy_client.collectBody)(streamBody, context).then((body) => context.utf8Encoder(body)), \"collectBodyString\");\n\n// src/submodules/protocols/json/parseJsonBody.ts\nvar parseJsonBody = /* @__PURE__ */ __name((streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n  if (encoded.length) {\n    try {\n      return JSON.parse(encoded);\n    } catch (e) {\n      if (e?.name === \"SyntaxError\") {\n        Object.defineProperty(e, \"$responseBodyText\", {\n          value: encoded\n        });\n      }\n      throw e;\n    }\n  }\n  return {};\n}), \"parseJsonBody\");\nvar parseJsonErrorBody = /* @__PURE__ */ __name(async (errorBody, context) => {\n  const value = await parseJsonBody(errorBody, context);\n  value.message = value.message ?? value.Message;\n  return value;\n}, \"parseJsonErrorBody\");\nvar loadRestJsonErrorCode = /* @__PURE__ */ __name((output, data) => {\n  const findKey = /* @__PURE__ */ __name((object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase()), \"findKey\");\n  const sanitizeErrorCode = /* @__PURE__ */ __name((rawValue) => {\n    let cleanValue = rawValue;\n    if (typeof cleanValue === \"number\") {\n      cleanValue = cleanValue.toString();\n    }\n    if (cleanValue.indexOf(\",\") >= 0) {\n      cleanValue = cleanValue.split(\",\")[0];\n    }\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  }, \"sanitizeErrorCode\");\n  const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== void 0) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n  if (data && typeof data === \"object\") {\n    const codeKey = findKey(data, \"code\");\n    if (codeKey && data[codeKey] !== void 0) {\n      return sanitizeErrorCode(data[codeKey]);\n    }\n    if (data[\"__type\"] !== void 0) {\n      return sanitizeErrorCode(data[\"__type\"]);\n    }\n  }\n}, \"loadRestJsonErrorCode\");\n\n// src/submodules/protocols/json/JsonShapeDeserializer.ts\nvar JsonShapeDeserializer = class extends SerdeContextConfig {\n  constructor(settings) {\n    super();\n    this.settings = settings;\n  }\n  static {\n    __name(this, \"JsonShapeDeserializer\");\n  }\n  async read(schema, data) {\n    return this._read(\n      schema,\n      typeof data === \"string\" ? JSON.parse(data, jsonReviver) : await parseJsonBody(data, this.serdeContext)\n    );\n  }\n  readObject(schema, data) {\n    return this._read(schema, data);\n  }\n  _read(schema, value) {\n    const isObject = value !== null && typeof value === \"object\";\n    const ns = import_schema.NormalizedSchema.of(schema);\n    if (ns.isListSchema() && Array.isArray(value)) {\n      const listMember = ns.getValueSchema();\n      const out = [];\n      const sparse = !!ns.getMergedTraits().sparse;\n      for (const item of value) {\n        if (sparse || item != null) {\n          out.push(this._read(listMember, item));\n        }\n      }\n      return out;\n    } else if (ns.isMapSchema() && isObject) {\n      const mapMember = ns.getValueSchema();\n      const out = {};\n      const sparse = !!ns.getMergedTraits().sparse;\n      for (const [_k, _v] of Object.entries(value)) {\n        if (sparse || _v != null) {\n          out[_k] = this._read(mapMember, _v);\n        }\n      }\n      return out;\n    } else if (ns.isStructSchema() && isObject) {\n      const out = {};\n      for (const [memberName, memberSchema] of ns.structIterator()) {\n        const fromKey = this.settings.jsonName ? memberSchema.getMergedTraits().jsonName ?? memberName : memberName;\n        const deserializedValue = this._read(memberSchema, value[fromKey]);\n        if (deserializedValue != null) {\n          out[memberName] = deserializedValue;\n        }\n      }\n      return out;\n    }\n    if (ns.isBlobSchema() && typeof value === \"string\") {\n      return (0, import_util_base64.fromBase64)(value);\n    }\n    const mediaType = ns.getMergedTraits().mediaType;\n    if (ns.isStringSchema() && typeof value === \"string\" && mediaType) {\n      const isJson = mediaType === \"application/json\" || mediaType.endsWith(\"+json\");\n      if (isJson) {\n        return import_serde2.LazyJsonString.from(value);\n      }\n    }\n    if (ns.isTimestampSchema()) {\n      const options = this.settings.timestampFormat;\n      const format = options.useTrait ? ns.getSchema() === import_schema.SCHEMA.TIMESTAMP_DEFAULT ? options.default : ns.getSchema() ?? options.default : options.default;\n      switch (format) {\n        case import_schema.SCHEMA.TIMESTAMP_DATE_TIME:\n          return (0, import_serde2.parseRfc3339DateTimeWithOffset)(value);\n        case import_schema.SCHEMA.TIMESTAMP_HTTP_DATE:\n          return (0, import_serde2.parseRfc7231DateTime)(value);\n        case import_schema.SCHEMA.TIMESTAMP_EPOCH_SECONDS:\n          return (0, import_serde2.parseEpochTimestamp)(value);\n        default:\n          console.warn(\"Missing timestamp format, parsing value with Date constructor:\", value);\n          return new Date(value);\n      }\n    }\n    if (ns.isBigIntegerSchema() && (typeof value === \"number\" || typeof value === \"string\")) {\n      return BigInt(value);\n    }\n    if (ns.isBigDecimalSchema() && value != void 0) {\n      if (value instanceof import_serde2.NumericValue) {\n        return value;\n      }\n      return new import_serde2.NumericValue(String(value), \"bigDecimal\");\n    }\n    if (ns.isNumericSchema() && typeof value === \"string\") {\n      switch (value) {\n        case \"Infinity\":\n          return Infinity;\n        case \"-Infinity\":\n          return -Infinity;\n        case \"NaN\":\n          return NaN;\n      }\n    }\n    return value;\n  }\n};\n\n// src/submodules/protocols/json/JsonShapeSerializer.ts\nvar import_schema2 = require(\"@smithy/core/schema\");\nvar import_serde4 = require(\"@smithy/core/serde\");\nvar import_serde5 = require(\"@smithy/core/serde\");\n\n// src/submodules/protocols/json/jsonReplacer.ts\nvar import_serde3 = require(\"@smithy/core/serde\");\nvar NUMERIC_CONTROL_CHAR = String.fromCharCode(925);\nvar JsonReplacer = class {\n  static {\n    __name(this, \"JsonReplacer\");\n  }\n  /**\n   * Stores placeholder key to true serialized value lookup.\n   */\n  values = /* @__PURE__ */ new Map();\n  counter = 0;\n  stage = 0;\n  /**\n   * Creates a jsonReplacer function that reserves big integer and big decimal values\n   * for later replacement.\n   */\n  createReplacer() {\n    if (this.stage === 1) {\n      throw new Error(\"@aws-sdk/core/protocols - JsonReplacer already created.\");\n    }\n    if (this.stage === 2) {\n      throw new Error(\"@aws-sdk/core/protocols - JsonReplacer exhausted.\");\n    }\n    this.stage = 1;\n    return (key, value) => {\n      if (value instanceof import_serde3.NumericValue) {\n        const v = `${NUMERIC_CONTROL_CHAR + +\"nv\" + this.counter++}_` + value.string;\n        this.values.set(`\"${v}\"`, value.string);\n        return v;\n      }\n      if (typeof value === \"bigint\") {\n        const s = value.toString();\n        const v = `${NUMERIC_CONTROL_CHAR + \"b\" + this.counter++}_` + s;\n        this.values.set(`\"${v}\"`, s);\n        return v;\n      }\n      return value;\n    };\n  }\n  /**\n   * Replaces placeholder keys with their true values.\n   */\n  replaceInJson(json) {\n    if (this.stage === 0) {\n      throw new Error(\"@aws-sdk/core/protocols - JsonReplacer not created yet.\");\n    }\n    if (this.stage === 2) {\n      throw new Error(\"@aws-sdk/core/protocols - JsonReplacer exhausted.\");\n    }\n    this.stage = 2;\n    if (this.counter === 0) {\n      return json;\n    }\n    for (const [key, value] of this.values) {\n      json = json.replace(key, value);\n    }\n    return json;\n  }\n};\n\n// src/submodules/protocols/json/JsonShapeSerializer.ts\nvar JsonShapeSerializer = class extends SerdeContextConfig {\n  constructor(settings) {\n    super();\n    this.settings = settings;\n  }\n  static {\n    __name(this, \"JsonShapeSerializer\");\n  }\n  buffer;\n  rootSchema;\n  write(schema, value) {\n    this.rootSchema = import_schema2.NormalizedSchema.of(schema);\n    this.buffer = this._write(this.rootSchema, value);\n  }\n  flush() {\n    if (this.rootSchema?.isStructSchema() || this.rootSchema?.isDocumentSchema()) {\n      const replacer = new JsonReplacer();\n      return replacer.replaceInJson(JSON.stringify(this.buffer, replacer.createReplacer(), 0));\n    }\n    return this.buffer;\n  }\n  _write(schema, value, container) {\n    const isObject = value !== null && typeof value === \"object\";\n    const ns = import_schema2.NormalizedSchema.of(schema);\n    if (ns.isListSchema() && Array.isArray(value)) {\n      const listMember = ns.getValueSchema();\n      const out = [];\n      const sparse = !!ns.getMergedTraits().sparse;\n      for (const item of value) {\n        if (sparse || item != null) {\n          out.push(this._write(listMember, item));\n        }\n      }\n      return out;\n    } else if (ns.isMapSchema() && isObject) {\n      const mapMember = ns.getValueSchema();\n      const out = {};\n      const sparse = !!ns.getMergedTraits().sparse;\n      for (const [_k, _v] of Object.entries(value)) {\n        if (sparse || _v != null) {\n          out[_k] = this._write(mapMember, _v);\n        }\n      }\n      return out;\n    } else if (ns.isStructSchema() && isObject) {\n      const out = {};\n      for (const [memberName, memberSchema] of ns.structIterator()) {\n        const targetKey = this.settings.jsonName ? memberSchema.getMergedTraits().jsonName ?? memberName : memberName;\n        const serializableValue = this._write(memberSchema, value[memberName], ns);\n        if (serializableValue !== void 0) {\n          out[targetKey] = serializableValue;\n        }\n      }\n      return out;\n    }\n    if (value === null && container?.isStructSchema()) {\n      return void 0;\n    }\n    if (ns.isBlobSchema() && (value instanceof Uint8Array || typeof value === \"string\")) {\n      if (ns === this.rootSchema) {\n        return value;\n      }\n      if (!this.serdeContext?.base64Encoder) {\n        throw new Error(\"Missing base64Encoder in serdeContext\");\n      }\n      return this.serdeContext?.base64Encoder(value);\n    }\n    if (ns.isTimestampSchema() && value instanceof Date) {\n      const options = this.settings.timestampFormat;\n      const format = options.useTrait ? ns.getSchema() === import_schema2.SCHEMA.TIMESTAMP_DEFAULT ? options.default : ns.getSchema() ?? options.default : options.default;\n      switch (format) {\n        case import_schema2.SCHEMA.TIMESTAMP_DATE_TIME:\n          return value.toISOString().replace(\".000Z\", \"Z\");\n        case import_schema2.SCHEMA.TIMESTAMP_HTTP_DATE:\n          return (0, import_serde4.dateToUtcString)(value);\n        case import_schema2.SCHEMA.TIMESTAMP_EPOCH_SECONDS:\n          return value.getTime() / 1e3;\n        default:\n          console.warn(\"Missing timestamp format, using epoch seconds\", value);\n          return value.getTime() / 1e3;\n      }\n    }\n    if (ns.isNumericSchema() && typeof value === \"number\") {\n      if (Math.abs(value) === Infinity || isNaN(value)) {\n        return String(value);\n      }\n    }\n    const mediaType = ns.getMergedTraits().mediaType;\n    if (ns.isStringSchema() && typeof value === \"string\" && mediaType) {\n      const isJson = mediaType === \"application/json\" || mediaType.endsWith(\"+json\");\n      if (isJson) {\n        return import_serde5.LazyJsonString.from(value);\n      }\n    }\n    return value;\n  }\n};\n\n// src/submodules/protocols/json/JsonCodec.ts\nvar JsonCodec = class extends SerdeContextConfig {\n  constructor(settings) {\n    super();\n    this.settings = settings;\n  }\n  static {\n    __name(this, \"JsonCodec\");\n  }\n  createSerializer() {\n    const serializer = new JsonShapeSerializer(this.settings);\n    serializer.setSerdeContext(this.serdeContext);\n    return serializer;\n  }\n  createDeserializer() {\n    const deserializer = new JsonShapeDeserializer(this.settings);\n    deserializer.setSerdeContext(this.serdeContext);\n    return deserializer;\n  }\n};\n\n// src/submodules/protocols/json/AwsJsonRpcProtocol.ts\nvar AwsJsonRpcProtocol = class extends import_protocols.RpcProtocol {\n  static {\n    __name(this, \"AwsJsonRpcProtocol\");\n  }\n  serializer;\n  deserializer;\n  codec;\n  constructor({ defaultNamespace }) {\n    super({\n      defaultNamespace\n    });\n    this.codec = new JsonCodec({\n      timestampFormat: {\n        useTrait: true,\n        default: import_schema3.SCHEMA.TIMESTAMP_EPOCH_SECONDS\n      },\n      jsonName: false\n    });\n    this.serializer = this.codec.createSerializer();\n    this.deserializer = this.codec.createDeserializer();\n  }\n  async serializeRequest(operationSchema, input, context) {\n    const request = await super.serializeRequest(operationSchema, input, context);\n    if (!request.path.endsWith(\"/\")) {\n      request.path += \"/\";\n    }\n    Object.assign(request.headers, {\n      \"content-type\": `application/x-amz-json-${this.getJsonRpcVersion()}`,\n      \"x-amz-target\": (this.getJsonRpcVersion() === \"1.0\" ? `JsonRpc10.` : `JsonProtocol.`) + import_schema3.NormalizedSchema.of(operationSchema).getName()\n    });\n    if ((0, import_schema3.deref)(operationSchema.input) === \"unit\" || !request.body) {\n      request.body = \"{}\";\n    }\n    try {\n      request.headers[\"content-length\"] = String((0, import_util_body_length_browser.calculateBodyLength)(request.body));\n    } catch (e) {\n    }\n    return request;\n  }\n  getPayloadCodec() {\n    return this.codec;\n  }\n  async handleError(operationSchema, context, response, dataObject, metadata) {\n    const errorIdentifier = loadRestJsonErrorCode(response, dataObject) ?? \"Unknown\";\n    let namespace = this.options.defaultNamespace;\n    let errorName = errorIdentifier;\n    if (errorIdentifier.includes(\"#\")) {\n      [namespace, errorName] = errorIdentifier.split(\"#\");\n    }\n    const registry = import_schema3.TypeRegistry.for(namespace);\n    let errorSchema;\n    try {\n      errorSchema = registry.getSchema(errorIdentifier);\n    } catch (e) {\n      const baseExceptionSchema = import_schema3.TypeRegistry.for(\"smithy.ts.sdk.synthetic.\" + namespace).getBaseException();\n      if (baseExceptionSchema) {\n        const ErrorCtor = baseExceptionSchema.ctor;\n        throw Object.assign(new ErrorCtor(errorName), dataObject);\n      }\n      throw new Error(errorName);\n    }\n    const ns = import_schema3.NormalizedSchema.of(errorSchema);\n    const message = dataObject.message ?? dataObject.Message ?? \"Unknown\";\n    const exception = new errorSchema.ctor(message);\n    await this.deserializeHttpMessage(errorSchema, context, response, dataObject);\n    const output = {};\n    for (const [name, member] of ns.structIterator()) {\n      const target = member.getMergedTraits().jsonName ?? name;\n      output[name] = this.codec.createDeserializer().readObject(member, dataObject[target]);\n    }\n    Object.assign(exception, {\n      $metadata: metadata,\n      $response: response,\n      $fault: ns.getMergedTraits().error,\n      message,\n      ...output\n    });\n    throw exception;\n  }\n};\n\n// src/submodules/protocols/json/AwsJson1_0Protocol.ts\nvar AwsJson1_0Protocol = class extends AwsJsonRpcProtocol {\n  static {\n    __name(this, \"AwsJson1_0Protocol\");\n  }\n  constructor({ defaultNamespace }) {\n    super({\n      defaultNamespace\n    });\n  }\n  getShapeId() {\n    return \"aws.protocols#awsJson1_0\";\n  }\n  getJsonRpcVersion() {\n    return \"1.0\";\n  }\n};\n\n// src/submodules/protocols/json/AwsJson1_1Protocol.ts\nvar AwsJson1_1Protocol = class extends AwsJsonRpcProtocol {\n  static {\n    __name(this, \"AwsJson1_1Protocol\");\n  }\n  constructor({ defaultNamespace }) {\n    super({\n      defaultNamespace\n    });\n  }\n  getShapeId() {\n    return \"aws.protocols#awsJson1_1\";\n  }\n  getJsonRpcVersion() {\n    return \"1.1\";\n  }\n};\n\n// src/submodules/protocols/json/AwsRestJsonProtocol.ts\nvar import_protocols2 = require(\"@smithy/core/protocols\");\nvar import_schema4 = require(\"@smithy/core/schema\");\nvar import_util_body_length_browser2 = require(\"@smithy/util-body-length-browser\");\nvar AwsRestJsonProtocol = class extends import_protocols2.HttpBindingProtocol {\n  static {\n    __name(this, \"AwsRestJsonProtocol\");\n  }\n  serializer;\n  deserializer;\n  codec;\n  constructor({ defaultNamespace }) {\n    super({\n      defaultNamespace\n    });\n    const settings = {\n      timestampFormat: {\n        useTrait: true,\n        default: import_schema4.SCHEMA.TIMESTAMP_EPOCH_SECONDS\n      },\n      httpBindings: true,\n      jsonName: true\n    };\n    this.codec = new JsonCodec(settings);\n    this.serializer = new import_protocols2.HttpInterceptingShapeSerializer(this.codec.createSerializer(), settings);\n    this.deserializer = new import_protocols2.HttpInterceptingShapeDeserializer(this.codec.createDeserializer(), settings);\n  }\n  getShapeId() {\n    return \"aws.protocols#restJson1\";\n  }\n  getPayloadCodec() {\n    return this.codec;\n  }\n  setSerdeContext(serdeContext) {\n    this.codec.setSerdeContext(serdeContext);\n    super.setSerdeContext(serdeContext);\n  }\n  async serializeRequest(operationSchema, input, context) {\n    const request = await super.serializeRequest(operationSchema, input, context);\n    const inputSchema = import_schema4.NormalizedSchema.of(operationSchema.input);\n    const members = inputSchema.getMemberSchemas();\n    if (!request.headers[\"content-type\"]) {\n      const httpPayloadMember = Object.values(members).find((m) => {\n        return !!m.getMergedTraits().httpPayload;\n      });\n      if (httpPayloadMember) {\n        const mediaType = httpPayloadMember.getMergedTraits().mediaType;\n        if (mediaType) {\n          request.headers[\"content-type\"] = mediaType;\n        } else if (httpPayloadMember.isStringSchema()) {\n          request.headers[\"content-type\"] = \"text/plain\";\n        } else if (httpPayloadMember.isBlobSchema()) {\n          request.headers[\"content-type\"] = \"application/octet-stream\";\n        } else {\n          request.headers[\"content-type\"] = \"application/json\";\n        }\n      } else if (!inputSchema.isUnitSchema()) {\n        const hasBody = Object.values(members).find((m) => {\n          const { httpQuery, httpQueryParams, httpHeader, httpLabel, httpPrefixHeaders } = m.getMergedTraits();\n          return !httpQuery && !httpQueryParams && !httpHeader && !httpLabel && httpPrefixHeaders === void 0;\n        });\n        if (hasBody) {\n          request.headers[\"content-type\"] = \"application/json\";\n        }\n      }\n    }\n    if (request.headers[\"content-type\"] && !request.body) {\n      request.body = \"{}\";\n    }\n    if (request.body) {\n      try {\n        request.headers[\"content-length\"] = String((0, import_util_body_length_browser2.calculateBodyLength)(request.body));\n      } catch (e) {\n      }\n    }\n    return request;\n  }\n  async handleError(operationSchema, context, response, dataObject, metadata) {\n    const errorIdentifier = loadRestJsonErrorCode(response, dataObject) ?? \"Unknown\";\n    let namespace = this.options.defaultNamespace;\n    let errorName = errorIdentifier;\n    if (errorIdentifier.includes(\"#\")) {\n      [namespace, errorName] = errorIdentifier.split(\"#\");\n    }\n    const registry = import_schema4.TypeRegistry.for(namespace);\n    let errorSchema;\n    try {\n      errorSchema = registry.getSchema(errorIdentifier);\n    } catch (e) {\n      const baseExceptionSchema = import_schema4.TypeRegistry.for(\"smithy.ts.sdk.synthetic.\" + namespace).getBaseException();\n      if (baseExceptionSchema) {\n        const ErrorCtor = baseExceptionSchema.ctor;\n        throw Object.assign(new ErrorCtor(errorName), dataObject);\n      }\n      throw new Error(errorName);\n    }\n    const ns = import_schema4.NormalizedSchema.of(errorSchema);\n    const message = dataObject.message ?? dataObject.Message ?? \"Unknown\";\n    const exception = new errorSchema.ctor(message);\n    await this.deserializeHttpMessage(errorSchema, context, response, dataObject);\n    const output = {};\n    for (const [name, member] of ns.structIterator()) {\n      const target = member.getMergedTraits().jsonName ?? name;\n      output[name] = this.codec.createDeserializer().readObject(member, dataObject[target]);\n    }\n    Object.assign(exception, {\n      $metadata: metadata,\n      $response: response,\n      $fault: ns.getMergedTraits().error,\n      message,\n      ...output\n    });\n    throw exception;\n  }\n};\n\n// src/submodules/protocols/json/awsExpectUnion.ts\nvar import_smithy_client2 = require(\"@smithy/smithy-client\");\nvar awsExpectUnion = /* @__PURE__ */ __name((value) => {\n  if (value == null) {\n    return void 0;\n  }\n  if (typeof value === \"object\" && \"__type\" in value) {\n    delete value.__type;\n  }\n  return (0, import_smithy_client2.expectUnion)(value);\n}, \"awsExpectUnion\");\n\n// src/submodules/protocols/query/AwsQueryProtocol.ts\nvar import_protocols5 = require(\"@smithy/core/protocols\");\nvar import_schema7 = require(\"@smithy/core/schema\");\nvar import_util_body_length_browser3 = require(\"@smithy/util-body-length-browser\");\n\n// src/submodules/protocols/xml/XmlShapeDeserializer.ts\nvar import_protocols3 = require(\"@smithy/core/protocols\");\nvar import_schema5 = require(\"@smithy/core/schema\");\nvar import_smithy_client3 = require(\"@smithy/smithy-client\");\nvar import_util_utf8 = require(\"@smithy/util-utf8\");\nvar import_fast_xml_parser = require(\"fast-xml-parser\");\nvar XmlShapeDeserializer = class extends SerdeContextConfig {\n  constructor(settings) {\n    super();\n    this.settings = settings;\n    this.stringDeserializer = new import_protocols3.FromStringShapeDeserializer(settings);\n  }\n  static {\n    __name(this, \"XmlShapeDeserializer\");\n  }\n  stringDeserializer;\n  setSerdeContext(serdeContext) {\n    this.serdeContext = serdeContext;\n    this.stringDeserializer.setSerdeContext(serdeContext);\n  }\n  /**\n   * @param schema - describing the data.\n   * @param bytes - serialized data.\n   * @param key - used by AwsQuery to step one additional depth into the object before reading it.\n   */\n  read(schema, bytes, key) {\n    const ns = import_schema5.NormalizedSchema.of(schema);\n    const memberSchemas = ns.getMemberSchemas();\n    const isEventPayload = ns.isStructSchema() && ns.isMemberSchema() && !!Object.values(memberSchemas).find((memberNs) => {\n      return !!memberNs.getMemberTraits().eventPayload;\n    });\n    if (isEventPayload) {\n      const output = {};\n      const memberName = Object.keys(memberSchemas)[0];\n      const eventMemberSchema = memberSchemas[memberName];\n      if (eventMemberSchema.isBlobSchema()) {\n        output[memberName] = bytes;\n      } else {\n        output[memberName] = this.read(memberSchemas[memberName], bytes);\n      }\n      return output;\n    }\n    const xmlString = (this.serdeContext?.utf8Encoder ?? import_util_utf8.toUtf8)(bytes);\n    const parsedObject = this.parseXml(xmlString);\n    return this.readSchema(schema, key ? parsedObject[key] : parsedObject);\n  }\n  readSchema(_schema, value) {\n    const ns = import_schema5.NormalizedSchema.of(_schema);\n    const traits = ns.getMergedTraits();\n    if (ns.isListSchema() && !Array.isArray(value)) {\n      return this.readSchema(ns, [value]);\n    }\n    if (value == null) {\n      return value;\n    }\n    if (typeof value === \"object\") {\n      const sparse = !!traits.sparse;\n      const flat = !!traits.xmlFlattened;\n      if (ns.isListSchema()) {\n        const listValue = ns.getValueSchema();\n        const buffer2 = [];\n        const sourceKey = listValue.getMergedTraits().xmlName ?? \"member\";\n        const source = flat ? value : (value[0] ?? value)[sourceKey];\n        const sourceArray = Array.isArray(source) ? source : [source];\n        for (const v of sourceArray) {\n          if (v != null || sparse) {\n            buffer2.push(this.readSchema(listValue, v));\n          }\n        }\n        return buffer2;\n      }\n      const buffer = {};\n      if (ns.isMapSchema()) {\n        const keyNs = ns.getKeySchema();\n        const memberNs = ns.getValueSchema();\n        let entries;\n        if (flat) {\n          entries = Array.isArray(value) ? value : [value];\n        } else {\n          entries = Array.isArray(value.entry) ? value.entry : [value.entry];\n        }\n        const keyProperty = keyNs.getMergedTraits().xmlName ?? \"key\";\n        const valueProperty = memberNs.getMergedTraits().xmlName ?? \"value\";\n        for (const entry of entries) {\n          const key = entry[keyProperty];\n          const value2 = entry[valueProperty];\n          if (value2 != null || sparse) {\n            buffer[key] = this.readSchema(memberNs, value2);\n          }\n        }\n        return buffer;\n      }\n      if (ns.isStructSchema()) {\n        for (const [memberName, memberSchema] of ns.structIterator()) {\n          const memberTraits = memberSchema.getMergedTraits();\n          const xmlObjectKey = !memberTraits.httpPayload ? memberSchema.getMemberTraits().xmlName ?? memberName : memberTraits.xmlName ?? memberSchema.getName();\n          if (value[xmlObjectKey] != null) {\n            buffer[memberName] = this.readSchema(memberSchema, value[xmlObjectKey]);\n          }\n        }\n        return buffer;\n      }\n      if (ns.isDocumentSchema()) {\n        return value;\n      }\n      throw new Error(`@aws-sdk/core/protocols - xml deserializer unhandled schema type for ${ns.getName(true)}`);\n    }\n    if (ns.isListSchema()) {\n      return [];\n    }\n    if (ns.isMapSchema() || ns.isStructSchema()) {\n      return {};\n    }\n    return this.stringDeserializer.read(ns, value);\n  }\n  parseXml(xml) {\n    if (xml.length) {\n      const parser = new import_fast_xml_parser.XMLParser({\n        attributeNamePrefix: \"\",\n        htmlEntities: true,\n        ignoreAttributes: false,\n        ignoreDeclaration: true,\n        parseTagValue: false,\n        trimValues: false,\n        tagValueProcessor: /* @__PURE__ */ __name((_, val) => val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : void 0, \"tagValueProcessor\")\n      });\n      parser.addEntity(\"#xD\", \"\\r\");\n      parser.addEntity(\"#10\", \"\\n\");\n      let parsedObj;\n      try {\n        parsedObj = parser.parse(xml, true);\n      } catch (e) {\n        if (e && typeof e === \"object\") {\n          Object.defineProperty(e, \"$responseBodyText\", {\n            value: xml\n          });\n        }\n        throw e;\n      }\n      const textNodeName = \"#text\";\n      const key = Object.keys(parsedObj)[0];\n      const parsedObjToReturn = parsedObj[key];\n      if (parsedObjToReturn[textNodeName]) {\n        parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n        delete parsedObjToReturn[textNodeName];\n      }\n      return (0, import_smithy_client3.getValueFromTextNode)(parsedObjToReturn);\n    }\n    return {};\n  }\n};\n\n// src/submodules/protocols/query/QueryShapeSerializer.ts\nvar import_protocols4 = require(\"@smithy/core/protocols\");\nvar import_schema6 = require(\"@smithy/core/schema\");\nvar import_serde6 = require(\"@smithy/core/serde\");\nvar import_smithy_client4 = require(\"@smithy/smithy-client\");\nvar import_util_base642 = require(\"@smithy/util-base64\");\nvar QueryShapeSerializer = class extends SerdeContextConfig {\n  constructor(settings) {\n    super();\n    this.settings = settings;\n  }\n  static {\n    __name(this, \"QueryShapeSerializer\");\n  }\n  buffer;\n  write(schema, value, prefix = \"\") {\n    if (this.buffer === void 0) {\n      this.buffer = \"\";\n    }\n    const ns = import_schema6.NormalizedSchema.of(schema);\n    if (prefix && !prefix.endsWith(\".\")) {\n      prefix += \".\";\n    }\n    if (ns.isBlobSchema()) {\n      if (typeof value === \"string\" || value instanceof Uint8Array) {\n        this.writeKey(prefix);\n        this.writeValue((this.serdeContext?.base64Encoder ?? import_util_base642.toBase64)(value));\n      }\n    } else if (ns.isBooleanSchema() || ns.isNumericSchema() || ns.isStringSchema()) {\n      if (value != null) {\n        this.writeKey(prefix);\n        this.writeValue(String(value));\n      }\n    } else if (ns.isBigIntegerSchema()) {\n      if (value != null) {\n        this.writeKey(prefix);\n        this.writeValue(String(value));\n      }\n    } else if (ns.isBigDecimalSchema()) {\n      if (value != null) {\n        this.writeKey(prefix);\n        this.writeValue(value instanceof import_serde6.NumericValue ? value.string : String(value));\n      }\n    } else if (ns.isTimestampSchema()) {\n      if (value instanceof Date) {\n        this.writeKey(prefix);\n        const format = (0, import_protocols4.determineTimestampFormat)(ns, this.settings);\n        switch (format) {\n          case import_schema6.SCHEMA.TIMESTAMP_DATE_TIME:\n            this.writeValue(value.toISOString().replace(\".000Z\", \"Z\"));\n            break;\n          case import_schema6.SCHEMA.TIMESTAMP_HTTP_DATE:\n            this.writeValue((0, import_smithy_client4.dateToUtcString)(value));\n            break;\n          case import_schema6.SCHEMA.TIMESTAMP_EPOCH_SECONDS:\n            this.writeValue(String(value.getTime() / 1e3));\n            break;\n        }\n      }\n    } else if (ns.isDocumentSchema()) {\n      throw new Error(`@aws-sdk/core/protocols - QuerySerializer unsupported document type ${ns.getName(true)}`);\n    } else if (ns.isListSchema()) {\n      if (Array.isArray(value)) {\n        if (value.length === 0) {\n          if (this.settings.serializeEmptyLists) {\n            this.writeKey(prefix);\n            this.writeValue(\"\");\n          }\n        } else {\n          const member = ns.getValueSchema();\n          const flat = this.settings.flattenLists || ns.getMergedTraits().xmlFlattened;\n          let i = 1;\n          for (const item of value) {\n            if (item == null) {\n              continue;\n            }\n            const suffix = this.getKey(\"member\", member.getMergedTraits().xmlName);\n            const key = flat ? `${prefix}${i}` : `${prefix}${suffix}.${i}`;\n            this.write(member, item, key);\n            ++i;\n          }\n        }\n      }\n    } else if (ns.isMapSchema()) {\n      if (value && typeof value === \"object\") {\n        const keySchema = ns.getKeySchema();\n        const memberSchema = ns.getValueSchema();\n        const flat = ns.getMergedTraits().xmlFlattened;\n        let i = 1;\n        for (const [k, v] of Object.entries(value)) {\n          if (v == null) {\n            continue;\n          }\n          const keySuffix = this.getKey(\"key\", keySchema.getMergedTraits().xmlName);\n          const key = flat ? `${prefix}${i}.${keySuffix}` : `${prefix}entry.${i}.${keySuffix}`;\n          const valueSuffix = this.getKey(\"value\", memberSchema.getMergedTraits().xmlName);\n          const valueKey = flat ? `${prefix}${i}.${valueSuffix}` : `${prefix}entry.${i}.${valueSuffix}`;\n          this.write(keySchema, k, key);\n          this.write(memberSchema, v, valueKey);\n          ++i;\n        }\n      }\n    } else if (ns.isStructSchema()) {\n      if (value && typeof value === \"object\") {\n        for (const [memberName, member] of ns.structIterator()) {\n          if (value[memberName] == null) {\n            continue;\n          }\n          const suffix = this.getKey(memberName, member.getMergedTraits().xmlName);\n          const key = `${prefix}${suffix}`;\n          this.write(member, value[memberName], key);\n        }\n      }\n    } else if (ns.isUnitSchema()) {\n    } else {\n      throw new Error(`@aws-sdk/core/protocols - QuerySerializer unrecognized schema type ${ns.getName(true)}`);\n    }\n  }\n  flush() {\n    if (this.buffer === void 0) {\n      throw new Error(\"@aws-sdk/core/protocols - QuerySerializer cannot flush with nothing written to buffer.\");\n    }\n    const str = this.buffer;\n    delete this.buffer;\n    return str;\n  }\n  getKey(memberName, xmlName) {\n    const key = xmlName ?? memberName;\n    if (this.settings.capitalizeKeys) {\n      return key[0].toUpperCase() + key.slice(1);\n    }\n    return key;\n  }\n  writeKey(key) {\n    if (key.endsWith(\".\")) {\n      key = key.slice(0, key.length - 1);\n    }\n    this.buffer += `&${(0, import_protocols4.extendedEncodeURIComponent)(key)}=`;\n  }\n  writeValue(value) {\n    this.buffer += (0, import_protocols4.extendedEncodeURIComponent)(value);\n  }\n};\n\n// src/submodules/protocols/query/AwsQueryProtocol.ts\nvar AwsQueryProtocol = class extends import_protocols5.RpcProtocol {\n  constructor(options) {\n    super({\n      defaultNamespace: options.defaultNamespace\n    });\n    this.options = options;\n    const settings = {\n      timestampFormat: {\n        useTrait: true,\n        default: import_schema7.SCHEMA.TIMESTAMP_DATE_TIME\n      },\n      httpBindings: false,\n      xmlNamespace: options.xmlNamespace,\n      serviceNamespace: options.defaultNamespace,\n      serializeEmptyLists: true\n    };\n    this.serializer = new QueryShapeSerializer(settings);\n    this.deserializer = new XmlShapeDeserializer(settings);\n  }\n  static {\n    __name(this, \"AwsQueryProtocol\");\n  }\n  serializer;\n  deserializer;\n  getShapeId() {\n    return \"aws.protocols#awsQuery\";\n  }\n  setSerdeContext(serdeContext) {\n    this.serializer.setSerdeContext(serdeContext);\n    this.deserializer.setSerdeContext(serdeContext);\n  }\n  getPayloadCodec() {\n    throw new Error(\"AWSQuery protocol has no payload codec.\");\n  }\n  async serializeRequest(operationSchema, input, context) {\n    const request = await super.serializeRequest(operationSchema, input, context);\n    if (!request.path.endsWith(\"/\")) {\n      request.path += \"/\";\n    }\n    Object.assign(request.headers, {\n      \"content-type\": `application/x-www-form-urlencoded`\n    });\n    if ((0, import_schema7.deref)(operationSchema.input) === \"unit\" || !request.body) {\n      request.body = \"\";\n    }\n    request.body = `Action=${operationSchema.name.split(\"#\")[1]}&Version=${this.options.version}` + request.body;\n    if (request.body.endsWith(\"&\")) {\n      request.body = request.body.slice(-1);\n    }\n    try {\n      request.headers[\"content-length\"] = String((0, import_util_body_length_browser3.calculateBodyLength)(request.body));\n    } catch (e) {\n    }\n    return request;\n  }\n  async deserializeResponse(operationSchema, context, response) {\n    const deserializer = this.deserializer;\n    const ns = import_schema7.NormalizedSchema.of(operationSchema.output);\n    const dataObject = {};\n    if (response.statusCode >= 300) {\n      const bytes2 = await (0, import_protocols5.collectBody)(response.body, context);\n      if (bytes2.byteLength > 0) {\n        Object.assign(dataObject, await deserializer.read(import_schema7.SCHEMA.DOCUMENT, bytes2));\n      }\n      await this.handleError(operationSchema, context, response, dataObject, this.deserializeMetadata(response));\n    }\n    for (const header in response.headers) {\n      const value = response.headers[header];\n      delete response.headers[header];\n      response.headers[header.toLowerCase()] = value;\n    }\n    const awsQueryResultKey = ns.isStructSchema() && this.useNestedResult() ? operationSchema.name.split(\"#\")[1] + \"Result\" : void 0;\n    const bytes = await (0, import_protocols5.collectBody)(response.body, context);\n    if (bytes.byteLength > 0) {\n      Object.assign(dataObject, await deserializer.read(ns, bytes, awsQueryResultKey));\n    }\n    const output = {\n      $metadata: this.deserializeMetadata(response),\n      ...dataObject\n    };\n    return output;\n  }\n  /**\n   * EC2 Query overrides this.\n   */\n  useNestedResult() {\n    return true;\n  }\n  async handleError(operationSchema, context, response, dataObject, metadata) {\n    const errorIdentifier = this.loadQueryErrorCode(response, dataObject) ?? \"Unknown\";\n    let namespace = this.options.defaultNamespace;\n    let errorName = errorIdentifier;\n    if (errorIdentifier.includes(\"#\")) {\n      [namespace, errorName] = errorIdentifier.split(\"#\");\n    }\n    const errorDataSource = this.loadQueryError(dataObject);\n    const registry = import_schema7.TypeRegistry.for(namespace);\n    let errorSchema;\n    try {\n      errorSchema = registry.find(\n        (schema) => import_schema7.NormalizedSchema.of(schema).getMergedTraits().awsQueryError?.[0] === errorName\n      );\n      if (!errorSchema) {\n        errorSchema = registry.getSchema(errorIdentifier);\n      }\n    } catch (e) {\n      const baseExceptionSchema = import_schema7.TypeRegistry.for(\"smithy.ts.sdk.synthetic.\" + namespace).getBaseException();\n      if (baseExceptionSchema) {\n        const ErrorCtor = baseExceptionSchema.ctor;\n        throw Object.assign(new ErrorCtor(errorName), errorDataSource);\n      }\n      throw new Error(errorName);\n    }\n    const ns = import_schema7.NormalizedSchema.of(errorSchema);\n    const message = this.loadQueryErrorMessage(dataObject);\n    const exception = new errorSchema.ctor(message);\n    const output = {};\n    for (const [name, member] of ns.structIterator()) {\n      const target = member.getMergedTraits().xmlName ?? name;\n      const value = errorDataSource[target] ?? dataObject[target];\n      output[name] = this.deserializer.readSchema(member, value);\n    }\n    Object.assign(exception, {\n      $metadata: metadata,\n      $response: response,\n      $fault: ns.getMergedTraits().error,\n      message,\n      ...output\n    });\n    throw exception;\n  }\n  /**\n   * The variations in the error and error message locations are attributed to\n   * divergence between AWS Query and EC2 Query behavior.\n   */\n  loadQueryErrorCode(output, data) {\n    const code = (data.Errors?.[0]?.Error ?? data.Errors?.Error ?? data.Error)?.Code;\n    if (code !== void 0) {\n      return code;\n    }\n    if (output.statusCode == 404) {\n      return \"NotFound\";\n    }\n  }\n  loadQueryError(data) {\n    return data.Errors?.[0]?.Error ?? data.Errors?.Error ?? data.Error;\n  }\n  loadQueryErrorMessage(data) {\n    const errorData = this.loadQueryError(data);\n    return errorData?.message ?? errorData?.Message ?? data.message ?? data.Message ?? \"Unknown\";\n  }\n};\n\n// src/submodules/protocols/query/AwsEc2QueryProtocol.ts\nvar AwsEc2QueryProtocol = class extends AwsQueryProtocol {\n  constructor(options) {\n    super(options);\n    this.options = options;\n    const ec2Settings = {\n      capitalizeKeys: true,\n      flattenLists: true,\n      serializeEmptyLists: false\n    };\n    Object.assign(this.serializer.settings, ec2Settings);\n  }\n  static {\n    __name(this, \"AwsEc2QueryProtocol\");\n  }\n  /**\n   * EC2 Query reads XResponse.XResult instead of XResponse directly.\n   */\n  useNestedResult() {\n    return false;\n  }\n};\n\n// src/submodules/protocols/xml/AwsRestXmlProtocol.ts\nvar import_protocols6 = require(\"@smithy/core/protocols\");\nvar import_schema9 = require(\"@smithy/core/schema\");\nvar import_util_body_length_browser4 = require(\"@smithy/util-body-length-browser\");\n\n// src/submodules/protocols/xml/parseXmlBody.ts\nvar import_smithy_client5 = require(\"@smithy/smithy-client\");\nvar import_fast_xml_parser2 = require(\"fast-xml-parser\");\nvar parseXmlBody = /* @__PURE__ */ __name((streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n  if (encoded.length) {\n    const parser = new import_fast_xml_parser2.XMLParser({\n      attributeNamePrefix: \"\",\n      htmlEntities: true,\n      ignoreAttributes: false,\n      ignoreDeclaration: true,\n      parseTagValue: false,\n      trimValues: false,\n      tagValueProcessor: /* @__PURE__ */ __name((_, val) => val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : void 0, \"tagValueProcessor\")\n    });\n    parser.addEntity(\"#xD\", \"\\r\");\n    parser.addEntity(\"#10\", \"\\n\");\n    let parsedObj;\n    try {\n      parsedObj = parser.parse(encoded, true);\n    } catch (e) {\n      if (e && typeof e === \"object\") {\n        Object.defineProperty(e, \"$responseBodyText\", {\n          value: encoded\n        });\n      }\n      throw e;\n    }\n    const textNodeName = \"#text\";\n    const key = Object.keys(parsedObj)[0];\n    const parsedObjToReturn = parsedObj[key];\n    if (parsedObjToReturn[textNodeName]) {\n      parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n      delete parsedObjToReturn[textNodeName];\n    }\n    return (0, import_smithy_client5.getValueFromTextNode)(parsedObjToReturn);\n  }\n  return {};\n}), \"parseXmlBody\");\nvar parseXmlErrorBody = /* @__PURE__ */ __name(async (errorBody, context) => {\n  const value = await parseXmlBody(errorBody, context);\n  if (value.Error) {\n    value.Error.message = value.Error.message ?? value.Error.Message;\n  }\n  return value;\n}, \"parseXmlErrorBody\");\nvar loadRestXmlErrorCode = /* @__PURE__ */ __name((output, data) => {\n  if (data?.Error?.Code !== void 0) {\n    return data.Error.Code;\n  }\n  if (data?.Code !== void 0) {\n    return data.Code;\n  }\n  if (output.statusCode == 404) {\n    return \"NotFound\";\n  }\n}, \"loadRestXmlErrorCode\");\n\n// src/submodules/protocols/xml/XmlShapeSerializer.ts\nvar import_xml_builder = require(\"@aws-sdk/xml-builder\");\nvar import_schema8 = require(\"@smithy/core/schema\");\nvar import_serde7 = require(\"@smithy/core/serde\");\nvar import_smithy_client6 = require(\"@smithy/smithy-client\");\nvar import_util_base643 = require(\"@smithy/util-base64\");\nvar XmlShapeSerializer = class extends SerdeContextConfig {\n  constructor(settings) {\n    super();\n    this.settings = settings;\n  }\n  static {\n    __name(this, \"XmlShapeSerializer\");\n  }\n  stringBuffer;\n  byteBuffer;\n  buffer;\n  write(schema, value) {\n    const ns = import_schema8.NormalizedSchema.of(schema);\n    if (ns.isStringSchema() && typeof value === \"string\") {\n      this.stringBuffer = value;\n    } else if (ns.isBlobSchema()) {\n      this.byteBuffer = \"byteLength\" in value ? value : (this.serdeContext?.base64Decoder ?? import_util_base643.fromBase64)(value);\n    } else {\n      this.buffer = this.writeStruct(ns, value, void 0);\n      const traits = ns.getMergedTraits();\n      if (traits.httpPayload && !traits.xmlName) {\n        this.buffer.withName(ns.getName());\n      }\n    }\n  }\n  flush() {\n    if (this.byteBuffer !== void 0) {\n      const bytes = this.byteBuffer;\n      delete this.byteBuffer;\n      return bytes;\n    }\n    if (this.stringBuffer !== void 0) {\n      const str = this.stringBuffer;\n      delete this.stringBuffer;\n      return str;\n    }\n    const buffer = this.buffer;\n    if (this.settings.xmlNamespace) {\n      if (!buffer?.attributes?.[\"xmlns\"]) {\n        buffer.addAttribute(\"xmlns\", this.settings.xmlNamespace);\n      }\n    }\n    delete this.buffer;\n    return buffer.toString();\n  }\n  writeStruct(ns, value, parentXmlns) {\n    const traits = ns.getMergedTraits();\n    const name = ns.isMemberSchema() && !traits.httpPayload ? ns.getMemberTraits().xmlName ?? ns.getMemberName() : traits.xmlName ?? ns.getName();\n    if (!name || !ns.isStructSchema()) {\n      throw new Error(\n        `@aws-sdk/core/protocols - xml serializer, cannot write struct with empty name or non-struct, schema=${ns.getName(\n          true\n        )}.`\n      );\n    }\n    const structXmlNode = import_xml_builder.XmlNode.of(name);\n    const [xmlnsAttr, xmlns] = this.getXmlnsAttribute(ns, parentXmlns);\n    if (xmlns) {\n      structXmlNode.addAttribute(xmlnsAttr, xmlns);\n    }\n    for (const [memberName, memberSchema] of ns.structIterator()) {\n      const val = value[memberName];\n      if (val != null) {\n        if (memberSchema.getMergedTraits().xmlAttribute) {\n          structXmlNode.addAttribute(\n            memberSchema.getMergedTraits().xmlName ?? memberName,\n            this.writeSimple(memberSchema, val)\n          );\n          continue;\n        }\n        if (memberSchema.isListSchema()) {\n          this.writeList(memberSchema, val, structXmlNode, xmlns);\n        } else if (memberSchema.isMapSchema()) {\n          this.writeMap(memberSchema, val, structXmlNode, xmlns);\n        } else if (memberSchema.isStructSchema()) {\n          structXmlNode.addChildNode(this.writeStruct(memberSchema, val, xmlns));\n        } else {\n          const memberNode = import_xml_builder.XmlNode.of(memberSchema.getMergedTraits().xmlName ?? memberSchema.getMemberName());\n          this.writeSimpleInto(memberSchema, val, memberNode, xmlns);\n          structXmlNode.addChildNode(memberNode);\n        }\n      }\n    }\n    return structXmlNode;\n  }\n  writeList(listMember, array, container, parentXmlns) {\n    if (!listMember.isMemberSchema()) {\n      throw new Error(\n        `@aws-sdk/core/protocols - xml serializer, cannot write non-member list: ${listMember.getName(true)}`\n      );\n    }\n    const listTraits = listMember.getMergedTraits();\n    const listValueSchema = listMember.getValueSchema();\n    const listValueTraits = listValueSchema.getMergedTraits();\n    const sparse = !!listValueTraits.sparse;\n    const flat = !!listTraits.xmlFlattened;\n    const [xmlnsAttr, xmlns] = this.getXmlnsAttribute(listMember, parentXmlns);\n    const writeItem = /* @__PURE__ */ __name((container2, value) => {\n      if (listValueSchema.isListSchema()) {\n        this.writeList(listValueSchema, Array.isArray(value) ? value : [value], container2, xmlns);\n      } else if (listValueSchema.isMapSchema()) {\n        this.writeMap(listValueSchema, value, container2, xmlns);\n      } else if (listValueSchema.isStructSchema()) {\n        const struct = this.writeStruct(listValueSchema, value, xmlns);\n        container2.addChildNode(\n          struct.withName(flat ? listTraits.xmlName ?? listMember.getMemberName() : listValueTraits.xmlName ?? \"member\")\n        );\n      } else {\n        const listItemNode = import_xml_builder.XmlNode.of(\n          flat ? listTraits.xmlName ?? listMember.getMemberName() : listValueTraits.xmlName ?? \"member\"\n        );\n        this.writeSimpleInto(listValueSchema, value, listItemNode, xmlns);\n        container2.addChildNode(listItemNode);\n      }\n    }, \"writeItem\");\n    if (flat) {\n      for (const value of array) {\n        if (sparse || value != null) {\n          writeItem(container, value);\n        }\n      }\n    } else {\n      const listNode = import_xml_builder.XmlNode.of(listTraits.xmlName ?? listMember.getMemberName());\n      if (xmlns) {\n        listNode.addAttribute(xmlnsAttr, xmlns);\n      }\n      for (const value of array) {\n        if (sparse || value != null) {\n          writeItem(listNode, value);\n        }\n      }\n      container.addChildNode(listNode);\n    }\n  }\n  writeMap(mapMember, map, container, parentXmlns, containerIsMap = false) {\n    if (!mapMember.isMemberSchema()) {\n      throw new Error(\n        `@aws-sdk/core/protocols - xml serializer, cannot write non-member map: ${mapMember.getName(true)}`\n      );\n    }\n    const mapTraits = mapMember.getMergedTraits();\n    const mapKeySchema = mapMember.getKeySchema();\n    const mapKeyTraits = mapKeySchema.getMergedTraits();\n    const keyTag = mapKeyTraits.xmlName ?? \"key\";\n    const mapValueSchema = mapMember.getValueSchema();\n    const mapValueTraits = mapValueSchema.getMergedTraits();\n    const valueTag = mapValueTraits.xmlName ?? \"value\";\n    const sparse = !!mapValueTraits.sparse;\n    const flat = !!mapTraits.xmlFlattened;\n    const [xmlnsAttr, xmlns] = this.getXmlnsAttribute(mapMember, parentXmlns);\n    const addKeyValue = /* @__PURE__ */ __name((entry, key, val) => {\n      const keyNode = import_xml_builder.XmlNode.of(keyTag, key);\n      const [keyXmlnsAttr, keyXmlns] = this.getXmlnsAttribute(mapKeySchema, xmlns);\n      if (keyXmlns) {\n        keyNode.addAttribute(keyXmlnsAttr, keyXmlns);\n      }\n      entry.addChildNode(keyNode);\n      let valueNode = import_xml_builder.XmlNode.of(valueTag);\n      if (mapValueSchema.isListSchema()) {\n        this.writeList(mapValueSchema, val, valueNode, xmlns);\n      } else if (mapValueSchema.isMapSchema()) {\n        this.writeMap(mapValueSchema, val, valueNode, xmlns, true);\n      } else if (mapValueSchema.isStructSchema()) {\n        valueNode = this.writeStruct(mapValueSchema, val, xmlns);\n      } else {\n        this.writeSimpleInto(mapValueSchema, val, valueNode, xmlns);\n      }\n      entry.addChildNode(valueNode);\n    }, \"addKeyValue\");\n    if (flat) {\n      for (const [key, val] of Object.entries(map)) {\n        if (sparse || val != null) {\n          const entry = import_xml_builder.XmlNode.of(mapTraits.xmlName ?? mapMember.getMemberName());\n          addKeyValue(entry, key, val);\n          container.addChildNode(entry);\n        }\n      }\n    } else {\n      let mapNode;\n      if (!containerIsMap) {\n        mapNode = import_xml_builder.XmlNode.of(mapTraits.xmlName ?? mapMember.getMemberName());\n        if (xmlns) {\n          mapNode.addAttribute(xmlnsAttr, xmlns);\n        }\n        container.addChildNode(mapNode);\n      }\n      for (const [key, val] of Object.entries(map)) {\n        if (sparse || val != null) {\n          const entry = import_xml_builder.XmlNode.of(\"entry\");\n          addKeyValue(entry, key, val);\n          (containerIsMap ? container : mapNode).addChildNode(entry);\n        }\n      }\n    }\n  }\n  writeSimple(_schema, value) {\n    if (null === value) {\n      throw new Error(\"@aws-sdk/core/protocols - (XML serializer) cannot write null value.\");\n    }\n    const ns = import_schema8.NormalizedSchema.of(_schema);\n    let nodeContents = null;\n    if (value && typeof value === \"object\") {\n      if (ns.isBlobSchema()) {\n        nodeContents = (this.serdeContext?.base64Encoder ?? import_util_base643.toBase64)(value);\n      } else if (ns.isTimestampSchema() && value instanceof Date) {\n        const options = this.settings.timestampFormat;\n        const format = options.useTrait ? ns.getSchema() === import_schema8.SCHEMA.TIMESTAMP_DEFAULT ? options.default : ns.getSchema() ?? options.default : options.default;\n        switch (format) {\n          case import_schema8.SCHEMA.TIMESTAMP_DATE_TIME:\n            nodeContents = value.toISOString().replace(\".000Z\", \"Z\");\n            break;\n          case import_schema8.SCHEMA.TIMESTAMP_HTTP_DATE:\n            nodeContents = (0, import_smithy_client6.dateToUtcString)(value);\n            break;\n          case import_schema8.SCHEMA.TIMESTAMP_EPOCH_SECONDS:\n            nodeContents = String(value.getTime() / 1e3);\n            break;\n          default:\n            console.warn(\"Missing timestamp format, using http date\", value);\n            nodeContents = (0, import_smithy_client6.dateToUtcString)(value);\n            break;\n        }\n      } else if (ns.isBigDecimalSchema() && value) {\n        if (value instanceof import_serde7.NumericValue) {\n          return value.string;\n        }\n        return String(value);\n      } else if (ns.isMapSchema() || ns.isListSchema()) {\n        throw new Error(\n          \"@aws-sdk/core/protocols - xml serializer, cannot call _write() on List/Map schema, call writeList or writeMap() instead.\"\n        );\n      } else {\n        throw new Error(\n          `@aws-sdk/core/protocols - xml serializer, unhandled schema type for object value and schema: ${ns.getName(\n            true\n          )}`\n        );\n      }\n    }\n    if (ns.isStringSchema() || ns.isBooleanSchema() || ns.isNumericSchema() || ns.isBigIntegerSchema() || ns.isBigDecimalSchema()) {\n      nodeContents = String(value);\n    }\n    if (nodeContents === null) {\n      throw new Error(`Unhandled schema-value pair ${ns.getName(true)}=${value}`);\n    }\n    return nodeContents;\n  }\n  writeSimpleInto(_schema, value, into, parentXmlns) {\n    const nodeContents = this.writeSimple(_schema, value);\n    const ns = import_schema8.NormalizedSchema.of(_schema);\n    const content = new import_xml_builder.XmlText(nodeContents);\n    const [xmlnsAttr, xmlns] = this.getXmlnsAttribute(ns, parentXmlns);\n    if (xmlns) {\n      into.addAttribute(xmlnsAttr, xmlns);\n    }\n    into.addChildNode(content);\n  }\n  getXmlnsAttribute(ns, parentXmlns) {\n    const traits = ns.getMergedTraits();\n    const [prefix, xmlns] = traits.xmlNamespace ?? [];\n    if (xmlns && xmlns !== parentXmlns) {\n      return [prefix ? `xmlns:${prefix}` : \"xmlns\", xmlns];\n    }\n    return [void 0, void 0];\n  }\n};\n\n// src/submodules/protocols/xml/XmlCodec.ts\nvar XmlCodec = class extends SerdeContextConfig {\n  constructor(settings) {\n    super();\n    this.settings = settings;\n  }\n  static {\n    __name(this, \"XmlCodec\");\n  }\n  createSerializer() {\n    const serializer = new XmlShapeSerializer(this.settings);\n    serializer.setSerdeContext(this.serdeContext);\n    return serializer;\n  }\n  createDeserializer() {\n    const deserializer = new XmlShapeDeserializer(this.settings);\n    deserializer.setSerdeContext(this.serdeContext);\n    return deserializer;\n  }\n};\n\n// src/submodules/protocols/xml/AwsRestXmlProtocol.ts\nvar AwsRestXmlProtocol = class extends import_protocols6.HttpBindingProtocol {\n  static {\n    __name(this, \"AwsRestXmlProtocol\");\n  }\n  codec;\n  serializer;\n  deserializer;\n  constructor(options) {\n    super(options);\n    const settings = {\n      timestampFormat: {\n        useTrait: true,\n        default: import_schema9.SCHEMA.TIMESTAMP_DATE_TIME\n      },\n      httpBindings: true,\n      xmlNamespace: options.xmlNamespace,\n      serviceNamespace: options.defaultNamespace\n    };\n    this.codec = new XmlCodec(settings);\n    this.serializer = new import_protocols6.HttpInterceptingShapeSerializer(this.codec.createSerializer(), settings);\n    this.deserializer = new import_protocols6.HttpInterceptingShapeDeserializer(this.codec.createDeserializer(), settings);\n  }\n  getPayloadCodec() {\n    return this.codec;\n  }\n  getShapeId() {\n    return \"aws.protocols#restXml\";\n  }\n  async serializeRequest(operationSchema, input, context) {\n    const request = await super.serializeRequest(operationSchema, input, context);\n    const ns = import_schema9.NormalizedSchema.of(operationSchema.input);\n    const members = ns.getMemberSchemas();\n    request.path = String(request.path).split(\"/\").filter((segment) => {\n      return segment !== \"{Bucket}\";\n    }).join(\"/\") || \"/\";\n    if (!request.headers[\"content-type\"]) {\n      const httpPayloadMember = Object.values(members).find((m) => {\n        return !!m.getMergedTraits().httpPayload;\n      });\n      if (httpPayloadMember) {\n        const mediaType = httpPayloadMember.getMergedTraits().mediaType;\n        if (mediaType) {\n          request.headers[\"content-type\"] = mediaType;\n        } else if (httpPayloadMember.isStringSchema()) {\n          request.headers[\"content-type\"] = \"text/plain\";\n        } else if (httpPayloadMember.isBlobSchema()) {\n          request.headers[\"content-type\"] = \"application/octet-stream\";\n        } else {\n          request.headers[\"content-type\"] = \"application/xml\";\n        }\n      } else if (!ns.isUnitSchema()) {\n        const hasBody = Object.values(members).find((m) => {\n          const { httpQuery, httpQueryParams, httpHeader, httpLabel, httpPrefixHeaders } = m.getMergedTraits();\n          return !httpQuery && !httpQueryParams && !httpHeader && !httpLabel && httpPrefixHeaders === void 0;\n        });\n        if (hasBody) {\n          request.headers[\"content-type\"] = \"application/xml\";\n        }\n      }\n    }\n    if (request.headers[\"content-type\"] === \"application/xml\") {\n      if (typeof request.body === \"string\") {\n        request.body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>' + request.body;\n      }\n    }\n    if (request.body) {\n      try {\n        request.headers[\"content-length\"] = String((0, import_util_body_length_browser4.calculateBodyLength)(request.body));\n      } catch (e) {\n      }\n    }\n    return request;\n  }\n  async deserializeResponse(operationSchema, context, response) {\n    return super.deserializeResponse(operationSchema, context, response);\n  }\n  async handleError(operationSchema, context, response, dataObject, metadata) {\n    const errorIdentifier = loadRestXmlErrorCode(response, dataObject) ?? \"Unknown\";\n    let namespace = this.options.defaultNamespace;\n    let errorName = errorIdentifier;\n    if (errorIdentifier.includes(\"#\")) {\n      [namespace, errorName] = errorIdentifier.split(\"#\");\n    }\n    const registry = import_schema9.TypeRegistry.for(namespace);\n    let errorSchema;\n    try {\n      errorSchema = registry.getSchema(errorIdentifier);\n    } catch (e) {\n      const baseExceptionSchema = import_schema9.TypeRegistry.for(\"smithy.ts.sdk.synthetic.\" + namespace).getBaseException();\n      if (baseExceptionSchema) {\n        const ErrorCtor = baseExceptionSchema.ctor;\n        throw Object.assign(new ErrorCtor(errorName), dataObject);\n      }\n      throw new Error(errorName);\n    }\n    const ns = import_schema9.NormalizedSchema.of(errorSchema);\n    const message = dataObject.Error?.message ?? dataObject.Error?.Message ?? dataObject.message ?? dataObject.Message ?? \"Unknown\";\n    const exception = new errorSchema.ctor(message);\n    await this.deserializeHttpMessage(errorSchema, context, response, dataObject);\n    const output = {};\n    for (const [name, member] of ns.structIterator()) {\n      const target = member.getMergedTraits().xmlName ?? name;\n      const value = dataObject.Error?.[target] ?? dataObject[target];\n      output[name] = this.codec.createDeserializer().readSchema(member, value);\n    }\n    Object.assign(exception, {\n      $metadata: metadata,\n      $response: response,\n      $fault: ns.getMergedTraits().error,\n      message,\n      ...output\n    });\n    throw exception;\n  }\n};\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  AwsEc2QueryProtocol,\n  AwsJson1_0Protocol,\n  AwsJson1_1Protocol,\n  AwsJsonRpcProtocol,\n  AwsQueryProtocol,\n  AwsRestJsonProtocol,\n  AwsRestXmlProtocol,\n  JsonCodec,\n  JsonShapeDeserializer,\n  JsonShapeSerializer,\n  XmlCodec,\n  XmlShapeDeserializer,\n  XmlShapeSerializer,\n  _toBool,\n  _toNum,\n  _toStr,\n  awsExpectUnion,\n  loadRestJsonErrorCode,\n  loadRestXmlErrorCode,\n  parseJsonBody,\n  parseJsonErrorBody,\n  parseXmlBody,\n  parseXmlErrorBody\n});\n"],"mappings":"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","ignoreList":[]}