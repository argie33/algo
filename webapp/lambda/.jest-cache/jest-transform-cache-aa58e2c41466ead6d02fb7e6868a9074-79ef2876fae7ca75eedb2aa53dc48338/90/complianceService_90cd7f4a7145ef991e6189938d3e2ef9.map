{"version":3,"names":["crypto","require","ComplianceService","constructor","auditLogs","dataRetentionPolicies","Map","consentRecords","dataProcessingActivities","breachNotifications","initializeRetentionPolicies","gdprSettings","dataControllerName","dataProtectionOfficer","lawfulBasisForProcessing","retentionPeriods","complianceFrameworks","policies","id","name","category","retentionPeriod","user_data","description","legalBasis","automatedDeletion","trading_data","audit_logs","session_data","forEach","policy","set","logAuditEvent","event","auditEntry","randomUUID","timestamp","Date","toISOString","userId","action","resource","details","ipAddress","userAgent","sessionId","success","riskLevel","complianceFramework","push","length","slice","console","log","recordDataProcessing","activity","processingRecord","dataType","purpose","dataSubjects","categories","recipients","securityMeasures","transferDetails","automatedDecisionMaking","activityId","recordConsent","consentData","consentRecord","consentType","purposes","lawfulBasis","consentGiven","consentMethod","withdrawnAt","expiresAt","consentId","withdrawConsent","withdrawalData","get","Error","withdrawalMethod","method","withdrawalReason","reason","originalConsent","handleDataSubjectAccessRequest","requestData","requestId","requestType","requestedData","userData","personalData","email","registrationDate","lastLogin","tradingData","portfolioValue","transactionCount","apiKeys","Array","from","values","filter","consent","includes","dataExport","exportDate","data","format","dataController","status","deliveryMethod","now","handleDataDeletionRequest","deletionAssessment","assessDeletionRequest","canDelete","alternativeActions","alternatives","deletionPlan","sessionData","completedAt","retainedData","hasActiveTrading","hasRegulatoryRetention","generateComplianceReport","framework","options","startDate","endDate","includeDetails","start","getTime","end","relevantLogs","logDate","generateGDPRReport","generateSOXReport","generatePCIReport","generateGenericComplianceReport","dataSubjectRequests","consentEvents","dataBreaches","breach","detectedAt","dataProcessingCount","reportId","generatedAt","period","summary","complianceScore","calculateGDPRComplianceScore","metrics","requestFulfillmentTime","calculateAverageRequestTime","consentRate","calculateConsentRate","breachNotificationCompliance","calculateBreachComplianceRate","dataMinimizationScore","assessDataMinimization","retentionPolicyCompliance","assessRetentionCompliance","recommendations","generateGDPRRecommendations","score","issues","identifyComplianceIssues","issue","severity","Math","max","pendingRequests","some","resolve","type","count","expiredConsents","priority","reportDataBreach","breachData","breachId","reportedAt","affectedDataTypes","affectedDataSubjects","cause","containmentMeasures","riskAssessment","notificationRequired","authorityNotified","dataSubjectsNotified","applyRetentionPolicy","retentionCutoff","policyId","cutoffDate","policyApplied","dataMarkedForDeletion","getComplianceDashboard","last30Days","recentAuditLogs","auditEvents","size","activeRetentionPolicies","frameworks","Object","keys","recentActivity","pendingActions","nextActions","requests","events","given","e","total","round","breaches","compliant","b","compliantPolicies","totalPolicies","complianceRate","module","exports"],"sources":["complianceService.js"],"sourcesContent":["// Compliance Service\n// Implements compliance reporting, data retention policies, and GDPR compliance\n\nconst crypto = require('crypto');\n\nclass ComplianceService {\n  constructor() {\n    this.auditLogs = [];\n    this.dataRetentionPolicies = new Map();\n    this.consentRecords = new Map();\n    this.dataProcessingActivities = [];\n    this.breachNotifications = [];\n    \n    // Initialize default retention policies\n    this.initializeRetentionPolicies();\n    \n    // GDPR compliance settings\n    this.gdprSettings = {\n      dataControllerName: 'Financial Trading Platform',\n      dataProtectionOfficer: 'dpo@tradingplatform.com',\n      lawfulBasisForProcessing: 'Legitimate Interest',\n      retentionPeriods: {\n        'user_data': 7 * 365 * 24 * 60 * 60 * 1000, // 7 years\n        'trading_data': 7 * 365 * 24 * 60 * 60 * 1000, // 7 years (regulatory requirement)\n        'audit_logs': 3 * 365 * 24 * 60 * 60 * 1000, // 3 years\n        'session_data': 30 * 24 * 60 * 60 * 1000, // 30 days\n        'temporary_data': 24 * 60 * 60 * 1000 // 24 hours\n      }\n    };\n\n    // Financial compliance frameworks\n    this.complianceFrameworks = {\n      'SOX': 'Sarbanes-Oxley Act',\n      'MiFID_II': 'Markets in Financial Instruments Directive',\n      'GDPR': 'General Data Protection Regulation',\n      'CCPA': 'California Consumer Privacy Act',\n      'PCI_DSS': 'Payment Card Industry Data Security Standard',\n      'FINRA': 'Financial Industry Regulatory Authority',\n      'SEC': 'Securities and Exchange Commission'\n    };\n  }\n\n  // Initialize default data retention policies\n  initializeRetentionPolicies() {\n    const policies = [\n      {\n        id: 'user_data',\n        name: 'User Personal Data',\n        category: 'personal_data',\n        retentionPeriod: this.gdprSettings.retentionPeriods.user_data,\n        description: 'Personal information including name, email, contact details',\n        legalBasis: 'Legitimate Interest',\n        automatedDeletion: true\n      },\n      {\n        id: 'trading_data',\n        name: 'Trading and Financial Data',\n        category: 'financial_data',\n        retentionPeriod: this.gdprSettings.retentionPeriods.trading_data,\n        description: 'Transaction records, portfolio data, trading history',\n        legalBasis: 'Legal Obligation',\n        automatedDeletion: false // Regulatory requirement - manual review needed\n      },\n      {\n        id: 'audit_logs',\n        name: 'Audit and Security Logs',\n        category: 'security_data',\n        retentionPeriod: this.gdprSettings.retentionPeriods.audit_logs,\n        description: 'Security events, access logs, audit trails',\n        legalBasis: 'Legitimate Interest',\n        automatedDeletion: true\n      },\n      {\n        id: 'session_data',\n        name: 'Session and Temporary Data',\n        category: 'temporary_data',\n        retentionPeriod: this.gdprSettings.retentionPeriods.session_data,\n        description: 'Session tokens, temporary cache, cookies',\n        legalBasis: 'Legitimate Interest',\n        automatedDeletion: true\n      }\n    ];\n\n    policies.forEach(policy => {\n      this.dataRetentionPolicies.set(policy.id, policy);\n    });\n  }\n\n  // Log audit event\n  logAuditEvent(event) {\n    const auditEntry = {\n      id: crypto.randomUUID(),\n      timestamp: new Date().toISOString(),\n      userId: event.userId || 'system',\n      action: event.action,\n      resource: event.resource,\n      details: event.details || {},\n      ipAddress: event.ipAddress,\n      userAgent: event.userAgent,\n      sessionId: event.sessionId,\n      success: event.success !== false,\n      riskLevel: event.riskLevel || 'LOW',\n      complianceFramework: event.complianceFramework || ['GDPR']\n    };\n\n    this.auditLogs.push(auditEntry);\n\n    // Keep only recent audit logs in memory (last 1000)\n    if (this.auditLogs.length > 1000) {\n      this.auditLogs = this.auditLogs.slice(-1000);\n    }\n\n    console.log(`[AUDIT] ${auditEntry.action} by ${auditEntry.userId}:`, auditEntry.details);\n    return auditEntry;\n  }\n\n  // Record data processing activity\n  recordDataProcessing(activity) {\n    const processingRecord = {\n      id: crypto.randomUUID(),\n      timestamp: new Date().toISOString(),\n      dataType: activity.dataType,\n      purpose: activity.purpose,\n      legalBasis: activity.legalBasis,\n      dataSubjects: activity.dataSubjects,\n      categories: activity.categories,\n      recipients: activity.recipients || [],\n      retentionPeriod: activity.retentionPeriod,\n      securityMeasures: activity.securityMeasures || [],\n      transferDetails: activity.transferDetails || null,\n      automatedDecisionMaking: activity.automatedDecisionMaking || false\n    };\n\n    this.dataProcessingActivities.push(processingRecord);\n\n    // Log for compliance audit trail\n    this.logAuditEvent({\n      action: 'DATA_PROCESSING_RECORDED',\n      resource: 'data_processing_activity',\n      details: {\n        activityId: processingRecord.id,\n        dataType: activity.dataType,\n        purpose: activity.purpose\n      },\n      complianceFramework: ['GDPR']\n    });\n\n    return processingRecord;\n  }\n\n  // Record user consent\n  recordConsent(consentData) {\n    const consentRecord = {\n      id: crypto.randomUUID(),\n      userId: consentData.userId,\n      timestamp: new Date().toISOString(),\n      consentType: consentData.consentType,\n      purposes: consentData.purposes,\n      lawfulBasis: consentData.lawfulBasis,\n      consentGiven: consentData.consentGiven,\n      consentMethod: consentData.consentMethod, // 'explicit', 'implied', 'opt-in', 'opt-out'\n      ipAddress: consentData.ipAddress,\n      userAgent: consentData.userAgent,\n      withdrawnAt: null,\n      expiresAt: consentData.expiresAt || null\n    };\n\n    this.consentRecords.set(consentRecord.id, consentRecord);\n\n    // Log consent event\n    this.logAuditEvent({\n      userId: consentData.userId,\n      action: consentData.consentGiven ? 'CONSENT_GIVEN' : 'CONSENT_WITHDRAWN',\n      resource: 'user_consent',\n      details: {\n        consentId: consentRecord.id,\n        consentType: consentData.consentType,\n        purposes: consentData.purposes\n      },\n      ipAddress: consentData.ipAddress,\n      userAgent: consentData.userAgent,\n      complianceFramework: ['GDPR', 'CCPA']\n    });\n\n    return consentRecord;\n  }\n\n  // Withdraw consent\n  withdrawConsent(consentId, withdrawalData) {\n    const consentRecord = this.consentRecords.get(consentId);\n    \n    if (!consentRecord) {\n      throw new Error('Consent record not found');\n    }\n\n    consentRecord.withdrawnAt = new Date().toISOString();\n    consentRecord.withdrawalMethod = withdrawalData.method;\n    consentRecord.withdrawalReason = withdrawalData.reason;\n\n    // Log withdrawal\n    this.logAuditEvent({\n      userId: consentRecord.userId,\n      action: 'CONSENT_WITHDRAWN',\n      resource: 'user_consent',\n      details: {\n        consentId,\n        originalConsent: consentRecord.consentType,\n        withdrawalReason: withdrawalData.reason\n      },\n      ipAddress: withdrawalData.ipAddress,\n      userAgent: withdrawalData.userAgent,\n      complianceFramework: ['GDPR', 'CCPA']\n    });\n\n    return consentRecord;\n  }\n\n  // Handle data subject access request (GDPR Article 15)\n  async handleDataSubjectAccessRequest(userId, requestData) {\n    const requestId = crypto.randomUUID();\n    \n    // Log the request\n    this.logAuditEvent({\n      userId,\n      action: 'DATA_ACCESS_REQUEST',\n      resource: 'data_subject_rights',\n      details: {\n        requestId,\n        requestType: 'access',\n        requestedData: requestData.categories || 'all'\n      },\n      ipAddress: requestData.ipAddress,\n      complianceFramework: ['GDPR']\n    });\n\n    // Collect user data (in a real implementation, this would query the database)\n    const userData = {\n      personalData: {\n        userId: userId,\n        email: '[REDACTED]',\n        name: '[REDACTED]',\n        registrationDate: '[REDACTED]',\n        lastLogin: '[REDACTED]'\n      },\n      tradingData: {\n        portfolioValue: '[REDACTED]',\n        transactionCount: '[REDACTED]',\n        apiKeys: '[REDACTED]'\n      },\n      consentRecords: Array.from(this.consentRecords.values())\n        .filter(consent => consent.userId === userId),\n      auditLogs: this.auditLogs\n        .filter(log => log.userId === userId)\n        .slice(-100), // Last 100 activities\n      dataProcessingActivities: this.dataProcessingActivities\n        .filter(activity => activity.dataSubjects.includes(userId))\n    };\n\n    // Generate data export\n    const dataExport = {\n      requestId,\n      userId,\n      exportDate: new Date().toISOString(),\n      data: userData,\n      format: 'JSON',\n      dataController: this.gdprSettings.dataControllerName,\n      legalBasis: 'GDPR Article 15 - Right of Access'\n    };\n\n    return {\n      requestId,\n      status: 'completed',\n      dataExport,\n      deliveryMethod: 'secure_download',\n      expiresAt: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString() // 30 days\n    };\n  }\n\n  // Handle data deletion request (GDPR Article 17)\n  async handleDataDeletionRequest(userId, requestData) {\n    const requestId = crypto.randomUUID();\n    \n    // Log the request\n    this.logAuditEvent({\n      userId,\n      action: 'DATA_DELETION_REQUEST',\n      resource: 'data_subject_rights',\n      details: {\n        requestId,\n        requestType: 'deletion',\n        reason: requestData.reason\n      },\n      ipAddress: requestData.ipAddress,\n      complianceFramework: ['GDPR']\n    });\n\n    // Check if deletion is possible (regulatory constraints)\n    const deletionAssessment = this.assessDeletionRequest(userId, requestData);\n    \n    if (!deletionAssessment.canDelete) {\n      return {\n        requestId,\n        status: 'rejected',\n        reason: deletionAssessment.reason,\n        legalBasis: deletionAssessment.legalBasis,\n        alternativeActions: deletionAssessment.alternatives\n      };\n    }\n\n    // In a real implementation, this would perform actual data deletion\n    const deletionPlan = {\n      personalData: 'SCHEDULED_FOR_DELETION',\n      tradingData: 'RETAINED_LEGAL_OBLIGATION',\n      sessionData: 'IMMEDIATE_DELETION',\n      auditLogs: 'ANONYMIZED'\n    };\n\n    this.logAuditEvent({\n      userId,\n      action: 'DATA_DELETION_EXECUTED',\n      resource: 'user_data',\n      details: {\n        requestId,\n        deletionPlan\n      },\n      complianceFramework: ['GDPR']\n    });\n\n    return {\n      requestId,\n      status: 'processed',\n      deletionPlan,\n      completedAt: new Date().toISOString(),\n      retainedData: deletionAssessment.retainedData\n    };\n  }\n\n  // Assess whether data deletion request can be fulfilled\n  assessDeletionRequest(userId, requestData) {\n    // Financial services have specific retention requirements\n    const hasActiveTrading = true; // Would check actual trading status\n    const hasRegulatoryRetention = true; // Would check regulatory requirements\n\n    if (hasRegulatoryRetention) {\n      return {\n        canDelete: false,\n        reason: 'Regulatory retention requirements prevent full data deletion',\n        legalBasis: 'Legal Obligation (Financial Services Regulations)',\n        retainedData: ['trading_history', 'transaction_records', 'compliance_data'],\n        alternatives: [\n          'Anonymization of personal identifiers',\n          'Restriction of processing for non-regulatory purposes',\n          'Data portability for movable data'\n        ]\n      };\n    }\n\n    return {\n      canDelete: true,\n      reason: 'No legal obligations prevent deletion',\n      retainedData: []\n    };\n  }\n\n  // Generate compliance report\n  generateComplianceReport(framework, options = {}) {\n    const { startDate, endDate, includeDetails = false } = options;\n    const now = new Date();\n    const start = startDate ? new Date(startDate) : new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\n    const end = endDate ? new Date(endDate) : now;\n\n    // Filter audit logs by date range\n    const relevantLogs = this.auditLogs.filter(log => {\n      const logDate = new Date(log.timestamp);\n      return logDate >= start && logDate <= end && \n             log.complianceFramework.includes(framework);\n    });\n\n    // Generate framework-specific report\n    switch (framework) {\n      case 'GDPR':\n        return this.generateGDPRReport(relevantLogs, { start, end, includeDetails });\n      case 'SOX':\n        return this.generateSOXReport(relevantLogs, { start, end, includeDetails });\n      case 'PCI_DSS':\n        return this.generatePCIReport(relevantLogs, { start, end, includeDetails });\n      default:\n        return this.generateGenericComplianceReport(framework, relevantLogs, { start, end, includeDetails });\n    }\n  }\n\n  // Generate GDPR compliance report\n  generateGDPRReport(auditLogs, options) {\n    const { start, end, includeDetails } = options;\n\n    // Analyze GDPR compliance metrics\n    const dataSubjectRequests = auditLogs.filter(log => \n      log.action.includes('DATA_ACCESS_REQUEST') || \n      log.action.includes('DATA_DELETION_REQUEST') ||\n      log.action.includes('DATA_PORTABILITY_REQUEST')\n    );\n\n    const consentEvents = auditLogs.filter(log =>\n      log.action.includes('CONSENT_GIVEN') ||\n      log.action.includes('CONSENT_WITHDRAWN')\n    );\n\n    const dataBreaches = this.breachNotifications.filter(breach =>\n      new Date(breach.detectedAt) >= start && new Date(breach.detectedAt) <= end\n    );\n\n    const dataProcessingCount = this.dataProcessingActivities.filter(activity =>\n      new Date(activity.timestamp) >= start && new Date(activity.timestamp) <= end\n    ).length;\n\n    return {\n      reportId: crypto.randomUUID(),\n      framework: 'GDPR',\n      generatedAt: new Date().toISOString(),\n      period: {\n        start: start.toISOString(),\n        end: end.toISOString()\n      },\n      summary: {\n        dataSubjectRequests: dataSubjectRequests.length,\n        consentEvents: consentEvents.length,\n        dataBreaches: dataBreaches.length,\n        dataProcessingActivities: dataProcessingCount,\n        complianceScore: this.calculateGDPRComplianceScore()\n      },\n      metrics: {\n        requestFulfillmentTime: this.calculateAverageRequestTime(dataSubjectRequests),\n        consentRate: this.calculateConsentRate(consentEvents),\n        breachNotificationCompliance: this.calculateBreachComplianceRate(dataBreaches),\n        dataMinimizationScore: this.assessDataMinimization()\n      },\n      details: includeDetails ? {\n        dataSubjectRequests,\n        consentEvents,\n        dataBreaches,\n        retentionPolicyCompliance: this.assessRetentionCompliance()\n      } : null,\n      recommendations: this.generateGDPRRecommendations()\n    };\n  }\n\n  // Calculate GDPR compliance score\n  calculateGDPRComplianceScore() {\n    let score = 100;\n    \n    // Deduct points for various compliance issues\n    const issues = this.identifyComplianceIssues();\n    \n    issues.forEach(issue => {\n      switch (issue.severity) {\n        case 'HIGH':\n          score -= 25;\n          break;\n        case 'MEDIUM':\n          score -= 10;\n          break;\n        case 'LOW':\n          score -= 5;\n          break;\n      }\n    });\n\n    return Math.max(0, score);\n  }\n\n  // Identify compliance issues\n  identifyComplianceIssues() {\n    const issues = [];\n\n    // Check for unresolved data subject requests\n    const pendingRequests = this.auditLogs.filter(log =>\n      log.action.includes('DATA_ACCESS_REQUEST') &&\n      !this.auditLogs.some(resolve => \n        resolve.action.includes('DATA_ACCESS_FULFILLED') &&\n        resolve.details.requestId === log.details.requestId\n      )\n    );\n\n    if (pendingRequests.length > 0) {\n      issues.push({\n        type: 'PENDING_DATA_REQUESTS',\n        severity: 'HIGH',\n        description: `${pendingRequests.length} pending data subject requests`,\n        count: pendingRequests.length\n      });\n    }\n\n    // Check consent expiration\n    const expiredConsents = Array.from(this.consentRecords.values()).filter(consent =>\n      consent.expiresAt && new Date(consent.expiresAt) < new Date()\n    );\n\n    if (expiredConsents.length > 0) {\n      issues.push({\n        type: 'EXPIRED_CONSENTS',\n        severity: 'MEDIUM',\n        description: `${expiredConsents.length} expired consent records`,\n        count: expiredConsents.length\n      });\n    }\n\n    return issues;\n  }\n\n  // Generate GDPR recommendations\n  generateGDPRRecommendations() {\n    const issues = this.identifyComplianceIssues();\n    const recommendations = [];\n\n    issues.forEach(issue => {\n      switch (issue.type) {\n        case 'PENDING_DATA_REQUESTS':\n          recommendations.push({\n            priority: 'HIGH',\n            action: 'Process pending data subject requests within 30 days',\n            description: 'Fulfill outstanding data access and deletion requests to maintain GDPR compliance'\n          });\n          break;\n        case 'EXPIRED_CONSENTS':\n          recommendations.push({\n            priority: 'MEDIUM',\n            action: 'Refresh expired consent records',\n            description: 'Contact users to renew consent for continued data processing'\n          });\n          break;\n      }\n    });\n\n    // General recommendations\n    recommendations.push({\n      priority: 'LOW',\n      action: 'Regular compliance audits',\n      description: 'Conduct quarterly compliance reviews and update policies as needed'\n    });\n\n    return recommendations;\n  }\n\n  // Report data breach (GDPR Article 33)\n  reportDataBreach(breachData) {\n    const breachId = crypto.randomUUID();\n    const breach = {\n      id: breachId,\n      detectedAt: new Date().toISOString(),\n      reportedAt: new Date().toISOString(),\n      type: breachData.type,\n      severity: breachData.severity,\n      affectedDataTypes: breachData.affectedDataTypes,\n      affectedDataSubjects: breachData.affectedDataSubjects,\n      cause: breachData.cause,\n      containmentMeasures: breachData.containmentMeasures,\n      riskAssessment: breachData.riskAssessment,\n      notificationRequired: breachData.severity === 'HIGH' || breachData.affectedDataSubjects > 1000,\n      authorityNotified: false,\n      dataSubjectsNotified: false\n    };\n\n    this.breachNotifications.push(breach);\n\n    // Log breach event\n    this.logAuditEvent({\n      action: 'DATA_BREACH_REPORTED',\n      resource: 'data_breach',\n      details: {\n        breachId,\n        type: breachData.type,\n        severity: breachData.severity,\n        affectedDataSubjects: breachData.affectedDataSubjects\n      },\n      riskLevel: breachData.severity,\n      complianceFramework: ['GDPR']\n    });\n\n    return breach;\n  }\n\n  // Data retention policy management\n  applyRetentionPolicy(dataType) {\n    const policy = this.dataRetentionPolicies.get(dataType);\n    \n    if (!policy) {\n      throw new Error(`No retention policy found for data type: ${dataType}`);\n    }\n\n    const now = Date.now();\n    const retentionCutoff = now - policy.retentionPeriod;\n\n    // In a real implementation, this would trigger data cleanup\n    this.logAuditEvent({\n      action: 'RETENTION_POLICY_APPLIED',\n      resource: 'data_retention',\n      details: {\n        dataType,\n        policyId: policy.id,\n        retentionPeriod: policy.retentionPeriod,\n        cutoffDate: new Date(retentionCutoff).toISOString()\n      },\n      complianceFramework: ['GDPR']\n    });\n\n    return {\n      policyApplied: policy,\n      cutoffDate: new Date(retentionCutoff).toISOString(),\n      dataMarkedForDeletion: true // Would return actual count in real implementation\n    };\n  }\n\n  // Get compliance dashboard data\n  getComplianceDashboard() {\n    const now = Date.now();\n    const last30Days = now - (30 * 24 * 60 * 60 * 1000);\n\n    const recentAuditLogs = this.auditLogs.filter(log => \n      new Date(log.timestamp).getTime() > last30Days\n    );\n\n    return {\n      summary: {\n        auditEvents: recentAuditLogs.length,\n        dataSubjectRequests: recentAuditLogs.filter(log => \n          log.action.includes('DATA_ACCESS_REQUEST') || log.action.includes('DATA_DELETION_REQUEST')\n        ).length,\n        consentRecords: this.consentRecords.size,\n        activeRetentionPolicies: this.dataRetentionPolicies.size,\n        complianceScore: this.calculateGDPRComplianceScore()\n      },\n      frameworks: Object.keys(this.complianceFrameworks),\n      recentActivity: recentAuditLogs.slice(-10),\n      pendingActions: this.identifyComplianceIssues(),\n      nextActions: [\n        'Review and update privacy policy',\n        'Conduct quarterly compliance audit',\n        'Validate data retention policies'\n      ]\n    };\n  }\n\n  // Helper methods for calculations\n  calculateAverageRequestTime(requests) {\n    // Simplified calculation - would be more complex in real implementation\n    return '5 days';\n  }\n\n  calculateConsentRate(events) {\n    const given = events.filter(e => e.action === 'CONSENT_GIVEN').length;\n    const total = events.length;\n    return total > 0 ? Math.round((given / total) * 100) : 0;\n  }\n\n  calculateBreachComplianceRate(breaches) {\n    const compliant = breaches.filter(b => b.authorityNotified).length;\n    return breaches.length > 0 ? Math.round((compliant / breaches.length) * 100) : 100;\n  }\n\n  assessDataMinimization() {\n    // Simplified assessment\n    return 85; // Would be calculated based on actual data usage patterns\n  }\n\n  assessRetentionCompliance() {\n    return {\n      compliantPolicies: this.dataRetentionPolicies.size,\n      totalPolicies: this.dataRetentionPolicies.size,\n      complianceRate: 100\n    };\n  }\n\n  generateSOXReport(auditLogs, options) {\n    // Simplified SOX compliance report\n    return {\n      framework: 'SOX',\n      summary: 'SOX compliance report - simplified implementation',\n      auditEvents: auditLogs.length\n    };\n  }\n\n  generatePCIReport(auditLogs, options) {\n    // Simplified PCI DSS compliance report\n    return {\n      framework: 'PCI_DSS',\n      summary: 'PCI DSS compliance report - simplified implementation',\n      auditEvents: auditLogs.length\n    };\n  }\n\n  generateGenericComplianceReport(framework, auditLogs, options) {\n    return {\n      framework,\n      summary: `${framework} compliance report`,\n      auditEvents: auditLogs.length,\n      period: options\n    };\n  }\n}\n\nmodule.exports = ComplianceService;"],"mappings":"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","ignoreList":[]}