bbc349d3080b3cc37bdc84f5d164311a
/* istanbul ignore next */
function cov_2ecq37rnm9() {
  var path = "/home/stocks/algo/webapp/lambda/routes/risk.js";
  var hash = "ed9ecfe8ef6d804bb97295aec5f68420cfe9cff7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/routes/risk.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 34
        }
      },
      "1": {
        start: {
          line: 2,
          column: 15
        },
        end: {
          line: 2,
          column: 31
        }
      },
      "2": {
        start: {
          line: 3,
          column: 30
        },
        end: {
          line: 3,
          column: 59
        }
      },
      "3": {
        start: {
          line: 4,
          column: 18
        },
        end: {
          line: 4,
          column: 46
        }
      },
      "4": {
        start: {
          line: 5,
          column: 19
        },
        end: {
          line: 5,
          column: 49
        }
      },
      "5": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 16,
          column: 3
        }
      },
      "6": {
        start: {
          line: 9,
          column: 2
        },
        end: {
          line: 15,
          column: 5
        }
      },
      "7": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 26,
          column: 3
        }
      },
      "8": {
        start: {
          line: 20,
          column: 2
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "9": {
        start: {
          line: 29,
          column: 0
        },
        end: {
          line: 29,
          column: 30
        }
      },
      "10": {
        start: {
          line: 32,
          column: 19
        },
        end: {
          line: 32,
          column: 35
        }
      },
      "11": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 72,
          column: 3
        }
      },
      "12": {
        start: {
          line: 36,
          column: 2
        },
        end: {
          line: 71,
          column: 3
        }
      },
      "13": {
        start: {
          line: 37,
          column: 28
        },
        end: {
          line: 37,
          column: 38
        }
      },
      "14": {
        start: {
          line: 38,
          column: 58
        },
        end: {
          line: 38,
          column: 67
        }
      },
      "15": {
        start: {
          line: 39,
          column: 19
        },
        end: {
          line: 39,
          column: 31
        }
      },
      "16": {
        start: {
          line: 42,
          column: 28
        },
        end: {
          line: 45,
          column: 29
        }
      },
      "17": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "18": {
        start: {
          line: 48,
          column: 6
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "19": {
        start: {
          line: 54,
          column: 24
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "20": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 63,
          column: 7
        }
      },
      "21": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 62
        }
      },
      "22": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 70,
          column: 7
        }
      },
      "23": {
        start: {
          line: 75,
          column: 0
        },
        end: {
          line: 119,
          column: 3
        }
      },
      "24": {
        start: {
          line: 76,
          column: 2
        },
        end: {
          line: 118,
          column: 3
        }
      },
      "25": {
        start: {
          line: 77,
          column: 28
        },
        end: {
          line: 77,
          column: 38
        }
      },
      "26": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 17
        }
      },
      "27": {
        start: {
          line: 84,
          column: 19
        },
        end: {
          line: 84,
          column: 31
        }
      },
      "28": {
        start: {
          line: 87,
          column: 28
        },
        end: {
          line: 90,
          column: 29
        }
      },
      "29": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "30": {
        start: {
          line: 93,
          column: 6
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "31": {
        start: {
          line: 99,
          column: 24
        },
        end: {
          line: 105,
          column: 5
        }
      },
      "32": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 110,
          column: 7
        }
      },
      "33": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 112,
          column: 51
        }
      },
      "34": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 117,
          column: 7
        }
      },
      "35": {
        start: {
          line: 122,
          column: 0
        },
        end: {
          line: 164,
          column: 3
        }
      },
      "36": {
        start: {
          line: 123,
          column: 2
        },
        end: {
          line: 163,
          column: 3
        }
      },
      "37": {
        start: {
          line: 124,
          column: 28
        },
        end: {
          line: 124,
          column: 38
        }
      },
      "38": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 16
        }
      },
      "39": {
        start: {
          line: 130,
          column: 19
        },
        end: {
          line: 130,
          column: 31
        }
      },
      "40": {
        start: {
          line: 133,
          column: 28
        },
        end: {
          line: 136,
          column: 29
        }
      },
      "41": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 143,
          column: 5
        }
      },
      "42": {
        start: {
          line: 139,
          column: 6
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "43": {
        start: {
          line: 145,
          column: 30
        },
        end: {
          line: 150,
          column: 5
        }
      },
      "44": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 155,
          column: 7
        }
      },
      "45": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 157,
          column: 58
        }
      },
      "46": {
        start: {
          line: 158,
          column: 4
        },
        end: {
          line: 162,
          column: 7
        }
      },
      "47": {
        start: {
          line: 167,
          column: 0
        },
        end: {
          line: 241,
          column: 3
        }
      },
      "48": {
        start: {
          line: 168,
          column: 2
        },
        end: {
          line: 240,
          column: 3
        }
      },
      "49": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 17
        }
      },
      "50": {
        start: {
          line: 175,
          column: 19
        },
        end: {
          line: 175,
          column: 31
        }
      },
      "51": {
        start: {
          line: 177,
          column: 22
        },
        end: {
          line: 177,
          column: 45
        }
      },
      "52": {
        start: {
          line: 178,
          column: 19
        },
        end: {
          line: 178,
          column: 27
        }
      },
      "53": {
        start: {
          line: 179,
          column: 21
        },
        end: {
          line: 179,
          column: 22
        }
      },
      "54": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 185,
          column: 5
        }
      },
      "55": {
        start: {
          line: 182,
          column: 6
        },
        end: {
          line: 182,
          column: 57
        }
      },
      "56": {
        start: {
          line: 183,
          column: 6
        },
        end: {
          line: 183,
          column: 28
        }
      },
      "57": {
        start: {
          line: 184,
          column: 6
        },
        end: {
          line: 184,
          column: 19
        }
      },
      "58": {
        start: {
          line: 187,
          column: 4
        },
        end: {
          line: 191,
          column: 5
        }
      },
      "59": {
        start: {
          line: 188,
          column: 6
        },
        end: {
          line: 188,
          column: 55
        }
      },
      "60": {
        start: {
          line: 189,
          column: 6
        },
        end: {
          line: 189,
          column: 26
        }
      },
      "61": {
        start: {
          line: 190,
          column: 6
        },
        end: {
          line: 190,
          column: 19
        }
      },
      "62": {
        start: {
          line: 193,
          column: 19
        },
        end: {
          line: 215,
          column: 54
        }
      },
      "63": {
        start: {
          line: 218,
          column: 24
        },
        end: {
          line: 222,
          column: 14
        }
      },
      "64": {
        start: {
          line: 224,
          column: 4
        },
        end: {
          line: 232,
          column: 7
        }
      },
      "65": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 234,
          column: 56
        }
      },
      "66": {
        start: {
          line: 235,
          column: 4
        },
        end: {
          line: 239,
          column: 7
        }
      },
      "67": {
        start: {
          line: 244,
          column: 0
        },
        end: {
          line: 280,
          column: 3
        }
      },
      "68": {
        start: {
          line: 245,
          column: 2
        },
        end: {
          line: 279,
          column: 3
        }
      },
      "69": {
        start: {
          line: 246,
          column: 24
        },
        end: {
          line: 246,
          column: 34
        }
      },
      "70": {
        start: {
          line: 247,
          column: 19
        },
        end: {
          line: 247,
          column: 31
        }
      },
      "71": {
        start: {
          line: 250,
          column: 24
        },
        end: {
          line: 253,
          column: 25
        }
      },
      "72": {
        start: {
          line: 255,
          column: 4
        },
        end: {
          line: 260,
          column: 5
        }
      },
      "73": {
        start: {
          line: 256,
          column: 6
        },
        end: {
          line: 259,
          column: 9
        }
      },
      "74": {
        start: {
          line: 262,
          column: 4
        },
        end: {
          line: 266,
          column: 18
        }
      },
      "75": {
        start: {
          line: 268,
          column: 4
        },
        end: {
          line: 271,
          column: 7
        }
      },
      "76": {
        start: {
          line: 273,
          column: 4
        },
        end: {
          line: 273,
          column: 55
        }
      },
      "77": {
        start: {
          line: 274,
          column: 4
        },
        end: {
          line: 278,
          column: 7
        }
      },
      "78": {
        start: {
          line: 283,
          column: 0
        },
        end: {
          line: 319,
          column: 3
        }
      },
      "79": {
        start: {
          line: 284,
          column: 2
        },
        end: {
          line: 318,
          column: 3
        }
      },
      "80": {
        start: {
          line: 285,
          column: 28
        },
        end: {
          line: 285,
          column: 38
        }
      },
      "81": {
        start: {
          line: 286,
          column: 36
        },
        end: {
          line: 286,
          column: 45
        }
      },
      "82": {
        start: {
          line: 287,
          column: 19
        },
        end: {
          line: 287,
          column: 31
        }
      },
      "83": {
        start: {
          line: 290,
          column: 28
        },
        end: {
          line: 293,
          column: 29
        }
      },
      "84": {
        start: {
          line: 295,
          column: 4
        },
        end: {
          line: 300,
          column: 5
        }
      },
      "85": {
        start: {
          line: 296,
          column: 6
        },
        end: {
          line: 299,
          column: 9
        }
      },
      "86": {
        start: {
          line: 302,
          column: 30
        },
        end: {
          line: 305,
          column: 5
        }
      },
      "87": {
        start: {
          line: 307,
          column: 4
        },
        end: {
          line: 310,
          column: 7
        }
      },
      "88": {
        start: {
          line: 312,
          column: 4
        },
        end: {
          line: 312,
          column: 66
        }
      },
      "89": {
        start: {
          line: 313,
          column: 4
        },
        end: {
          line: 317,
          column: 7
        }
      },
      "90": {
        start: {
          line: 322,
          column: 0
        },
        end: {
          line: 358,
          column: 3
        }
      },
      "91": {
        start: {
          line: 323,
          column: 2
        },
        end: {
          line: 357,
          column: 3
        }
      },
      "92": {
        start: {
          line: 324,
          column: 28
        },
        end: {
          line: 324,
          column: 38
        }
      },
      "93": {
        start: {
          line: 325,
          column: 44
        },
        end: {
          line: 325,
          column: 53
        }
      },
      "94": {
        start: {
          line: 326,
          column: 19
        },
        end: {
          line: 326,
          column: 31
        }
      },
      "95": {
        start: {
          line: 329,
          column: 28
        },
        end: {
          line: 332,
          column: 29
        }
      },
      "96": {
        start: {
          line: 334,
          column: 4
        },
        end: {
          line: 339,
          column: 5
        }
      },
      "97": {
        start: {
          line: 335,
          column: 6
        },
        end: {
          line: 338,
          column: 9
        }
      },
      "98": {
        start: {
          line: 341,
          column: 24
        },
        end: {
          line: 344,
          column: 5
        }
      },
      "99": {
        start: {
          line: 346,
          column: 4
        },
        end: {
          line: 349,
          column: 7
        }
      },
      "100": {
        start: {
          line: 351,
          column: 4
        },
        end: {
          line: 351,
          column: 64
        }
      },
      "101": {
        start: {
          line: 352,
          column: 4
        },
        end: {
          line: 356,
          column: 7
        }
      },
      "102": {
        start: {
          line: 361,
          column: 0
        },
        end: {
          line: 409,
          column: 3
        }
      },
      "103": {
        start: {
          line: 362,
          column: 2
        },
        end: {
          line: 408,
          column: 3
        }
      },
      "104": {
        start: {
          line: 363,
          column: 28
        },
        end: {
          line: 363,
          column: 38
        }
      },
      "105": {
        start: {
          line: 364,
          column: 19
        },
        end: {
          line: 364,
          column: 31
        }
      },
      "106": {
        start: {
          line: 367,
          column: 28
        },
        end: {
          line: 370,
          column: 29
        }
      },
      "107": {
        start: {
          line: 372,
          column: 4
        },
        end: {
          line: 377,
          column: 5
        }
      },
      "108": {
        start: {
          line: 373,
          column: 6
        },
        end: {
          line: 376,
          column: 9
        }
      },
      "109": {
        start: {
          line: 379,
          column: 25
        },
        end: {
          line: 392,
          column: 21
        }
      },
      "110": {
        start: {
          line: 394,
          column: 4
        },
        end: {
          line: 400,
          column: 7
        }
      },
      "111": {
        start: {
          line: 402,
          column: 4
        },
        end: {
          line: 402,
          column: 56
        }
      },
      "112": {
        start: {
          line: 403,
          column: 4
        },
        end: {
          line: 407,
          column: 7
        }
      },
      "113": {
        start: {
          line: 412,
          column: 0
        },
        end: {
          line: 466,
          column: 3
        }
      },
      "114": {
        start: {
          line: 413,
          column: 2
        },
        end: {
          line: 465,
          column: 3
        }
      },
      "115": {
        start: {
          line: 414,
          column: 28
        },
        end: {
          line: 414,
          column: 38
        }
      },
      "116": {
        start: {
          line: 415,
          column: 23
        },
        end: {
          line: 415,
          column: 31
        }
      },
      "117": {
        start: {
          line: 416,
          column: 19
        },
        end: {
          line: 416,
          column: 31
        }
      },
      "118": {
        start: {
          line: 419,
          column: 28
        },
        end: {
          line: 422,
          column: 29
        }
      },
      "119": {
        start: {
          line: 424,
          column: 4
        },
        end: {
          line: 429,
          column: 5
        }
      },
      "120": {
        start: {
          line: 425,
          column: 6
        },
        end: {
          line: 428,
          column: 9
        }
      },
      "121": {
        start: {
          line: 432,
          column: 4
        },
        end: {
          line: 452,
          column: 5
        }
      },
      "122": {
        start: {
          line: 433,
          column: 6
        },
        end: {
          line: 451,
          column: 9
        }
      },
      "123": {
        start: {
          line: 454,
          column: 4
        },
        end: {
          line: 457,
          column: 7
        }
      },
      "124": {
        start: {
          line: 459,
          column: 4
        },
        end: {
          line: 459,
          column: 56
        }
      },
      "125": {
        start: {
          line: 460,
          column: 4
        },
        end: {
          line: 464,
          column: 7
        }
      },
      "126": {
        start: {
          line: 469,
          column: 0
        },
        end: {
          line: 541,
          column: 3
        }
      },
      "127": {
        start: {
          line: 470,
          column: 2
        },
        end: {
          line: 540,
          column: 3
        }
      },
      "128": {
        start: {
          line: 471,
          column: 19
        },
        end: {
          line: 471,
          column: 31
        }
      },
      "129": {
        start: {
          line: 474,
          column: 32
        },
        end: {
          line: 491,
          column: 16
        }
      },
      "130": {
        start: {
          line: 494,
          column: 25
        },
        end: {
          line: 501,
          column: 16
        }
      },
      "131": {
        start: {
          line: 504,
          column: 29
        },
        end: {
          line: 513,
          column: 6
        }
      },
      "132": {
        start: {
          line: 515,
          column: 24
        },
        end: {
          line: 518,
          column: 38
        }
      },
      "133": {
        start: {
          line: 516,
          column: 6
        },
        end: {
          line: 516,
          column: 46
        }
      },
      "134": {
        start: {
          line: 517,
          column: 6
        },
        end: {
          line: 517,
          column: 17
        }
      },
      "135": {
        start: {
          line: 520,
          column: 4
        },
        end: {
          line: 532,
          column: 7
        }
      },
      "136": {
        start: {
          line: 528,
          column: 63
        },
        end: {
          line: 528,
          column: 88
        }
      },
      "137": {
        start: {
          line: 529,
          column: 69
        },
        end: {
          line: 529,
          column: 84
        }
      },
      "138": {
        start: {
          line: 534,
          column: 4
        },
        end: {
          line: 534,
          column: 59
        }
      },
      "139": {
        start: {
          line: 535,
          column: 4
        },
        end: {
          line: 539,
          column: 7
        }
      },
      "140": {
        start: {
          line: 544,
          column: 0
        },
        end: {
          line: 583,
          column: 3
        }
      },
      "141": {
        start: {
          line: 545,
          column: 2
        },
        end: {
          line: 582,
          column: 3
        }
      },
      "142": {
        start: {
          line: 546,
          column: 60
        },
        end: {
          line: 546,
          column: 68
        }
      },
      "143": {
        start: {
          line: 547,
          column: 19
        },
        end: {
          line: 547,
          column: 31
        }
      },
      "144": {
        start: {
          line: 550,
          column: 4
        },
        end: {
          line: 562,
          column: 5
        }
      },
      "145": {
        start: {
          line: 551,
          column: 30
        },
        end: {
          line: 554,
          column: 33
        }
      },
      "146": {
        start: {
          line: 556,
          column: 6
        },
        end: {
          line: 561,
          column: 7
        }
      },
      "147": {
        start: {
          line: 557,
          column: 8
        },
        end: {
          line: 560,
          column: 11
        }
      },
      "148": {
        start: {
          line: 565,
          column: 29
        },
        end: {
          line: 569,
          column: 5
        }
      },
      "149": {
        start: {
          line: 571,
          column: 4
        },
        end: {
          line: 574,
          column: 7
        }
      },
      "150": {
        start: {
          line: 576,
          column: 4
        },
        end: {
          line: 576,
          column: 60
        }
      },
      "151": {
        start: {
          line: 577,
          column: 4
        },
        end: {
          line: 581,
          column: 7
        }
      },
      "152": {
        start: {
          line: 586,
          column: 0
        },
        end: {
          line: 604,
          column: 3
        }
      },
      "153": {
        start: {
          line: 587,
          column: 2
        },
        end: {
          line: 603,
          column: 3
        }
      },
      "154": {
        start: {
          line: 588,
          column: 19
        },
        end: {
          line: 588,
          column: 31
        }
      },
      "155": {
        start: {
          line: 590,
          column: 19
        },
        end: {
          line: 590,
          column: 66
        }
      },
      "156": {
        start: {
          line: 592,
          column: 4
        },
        end: {
          line: 595,
          column: 7
        }
      },
      "157": {
        start: {
          line: 597,
          column: 4
        },
        end: {
          line: 597,
          column: 60
        }
      },
      "158": {
        start: {
          line: 598,
          column: 4
        },
        end: {
          line: 602,
          column: 7
        }
      },
      "159": {
        start: {
          line: 607,
          column: 0
        },
        end: {
          line: 625,
          column: 3
        }
      },
      "160": {
        start: {
          line: 608,
          column: 2
        },
        end: {
          line: 624,
          column: 3
        }
      },
      "161": {
        start: {
          line: 609,
          column: 19
        },
        end: {
          line: 609,
          column: 31
        }
      },
      "162": {
        start: {
          line: 611,
          column: 19
        },
        end: {
          line: 611,
          column: 63
        }
      },
      "163": {
        start: {
          line: 613,
          column: 4
        },
        end: {
          line: 616,
          column: 7
        }
      },
      "164": {
        start: {
          line: 618,
          column: 4
        },
        end: {
          line: 618,
          column: 62
        }
      },
      "165": {
        start: {
          line: 619,
          column: 4
        },
        end: {
          line: 623,
          column: 7
        }
      },
      "166": {
        start: {
          line: 627,
          column: 0
        },
        end: {
          line: 627,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 22
          },
          end: {
            line: 8,
            column: 23
          }
        },
        loc: {
          start: {
            line: 8,
            column: 36
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 19,
            column: 17
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 19
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 35,
            column: 38
          },
          end: {
            line: 35,
            column: 39
          }
        },
        loc: {
          start: {
            line: 35,
            column: 58
          },
          end: {
            line: 72,
            column: 1
          }
        },
        line: 35
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 75,
            column: 32
          },
          end: {
            line: 75,
            column: 33
          }
        },
        loc: {
          start: {
            line: 75,
            column: 52
          },
          end: {
            line: 119,
            column: 1
          }
        },
        line: 75
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 122,
            column: 41
          },
          end: {
            line: 122,
            column: 42
          }
        },
        loc: {
          start: {
            line: 122,
            column: 61
          },
          end: {
            line: 164,
            column: 1
          }
        },
        line: 122
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 167,
            column: 22
          },
          end: {
            line: 167,
            column: 23
          }
        },
        loc: {
          start: {
            line: 167,
            column: 42
          },
          end: {
            line: 241,
            column: 1
          }
        },
        line: 167
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 244,
            column: 43
          },
          end: {
            line: 244,
            column: 44
          }
        },
        loc: {
          start: {
            line: 244,
            column: 63
          },
          end: {
            line: 280,
            column: 1
          }
        },
        line: 244
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 283,
            column: 40
          },
          end: {
            line: 283,
            column: 41
          }
        },
        loc: {
          start: {
            line: 283,
            column: 60
          },
          end: {
            line: 319,
            column: 1
          }
        },
        line: 283
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 322,
            column: 40
          },
          end: {
            line: 322,
            column: 41
          }
        },
        loc: {
          start: {
            line: 322,
            column: 60
          },
          end: {
            line: 358,
            column: 1
          }
        },
        line: 322
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 361,
            column: 35
          },
          end: {
            line: 361,
            column: 36
          }
        },
        loc: {
          start: {
            line: 361,
            column: 55
          },
          end: {
            line: 409,
            column: 1
          }
        },
        line: 361
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 412,
            column: 35
          },
          end: {
            line: 412,
            column: 36
          }
        },
        loc: {
          start: {
            line: 412,
            column: 55
          },
          end: {
            line: 466,
            column: 1
          }
        },
        line: 412
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 469,
            column: 25
          },
          end: {
            line: 469,
            column: 26
          }
        },
        loc: {
          start: {
            line: 469,
            column: 45
          },
          end: {
            line: 541,
            column: 1
          }
        },
        line: 469
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 515,
            column: 49
          },
          end: {
            line: 515,
            column: 50
          }
        },
        loc: {
          start: {
            line: 515,
            column: 63
          },
          end: {
            line: 518,
            column: 5
          }
        },
        line: 515
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 528,
            column: 49
          },
          end: {
            line: 528,
            column: 50
          }
        },
        loc: {
          start: {
            line: 528,
            column: 63
          },
          end: {
            line: 528,
            column: 88
          }
        },
        line: 528
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 529,
            column: 64
          },
          end: {
            line: 529,
            column: 65
          }
        },
        loc: {
          start: {
            line: 529,
            column: 69
          },
          end: {
            line: 529,
            column: 84
          }
        },
        line: 529
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 544,
            column: 33
          },
          end: {
            line: 544,
            column: 34
          }
        },
        loc: {
          start: {
            line: 544,
            column: 53
          },
          end: {
            line: 583,
            column: 1
          }
        },
        line: 544
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 586,
            column: 32
          },
          end: {
            line: 586,
            column: 33
          }
        },
        loc: {
          start: {
            line: 586,
            column: 52
          },
          end: {
            line: 604,
            column: 1
          }
        },
        line: 586
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 607,
            column: 33
          },
          end: {
            line: 607,
            column: 34
          }
        },
        loc: {
          start: {
            line: 607,
            column: 53
          },
          end: {
            line: 625,
            column: 1
          }
        },
        line: 607
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 38,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 38,
            column: 28
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 30
          },
          end: {
            line: 38,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 38,
            column: 49
          },
          end: {
            line: 38,
            column: 53
          }
        }],
        line: 38
      },
      "2": {
        loc: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "3": {
        loc: {
          start: {
            line: 79,
            column: 6
          },
          end: {
            line: 79,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 79,
            column: 15
          },
          end: {
            line: 79,
            column: 27
          }
        }],
        line: 79
      },
      "4": {
        loc: {
          start: {
            line: 80,
            column: 6
          },
          end: {
            line: 80,
            column: 29
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 80,
            column: 25
          },
          end: {
            line: 80,
            column: 29
          }
        }],
        line: 80
      },
      "5": {
        loc: {
          start: {
            line: 81,
            column: 6
          },
          end: {
            line: 81,
            column: 22
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 81,
            column: 21
          },
          end: {
            line: 81,
            column: 22
          }
        }],
        line: 81
      },
      "6": {
        loc: {
          start: {
            line: 82,
            column: 6
          },
          end: {
            line: 82,
            column: 25
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 82,
            column: 22
          },
          end: {
            line: 82,
            column: 25
          }
        }],
        line: 82
      },
      "7": {
        loc: {
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "8": {
        loc: {
          start: {
            line: 126,
            column: 6
          },
          end: {
            line: 126,
            column: 20
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 126,
            column: 18
          },
          end: {
            line: 126,
            column: 20
          }
        }],
        line: 126
      },
      "9": {
        loc: {
          start: {
            line: 127,
            column: 6
          },
          end: {
            line: 127,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 127,
            column: 24
          },
          end: {
            line: 127,
            column: 27
          }
        }],
        line: 127
      },
      "10": {
        loc: {
          start: {
            line: 128,
            column: 6
          },
          end: {
            line: 128,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 128,
            column: 31
          },
          end: {
            line: 128,
            column: 36
          }
        }],
        line: 128
      },
      "11": {
        loc: {
          start: {
            line: 138,
            column: 4
          },
          end: {
            line: 143,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 4
          },
          end: {
            line: 143,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "12": {
        loc: {
          start: {
            line: 170,
            column: 6
          },
          end: {
            line: 170,
            column: 22
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 170,
            column: 17
          },
          end: {
            line: 170,
            column: 22
          }
        }],
        line: 170
      },
      "13": {
        loc: {
          start: {
            line: 171,
            column: 6
          },
          end: {
            line: 171,
            column: 23
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 171,
            column: 15
          },
          end: {
            line: 171,
            column: 23
          }
        }],
        line: 171
      },
      "14": {
        loc: {
          start: {
            line: 172,
            column: 6
          },
          end: {
            line: 172,
            column: 16
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 172,
            column: 14
          },
          end: {
            line: 172,
            column: 16
          }
        }],
        line: 172
      },
      "15": {
        loc: {
          start: {
            line: 173,
            column: 6
          },
          end: {
            line: 173,
            column: 16
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 173,
            column: 15
          },
          end: {
            line: 173,
            column: 16
          }
        }],
        line: 173
      },
      "16": {
        loc: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "17": {
        loc: {
          start: {
            line: 187,
            column: 4
          },
          end: {
            line: 191,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 4
          },
          end: {
            line: 191,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "18": {
        loc: {
          start: {
            line: 255,
            column: 4
          },
          end: {
            line: 260,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 4
          },
          end: {
            line: 260,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "19": {
        loc: {
          start: {
            line: 286,
            column: 12
          },
          end: {
            line: 286,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 286,
            column: 28
          },
          end: {
            line: 286,
            column: 31
          }
        }],
        line: 286
      },
      "20": {
        loc: {
          start: {
            line: 295,
            column: 4
          },
          end: {
            line: 300,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 4
          },
          end: {
            line: 300,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "21": {
        loc: {
          start: {
            line: 325,
            column: 12
          },
          end: {
            line: 325,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 325,
            column: 31
          },
          end: {
            line: 325,
            column: 39
          }
        }],
        line: 325
      },
      "22": {
        loc: {
          start: {
            line: 334,
            column: 4
          },
          end: {
            line: 339,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 4
          },
          end: {
            line: 339,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 334
      },
      "23": {
        loc: {
          start: {
            line: 372,
            column: 4
          },
          end: {
            line: 377,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 372,
            column: 4
          },
          end: {
            line: 377,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 372
      },
      "24": {
        loc: {
          start: {
            line: 424,
            column: 4
          },
          end: {
            line: 429,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 424,
            column: 4
          },
          end: {
            line: 429,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 424
      },
      "25": {
        loc: {
          start: {
            line: 546,
            column: 12
          },
          end: {
            line: 546,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 546,
            column: 28
          },
          end: {
            line: 546,
            column: 30
          }
        }],
        line: 546
      },
      "26": {
        loc: {
          start: {
            line: 546,
            column: 32
          },
          end: {
            line: 546,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 546,
            column: 49
          },
          end: {
            line: 546,
            column: 55
          }
        }],
        line: 546
      },
      "27": {
        loc: {
          start: {
            line: 550,
            column: 4
          },
          end: {
            line: 562,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 550,
            column: 4
          },
          end: {
            line: 562,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 550
      },
      "28": {
        loc: {
          start: {
            line: 556,
            column: 6
          },
          end: {
            line: 561,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 556,
            column: 6
          },
          end: {
            line: 561,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 556
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0],
      "7": [0, 0],
      "8": [0],
      "9": [0],
      "10": [0],
      "11": [0, 0],
      "12": [0],
      "13": [0],
      "14": [0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0],
      "20": [0, 0],
      "21": [0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0],
      "26": [0],
      "27": [0, 0],
      "28": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ed9ecfe8ef6d804bb97295aec5f68420cfe9cff7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ecq37rnm9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ecq37rnm9();
const express =
/* istanbul ignore next */
(cov_2ecq37rnm9().s[0]++, require('express'));
const router =
/* istanbul ignore next */
(cov_2ecq37rnm9().s[1]++, express.Router());
const {
  authenticateToken
} =
/* istanbul ignore next */
(cov_2ecq37rnm9().s[2]++, require('../middleware/auth'));
const {
  query
} =
/* istanbul ignore next */
(cov_2ecq37rnm9().s[3]++, require('../utils/database'));
const RiskEngine =
/* istanbul ignore next */
(cov_2ecq37rnm9().s[4]++, require('../utils/riskEngine'));

// Health endpoint (no auth required)
/* istanbul ignore next */
cov_2ecq37rnm9().s[5]++;
router.get('/health', (req, res) => {
  /* istanbul ignore next */
  cov_2ecq37rnm9().f[0]++;
  cov_2ecq37rnm9().s[6]++;
  res.json({
    success: true,
    status: 'operational',
    service: 'risk-analysis',
    timestamp: new Date().toISOString(),
    message: 'Risk Analysis service is running'
  });
});

// Basic root endpoint (public)
/* istanbul ignore next */
cov_2ecq37rnm9().s[7]++;
router.get('/', (req, res) => {
  /* istanbul ignore next */
  cov_2ecq37rnm9().f[1]++;
  cov_2ecq37rnm9().s[8]++;
  res.json({
    success: true,
    message: 'Risk Analysis API - Ready',
    timestamp: new Date().toISOString(),
    status: 'operational'
  });
});

// Apply authentication to all routes
/* istanbul ignore next */
cov_2ecq37rnm9().s[9]++;
router.use(authenticateToken);

// Initialize risk engine
const riskEngine =
/* istanbul ignore next */
(cov_2ecq37rnm9().s[10]++, new RiskEngine());

// Get portfolio risk metrics
/* istanbul ignore next */
cov_2ecq37rnm9().s[11]++;
router.get('/portfolio/:portfolioId', async (req, res) => {
  /* istanbul ignore next */
  cov_2ecq37rnm9().f[2]++;
  cov_2ecq37rnm9().s[12]++;
  try {
    const {
      portfolioId
    } =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[13]++, req.params);
    const {
      timeframe =
      /* istanbul ignore next */
      (cov_2ecq37rnm9().b[0][0]++, '1Y'),
      confidence_level =
      /* istanbul ignore next */
      (cov_2ecq37rnm9().b[1][0]++, 0.95)
    } =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[14]++, req.query);
    const userId =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[15]++, req.user.sub);

    // Verify portfolio ownership
    const portfolioResult =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[16]++, await query(`
      SELECT id FROM portfolios 
      WHERE id = $1 AND user_id = $2
    `, [portfolioId, userId]));
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[17]++;
    if (portfolioResult.rows.length === 0) {
      /* istanbul ignore next */
      cov_2ecq37rnm9().b[2][0]++;
      cov_2ecq37rnm9().s[18]++;
      return res.status(404).json({
        success: false,
        error: 'Portfolio not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ecq37rnm9().b[2][1]++;
    }
    const riskMetrics =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[19]++, await riskEngine.calculatePortfolioRisk(portfolioId, timeframe, parseFloat(confidence_level)));
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[20]++;
    res.json({
      success: true,
      data: riskMetrics
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[21]++;
    console.error('Error calculating portfolio risk:', error);
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[22]++;
    res.status(500).json({
      success: false,
      error: 'Failed to calculate portfolio risk',
      message: error.message
    });
  }
});

// Get Value at Risk (VaR) analysis
/* istanbul ignore next */
cov_2ecq37rnm9().s[23]++;
router.get('/var/:portfolioId', async (req, res) => {
  /* istanbul ignore next */
  cov_2ecq37rnm9().f[3]++;
  cov_2ecq37rnm9().s[24]++;
  try {
    const {
      portfolioId
    } =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[25]++, req.params);
    const {
      method =
      /* istanbul ignore next */
      (cov_2ecq37rnm9().b[3][0]++, 'historical'),
      confidence_level =
      /* istanbul ignore next */
      (cov_2ecq37rnm9().b[4][0]++, 0.95),
      time_horizon =
      /* istanbul ignore next */
      (cov_2ecq37rnm9().b[5][0]++, 1),
      lookback_days =
      /* istanbul ignore next */
      (cov_2ecq37rnm9().b[6][0]++, 252)
    } =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[26]++, req.query);
    const userId =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[27]++, req.user.sub);

    // Verify portfolio ownership
    const portfolioResult =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[28]++, await query(`
      SELECT id FROM portfolios 
      WHERE id = $1 AND user_id = $2
    `, [portfolioId, userId]));
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[29]++;
    if (portfolioResult.rows.length === 0) {
      /* istanbul ignore next */
      cov_2ecq37rnm9().b[7][0]++;
      cov_2ecq37rnm9().s[30]++;
      return res.status(404).json({
        success: false,
        error: 'Portfolio not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ecq37rnm9().b[7][1]++;
    }
    const varAnalysis =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[31]++, await riskEngine.calculateVaR(portfolioId, method, parseFloat(confidence_level), parseInt(time_horizon), parseInt(lookback_days)));
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[32]++;
    res.json({
      success: true,
      data: varAnalysis
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[33]++;
    console.error('Error calculating VaR:', error);
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[34]++;
    res.status(500).json({
      success: false,
      error: 'Failed to calculate VaR',
      message: error.message
    });
  }
});

// Get stress testing results
/* istanbul ignore next */
cov_2ecq37rnm9().s[35]++;
router.post('/stress-test/:portfolioId', async (req, res) => {
  /* istanbul ignore next */
  cov_2ecq37rnm9().f[4]++;
  cov_2ecq37rnm9().s[36]++;
  try {
    const {
      portfolioId
    } =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[37]++, req.params);
    const {
      scenarios =
      /* istanbul ignore next */
      (cov_2ecq37rnm9().b[8][0]++, []),
      shock_magnitude =
      /* istanbul ignore next */
      (cov_2ecq37rnm9().b[9][0]++, 0.1),
      correlation_adjustment =
      /* istanbul ignore next */
      (cov_2ecq37rnm9().b[10][0]++, false)
    } =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[38]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[39]++, req.user.sub);

    // Verify portfolio ownership
    const portfolioResult =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[40]++, await query(`
      SELECT id FROM portfolios 
      WHERE id = $1 AND user_id = $2
    `, [portfolioId, userId]));
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[41]++;
    if (portfolioResult.rows.length === 0) {
      /* istanbul ignore next */
      cov_2ecq37rnm9().b[11][0]++;
      cov_2ecq37rnm9().s[42]++;
      return res.status(404).json({
        success: false,
        error: 'Portfolio not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ecq37rnm9().b[11][1]++;
    }
    const stressTestResults =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[43]++, await riskEngine.performStressTest(portfolioId, scenarios, shock_magnitude, correlation_adjustment));
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[44]++;
    res.json({
      success: true,
      data: stressTestResults
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[45]++;
    console.error('Error performing stress test:', error);
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[46]++;
    res.status(500).json({
      success: false,
      error: 'Failed to perform stress test',
      message: error.message
    });
  }
});

// Get risk alerts
/* istanbul ignore next */
cov_2ecq37rnm9().s[47]++;
router.get('/alerts', async (req, res) => {
  /* istanbul ignore next */
  cov_2ecq37rnm9().f[5]++;
  cov_2ecq37rnm9().s[48]++;
  try {
    const {
      severity =
      /* istanbul ignore next */
      (cov_2ecq37rnm9().b[12][0]++, 'all'),
      status =
      /* istanbul ignore next */
      (cov_2ecq37rnm9().b[13][0]++, 'active'),
      limit =
      /* istanbul ignore next */
      (cov_2ecq37rnm9().b[14][0]++, 50),
      offset =
      /* istanbul ignore next */
      (cov_2ecq37rnm9().b[15][0]++, 0)
    } =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[49]++, req.query);
    const userId =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[50]++, req.user.sub);
    let whereClause =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[51]++, 'WHERE ra.user_id = $1');
    const params =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[52]++, [userId]);
    let paramIndex =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[53]++, 2);
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[54]++;
    if (severity !== 'all') {
      /* istanbul ignore next */
      cov_2ecq37rnm9().b[16][0]++;
      cov_2ecq37rnm9().s[55]++;
      whereClause += ` AND ra.severity = $${paramIndex}`;
      /* istanbul ignore next */
      cov_2ecq37rnm9().s[56]++;
      params.push(severity);
      /* istanbul ignore next */
      cov_2ecq37rnm9().s[57]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_2ecq37rnm9().b[16][1]++;
    }
    cov_2ecq37rnm9().s[58]++;
    if (status !== 'all') {
      /* istanbul ignore next */
      cov_2ecq37rnm9().b[17][0]++;
      cov_2ecq37rnm9().s[59]++;
      whereClause += ` AND ra.status = $${paramIndex}`;
      /* istanbul ignore next */
      cov_2ecq37rnm9().s[60]++;
      params.push(status);
      /* istanbul ignore next */
      cov_2ecq37rnm9().s[61]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_2ecq37rnm9().b[17][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[62]++, await query(`
      SELECT 
        ra.id,
        ra.alert_type,
        ra.severity,
        ra.title,
        ra.description,
        ra.metric_name,
        ra.current_value,
        ra.threshold_value,
        ra.portfolio_id,
        ra.symbol,
        ra.created_at,
        ra.updated_at,
        ra.status,
        ra.acknowledged_at,
        p.name as portfolio_name
      FROM risk_alerts ra
      LEFT JOIN portfolios p ON ra.portfolio_id = p.id
      ${whereClause}
      ORDER BY ra.created_at DESC
      LIMIT $${paramIndex} OFFSET $${paramIndex + 1}
    `, [...params, parseInt(limit), parseInt(offset)]));

    // Get total count
    const countResult =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[63]++, await query(`
      SELECT COUNT(*) as total
      FROM risk_alerts ra
      ${whereClause}
    `, params));
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[64]++;
    res.json({
      success: true,
      data: {
        alerts: result.rows,
        total: parseInt(countResult.rows[0].total),
        limit: parseInt(limit),
        offset: parseInt(offset)
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[65]++;
    console.error('Error fetching risk alerts:', error);
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[66]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch risk alerts',
      message: error.message
    });
  }
});

// Acknowledge risk alert
/* istanbul ignore next */
cov_2ecq37rnm9().s[67]++;
router.put('/alerts/:alertId/acknowledge', async (req, res) => {
  /* istanbul ignore next */
  cov_2ecq37rnm9().f[6]++;
  cov_2ecq37rnm9().s[68]++;
  try {
    const {
      alertId
    } =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[69]++, req.params);
    const userId =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[70]++, req.user.sub);

    // Verify alert ownership
    const alertResult =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[71]++, await query(`
      SELECT id FROM risk_alerts 
      WHERE id = $1 AND user_id = $2
    `, [alertId, userId]));
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[72]++;
    if (alertResult.rows.length === 0) {
      /* istanbul ignore next */
      cov_2ecq37rnm9().b[18][0]++;
      cov_2ecq37rnm9().s[73]++;
      return res.status(404).json({
        success: false,
        error: 'Alert not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ecq37rnm9().b[18][1]++;
    }
    cov_2ecq37rnm9().s[74]++;
    await query(`
      UPDATE risk_alerts 
      SET status = 'acknowledged', acknowledged_at = CURRENT_TIMESTAMP
      WHERE id = $1
    `, [alertId]);
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[75]++;
    res.json({
      success: true,
      message: 'Alert acknowledged successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[76]++;
    console.error('Error acknowledging alert:', error);
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[77]++;
    res.status(500).json({
      success: false,
      error: 'Failed to acknowledge alert',
      message: error.message
    });
  }
});

// Get correlation matrix
/* istanbul ignore next */
cov_2ecq37rnm9().s[78]++;
router.get('/correlation/:portfolioId', async (req, res) => {
  /* istanbul ignore next */
  cov_2ecq37rnm9().f[7]++;
  cov_2ecq37rnm9().s[79]++;
  try {
    const {
      portfolioId
    } =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[80]++, req.params);
    const {
      lookback_days =
      /* istanbul ignore next */
      (cov_2ecq37rnm9().b[19][0]++, 252)
    } =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[81]++, req.query);
    const userId =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[82]++, req.user.sub);

    // Verify portfolio ownership
    const portfolioResult =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[83]++, await query(`
      SELECT id FROM portfolios 
      WHERE id = $1 AND user_id = $2
    `, [portfolioId, userId]));
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[84]++;
    if (portfolioResult.rows.length === 0) {
      /* istanbul ignore next */
      cov_2ecq37rnm9().b[20][0]++;
      cov_2ecq37rnm9().s[85]++;
      return res.status(404).json({
        success: false,
        error: 'Portfolio not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ecq37rnm9().b[20][1]++;
    }
    const correlationMatrix =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[86]++, await riskEngine.calculateCorrelationMatrix(portfolioId, parseInt(lookback_days)));
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[87]++;
    res.json({
      success: true,
      data: correlationMatrix
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[88]++;
    console.error('Error calculating correlation matrix:', error);
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[89]++;
    res.status(500).json({
      success: false,
      error: 'Failed to calculate correlation matrix',
      message: error.message
    });
  }
});

// Get risk attribution analysis
/* istanbul ignore next */
cov_2ecq37rnm9().s[90]++;
router.get('/attribution/:portfolioId', async (req, res) => {
  /* istanbul ignore next */
  cov_2ecq37rnm9().f[8]++;
  cov_2ecq37rnm9().s[91]++;
  try {
    const {
      portfolioId
    } =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[92]++, req.params);
    const {
      attribution_type =
      /* istanbul ignore next */
      (cov_2ecq37rnm9().b[21][0]++, 'factor')
    } =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[93]++, req.query);
    const userId =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[94]++, req.user.sub);

    // Verify portfolio ownership
    const portfolioResult =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[95]++, await query(`
      SELECT id FROM portfolios 
      WHERE id = $1 AND user_id = $2
    `, [portfolioId, userId]));
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[96]++;
    if (portfolioResult.rows.length === 0) {
      /* istanbul ignore next */
      cov_2ecq37rnm9().b[22][0]++;
      cov_2ecq37rnm9().s[97]++;
      return res.status(404).json({
        success: false,
        error: 'Portfolio not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ecq37rnm9().b[22][1]++;
    }
    const attribution =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[98]++, await riskEngine.calculateRiskAttribution(portfolioId, attribution_type));
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[99]++;
    res.json({
      success: true,
      data: attribution
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[100]++;
    console.error('Error calculating risk attribution:', error);
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[101]++;
    res.status(500).json({
      success: false,
      error: 'Failed to calculate risk attribution',
      message: error.message
    });
  }
});

// Get risk limits and thresholds
/* istanbul ignore next */
cov_2ecq37rnm9().s[102]++;
router.get('/limits/:portfolioId', async (req, res) => {
  /* istanbul ignore next */
  cov_2ecq37rnm9().f[9]++;
  cov_2ecq37rnm9().s[103]++;
  try {
    const {
      portfolioId
    } =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[104]++, req.params);
    const userId =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[105]++, req.user.sub);

    // Verify portfolio ownership
    const portfolioResult =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[106]++, await query(`
      SELECT id FROM portfolios 
      WHERE id = $1 AND user_id = $2
    `, [portfolioId, userId]));
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[107]++;
    if (portfolioResult.rows.length === 0) {
      /* istanbul ignore next */
      cov_2ecq37rnm9().b[23][0]++;
      cov_2ecq37rnm9().s[108]++;
      return res.status(404).json({
        success: false,
        error: 'Portfolio not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ecq37rnm9().b[23][1]++;
    }
    const limitsResult =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[109]++, await query(`
      SELECT 
        id,
        metric_name,
        threshold_value,
        warning_threshold,
        threshold_type,
        is_active,
        created_at,
        updated_at
      FROM risk_limits
      WHERE portfolio_id = $1
      ORDER BY metric_name
    `, [portfolioId]));
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[110]++;
    res.json({
      success: true,
      data: {
        limits: limitsResult.rows,
        portfolio_id: portfolioId
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[111]++;
    console.error('Error fetching risk limits:', error);
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[112]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch risk limits',
      message: error.message
    });
  }
});

// Update risk limits
/* istanbul ignore next */
cov_2ecq37rnm9().s[113]++;
router.put('/limits/:portfolioId', async (req, res) => {
  /* istanbul ignore next */
  cov_2ecq37rnm9().f[10]++;
  cov_2ecq37rnm9().s[114]++;
  try {
    const {
      portfolioId
    } =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[115]++, req.params);
    const {
      limits
    } =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[116]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[117]++, req.user.sub);

    // Verify portfolio ownership
    const portfolioResult =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[118]++, await query(`
      SELECT id FROM portfolios 
      WHERE id = $1 AND user_id = $2
    `, [portfolioId, userId]));
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[119]++;
    if (portfolioResult.rows.length === 0) {
      /* istanbul ignore next */
      cov_2ecq37rnm9().b[24][0]++;
      cov_2ecq37rnm9().s[120]++;
      return res.status(404).json({
        success: false,
        error: 'Portfolio not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ecq37rnm9().b[24][1]++;
    }

    // Update each limit
    cov_2ecq37rnm9().s[121]++;
    for (const limit of limits) {
      /* istanbul ignore next */
      cov_2ecq37rnm9().s[122]++;
      await query(`
        INSERT INTO risk_limits (
          portfolio_id, metric_name, threshold_value, warning_threshold,
          threshold_type, is_active, updated_at
        ) VALUES ($1, $2, $3, $4, $5, $6, CURRENT_TIMESTAMP)
        ON CONFLICT (portfolio_id, metric_name) DO UPDATE SET
          threshold_value = EXCLUDED.threshold_value,
          warning_threshold = EXCLUDED.warning_threshold,
          threshold_type = EXCLUDED.threshold_type,
          is_active = EXCLUDED.is_active,
          updated_at = CURRENT_TIMESTAMP
      `, [portfolioId, limit.metric_name, limit.threshold_value, limit.warning_threshold, limit.threshold_type, limit.is_active]);
    }
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[123]++;
    res.json({
      success: true,
      message: 'Risk limits updated successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[124]++;
    console.error('Error updating risk limits:', error);
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[125]++;
    res.status(500).json({
      success: false,
      error: 'Failed to update risk limits',
      message: error.message
    });
  }
});

// Get risk dashboard summary
/* istanbul ignore next */
cov_2ecq37rnm9().s[126]++;
router.get('/dashboard', async (req, res) => {
  /* istanbul ignore next */
  cov_2ecq37rnm9().f[11]++;
  cov_2ecq37rnm9().s[127]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[128]++, req.user.sub);

    // Get portfolio risk summary
    const portfolioRiskResult =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[129]++, await query(`
      SELECT 
        p.id,
        p.name,
        p.total_value,
        prm.var_95,
        prm.var_99,
        prm.expected_shortfall,
        prm.volatility,
        prm.beta,
        prm.sharpe_ratio,
        prm.max_drawdown,
        prm.calculated_at
      FROM portfolios p
      LEFT JOIN portfolio_risk_metrics prm ON p.id = prm.portfolio_id
      WHERE p.user_id = $1
      ORDER BY p.created_at DESC
    `, [userId]));

    // Get active risk alerts count
    const alertsResult =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[130]++, await query(`
      SELECT 
        severity,
        COUNT(*) as count
      FROM risk_alerts
      WHERE user_id = $1 AND status = 'active'
      GROUP BY severity
    `, [userId]));

    // Get market risk indicators
    const marketRiskResult =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[131]++, await query(`
      SELECT 
        indicator_name,
        current_value,
        risk_level,
        last_updated
      FROM market_risk_indicators
      WHERE last_updated >= CURRENT_DATE
      ORDER BY risk_level DESC
    `));
    const alertCounts =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[132]++, alertsResult.rows.reduce((acc, row) => {
      /* istanbul ignore next */
      cov_2ecq37rnm9().f[12]++;
      cov_2ecq37rnm9().s[133]++;
      acc[row.severity] = parseInt(row.count);
      /* istanbul ignore next */
      cov_2ecq37rnm9().s[134]++;
      return acc;
    }, {
      high: 0,
      medium: 0,
      low: 0
    }));
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[135]++;
    res.json({
      success: true,
      data: {
        portfolios: portfolioRiskResult.rows,
        alert_counts: alertCounts,
        market_indicators: marketRiskResult.rows,
        summary: {
          total_portfolios: portfolioRiskResult.rows.length,
          total_alerts: alertsResult.rows.reduce((sum, row) => {
            /* istanbul ignore next */
            cov_2ecq37rnm9().f[13]++;
            cov_2ecq37rnm9().s[136]++;
            return sum + parseInt(row.count);
          }, 0),
          high_risk_portfolios: portfolioRiskResult.rows.filter(p => {
            /* istanbul ignore next */
            cov_2ecq37rnm9().f[14]++;
            cov_2ecq37rnm9().s[137]++;
            return p.var_95 > 0.05;
          }).length
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[138]++;
    console.error('Error fetching risk dashboard:', error);
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[139]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch risk dashboard',
      message: error.message
    });
  }
});

// Start real-time risk monitoring
/* istanbul ignore next */
cov_2ecq37rnm9().s[140]++;
router.post('/monitoring/start', async (req, res) => {
  /* istanbul ignore next */
  cov_2ecq37rnm9().f[15]++;
  cov_2ecq37rnm9().s[141]++;
  try {
    const {
      portfolio_ids =
      /* istanbul ignore next */
      (cov_2ecq37rnm9().b[25][0]++, []),
      check_interval =
      /* istanbul ignore next */
      (cov_2ecq37rnm9().b[26][0]++, 300000)
    } =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[142]++, req.body); // 5 minutes default
    const userId =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[143]++, req.user.sub);

    // Verify portfolio ownership
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[144]++;
    if (portfolio_ids.length > 0) {
      /* istanbul ignore next */
      cov_2ecq37rnm9().b[27][0]++;
      const portfolioResult =
      /* istanbul ignore next */
      (cov_2ecq37rnm9().s[145]++, await query(`
        SELECT id FROM portfolios 
        WHERE id = ANY($1) AND user_id = $2
      `, [portfolio_ids, userId]));
      /* istanbul ignore next */
      cov_2ecq37rnm9().s[146]++;
      if (portfolioResult.rows.length !== portfolio_ids.length) {
        /* istanbul ignore next */
        cov_2ecq37rnm9().b[28][0]++;
        cov_2ecq37rnm9().s[147]++;
        return res.status(400).json({
          success: false,
          error: 'One or more portfolios not found'
        });
      } else
      /* istanbul ignore next */
      {
        cov_2ecq37rnm9().b[28][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2ecq37rnm9().b[27][1]++;
    }

    // Start monitoring for user's portfolios
    const monitoringResult =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[148]++, await riskEngine.startRealTimeMonitoring(userId, portfolio_ids, check_interval));
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[149]++;
    res.json({
      success: true,
      data: monitoringResult
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[150]++;
    console.error('Error starting risk monitoring:', error);
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[151]++;
    res.status(500).json({
      success: false,
      error: 'Failed to start risk monitoring',
      message: error.message
    });
  }
});

// Stop real-time risk monitoring
/* istanbul ignore next */
cov_2ecq37rnm9().s[152]++;
router.post('/monitoring/stop', async (req, res) => {
  /* istanbul ignore next */
  cov_2ecq37rnm9().f[16]++;
  cov_2ecq37rnm9().s[153]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[154]++, req.user.sub);
    const result =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[155]++, await riskEngine.stopRealTimeMonitoring(userId));
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[156]++;
    res.json({
      success: true,
      data: result
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[157]++;
    console.error('Error stopping risk monitoring:', error);
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[158]++;
    res.status(500).json({
      success: false,
      error: 'Failed to stop risk monitoring',
      message: error.message
    });
  }
});

// Get monitoring status
/* istanbul ignore next */
cov_2ecq37rnm9().s[159]++;
router.get('/monitoring/status', async (req, res) => {
  /* istanbul ignore next */
  cov_2ecq37rnm9().f[17]++;
  cov_2ecq37rnm9().s[160]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[161]++, req.user.sub);
    const status =
    /* istanbul ignore next */
    (cov_2ecq37rnm9().s[162]++, await riskEngine.getMonitoringStatus(userId));
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[163]++;
    res.json({
      success: true,
      data: status
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[164]++;
    console.error('Error fetching monitoring status:', error);
    /* istanbul ignore next */
    cov_2ecq37rnm9().s[165]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch monitoring status',
      message: error.message
    });
  }
});
/* istanbul ignore next */
cov_2ecq37rnm9().s[166]++;
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,