fdfe3135e981a0c9a8a43dd34fc4085d
/* istanbul ignore next */
function cov_2n9estnvby() {
  var path = "/home/stocks/algo/webapp/lambda/routes/risk-management.js";
  var hash = "447a236749611d46d49d19582ec4d987d832af30";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/routes/risk-management.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 34
        }
      },
      "1": {
        start: {
          line: 2,
          column: 30
        },
        end: {
          line: 2,
          column: 59
        }
      },
      "2": {
        start: {
          line: 3,
          column: 51
        },
        end: {
          line: 3,
          column: 86
        }
      },
      "3": {
        start: {
          line: 4,
          column: 20
        },
        end: {
          line: 4,
          column: 51
        }
      },
      "4": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 55
        }
      },
      "5": {
        start: {
          line: 6,
          column: 22
        },
        end: {
          line: 6,
          column: 61
        }
      },
      "6": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 41
        }
      },
      "7": {
        start: {
          line: 8,
          column: 30
        },
        end: {
          line: 8,
          column: 67
        }
      },
      "8": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 31
        }
      },
      "9": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 30
        }
      },
      "10": {
        start: {
          line: 16,
          column: 20
        },
        end: {
          line: 16,
          column: 37
        }
      },
      "11": {
        start: {
          line: 19,
          column: 30
        },
        end: {
          line: 78,
          column: 1
        }
      },
      "12": {
        start: {
          line: 24,
          column: 28
        },
        end: {
          line: 24,
          column: 83
        }
      },
      "13": {
        start: {
          line: 25,
          column: 28
        },
        end: {
          line: 25,
          column: 55
        }
      },
      "14": {
        start: {
          line: 31,
          column: 28
        },
        end: {
          line: 31,
          column: 83
        }
      },
      "15": {
        start: {
          line: 32,
          column: 28
        },
        end: {
          line: 32,
          column: 90
        }
      },
      "16": {
        start: {
          line: 37,
          column: 28
        },
        end: {
          line: 37,
          column: 83
        }
      },
      "17": {
        start: {
          line: 38,
          column: 28
        },
        end: {
          line: 38,
          column: 75
        }
      },
      "18": {
        start: {
          line: 43,
          column: 28
        },
        end: {
          line: 43,
          column: 98
        }
      },
      "19": {
        start: {
          line: 44,
          column: 28
        },
        end: {
          line: 44,
          column: 70
        }
      },
      "20": {
        start: {
          line: 49,
          column: 28
        },
        end: {
          line: 49,
          column: 96
        }
      },
      "21": {
        start: {
          line: 50,
          column: 28
        },
        end: {
          line: 50,
          column: 69
        }
      },
      "22": {
        start: {
          line: 59,
          column: 28
        },
        end: {
          line: 59,
          column: 83
        }
      },
      "23": {
        start: {
          line: 60,
          column: 28
        },
        end: {
          line: 60,
          column: 55
        }
      },
      "24": {
        start: {
          line: 66,
          column: 28
        },
        end: {
          line: 66,
          column: 80
        }
      },
      "25": {
        start: {
          line: 67,
          column: 28
        },
        end: {
          line: 67,
          column: 60
        }
      },
      "26": {
        start: {
          line: 73,
          column: 28
        },
        end: {
          line: 73,
          column: 83
        }
      },
      "27": {
        start: {
          line: 74,
          column: 28
        },
        end: {
          line: 74,
          column: 75
        }
      },
      "28": {
        start: {
          line: 81,
          column: 0
        },
        end: {
          line: 170,
          column: 3
        }
      },
      "29": {
        start: {
          line: 82,
          column: 20
        },
        end: {
          line: 82,
          column: 53
        }
      },
      "30": {
        start: {
          line: 83,
          column: 20
        },
        end: {
          line: 83,
          column: 30
        }
      },
      "31": {
        start: {
          line: 85,
          column: 2
        },
        end: {
          line: 169,
          column: 3
        }
      },
      "32": {
        start: {
          line: 86,
          column: 19
        },
        end: {
          line: 86,
          column: 31
        }
      },
      "33": {
        start: {
          line: 87,
          column: 94
        },
        end: {
          line: 87,
          column: 107
        }
      },
      "34": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 96,
          column: 7
        }
      },
      "35": {
        start: {
          line: 99,
          column: 31
        },
        end: {
          line: 99,
          column: 45
        }
      },
      "36": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 110,
          column: 5
        }
      },
      "37": {
        start: {
          line: 101,
          column: 26
        },
        end: {
          line: 101,
          column: 82
        }
      },
      "38": {
        start: {
          line: 102,
          column: 6
        },
        end: {
          line: 109,
          column: 7
        }
      },
      "39": {
        start: {
          line: 103,
          column: 30
        },
        end: {
          line: 103,
          column: 113
        }
      },
      "40": {
        start: {
          line: 104,
          column: 24
        },
        end: {
          line: 104,
          column: 56
        }
      },
      "41": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 67
        }
      },
      "42": {
        start: {
          line: 107,
          column: 25
        },
        end: {
          line: 107,
          column: 115
        }
      },
      "43": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 46
        }
      },
      "44": {
        start: {
          line: 113,
          column: 27
        },
        end: {
          line: 121,
          column: 6
        }
      },
      "45": {
        start: {
          line: 124,
          column: 25
        },
        end: {
          line: 142,
          column: 5
        }
      },
      "46": {
        start: {
          line: 144,
          column: 21
        },
        end: {
          line: 144,
          column: 101
        }
      },
      "47": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 152,
          column: 7
        }
      },
      "48": {
        start: {
          line: 154,
          column: 4
        },
        end: {
          line: 154,
          column: 23
        }
      },
      "49": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 161,
          column: 7
        }
      },
      "50": {
        start: {
          line: 163,
          column: 21
        },
        end: {
          line: 167,
          column: 5
        }
      },
      "51": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 168,
          column: 35
        }
      },
      "52": {
        start: {
          line: 173,
          column: 0
        },
        end: {
          line: 254,
          column: 3
        }
      },
      "53": {
        start: {
          line: 174,
          column: 20
        },
        end: {
          line: 174,
          column: 53
        }
      },
      "54": {
        start: {
          line: 175,
          column: 20
        },
        end: {
          line: 175,
          column: 30
        }
      },
      "55": {
        start: {
          line: 177,
          column: 2
        },
        end: {
          line: 253,
          column: 3
        }
      },
      "56": {
        start: {
          line: 178,
          column: 19
        },
        end: {
          line: 178,
          column: 31
        }
      },
      "57": {
        start: {
          line: 179,
          column: 46
        },
        end: {
          line: 179,
          column: 59
        }
      },
      "58": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 186,
          column: 7
        }
      },
      "59": {
        start: {
          line: 189,
          column: 27
        },
        end: {
          line: 194,
          column: 6
        }
      },
      "60": {
        start: {
          line: 197,
          column: 25
        },
        end: {
          line: 226,
          column: 5
        }
      },
      "61": {
        start: {
          line: 228,
          column: 21
        },
        end: {
          line: 228,
          column: 104
        }
      },
      "62": {
        start: {
          line: 230,
          column: 4
        },
        end: {
          line: 236,
          column: 7
        }
      },
      "63": {
        start: {
          line: 238,
          column: 4
        },
        end: {
          line: 238,
          column: 23
        }
      },
      "64": {
        start: {
          line: 241,
          column: 4
        },
        end: {
          line: 245,
          column: 7
        }
      },
      "65": {
        start: {
          line: 247,
          column: 21
        },
        end: {
          line: 251,
          column: 5
        }
      },
      "66": {
        start: {
          line: 252,
          column: 4
        },
        end: {
          line: 252,
          column: 35
        }
      },
      "67": {
        start: {
          line: 257,
          column: 0
        },
        end: {
          line: 351,
          column: 3
        }
      },
      "68": {
        start: {
          line: 258,
          column: 20
        },
        end: {
          line: 258,
          column: 53
        }
      },
      "69": {
        start: {
          line: 259,
          column: 20
        },
        end: {
          line: 259,
          column: 30
        }
      },
      "70": {
        start: {
          line: 261,
          column: 2
        },
        end: {
          line: 350,
          column: 3
        }
      },
      "71": {
        start: {
          line: 262,
          column: 19
        },
        end: {
          line: 262,
          column: 31
        }
      },
      "72": {
        start: {
          line: 264,
          column: 4
        },
        end: {
          line: 266,
          column: 7
        }
      },
      "73": {
        start: {
          line: 269,
          column: 24
        },
        end: {
          line: 269,
          column: 80
        }
      },
      "74": {
        start: {
          line: 270,
          column: 4
        },
        end: {
          line: 273,
          column: 5
        }
      },
      "75": {
        start: {
          line: 271,
          column: 23
        },
        end: {
          line: 271,
          column: 102
        }
      },
      "76": {
        start: {
          line: 272,
          column: 6
        },
        end: {
          line: 272,
          column: 44
        }
      },
      "77": {
        start: {
          line: 276,
          column: 33
        },
        end: {
          line: 276,
          column: 82
        }
      },
      "78": {
        start: {
          line: 279,
          column: 26
        },
        end: {
          line: 279,
          column: 88
        }
      },
      "79": {
        start: {
          line: 282,
          column: 26
        },
        end: {
          line: 282,
          column: 109
        }
      },
      "80": {
        start: {
          line: 283,
          column: 20
        },
        end: {
          line: 283,
          column: 52
        }
      },
      "81": {
        start: {
          line: 284,
          column: 27
        },
        end: {
          line: 284,
          column: 62
        }
      },
      "82": {
        start: {
          line: 287,
          column: 26
        },
        end: {
          line: 287,
          column: 66
        }
      },
      "83": {
        start: {
          line: 288,
          column: 33
        },
        end: {
          line: 288,
          column: 66
        }
      },
      "84": {
        start: {
          line: 291,
          column: 23
        },
        end: {
          line: 291,
          column: 97
        }
      },
      "85": {
        start: {
          line: 291,
          column: 82
        },
        end: {
          line: 291,
          column: 93
        }
      },
      "86": {
        start: {
          line: 292,
          column: 27
        },
        end: {
          line: 298,
          column: 56
        }
      },
      "87": {
        start: {
          line: 293,
          column: 33
        },
        end: {
          line: 297,
          column: 7
        }
      },
      "88": {
        start: {
          line: 298,
          column: 22
        },
        end: {
          line: 298,
          column: 55
        }
      },
      "89": {
        start: {
          line: 301,
          column: 25
        },
        end: {
          line: 324,
          column: 5
        }
      },
      "90": {
        start: {
          line: 326,
          column: 21
        },
        end: {
          line: 326,
          column: 110
        }
      },
      "91": {
        start: {
          line: 328,
          column: 4
        },
        end: {
          line: 333,
          column: 7
        }
      },
      "92": {
        start: {
          line: 335,
          column: 4
        },
        end: {
          line: 335,
          column: 23
        }
      },
      "93": {
        start: {
          line: 338,
          column: 4
        },
        end: {
          line: 342,
          column: 7
        }
      },
      "94": {
        start: {
          line: 344,
          column: 21
        },
        end: {
          line: 348,
          column: 5
        }
      },
      "95": {
        start: {
          line: 349,
          column: 4
        },
        end: {
          line: 349,
          column: 35
        }
      },
      "96": {
        start: {
          line: 354,
          column: 0
        },
        end: {
          line: 427,
          column: 3
        }
      },
      "97": {
        start: {
          line: 355,
          column: 20
        },
        end: {
          line: 355,
          column: 53
        }
      },
      "98": {
        start: {
          line: 357,
          column: 2
        },
        end: {
          line: 426,
          column: 3
        }
      },
      "99": {
        start: {
          line: 358,
          column: 19
        },
        end: {
          line: 358,
          column: 31
        }
      },
      "100": {
        start: {
          line: 360,
          column: 4
        },
        end: {
          line: 362,
          column: 7
        }
      },
      "101": {
        start: {
          line: 364,
          column: 25
        },
        end: {
          line: 409,
          column: 5
        }
      },
      "102": {
        start: {
          line: 411,
          column: 21
        },
        end: {
          line: 411,
          column: 111
        }
      },
      "103": {
        start: {
          line: 412,
          column: 4
        },
        end: {
          line: 412,
          column: 23
        }
      },
      "104": {
        start: {
          line: 415,
          column: 4
        },
        end: {
          line: 418,
          column: 7
        }
      },
      "105": {
        start: {
          line: 420,
          column: 21
        },
        end: {
          line: 424,
          column: 5
        }
      },
      "106": {
        start: {
          line: 425,
          column: 4
        },
        end: {
          line: 425,
          column: 35
        }
      },
      "107": {
        start: {
          line: 431,
          column: 26
        },
        end: {
          line: 431,
          column: 28
        }
      },
      "108": {
        start: {
          line: 433,
          column: 2
        },
        end: {
          line: 440,
          column: 3
        }
      },
      "109": {
        start: {
          line: 434,
          column: 4
        },
        end: {
          line: 439,
          column: 7
        }
      },
      "110": {
        start: {
          line: 442,
          column: 2
        },
        end: {
          line: 449,
          column: 3
        }
      },
      "111": {
        start: {
          line: 443,
          column: 4
        },
        end: {
          line: 448,
          column: 7
        }
      },
      "112": {
        start: {
          line: 451,
          column: 2
        },
        end: {
          line: 458,
          column: 3
        }
      },
      "113": {
        start: {
          line: 452,
          column: 4
        },
        end: {
          line: 457,
          column: 7
        }
      },
      "114": {
        start: {
          line: 460,
          column: 2
        },
        end: {
          line: 467,
          column: 3
        }
      },
      "115": {
        start: {
          line: 461,
          column: 4
        },
        end: {
          line: 466,
          column: 7
        }
      },
      "116": {
        start: {
          line: 469,
          column: 2
        },
        end: {
          line: 469,
          column: 25
        }
      },
      "117": {
        start: {
          line: 472,
          column: 0
        },
        end: {
          line: 472,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 24,
            column: 17
          },
          end: {
            line: 24,
            column: 18
          }
        },
        loc: {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 24,
            column: 83
          }
        },
        line: 24
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 25,
            column: 17
          },
          end: {
            line: 25,
            column: 18
          }
        },
        loc: {
          start: {
            line: 25,
            column: 28
          },
          end: {
            line: 25,
            column: 55
          }
        },
        line: 25
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 31,
            column: 17
          },
          end: {
            line: 31,
            column: 18
          }
        },
        loc: {
          start: {
            line: 31,
            column: 28
          },
          end: {
            line: 31,
            column: 83
          }
        },
        line: 31
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 32,
            column: 17
          },
          end: {
            line: 32,
            column: 18
          }
        },
        loc: {
          start: {
            line: 32,
            column: 28
          },
          end: {
            line: 32,
            column: 90
          }
        },
        line: 32
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 37,
            column: 17
          },
          end: {
            line: 37,
            column: 18
          }
        },
        loc: {
          start: {
            line: 37,
            column: 28
          },
          end: {
            line: 37,
            column: 83
          }
        },
        line: 37
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 38,
            column: 17
          },
          end: {
            line: 38,
            column: 18
          }
        },
        loc: {
          start: {
            line: 38,
            column: 28
          },
          end: {
            line: 38,
            column: 75
          }
        },
        line: 38
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 43,
            column: 17
          },
          end: {
            line: 43,
            column: 18
          }
        },
        loc: {
          start: {
            line: 43,
            column: 28
          },
          end: {
            line: 43,
            column: 98
          }
        },
        line: 43
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 44,
            column: 17
          },
          end: {
            line: 44,
            column: 18
          }
        },
        loc: {
          start: {
            line: 44,
            column: 28
          },
          end: {
            line: 44,
            column: 70
          }
        },
        line: 44
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 49,
            column: 17
          },
          end: {
            line: 49,
            column: 18
          }
        },
        loc: {
          start: {
            line: 49,
            column: 28
          },
          end: {
            line: 49,
            column: 96
          }
        },
        line: 49
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 50,
            column: 17
          },
          end: {
            line: 50,
            column: 18
          }
        },
        loc: {
          start: {
            line: 50,
            column: 28
          },
          end: {
            line: 50,
            column: 69
          }
        },
        line: 50
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 59,
            column: 17
          },
          end: {
            line: 59,
            column: 18
          }
        },
        loc: {
          start: {
            line: 59,
            column: 28
          },
          end: {
            line: 59,
            column: 83
          }
        },
        line: 59
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 60,
            column: 17
          },
          end: {
            line: 60,
            column: 18
          }
        },
        loc: {
          start: {
            line: 60,
            column: 28
          },
          end: {
            line: 60,
            column: 55
          }
        },
        line: 60
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 66,
            column: 17
          },
          end: {
            line: 66,
            column: 18
          }
        },
        loc: {
          start: {
            line: 66,
            column: 28
          },
          end: {
            line: 66,
            column: 80
          }
        },
        line: 66
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 67,
            column: 17
          },
          end: {
            line: 67,
            column: 18
          }
        },
        loc: {
          start: {
            line: 67,
            column: 28
          },
          end: {
            line: 67,
            column: 60
          }
        },
        line: 67
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 73,
            column: 17
          },
          end: {
            line: 73,
            column: 18
          }
        },
        loc: {
          start: {
            line: 73,
            column: 28
          },
          end: {
            line: 73,
            column: 83
          }
        },
        line: 73
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 74,
            column: 17
          },
          end: {
            line: 74,
            column: 18
          }
        },
        loc: {
          start: {
            line: 74,
            column: 28
          },
          end: {
            line: 74,
            column: 75
          }
        },
        line: 74
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 81,
            column: 94
          },
          end: {
            line: 81,
            column: 95
          }
        },
        loc: {
          start: {
            line: 81,
            column: 114
          },
          end: {
            line: 170,
            column: 1
          }
        },
        line: 81
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 173,
            column: 86
          },
          end: {
            line: 173,
            column: 87
          }
        },
        loc: {
          start: {
            line: 173,
            column: 106
          },
          end: {
            line: 254,
            column: 1
          }
        },
        line: 173
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 257,
            column: 34
          },
          end: {
            line: 257,
            column: 35
          }
        },
        loc: {
          start: {
            line: 257,
            column: 54
          },
          end: {
            line: 351,
            column: 1
          }
        },
        line: 257
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 291,
            column: 66
          },
          end: {
            line: 291,
            column: 67
          }
        },
        loc: {
          start: {
            line: 291,
            column: 82
          },
          end: {
            line: 291,
            column: 93
          }
        },
        line: 291
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 293,
            column: 11
          },
          end: {
            line: 293,
            column: 12
          }
        },
        loc: {
          start: {
            line: 293,
            column: 33
          },
          end: {
            line: 297,
            column: 7
          }
        },
        line: 293
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 298,
            column: 12
          },
          end: {
            line: 298,
            column: 13
          }
        },
        loc: {
          start: {
            line: 298,
            column: 22
          },
          end: {
            line: 298,
            column: 55
          }
        },
        line: 298
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 354,
            column: 24
          },
          end: {
            line: 354,
            column: 25
          }
        },
        loc: {
          start: {
            line: 354,
            column: 44
          },
          end: {
            line: 427,
            column: 1
          }
        },
        line: 354
      },
      "23": {
        name: "generatePortfolioRecommendations",
        decl: {
          start: {
            line: 430,
            column: 9
          },
          end: {
            line: 430,
            column: 41
          }
        },
        loc: {
          start: {
            line: 430,
            column: 116
          },
          end: {
            line: 470,
            column: 1
          }
        },
        line: 430
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 28
          },
          end: {
            line: 38,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 28
          },
          end: {
            line: 38,
            column: 34
          }
        }, {
          start: {
            line: 38,
            column: 39
          },
          end: {
            line: 38,
            column: 52
          }
        }, {
          start: {
            line: 38,
            column: 56
          },
          end: {
            line: 38,
            column: 74
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 44,
            column: 28
          },
          end: {
            line: 44,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 28
          },
          end: {
            line: 44,
            column: 34
          }
        }, {
          start: {
            line: 44,
            column: 39
          },
          end: {
            line: 44,
            column: 53
          }
        }, {
          start: {
            line: 44,
            column: 57
          },
          end: {
            line: 44,
            column: 69
          }
        }],
        line: 44
      },
      "2": {
        loc: {
          start: {
            line: 50,
            column: 28
          },
          end: {
            line: 50,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 28
          },
          end: {
            line: 50,
            column: 34
          }
        }, {
          start: {
            line: 50,
            column: 39
          },
          end: {
            line: 50,
            column: 52
          }
        }, {
          start: {
            line: 50,
            column: 56
          },
          end: {
            line: 50,
            column: 68
          }
        }],
        line: 50
      },
      "3": {
        loc: {
          start: {
            line: 67,
            column: 28
          },
          end: {
            line: 67,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 28
          },
          end: {
            line: 67,
            column: 41
          }
        }, {
          start: {
            line: 67,
            column: 45
          },
          end: {
            line: 67,
            column: 60
          }
        }],
        line: 67
      },
      "4": {
        loc: {
          start: {
            line: 82,
            column: 20
          },
          end: {
            line: 82,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 20
          },
          end: {
            line: 82,
            column: 40
          }
        }, {
          start: {
            line: 82,
            column: 44
          },
          end: {
            line: 82,
            column: 53
          }
        }],
        line: 82
      },
      "5": {
        loc: {
          start: {
            line: 87,
            column: 47
          },
          end: {
            line: 87,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 87,
            column: 62
          },
          end: {
            line: 87,
            column: 66
          }
        }],
        line: 87
      },
      "6": {
        loc: {
          start: {
            line: 87,
            column: 68
          },
          end: {
            line: 87,
            column: 89
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 87,
            column: 86
          },
          end: {
            line: 87,
            column: 89
          }
        }],
        line: 87
      },
      "7": {
        loc: {
          start: {
            line: 90,
            column: 14
          },
          end: {
            line: 90,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 90,
            column: 23
          },
          end: {
            line: 90,
            column: 53
          }
        }, {
          start: {
            line: 90,
            column: 56
          },
          end: {
            line: 90,
            column: 65
          }
        }],
        line: 90
      },
      "8": {
        loc: {
          start: {
            line: 100,
            column: 4
          },
          end: {
            line: 110,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 4
          },
          end: {
            line: 110,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "9": {
        loc: {
          start: {
            line: 102,
            column: 6
          },
          end: {
            line: 109,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 6
          },
          end: {
            line: 109,
            column: 7
          }
        }, {
          start: {
            line: 106,
            column: 13
          },
          end: {
            line: 109,
            column: 7
          }
        }],
        line: 102
      },
      "10": {
        loc: {
          start: {
            line: 174,
            column: 20
          },
          end: {
            line: 174,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 20
          },
          end: {
            line: 174,
            column: 40
          }
        }, {
          start: {
            line: 174,
            column: 44
          },
          end: {
            line: 174,
            column: 53
          }
        }],
        line: 174
      },
      "11": {
        loc: {
          start: {
            line: 182,
            column: 14
          },
          end: {
            line: 182,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 182,
            column: 23
          },
          end: {
            line: 182,
            column: 53
          }
        }, {
          start: {
            line: 182,
            column: 56
          },
          end: {
            line: 182,
            column: 65
          }
        }],
        line: 182
      },
      "12": {
        loc: {
          start: {
            line: 215,
            column: 25
          },
          end: {
            line: 217,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 216,
            column: 10
          },
          end: {
            line: 216,
            column: 80
          }
        }, {
          start: {
            line: 217,
            column: 10
          },
          end: {
            line: 217,
            column: 80
          }
        }],
        line: 215
      },
      "13": {
        loc: {
          start: {
            line: 218,
            column: 27
          },
          end: {
            line: 220,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 219,
            column: 10
          },
          end: {
            line: 219,
            column: 82
          }
        }, {
          start: {
            line: 220,
            column: 10
          },
          end: {
            line: 220,
            column: 82
          }
        }],
        line: 218
      },
      "14": {
        loc: {
          start: {
            line: 258,
            column: 20
          },
          end: {
            line: 258,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 258,
            column: 20
          },
          end: {
            line: 258,
            column: 40
          }
        }, {
          start: {
            line: 258,
            column: 44
          },
          end: {
            line: 258,
            column: 53
          }
        }],
        line: 258
      },
      "15": {
        loc: {
          start: {
            line: 265,
            column: 14
          },
          end: {
            line: 265,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 265,
            column: 23
          },
          end: {
            line: 265,
            column: 53
          }
        }, {
          start: {
            line: 265,
            column: 56
          },
          end: {
            line: 265,
            column: 65
          }
        }],
        line: 265
      },
      "16": {
        loc: {
          start: {
            line: 270,
            column: 4
          },
          end: {
            line: 273,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 4
          },
          end: {
            line: 273,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 270
      },
      "17": {
        loc: {
          start: {
            line: 296,
            column: 23
          },
          end: {
            line: 296,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 296,
            column: 40
          },
          end: {
            line: 296,
            column: 58
          }
        }, {
          start: {
            line: 296,
            column: 61
          },
          end: {
            line: 296,
            column: 62
          }
        }],
        line: 296
      },
      "18": {
        loc: {
          start: {
            line: 306,
            column: 17
          },
          end: {
            line: 306,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 306,
            column: 39
          },
          end: {
            line: 306,
            column: 44
          }
        }, {
          start: {
            line: 306,
            column: 47
          },
          end: {
            line: 306,
            column: 88
          }
        }],
        line: 306
      },
      "19": {
        loc: {
          start: {
            line: 306,
            column: 47
          },
          end: {
            line: 306,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 306,
            column: 69
          },
          end: {
            line: 306,
            column: 79
          }
        }, {
          start: {
            line: 306,
            column: 82
          },
          end: {
            line: 306,
            column: 88
          }
        }],
        line: 306
      },
      "20": {
        loc: {
          start: {
            line: 310,
            column: 27
          },
          end: {
            line: 310,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 310,
            column: 27
          },
          end: {
            line: 310,
            column: 59
          }
        }, {
          start: {
            line: 310,
            column: 63
          },
          end: {
            line: 310,
            column: 64
          }
        }],
        line: 310
      },
      "21": {
        loc: {
          start: {
            line: 312,
            column: 50
          },
          end: {
            line: 312,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 312,
            column: 50
          },
          end: {
            line: 312,
            column: 82
          }
        }, {
          start: {
            line: 312,
            column: 86
          },
          end: {
            line: 312,
            column: 87
          }
        }],
        line: 312
      },
      "22": {
        loc: {
          start: {
            line: 318,
            column: 26
          },
          end: {
            line: 318,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 318,
            column: 26
          },
          end: {
            line: 318,
            column: 58
          }
        }, {
          start: {
            line: 318,
            column: 62
          },
          end: {
            line: 318,
            column: 63
          }
        }],
        line: 318
      },
      "23": {
        loc: {
          start: {
            line: 355,
            column: 20
          },
          end: {
            line: 355,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 355,
            column: 20
          },
          end: {
            line: 355,
            column: 40
          }
        }, {
          start: {
            line: 355,
            column: 44
          },
          end: {
            line: 355,
            column: 53
          }
        }],
        line: 355
      },
      "24": {
        loc: {
          start: {
            line: 361,
            column: 14
          },
          end: {
            line: 361,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 361,
            column: 23
          },
          end: {
            line: 361,
            column: 53
          }
        }, {
          start: {
            line: 361,
            column: 56
          },
          end: {
            line: 361,
            column: 65
          }
        }],
        line: 361
      },
      "25": {
        loc: {
          start: {
            line: 433,
            column: 2
          },
          end: {
            line: 440,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 433,
            column: 2
          },
          end: {
            line: 440,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 433
      },
      "26": {
        loc: {
          start: {
            line: 442,
            column: 2
          },
          end: {
            line: 449,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 442,
            column: 2
          },
          end: {
            line: 449,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 442
      },
      "27": {
        loc: {
          start: {
            line: 451,
            column: 2
          },
          end: {
            line: 458,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 451,
            column: 2
          },
          end: {
            line: 458,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 451
      },
      "28": {
        loc: {
          start: {
            line: 460,
            column: 2
          },
          end: {
            line: 467,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 460,
            column: 2
          },
          end: {
            line: 467,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 460
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0, 0],
      "2": [0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "447a236749611d46d49d19582ec4d987d832af30"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2n9estnvby = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2n9estnvby();
const express =
/* istanbul ignore next */
(cov_2n9estnvby().s[0]++, require('express'));
const {
  authenticateToken
} =
/* istanbul ignore next */
(cov_2n9estnvby().s[1]++, require('../middleware/auth'));
const {
  createValidationMiddleware,
  sanitizers
} =
/* istanbul ignore next */
(cov_2n9estnvby().s[2]++, require('../middleware/validation'));
const RiskManager =
/* istanbul ignore next */
(cov_2n9estnvby().s[3]++, require('../utils/riskManager'));
const AlpacaService =
/* istanbul ignore next */
(cov_2n9estnvby().s[4]++, require('../utils/alpacaService'));
const apiKeyService =
/* istanbul ignore next */
(cov_2n9estnvby().s[5]++, require('../utils/simpleApiKeyService'));
const logger =
/* istanbul ignore next */
(cov_2n9estnvby().s[6]++, require('../utils/logger'));
const {
  responseFormatter
} =
/* istanbul ignore next */
(cov_2n9estnvby().s[7]++, require('../utils/responseFormatter'));
const router =
/* istanbul ignore next */
(cov_2n9estnvby().s[8]++, express.Router());

// Apply authentication middleware to all routes
/* istanbul ignore next */
cov_2n9estnvby().s[9]++;
router.use(authenticateToken);

// Initialize risk manager
const riskManager =
/* istanbul ignore next */
(cov_2n9estnvby().s[10]++, new RiskManager());

// Validation schemas for risk management endpoints
const riskValidationSchemas =
/* istanbul ignore next */
(cov_2n9estnvby().s[11]++, {
  positionSize: {
    symbol: {
      required: true,
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_2n9estnvby().f[0]++;
        cov_2n9estnvby().s[12]++;
        return sanitizers.string(value, {
          maxLength: 10,
          trim: true
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_2n9estnvby().f[1]++;
        cov_2n9estnvby().s[13]++;
        return /^[A-Z]{1,10}$/.test(value);
      },
      errorMessage: 'Symbol must be 1-10 uppercase letters'
    },
    direction: {
      required: true,
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_2n9estnvby().f[2]++;
        cov_2n9estnvby().s[14]++;
        return sanitizers.string(value, {
          maxLength: 10,
          trim: true
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_2n9estnvby().f[3]++;
        cov_2n9estnvby().s[15]++;
        return ['buy', 'sell', 'long', 'short'].includes(value.toLowerCase());
      },
      errorMessage: 'Direction must be buy, sell, long, or short'
    },
    portfolioValue: {
      type: 'number',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_2n9estnvby().f[4]++;
        cov_2n9estnvby().s[16]++;
        return sanitizers.number(value, {
          min: 1000,
          max: 100000000
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_2n9estnvby().f[5]++;
        cov_2n9estnvby().s[17]++;
        return /* istanbul ignore next */(cov_2n9estnvby().b[0][0]++, !value) ||
        /* istanbul ignore next */
        (cov_2n9estnvby().b[0][1]++, value >= 1000) &&
        /* istanbul ignore next */
        (cov_2n9estnvby().b[0][2]++, value <= 100000000);
      },
      errorMessage: 'Portfolio value must be between 1,000 and 100,000,000'
    },
    riskPerTrade: {
      type: 'number',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_2n9estnvby().f[6]++;
        cov_2n9estnvby().s[18]++;
        return sanitizers.number(value, {
          min: 0.001,
          max: 0.1,
          defaultValue: 0.02
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_2n9estnvby().f[7]++;
        cov_2n9estnvby().s[19]++;
        return /* istanbul ignore next */(cov_2n9estnvby().b[1][0]++, !value) ||
        /* istanbul ignore next */
        (cov_2n9estnvby().b[1][1]++, value >= 0.001) &&
        /* istanbul ignore next */
        (cov_2n9estnvby().b[1][2]++, value <= 0.1);
      },
      errorMessage: 'Risk per trade must be between 0.1% and 10%'
    },
    maxPositionSize: {
      type: 'number',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_2n9estnvby().f[8]++;
        cov_2n9estnvby().s[20]++;
        return sanitizers.number(value, {
          min: 0.01,
          max: 0.5,
          defaultValue: 0.1
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_2n9estnvby().f[9]++;
        cov_2n9estnvby().s[21]++;
        return /* istanbul ignore next */(cov_2n9estnvby().b[2][0]++, !value) ||
        /* istanbul ignore next */
        (cov_2n9estnvby().b[2][1]++, value >= 0.01) &&
        /* istanbul ignore next */
        (cov_2n9estnvby().b[2][2]++, value <= 0.5);
      },
      errorMessage: 'Max position size must be between 1% and 50%'
    }
  },
  stopLoss: {
    symbol: {
      required: true,
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_2n9estnvby().f[10]++;
        cov_2n9estnvby().s[22]++;
        return sanitizers.string(value, {
          maxLength: 10,
          trim: true
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_2n9estnvby().f[11]++;
        cov_2n9estnvby().s[23]++;
        return /^[A-Z]{1,10}$/.test(value);
      },
      errorMessage: 'Symbol must be 1-10 uppercase letters'
    },
    entryPrice: {
      required: true,
      type: 'number',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_2n9estnvby().f[12]++;
        cov_2n9estnvby().s[24]++;
        return sanitizers.number(value, {
          min: 0.01,
          max: 100000
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_2n9estnvby().f[13]++;
        cov_2n9estnvby().s[25]++;
        return /* istanbul ignore next */(cov_2n9estnvby().b[3][0]++, value >= 0.01) &&
        /* istanbul ignore next */
        (cov_2n9estnvby().b[3][1]++, value <= 100000);
      },
      errorMessage: 'Entry price must be between 0.01 and 100,000'
    },
    direction: {
      required: true,
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_2n9estnvby().f[14]++;
        cov_2n9estnvby().s[26]++;
        return sanitizers.string(value, {
          maxLength: 10,
          trim: true
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_2n9estnvby().f[15]++;
        cov_2n9estnvby().s[27]++;
        return ['long', 'short'].includes(value.toLowerCase());
      },
      errorMessage: 'Direction must be long or short'
    }
  }
});

// Calculate position size based on risk management
/* istanbul ignore next */
cov_2n9estnvby().s[28]++;
router.post('/position-size', createValidationMiddleware(riskValidationSchemas.positionSize), async (req, res) => {
  /* istanbul ignore next */
  cov_2n9estnvby().f[16]++;
  const requestId =
  /* istanbul ignore next */
  (cov_2n9estnvby().s[29]++,
  /* istanbul ignore next */
  (cov_2n9estnvby().b[4][0]++, res.locals.requestId) ||
  /* istanbul ignore next */
  (cov_2n9estnvby().b[4][1]++, 'unknown'));
  const startTime =
  /* istanbul ignore next */
  (cov_2n9estnvby().s[30]++, Date.now());
  /* istanbul ignore next */
  cov_2n9estnvby().s[31]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[32]++, req.user.sub);
    const {
      symbol,
      direction,
      portfolioValue,
      riskPerTrade =
      /* istanbul ignore next */
      (cov_2n9estnvby().b[5][0]++, 0.02),
      maxPositionSize =
      /* istanbul ignore next */
      (cov_2n9estnvby().b[6][0]++, 0.1)
    } =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[33]++, req.validated);
    /* istanbul ignore next */
    cov_2n9estnvby().s[34]++;
    logger.info(`🎯 [${requestId}] Calculating position size`, {
      userId: userId ?
      /* istanbul ignore next */
      (cov_2n9estnvby().b[7][0]++, `${userId.substring(0, 8)}...`) :
      /* istanbul ignore next */
      (cov_2n9estnvby().b[7][1]++, 'unknown'),
      symbol: symbol,
      direction: direction,
      portfolioValue: portfolioValue,
      riskPerTrade: riskPerTrade,
      maxPositionSize: maxPositionSize
    });

    // Get user's portfolio value if not provided
    let actualPortfolioValue =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[35]++, portfolioValue);
    /* istanbul ignore next */
    cov_2n9estnvby().s[36]++;
    if (!actualPortfolioValue) {
      /* istanbul ignore next */
      cov_2n9estnvby().b[8][0]++;
      const credentials =
      /* istanbul ignore next */
      (cov_2n9estnvby().s[37]++, await apiKeyService.getDecryptedApiKey(userId, 'alpaca'));
      /* istanbul ignore next */
      cov_2n9estnvby().s[38]++;
      if (credentials) {
        /* istanbul ignore next */
        cov_2n9estnvby().b[9][0]++;
        const alpacaService =
        /* istanbul ignore next */
        (cov_2n9estnvby().s[39]++, new AlpacaService(credentials.apiKey, credentials.apiSecret, credentials.isSandbox));
        const account =
        /* istanbul ignore next */
        (cov_2n9estnvby().s[40]++, await alpacaService.getAccount());
        /* istanbul ignore next */
        cov_2n9estnvby().s[41]++;
        actualPortfolioValue = parseFloat(account.portfolio_value);
      } else {
        /* istanbul ignore next */
        cov_2n9estnvby().b[9][1]++;
        const response =
        /* istanbul ignore next */
        (cov_2n9estnvby().s[42]++, responseFormatter.error('Portfolio value required when no API credentials available', 400));
        /* istanbul ignore next */
        cov_2n9estnvby().s[43]++;
        return res.status(400).json(response);
      }
    } else
    /* istanbul ignore next */
    {
      cov_2n9estnvby().b[8][1]++;
    }

    // Calculate position size using risk manager
    const positionSizing =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[44]++, await riskManager.calculatePositionSize({
      userId: userId,
      symbol: symbol,
      portfolioValue: actualPortfolioValue,
      riskPerTrade: riskPerTrade,
      maxPositionSize: maxPositionSize,
      volatilityAdjustment: true,
      correlationAdjustment: true
    }));

    // Prepare response data
    const responseData =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[45]++, {
      symbol: symbol,
      direction: direction,
      portfolioValue: actualPortfolioValue,
      positionSizing: {
        recommendedSize: positionSizing.recommendedSize,
        positionValue: positionSizing.positionValue,
        riskAmount: positionSizing.riskAmount,
        maxLoss: positionSizing.maxLoss
      },
      riskMetrics: positionSizing.riskMetrics,
      adjustments: positionSizing.adjustments,
      limits: positionSizing.limits,
      recommendation: positionSizing.recommendation,
      metadata: {
        processingTime: positionSizing.processingTime,
        timestamp: new Date().toISOString()
      }
    });
    const response =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[46]++, responseFormatter.success(responseData, 'Position size calculated successfully'));
    /* istanbul ignore next */
    cov_2n9estnvby().s[47]++;
    logger.info(`✅ [${requestId}] Position size calculated`, {
      symbol: symbol,
      recommendedSize: positionSizing.recommendedSize,
      riskScore: positionSizing.riskMetrics.overallRiskScore,
      recommendation: positionSizing.recommendation.recommendation,
      totalTime: Date.now() - startTime
    });
    /* istanbul ignore next */
    cov_2n9estnvby().s[48]++;
    res.json(response);
  } catch (error) {
    /* istanbul ignore next */
    cov_2n9estnvby().s[49]++;
    logger.error(`❌ [${requestId}] Position size calculation failed`, {
      error: error.message,
      errorStack: error.stack,
      totalTime: Date.now() - startTime
    });
    const response =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[50]++, responseFormatter.error('Failed to calculate position size', 500, {
      details: error.message
    }));
    /* istanbul ignore next */
    cov_2n9estnvby().s[51]++;
    res.status(500).json(response);
  }
});

// Calculate stop loss and take profit levels
/* istanbul ignore next */
cov_2n9estnvby().s[52]++;
router.post('/stop-loss', createValidationMiddleware(riskValidationSchemas.stopLoss), async (req, res) => {
  /* istanbul ignore next */
  cov_2n9estnvby().f[17]++;
  const requestId =
  /* istanbul ignore next */
  (cov_2n9estnvby().s[53]++,
  /* istanbul ignore next */
  (cov_2n9estnvby().b[10][0]++, res.locals.requestId) ||
  /* istanbul ignore next */
  (cov_2n9estnvby().b[10][1]++, 'unknown'));
  const startTime =
  /* istanbul ignore next */
  (cov_2n9estnvby().s[54]++, Date.now());
  /* istanbul ignore next */
  cov_2n9estnvby().s[55]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[56]++, req.user.sub);
    const {
      symbol,
      entryPrice,
      direction
    } =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[57]++, req.validated);
    /* istanbul ignore next */
    cov_2n9estnvby().s[58]++;
    logger.info(`🛡️ [${requestId}] Calculating stop loss levels`, {
      userId: userId ?
      /* istanbul ignore next */
      (cov_2n9estnvby().b[11][0]++, `${userId.substring(0, 8)}...`) :
      /* istanbul ignore next */
      (cov_2n9estnvby().b[11][1]++, 'unknown'),
      symbol: symbol,
      entryPrice: entryPrice,
      direction: direction
    });

    // Calculate stop loss and take profit levels
    const stopLossLevels =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[59]++, await riskManager.calculateStopLossTakeProfit({
      symbol: symbol,
      entryPrice: entryPrice,
      direction: direction,
      riskPerTrade: 0.02
    }));

    // Prepare response data
    const responseData =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[60]++, {
      symbol: symbol,
      entryPrice: entryPrice,
      direction: direction,
      stopLoss: stopLossLevels.stopLoss,
      takeProfit: stopLossLevels.takeProfit,
      levels: {
        stopLossDistance: stopLossLevels.stopLossDistance,
        takeProfitDistance: stopLossLevels.takeProfitDistance,
        riskRewardRatio: stopLossLevels.riskRewardRatio,
        maxRiskAmount: stopLossLevels.maxRiskAmount
      },
      prices: {
        entry: entryPrice,
        stopLoss: stopLossLevels.stopLoss,
        takeProfit: stopLossLevels.takeProfit
      },
      percentages: {
        stopLossPercent: direction === 'long' ?
        /* istanbul ignore next */
        (cov_2n9estnvby().b[12][0]++, ((entryPrice - stopLossLevels.stopLoss) / entryPrice * 100).toFixed(2)) :
        /* istanbul ignore next */
        (cov_2n9estnvby().b[12][1]++, ((stopLossLevels.stopLoss - entryPrice) / entryPrice * 100).toFixed(2)),
        takeProfitPercent: direction === 'long' ?
        /* istanbul ignore next */
        (cov_2n9estnvby().b[13][0]++, ((stopLossLevels.takeProfit - entryPrice) / entryPrice * 100).toFixed(2)) :
        /* istanbul ignore next */
        (cov_2n9estnvby().b[13][1]++, ((entryPrice - stopLossLevels.takeProfit) / entryPrice * 100).toFixed(2))
      },
      metadata: {
        timestamp: new Date().toISOString(),
        processingTime: Date.now() - startTime
      }
    });
    const response =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[61]++, responseFormatter.success(responseData, 'Stop loss levels calculated successfully'));
    /* istanbul ignore next */
    cov_2n9estnvby().s[62]++;
    logger.info(`✅ [${requestId}] Stop loss levels calculated`, {
      symbol: symbol,
      stopLoss: stopLossLevels.stopLoss,
      takeProfit: stopLossLevels.takeProfit,
      riskRewardRatio: stopLossLevels.riskRewardRatio,
      totalTime: Date.now() - startTime
    });
    /* istanbul ignore next */
    cov_2n9estnvby().s[63]++;
    res.json(response);
  } catch (error) {
    /* istanbul ignore next */
    cov_2n9estnvby().s[64]++;
    logger.error(`❌ [${requestId}] Stop loss calculation failed`, {
      error: error.message,
      errorStack: error.stack,
      totalTime: Date.now() - startTime
    });
    const response =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[65]++, responseFormatter.error('Failed to calculate stop loss levels', 500, {
      details: error.message
    }));
    /* istanbul ignore next */
    cov_2n9estnvby().s[66]++;
    res.status(500).json(response);
  }
});

// Get portfolio risk analysis
/* istanbul ignore next */
cov_2n9estnvby().s[67]++;
router.get('/portfolio-analysis', async (req, res) => {
  /* istanbul ignore next */
  cov_2n9estnvby().f[18]++;
  const requestId =
  /* istanbul ignore next */
  (cov_2n9estnvby().s[68]++,
  /* istanbul ignore next */
  (cov_2n9estnvby().b[14][0]++, res.locals.requestId) ||
  /* istanbul ignore next */
  (cov_2n9estnvby().b[14][1]++, 'unknown'));
  const startTime =
  /* istanbul ignore next */
  (cov_2n9estnvby().s[69]++, Date.now());
  /* istanbul ignore next */
  cov_2n9estnvby().s[70]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[71]++, req.user.sub);
    /* istanbul ignore next */
    cov_2n9estnvby().s[72]++;
    logger.info(`📊 [${requestId}] Generating portfolio risk analysis`, {
      userId: userId ?
      /* istanbul ignore next */
      (cov_2n9estnvby().b[15][0]++, `${userId.substring(0, 8)}...`) :
      /* istanbul ignore next */
      (cov_2n9estnvby().b[15][1]++, 'unknown')
    });

    // Get user's API credentials
    const credentials =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[73]++, await apiKeyService.getDecryptedApiKey(userId, 'alpaca'));
    /* istanbul ignore next */
    cov_2n9estnvby().s[74]++;
    if (!credentials) {
      /* istanbul ignore next */
      cov_2n9estnvby().b[16][0]++;
      const response =
      /* istanbul ignore next */
      (cov_2n9estnvby().s[75]++, responseFormatter.error('API credentials required for portfolio analysis', 400));
      /* istanbul ignore next */
      cov_2n9estnvby().s[76]++;
      return res.status(400).json(response);
    } else
    /* istanbul ignore next */
    {
      cov_2n9estnvby().b[16][1]++;
    }

    // Get portfolio composition
    const portfolioComposition =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[77]++, await riskManager.getPortfolioComposition(userId));

    // Calculate portfolio risk metrics
    const portfolioRisk =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[78]++, await riskManager.calculatePortfolioRisk(portfolioComposition));

    // Get account information
    const alpacaService =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[79]++, new AlpacaService(credentials.apiKey, credentials.apiSecret, credentials.isSandbox));
    const account =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[80]++, await alpacaService.getAccount());
    const portfolioValue =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[81]++, parseFloat(account.portfolio_value));

    // Calculate position count and diversification
    const positionCount =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[82]++, Object.keys(portfolioComposition).length);
    const diversificationScore =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[83]++, Math.min(1.0, positionCount / 20));

    // Calculate largest position concentration
    const totalValue =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[84]++, Object.values(portfolioComposition).reduce((sum, value) => {
      /* istanbul ignore next */
      cov_2n9estnvby().f[19]++;
      cov_2n9estnvby().s[85]++;
      return sum + value;
    }, 0));
    const concentrations =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[86]++, Object.entries(portfolioComposition).map(([symbol, value]) => {
      /* istanbul ignore next */
      cov_2n9estnvby().f[20]++;
      cov_2n9estnvby().s[87]++;
      return {
        symbol: symbol,
        value: value,
        concentration: totalValue > 0 ?
        /* istanbul ignore next */
        (cov_2n9estnvby().b[17][0]++, value / totalValue) :
        /* istanbul ignore next */
        (cov_2n9estnvby().b[17][1]++, 0)
      };
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_2n9estnvby().f[21]++;
      cov_2n9estnvby().s[88]++;
      return b.concentration - a.concentration;
    }));

    // Prepare response data
    const responseData =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[89]++, {
      portfolioValue: portfolioValue,
      positionCount: positionCount,
      diversificationScore: diversificationScore,
      portfolioRisk: portfolioRisk,
      riskLevel: portfolioRisk < 0.3 ?
      /* istanbul ignore next */
      (cov_2n9estnvby().b[18][0]++, 'low') :
      /* istanbul ignore next */
      (cov_2n9estnvby().b[18][1]++, portfolioRisk < 0.6 ?
      /* istanbul ignore next */
      (cov_2n9estnvby().b[19][0]++, 'moderate') :
      /* istanbul ignore next */
      (cov_2n9estnvby().b[19][1]++, 'high')),
      concentrations: concentrations.slice(0, 10),
      riskMetrics: {
        diversificationRisk: 1.0 - diversificationScore,
        concentrationRisk:
        /* istanbul ignore next */
        (cov_2n9estnvby().b[20][0]++, concentrations[0]?.concentration) ||
        /* istanbul ignore next */
        (cov_2n9estnvby().b[20][1]++, 0),
        portfolioRisk: portfolioRisk,
        overallRiskScore: Math.max(portfolioRisk,
        /* istanbul ignore next */
        (cov_2n9estnvby().b[21][0]++, concentrations[0]?.concentration) ||
        /* istanbul ignore next */
        (cov_2n9estnvby().b[21][1]++, 0))
      },
      recommendations: this.generatePortfolioRecommendations({
        positionCount,
        diversificationScore,
        portfolioRisk,
        maxConcentration:
        /* istanbul ignore next */
        (cov_2n9estnvby().b[22][0]++, concentrations[0]?.concentration) ||
        /* istanbul ignore next */
        (cov_2n9estnvby().b[22][1]++, 0)
      }),
      metadata: {
        timestamp: new Date().toISOString(),
        processingTime: Date.now() - startTime
      }
    });
    const response =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[90]++, responseFormatter.success(responseData, 'Portfolio risk analysis completed successfully'));
    /* istanbul ignore next */
    cov_2n9estnvby().s[91]++;
    logger.info(`✅ [${requestId}] Portfolio risk analysis completed`, {
      positionCount: positionCount,
      portfolioRisk: portfolioRisk,
      diversificationScore: diversificationScore,
      totalTime: Date.now() - startTime
    });
    /* istanbul ignore next */
    cov_2n9estnvby().s[92]++;
    res.json(response);
  } catch (error) {
    /* istanbul ignore next */
    cov_2n9estnvby().s[93]++;
    logger.error(`❌ [${requestId}] Portfolio risk analysis failed`, {
      error: error.message,
      errorStack: error.stack,
      totalTime: Date.now() - startTime
    });
    const response =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[94]++, responseFormatter.error('Failed to analyze portfolio risk', 500, {
      details: error.message
    }));
    /* istanbul ignore next */
    cov_2n9estnvby().s[95]++;
    res.status(500).json(response);
  }
});

// Get risk management settings and limits
/* istanbul ignore next */
cov_2n9estnvby().s[96]++;
router.get('/settings', async (req, res) => {
  /* istanbul ignore next */
  cov_2n9estnvby().f[22]++;
  const requestId =
  /* istanbul ignore next */
  (cov_2n9estnvby().s[97]++,
  /* istanbul ignore next */
  (cov_2n9estnvby().b[23][0]++, res.locals.requestId) ||
  /* istanbul ignore next */
  (cov_2n9estnvby().b[23][1]++, 'unknown'));
  /* istanbul ignore next */
  cov_2n9estnvby().s[98]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[99]++, req.user.sub);
    /* istanbul ignore next */
    cov_2n9estnvby().s[100]++;
    logger.info(`⚙️ [${requestId}] Fetching risk management settings`, {
      userId: userId ?
      /* istanbul ignore next */
      (cov_2n9estnvby().b[24][0]++, `${userId.substring(0, 8)}...`) :
      /* istanbul ignore next */
      (cov_2n9estnvby().b[24][1]++, 'unknown')
    });
    const riskSettings =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[101]++, {
      positionSizing: {
        defaultRiskPerTrade: 0.02,
        maxRiskPerTrade: 0.1,
        defaultMaxPositionSize: 0.1,
        maxPositionSize: 0.5
      },
      concentrationLimits: {
        maxSinglePosition: 0.15,
        maxSectorExposure: {
          'Technology': 0.30,
          'Healthcare': 0.25,
          'Financial Services': 0.20,
          'Consumer Discretionary': 0.20,
          'Industrials': 0.15,
          'Energy': 0.10,
          'Materials': 0.10,
          'Real Estate': 0.10,
          'Utilities': 0.10,
          'Consumer Staples': 0.15,
          'Communication Services': 0.15,
          'Other': 0.05
        }
      },
      stopLossSettings: {
        defaultStopLoss: 0.05,
        maxStopLoss: 0.20,
        defaultTakeProfit: 0.10,
        defaultRiskRewardRatio: 2.0,
        minRiskRewardRatio: 1.0,
        maxRiskRewardRatio: 5.0
      },
      riskLevels: {
        low: {
          threshold: 0.3,
          description: 'Conservative risk profile'
        },
        moderate: {
          threshold: 0.6,
          description: 'Balanced risk profile'
        },
        high: {
          threshold: 0.8,
          description: 'Aggressive risk profile'
        },
        extreme: {
          threshold: 1.0,
          description: 'Very high risk profile'
        }
      },
      diversificationTargets: {
        minPositions: 10,
        optimalPositions: 20,
        maxPositions: 50,
        minSectors: 5,
        optimalSectors: 8
      }
    });
    const response =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[102]++, responseFormatter.success(riskSettings, 'Risk management settings retrieved successfully'));
    /* istanbul ignore next */
    cov_2n9estnvby().s[103]++;
    res.json(response);
  } catch (error) {
    /* istanbul ignore next */
    cov_2n9estnvby().s[104]++;
    logger.error(`❌ [${requestId}] Error retrieving risk settings`, {
      error: error.message,
      errorStack: error.stack
    });
    const response =
    /* istanbul ignore next */
    (cov_2n9estnvby().s[105]++, responseFormatter.error('Failed to retrieve risk management settings', 500, {
      details: error.message
    }));
    /* istanbul ignore next */
    cov_2n9estnvby().s[106]++;
    res.status(500).json(response);
  }
});

// Helper method for portfolio recommendations
function generatePortfolioRecommendations({
  positionCount,
  diversificationScore,
  portfolioRisk,
  maxConcentration
}) {
  /* istanbul ignore next */
  cov_2n9estnvby().f[23]++;
  const recommendations =
  /* istanbul ignore next */
  (cov_2n9estnvby().s[107]++, []);
  /* istanbul ignore next */
  cov_2n9estnvby().s[108]++;
  if (positionCount < 10) {
    /* istanbul ignore next */
    cov_2n9estnvby().b[25][0]++;
    cov_2n9estnvby().s[109]++;
    recommendations.push({
      type: 'diversification',
      priority: 'high',
      message: 'Consider adding more positions to improve diversification',
      target: `Add ${10 - positionCount} more positions`
    });
  } else
  /* istanbul ignore next */
  {
    cov_2n9estnvby().b[25][1]++;
  }
  cov_2n9estnvby().s[110]++;
  if (maxConcentration > 0.15) {
    /* istanbul ignore next */
    cov_2n9estnvby().b[26][0]++;
    cov_2n9estnvby().s[111]++;
    recommendations.push({
      type: 'concentration',
      priority: 'high',
      message: 'Reduce concentration in largest position',
      target: `Reduce largest position to under 15%`
    });
  } else
  /* istanbul ignore next */
  {
    cov_2n9estnvby().b[26][1]++;
  }
  cov_2n9estnvby().s[112]++;
  if (portfolioRisk > 0.7) {
    /* istanbul ignore next */
    cov_2n9estnvby().b[27][0]++;
    cov_2n9estnvby().s[113]++;
    recommendations.push({
      type: 'risk_reduction',
      priority: 'medium',
      message: 'Consider reducing overall portfolio risk',
      target: 'Improve diversification and reduce position sizes'
    });
  } else
  /* istanbul ignore next */
  {
    cov_2n9estnvby().b[27][1]++;
  }
  cov_2n9estnvby().s[114]++;
  if (diversificationScore < 0.5) {
    /* istanbul ignore next */
    cov_2n9estnvby().b[28][0]++;
    cov_2n9estnvby().s[115]++;
    recommendations.push({
      type: 'diversification',
      priority: 'medium',
      message: 'Portfolio needs better diversification',
      target: 'Add positions in different sectors'
    });
  } else
  /* istanbul ignore next */
  {
    cov_2n9estnvby().b[28][1]++;
  }
  cov_2n9estnvby().s[116]++;
  return recommendations;
}
/* istanbul ignore next */
cov_2n9estnvby().s[117]++;
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,