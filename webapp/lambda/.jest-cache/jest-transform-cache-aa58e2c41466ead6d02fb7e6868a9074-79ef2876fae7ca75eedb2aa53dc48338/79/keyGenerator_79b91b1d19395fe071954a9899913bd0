a1600169a91bd47e1d25e3fbf3bb8d6b
#!/usr/bin/env node
/**
 * Secure Key Generation Utility
 * Generates cryptographically secure keys for API encryption and JWT signing
 */
/* istanbul ignore next */
function cov_o86whbw9d() {
  var path = "/home/stocks/algo/webapp/lambda/utils/keyGenerator.js";
  var hash = "bd0be1f76569766feb908773398a0744b839d3cb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/utils/keyGenerator.js",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 32
        }
      },
      "1": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 53
        }
      },
      "2": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 53
        }
      },
      "3": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 53
        }
      },
      "4": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 50
        }
      },
      "5": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "6": {
        start: {
          line: 49,
          column: 23
        },
        end: {
          line: 49,
          column: 49
        }
      },
      "7": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 41
        }
      },
      "8": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 21
        }
      },
      "9": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 72,
          column: 6
        }
      },
      "10": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 98,
          column: 2
        }
      },
      "11": {
        start: {
          line: 102,
          column: 0
        },
        end: {
          line: 140,
          column: 1
        }
      },
      "12": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 103,
          column: 68
        }
      },
      "13": {
        start: {
          line: 105,
          column: 17
        },
        end: {
          line: 105,
          column: 34
        }
      },
      "14": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 107,
          column: 64
        }
      },
      "15": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 108,
          column: 90
        }
      },
      "16": {
        start: {
          line: 109,
          column: 4
        },
        end: {
          line: 109,
          column: 78
        }
      },
      "17": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 110,
          column: 88
        }
      },
      "18": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 112,
          column: 52
        }
      },
      "19": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 113,
          column: 57
        }
      },
      "20": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 114,
          column: 41
        }
      },
      "21": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 116,
          column: 38
        }
      },
      "22": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 117,
          column: 93
        }
      },
      "23": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 118,
          column: 64
        }
      },
      "24": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 119,
          column: 58
        }
      },
      "25": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 120,
          column: 62
        }
      },
      "26": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 121,
          column: 61
        }
      },
      "27": {
        start: {
          line: 124,
          column: 24
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "28": {
        start: {
          line: 131,
          column: 4
        },
        end: {
          line: 131,
          column: 38
        }
      },
      "29": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 134,
          column: 7
        }
      },
      "30": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 93
        }
      },
      "31": {
        start: {
          line: 136,
          column: 21
        },
        end: {
          line: 136,
          column: 52
        }
      },
      "32": {
        start: {
          line: 136,
          column: 44
        },
        end: {
          line: 136,
          column: 51
        }
      },
      "33": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 137,
          column: 108
        }
      },
      "34": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 139,
          column: 35
        }
      },
      "35": {
        start: {
          line: 142,
          column: 0
        },
        end: {
          line: 150,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "generateApiEncryptionKey",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 33
          }
        },
        loc: {
          start: {
            line: 13,
            column: 36
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "generateJwtSecret",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 26
          }
        },
        loc: {
          start: {
            line: 21,
            column: 29
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 21
      },
      "2": {
        name: "generateSessionKey",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 27
          }
        },
        loc: {
          start: {
            line: 29,
            column: 30
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 29
      },
      "3": {
        name: "generateUserSalt",
        decl: {
          start: {
            line: 37,
            column: 9
          },
          end: {
            line: 37,
            column: 25
          }
        },
        loc: {
          start: {
            line: 37,
            column: 28
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 37
      },
      "4": {
        name: "validateKeyEntropy",
        decl: {
          start: {
            line: 47,
            column: 9
          },
          end: {
            line: 47,
            column: 27
          }
        },
        loc: {
          start: {
            line: 47,
            column: 48
          },
          end: {
            line: 54,
            column: 1
          }
        },
        line: 47
      },
      "5": {
        name: "generateAllKeys",
        decl: {
          start: {
            line: 60,
            column: 9
          },
          end: {
            line: 60,
            column: 24
          }
        },
        loc: {
          start: {
            line: 60,
            column: 27
          },
          end: {
            line: 73,
            column: 1
          }
        },
        line: 60
      },
      "6": {
        name: "generateEnvFormat",
        decl: {
          start: {
            line: 80,
            column: 9
          },
          end: {
            line: 80,
            column: 26
          }
        },
        loc: {
          start: {
            line: 80,
            column: 33
          },
          end: {
            line: 99,
            column: 1
          }
        },
        line: 80
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 132,
            column: 24
          },
          end: {
            line: 132,
            column: 25
          }
        },
        loc: {
          start: {
            line: 132,
            column: 29
          },
          end: {
            line: 134,
            column: 5
          }
        },
        line: 132
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 136,
            column: 39
          },
          end: {
            line: 136,
            column: 40
          }
        },
        loc: {
          start: {
            line: 136,
            column: 44
          },
          end: {
            line: 136,
            column: 51
          }
        },
        line: 136
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 47,
            column: 33
          },
          end: {
            line: 47,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 47,
            column: 44
          },
          end: {
            line: 47,
            column: 46
          }
        }],
        line: 47
      },
      "1": {
        loc: {
          start: {
            line: 102,
            column: 0
          },
          end: {
            line: 140,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 0
          },
          end: {
            line: 140,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "2": {
        loc: {
          start: {
            line: 133,
            column: 26
          },
          end: {
            line: 133,
            column: 45
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 133,
            column: 36
          },
          end: {
            line: 133,
            column: 39
          }
        }, {
          start: {
            line: 133,
            column: 42
          },
          end: {
            line: 133,
            column: 45
          }
        }],
        line: 133
      },
      "3": {
        loc: {
          start: {
            line: 133,
            column: 60
          },
          end: {
            line: 133,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 133,
            column: 70
          },
          end: {
            line: 133,
            column: 77
          }
        }, {
          start: {
            line: 133,
            column: 80
          },
          end: {
            line: 133,
            column: 89
          }
        }],
        line: 133
      },
      "4": {
        loc: {
          start: {
            line: 137,
            column: 21
          },
          end: {
            line: 137,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 137,
            column: 32
          },
          end: {
            line: 137,
            column: 69
          }
        }, {
          start: {
            line: 137,
            column: 72
          },
          end: {
            line: 137,
            column: 104
          }
        }],
        line: 137
      },
      "5": {
        loc: {
          start: {
            line: 139,
            column: 17
          },
          end: {
            line: 139,
            column: 33
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 139,
            column: 28
          },
          end: {
            line: 139,
            column: 29
          }
        }, {
          start: {
            line: 139,
            column: 32
          },
          end: {
            line: 139,
            column: 33
          }
        }],
        line: 139
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bd0be1f76569766feb908773398a0744b839d3cb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_o86whbw9d = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_o86whbw9d();
const crypto =
/* istanbul ignore next */
(cov_o86whbw9d().s[0]++, require('crypto'));

/**
 * Generate a cryptographically secure API encryption key
 * @returns {string} Base64 encoded 256-bit key
 */
function generateApiEncryptionKey() {
  /* istanbul ignore next */
  cov_o86whbw9d().f[0]++;
  cov_o86whbw9d().s[1]++;
  return crypto.randomBytes(32).toString('base64');
}

/**
 * Generate a JWT signing secret
 * @returns {string} Base64 encoded 512-bit key
 */
function generateJwtSecret() {
  /* istanbul ignore next */
  cov_o86whbw9d().f[1]++;
  cov_o86whbw9d().s[2]++;
  return crypto.randomBytes(64).toString('base64');
}

/**
 * Generate session encryption key
 * @returns {string} Base64 encoded 256-bit key
 */
function generateSessionKey() {
  /* istanbul ignore next */
  cov_o86whbw9d().f[2]++;
  cov_o86whbw9d().s[3]++;
  return crypto.randomBytes(32).toString('base64');
}

/**
 * Generate a secure user salt
 * @returns {string} Hex encoded 256-bit salt
 */
function generateUserSalt() {
  /* istanbul ignore next */
  cov_o86whbw9d().f[3]++;
  cov_o86whbw9d().s[4]++;
  return crypto.randomBytes(32).toString('hex');
}

/**
 * Validate that a key has sufficient entropy
 * @param {string} key - The key to validate
 * @param {number} minBytes - Minimum bytes of entropy required
 * @returns {boolean} True if key has sufficient entropy
 */
function validateKeyEntropy(key, minBytes =
/* istanbul ignore next */
(cov_o86whbw9d().b[0][0]++, 32)) {
  /* istanbul ignore next */
  cov_o86whbw9d().f[4]++;
  cov_o86whbw9d().s[5]++;
  try {
    const buffer =
    /* istanbul ignore next */
    (cov_o86whbw9d().s[6]++, Buffer.from(key, 'base64'));
    /* istanbul ignore next */
    cov_o86whbw9d().s[7]++;
    return buffer.length >= minBytes;
  } catch (error) {
    /* istanbul ignore next */
    cov_o86whbw9d().s[8]++;
    return false;
  }
}

/**
 * Generate all required keys for the application
 * @returns {object} Object containing all generated keys
 */
function generateAllKeys() {
  /* istanbul ignore next */
  cov_o86whbw9d().f[5]++;
  cov_o86whbw9d().s[9]++;
  return {
    API_KEY_ENCRYPTION_SECRET: generateApiEncryptionKey(),
    JWT_SECRET: generateJwtSecret(),
    SESSION_SECRET: generateSessionKey(),
    BACKUP_API_KEY_ENCRYPTION_SECRET: generateApiEncryptionKey(),
    timestamp: new Date().toISOString(),
    entropy_info: {
      api_encryption_bits: 256,
      jwt_secret_bits: 512,
      session_secret_bits: 256
    }
  };
}

/**
 * Generate environment variables format
 * @param {object} keys - Keys object from generateAllKeys()
 * @returns {string} Environment variables format
 */
function generateEnvFormat(keys) {
  /* istanbul ignore next */
  cov_o86whbw9d().f[6]++;
  cov_o86whbw9d().s[10]++;
  return `# Cryptographic Keys - Generated ${keys.timestamp}
# Store these securely and never commit to version control

# Primary API key encryption secret (256-bit)
API_KEY_ENCRYPTION_SECRET="${keys.API_KEY_ENCRYPTION_SECRET}"

# JWT signing secret (512-bit) - if using custom JWT implementation
JWT_SECRET="${keys.JWT_SECRET}"

# Session encryption secret (256-bit)
SESSION_SECRET="${keys.SESSION_SECRET}"

# Backup API key encryption secret for key rotation
BACKUP_API_KEY_ENCRYPTION_SECRET="${keys.BACKUP_API_KEY_ENCRYPTION_SECRET}"

# Key rotation date for tracking
KEY_GENERATION_DATE="${keys.timestamp}"
`;
}

// If run directly, generate and display keys
/* istanbul ignore next */
cov_o86whbw9d().s[11]++;
if (require.main === module) {
  /* istanbul ignore next */
  cov_o86whbw9d().b[1][0]++;
  cov_o86whbw9d().s[12]++;
  console.log('🔐 Generating cryptographically secure keys...\n');
  const keys =
  /* istanbul ignore next */
  (cov_o86whbw9d().s[13]++, generateAllKeys());
  /* istanbul ignore next */
  cov_o86whbw9d().s[14]++;
  console.log('✅ Generated keys with the following entropy:');
  /* istanbul ignore next */
  cov_o86whbw9d().s[15]++;
  console.log(`   • API Encryption Key: ${keys.entropy_info.api_encryption_bits} bits`);
  /* istanbul ignore next */
  cov_o86whbw9d().s[16]++;
  console.log(`   • JWT Secret: ${keys.entropy_info.jwt_secret_bits} bits`);
  /* istanbul ignore next */
  cov_o86whbw9d().s[17]++;
  console.log(`   • Session Secret: ${keys.entropy_info.session_secret_bits} bits\n`);
  /* istanbul ignore next */
  cov_o86whbw9d().s[18]++;
  console.log('📋 Environment Variables Format:');
  /* istanbul ignore next */
  cov_o86whbw9d().s[19]++;
  console.log('=====================================');
  /* istanbul ignore next */
  cov_o86whbw9d().s[20]++;
  console.log(generateEnvFormat(keys));
  /* istanbul ignore next */
  cov_o86whbw9d().s[21]++;
  console.log('🔒 SECURITY NOTES:');
  /* istanbul ignore next */
  cov_o86whbw9d().s[22]++;
  console.log('• Store these keys in AWS Secrets Manager or secure environment variables');
  /* istanbul ignore next */
  cov_o86whbw9d().s[23]++;
  console.log('• Never commit these keys to version control');
  /* istanbul ignore next */
  cov_o86whbw9d().s[24]++;
  console.log('• Implement key rotation every 90 days');
  /* istanbul ignore next */
  cov_o86whbw9d().s[25]++;
  console.log('• Use the backup key for seamless rotation');
  /* istanbul ignore next */
  cov_o86whbw9d().s[26]++;
  console.log('• Monitor key usage and access patterns\n');

  // Validate generated keys
  const validations =
  /* istanbul ignore next */
  (cov_o86whbw9d().s[27]++, [{
    name: 'API Encryption',
    valid: validateKeyEntropy(keys.API_KEY_ENCRYPTION_SECRET, 32)
  }, {
    name: 'JWT Secret',
    valid: validateKeyEntropy(keys.JWT_SECRET, 64)
  }, {
    name: 'Session Secret',
    valid: validateKeyEntropy(keys.SESSION_SECRET, 32)
  }, {
    name: 'Backup API Encryption',
    valid: validateKeyEntropy(keys.BACKUP_API_KEY_ENCRYPTION_SECRET, 32)
  }]);
  /* istanbul ignore next */
  cov_o86whbw9d().s[28]++;
  console.log('🧪 Key Validation:');
  /* istanbul ignore next */
  cov_o86whbw9d().s[29]++;
  validations.forEach(v => {
    /* istanbul ignore next */
    cov_o86whbw9d().f[7]++;
    cov_o86whbw9d().s[30]++;
    console.log(`   ${v.valid ?
    /* istanbul ignore next */
    (cov_o86whbw9d().b[2][0]++, '✅') :
    /* istanbul ignore next */
    (cov_o86whbw9d().b[2][1]++, '❌')} ${v.name}: ${v.valid ?
    /* istanbul ignore next */
    (cov_o86whbw9d().b[3][0]++, 'Valid') :
    /* istanbul ignore next */
    (cov_o86whbw9d().b[3][1]++, 'Invalid')}`);
  });
  const allValid =
  /* istanbul ignore next */
  (cov_o86whbw9d().s[31]++, validations.every(v => {
    /* istanbul ignore next */
    cov_o86whbw9d().f[8]++;
    cov_o86whbw9d().s[32]++;
    return v.valid;
  }));
  /* istanbul ignore next */
  cov_o86whbw9d().s[33]++;
  console.log(`\n${allValid ?
  /* istanbul ignore next */
  (cov_o86whbw9d().b[4][0]++, '🎉 All keys generated successfully!') :
  /* istanbul ignore next */
  (cov_o86whbw9d().b[4][1]++, '❌ Some keys failed validation!')}`);
  /* istanbul ignore next */
  cov_o86whbw9d().s[34]++;
  process.exit(allValid ?
  /* istanbul ignore next */
  (cov_o86whbw9d().b[5][0]++, 0) :
  /* istanbul ignore next */
  (cov_o86whbw9d().b[5][1]++, 1));
} else
/* istanbul ignore next */
{
  cov_o86whbw9d().b[1][1]++;
}
cov_o86whbw9d().s[35]++;
module.exports = {
  generateApiEncryptionKey,
  generateJwtSecret,
  generateSessionKey,
  generateUserSalt,
  generateAllKeys,
  generateEnvFormat,
  validateKeyEntropy
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,