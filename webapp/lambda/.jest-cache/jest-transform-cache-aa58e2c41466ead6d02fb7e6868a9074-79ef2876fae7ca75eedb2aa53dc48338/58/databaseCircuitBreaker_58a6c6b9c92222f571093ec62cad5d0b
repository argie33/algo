fba5e5c474f50da14edba72b7c7f7ebc
/* istanbul ignore next */
function cov_11ohg0qblo() {
  var path = "/home/stocks/algo/webapp/lambda/utils/databaseCircuitBreaker.js";
  var hash = "3b0f87ea4f1c33781cd8f419dd2ab51cc36ba731";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/utils/databaseCircuitBreaker.js",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 26
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 22
        }
      },
      "2": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 29
        }
      },
      "3": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 26
        }
      },
      "4": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 38
        }
      },
      "5": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "6": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 33
        }
      },
      "7": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 31
        }
      },
      "8": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 38
        }
      },
      "9": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 27
        }
      },
      "10": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 28
        }
      },
      "11": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 27
        }
      },
      "12": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 29
        }
      },
      "13": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 25
        }
      },
      "14": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "15": {
        start: {
          line: 30,
          column: 35
        },
        end: {
          line: 30,
          column: 68
        }
      },
      "16": {
        start: {
          line: 31,
          column: 6
        },
        end: {
          line: 39,
          column: 7
        }
      },
      "17": {
        start: {
          line: 32,
          column: 30
        },
        end: {
          line: 32,
          column: 93
        }
      },
      "18": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 246
        }
      },
      "19": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 33
        }
      },
      "20": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 30
        }
      },
      "21": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 84
        }
      },
      "22": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "23": {
        start: {
          line: 43,
          column: 24
        },
        end: {
          line: 43,
          column: 34
        }
      },
      "24": {
        start: {
          line: 44,
          column: 21
        },
        end: {
          line: 44,
          column: 38
        }
      },
      "25": {
        start: {
          line: 45,
          column: 23
        },
        end: {
          line: 45,
          column: 45
        }
      },
      "26": {
        start: {
          line: 48,
          column: 6
        },
        end: {
          line: 48,
          column: 50
        }
      },
      "27": {
        start: {
          line: 50,
          column: 6
        },
        end: {
          line: 50,
          column: 20
        }
      },
      "28": {
        start: {
          line: 53,
          column: 6
        },
        end: {
          line: 53,
          column: 47
        }
      },
      "29": {
        start: {
          line: 54,
          column: 6
        },
        end: {
          line: 54,
          column: 18
        }
      },
      "30": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 26
        }
      },
      "31": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 38
        }
      },
      "32": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 58
        }
      },
      "33": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 77,
          column: 5
        }
      },
      "34": {
        start: {
          line: 65,
          column: 6
        },
        end: {
          line: 65,
          column: 26
        }
      },
      "35": {
        start: {
          line: 66,
          column: 6
        },
        end: {
          line: 66,
          column: 142
        }
      },
      "36": {
        start: {
          line: 68,
          column: 6
        },
        end: {
          line: 73,
          column: 7
        }
      },
      "37": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 30
        }
      },
      "38": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 26
        }
      },
      "39": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 30
        }
      },
      "40": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 76
        }
      },
      "41": {
        start: {
          line: 74,
          column: 11
        },
        end: {
          line: 77,
          column: 5
        }
      },
      "42": {
        start: {
          line: 76,
          column: 6
        },
        end: {
          line: 76,
          column: 53
        }
      },
      "43": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 81,
          column: 25
        }
      },
      "44": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 82,
          column: 20
        }
      },
      "45": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 83,
          column: 38
        }
      },
      "46": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 85,
          column: 66
        }
      },
      "47": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 87,
          column: 158
        }
      },
      "48": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "49": {
        start: {
          line: 91,
          column: 6
        },
        end: {
          line: 91,
          column: 26
        }
      },
      "50": {
        start: {
          line: 92,
          column: 6
        },
        end: {
          line: 92,
          column: 28
        }
      },
      "51": {
        start: {
          line: 93,
          column: 6
        },
        end: {
          line: 93,
          column: 161
        }
      },
      "52": {
        start: {
          line: 94,
          column: 11
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "53": {
        start: {
          line: 95,
          column: 6
        },
        end: {
          line: 95,
          column: 26
        }
      },
      "54": {
        start: {
          line: 96,
          column: 6
        },
        end: {
          line: 96,
          column: 173
        }
      },
      "55": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 107,
          column: 7
        }
      },
      "56": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 112,
          column: 5
        }
      },
      "57": {
        start: {
          line: 111,
          column: 6
        },
        end: {
          line: 111,
          column: 60
        }
      },
      "58": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 116,
          column: 26
        }
      },
      "59": {
        start: {
          line: 117,
          column: 33
        },
        end: {
          line: 117,
          column: 59
        }
      },
      "60": {
        start: {
          line: 118,
          column: 33
        },
        end: {
          line: 118,
          column: 59
        }
      },
      "61": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 135,
          column: 6
        }
      },
      "62": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 140,
          column: 68
        }
      },
      "63": {
        start: {
          line: 141,
          column: 4
        },
        end: {
          line: 141,
          column: 26
        }
      },
      "64": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 142,
          column: 22
        }
      },
      "65": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 143,
          column: 26
        }
      },
      "66": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 144,
          column: 29
        }
      },
      "67": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 145,
          column: 59
        }
      },
      "68": {
        start: {
          line: 149,
          column: 0
        },
        end: {
          line: 149,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 2
          },
          end: {
            line: 5,
            column: 3
          }
        },
        loc: {
          start: {
            line: 5,
            column: 16
          },
          end: {
            line: 23,
            column: 3
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 25,
            column: 2
          },
          end: {
            line: 25,
            column: 3
          }
        },
        loc: {
          start: {
            line: 25,
            column: 65
          },
          end: {
            line: 56,
            column: 3
          }
        },
        line: 25
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 58,
            column: 2
          },
          end: {
            line: 58,
            column: 3
          }
        },
        loc: {
          start: {
            line: 58,
            column: 41
          },
          end: {
            line: 78,
            column: 3
          }
        },
        line: 58
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 80,
            column: 2
          },
          end: {
            line: 80,
            column: 3
          }
        },
        loc: {
          start: {
            line: 80,
            column: 38
          },
          end: {
            line: 98,
            column: 3
          }
        },
        line: 80
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 100,
            column: 2
          },
          end: {
            line: 100,
            column: 3
          }
        },
        loc: {
          start: {
            line: 100,
            column: 56
          },
          end: {
            line: 113,
            column: 3
          }
        },
        line: 100
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 115,
            column: 2
          },
          end: {
            line: 115,
            column: 3
          }
        },
        loc: {
          start: {
            line: 115,
            column: 14
          },
          end: {
            line: 136,
            column: 3
          }
        },
        line: 115
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 139,
            column: 2
          },
          end: {
            line: 139,
            column: 3
          }
        },
        loc: {
          start: {
            line: 139,
            column: 15
          },
          end: {
            line: 146,
            column: 3
          }
        },
        line: 139
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 27
          },
          end: {
            line: 25,
            column: 63
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 43
          },
          end: {
            line: 25,
            column: 63
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 6
          },
          end: {
            line: 39,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 6
          },
          end: {
            line: 39,
            column: 7
          }
        }, {
          start: {
            line: 34,
            column: 13
          },
          end: {
            line: 39,
            column: 7
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 77,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 77,
            column: 5
          }
        }, {
          start: {
            line: 74,
            column: 11
          },
          end: {
            line: 77,
            column: 5
          }
        }],
        line: 64
      },
      "4": {
        loc: {
          start: {
            line: 68,
            column: 6
          },
          end: {
            line: 73,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 6
          },
          end: {
            line: 73,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "5": {
        loc: {
          start: {
            line: 74,
            column: 11
          },
          end: {
            line: 77,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 11
          },
          end: {
            line: 77,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "6": {
        loc: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        }, {
          start: {
            line: 94,
            column: 11
          },
          end: {
            line: 97,
            column: 5
          }
        }],
        line: 90
      },
      "7": {
        loc: {
          start: {
            line: 94,
            column: 11
          },
          end: {
            line: 97,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 11
          },
          end: {
            line: 97,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "8": {
        loc: {
          start: {
            line: 100,
            column: 42
          },
          end: {
            line: 100,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 100,
            column: 50
          },
          end: {
            line: 100,
            column: 54
          }
        }],
        line: 100
      },
      "9": {
        loc: {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "10": {
        loc: {
          start: {
            line: 131,
            column: 19
          },
          end: {
            line: 131,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 131,
            column: 44
          },
          end: {
            line: 131,
            column: 109
          }
        }, {
          start: {
            line: 131,
            column: 112
          },
          end: {
            line: 131,
            column: 116
          }
        }],
        line: 131
      },
      "11": {
        loc: {
          start: {
            line: 132,
            column: 22
          },
          end: {
            line: 132,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 132,
            column: 46
          },
          end: {
            line: 132,
            column: 102
          }
        }, {
          start: {
            line: 132,
            column: 105
          },
          end: {
            line: 132,
            column: 106
          }
        }],
        line: 132
      },
      "12": {
        loc: {
          start: {
            line: 133,
            column: 17
          },
          end: {
            line: 133,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 133,
            column: 17
          },
          end: {
            line: 133,
            column: 40
          }
        }, {
          start: {
            line: 133,
            column: 44
          },
          end: {
            line: 133,
            column: 87
          }
        }],
        line: 133
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3b0f87ea4f1c33781cd8f419dd2ab51cc36ba731"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_11ohg0qblo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_11ohg0qblo();
/**
 * Enhanced Database Circuit Breaker for Lambda Environment
 */
class DatabaseCircuitBreaker {
  constructor() {
    /* istanbul ignore next */
    cov_11ohg0qblo().f[0]++;
    cov_11ohg0qblo().s[0]++;
    this.state = 'closed'; // 'closed', 'open', 'half-open'
    /* istanbul ignore next */
    cov_11ohg0qblo().s[1]++;
    this.failures = 0;
    /* istanbul ignore next */
    cov_11ohg0qblo().s[2]++;
    this.lastFailureTime = 0;
    /* istanbul ignore next */
    cov_11ohg0qblo().s[3]++;
    this.successCount = 0;
    /* istanbul ignore next */
    cov_11ohg0qblo().s[4]++;
    this.lastSuccessTime = Date.now();

    // PRODUCTION FIX: More resilient thresholds  
    /* istanbul ignore next */
    cov_11ohg0qblo().s[5]++;
    this.failureThreshold = 20; // PRODUCTION FIX: Increased from 10 to 20
    /* istanbul ignore next */
    cov_11ohg0qblo().s[6]++;
    this.recoveryTimeout = 10000; // PRODUCTION FIX: Reduced from 30s to 10s
    /* istanbul ignore next */
    cov_11ohg0qblo().s[7]++;
    this.halfOpenMaxCalls = 10; // PRODUCTION FIX: Increased from 5 to 10
    /* istanbul ignore next */
    cov_11ohg0qblo().s[8]++;
    this.halfOpenSuccessThreshold = 3; // Keep 3 successes to close

    // Health tracking
    /* istanbul ignore next */
    cov_11ohg0qblo().s[9]++;
    this.totalRequests = 0;
    /* istanbul ignore next */
    cov_11ohg0qblo().s[10]++;
    this.totalSuccesses = 0;
    /* istanbul ignore next */
    cov_11ohg0qblo().s[11]++;
    this.totalFailures = 0;
    /* istanbul ignore next */
    cov_11ohg0qblo().s[12]++;
    this.requestHistory = [];
  }
  async execute(operation, operationName =
  /* istanbul ignore next */
  (cov_11ohg0qblo().b[0][0]++, 'database-operation')) {
    /* istanbul ignore next */
    cov_11ohg0qblo().f[1]++;
    cov_11ohg0qblo().s[13]++;
    this.totalRequests++;

    // Check if circuit is open
    /* istanbul ignore next */
    cov_11ohg0qblo().s[14]++;
    if (this.state === 'open') {
      /* istanbul ignore next */
      cov_11ohg0qblo().b[1][0]++;
      const timeSinceLastFailure =
      /* istanbul ignore next */
      (cov_11ohg0qblo().s[15]++, Date.now() - this.lastFailureTime);
      /* istanbul ignore next */
      cov_11ohg0qblo().s[16]++;
      if (timeSinceLastFailure < this.recoveryTimeout) {
        /* istanbul ignore next */
        cov_11ohg0qblo().b[2][0]++;
        const remainingTime =
        /* istanbul ignore next */
        (cov_11ohg0qblo().s[17]++, Math.ceil((this.recoveryTimeout - timeSinceLastFailure) / 1000));
        /* istanbul ignore next */
        cov_11ohg0qblo().s[18]++;
        throw new Error('Circuit breaker is OPEN. Database unavailable for ' + remainingTime + ' more seconds. Reason: Too many connection failures (' + this.failures + ' failures). Last failure: ' + new Date(this.lastFailureTime).toISOString());
      } else {
        /* istanbul ignore next */
        cov_11ohg0qblo().b[2][1]++;
        cov_11ohg0qblo().s[19]++;
        // Transition to half-open for testing
        this.state = 'half-open';
        /* istanbul ignore next */
        cov_11ohg0qblo().s[20]++;
        this.successCount = 0;
        /* istanbul ignore next */
        cov_11ohg0qblo().s[21]++;
        console.log('🔄 Circuit breaker transitioning to HALF-OPEN for testing...');
      }
    } else
    /* istanbul ignore next */
    {
      cov_11ohg0qblo().b[1][1]++;
    }
    cov_11ohg0qblo().s[22]++;
    try {
      const startTime =
      /* istanbul ignore next */
      (cov_11ohg0qblo().s[23]++, Date.now());
      const result =
      /* istanbul ignore next */
      (cov_11ohg0qblo().s[24]++, await operation());
      const duration =
      /* istanbul ignore next */
      (cov_11ohg0qblo().s[25]++, Date.now() - startTime);

      // Record success
      /* istanbul ignore next */
      cov_11ohg0qblo().s[26]++;
      this.recordSuccess(operationName, duration);
      /* istanbul ignore next */
      cov_11ohg0qblo().s[27]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_11ohg0qblo().s[28]++;
      // Record failure
      this.recordFailure(operationName, error);
      /* istanbul ignore next */
      cov_11ohg0qblo().s[29]++;
      throw error;
    }
  }
  recordSuccess(operationName, duration) {
    /* istanbul ignore next */
    cov_11ohg0qblo().f[2]++;
    cov_11ohg0qblo().s[30]++;
    this.totalSuccesses++;
    /* istanbul ignore next */
    cov_11ohg0qblo().s[31]++;
    this.lastSuccessTime = Date.now();
    /* istanbul ignore next */
    cov_11ohg0qblo().s[32]++;
    this.addToHistory('success', operationName, duration);
    /* istanbul ignore next */
    cov_11ohg0qblo().s[33]++;
    if (this.state === 'half-open') {
      /* istanbul ignore next */
      cov_11ohg0qblo().b[3][0]++;
      cov_11ohg0qblo().s[34]++;
      this.successCount++;
      /* istanbul ignore next */
      cov_11ohg0qblo().s[35]++;
      console.log('✅ Circuit breaker half-open success ' + this.successCount + '/' + this.halfOpenSuccessThreshold + ' for ' + operationName);
      /* istanbul ignore next */
      cov_11ohg0qblo().s[36]++;
      if (this.successCount >= this.halfOpenSuccessThreshold) {
        /* istanbul ignore next */
        cov_11ohg0qblo().b[4][0]++;
        cov_11ohg0qblo().s[37]++;
        this.state = 'closed';
        /* istanbul ignore next */
        cov_11ohg0qblo().s[38]++;
        this.failures = 0;
        /* istanbul ignore next */
        cov_11ohg0qblo().s[39]++;
        this.successCount = 0;
        /* istanbul ignore next */
        cov_11ohg0qblo().s[40]++;
        console.log('🔓 Circuit breaker CLOSED - database access restored');
      } else
      /* istanbul ignore next */
      {
        cov_11ohg0qblo().b[4][1]++;
      }
    } else {
      /* istanbul ignore next */
      cov_11ohg0qblo().b[3][1]++;
      cov_11ohg0qblo().s[41]++;
      if (this.state === 'closed') {
        /* istanbul ignore next */
        cov_11ohg0qblo().b[5][0]++;
        cov_11ohg0qblo().s[42]++;
        // Reset failure count on successful operations
        this.failures = Math.max(0, this.failures - 1);
      } else
      /* istanbul ignore next */
      {
        cov_11ohg0qblo().b[5][1]++;
      }
    }
  }
  recordFailure(operationName, error) {
    /* istanbul ignore next */
    cov_11ohg0qblo().f[3]++;
    cov_11ohg0qblo().s[43]++;
    this.totalFailures++;
    /* istanbul ignore next */
    cov_11ohg0qblo().s[44]++;
    this.failures++;
    /* istanbul ignore next */
    cov_11ohg0qblo().s[45]++;
    this.lastFailureTime = Date.now();
    /* istanbul ignore next */
    cov_11ohg0qblo().s[46]++;
    this.addToHistory('failure', operationName, 0, error.message);
    /* istanbul ignore next */
    cov_11ohg0qblo().s[47]++;
    console.warn('⚠️ Database operation failed: ' + operationName + ' - ' + error.message + ' (failure ' + this.failures + '/' + this.failureThreshold + ')');

    // Special handling for half-open state: immediate transition to open on any failure
    /* istanbul ignore next */
    cov_11ohg0qblo().s[48]++;
    if (this.state === 'half-open') {
      /* istanbul ignore next */
      cov_11ohg0qblo().b[6][0]++;
      cov_11ohg0qblo().s[49]++;
      this.state = 'open';
      /* istanbul ignore next */
      cov_11ohg0qblo().s[50]++;
      this.successCount = 0;
      /* istanbul ignore next */
      cov_11ohg0qblo().s[51]++;
      console.error('🚨 Circuit breaker REOPENED from half-open state due to failure. Database access blocked for ' + this.recoveryTimeout / 1000 + ' seconds.');
    } else {
      /* istanbul ignore next */
      cov_11ohg0qblo().b[6][1]++;
      cov_11ohg0qblo().s[52]++;
      if (this.failures >= this.failureThreshold) {
        /* istanbul ignore next */
        cov_11ohg0qblo().b[7][0]++;
        cov_11ohg0qblo().s[53]++;
        this.state = 'open';
        /* istanbul ignore next */
        cov_11ohg0qblo().s[54]++;
        console.error('🚨 Circuit breaker OPENED due to ' + this.failures + ' consecutive failures. Database access blocked for ' + this.recoveryTimeout / 1000 + ' seconds.');
      } else
      /* istanbul ignore next */
      {
        cov_11ohg0qblo().b[7][1]++;
      }
    }
  }
  addToHistory(type, operation, duration, error =
  /* istanbul ignore next */
  (cov_11ohg0qblo().b[8][0]++, null)) {
    /* istanbul ignore next */
    cov_11ohg0qblo().f[4]++;
    cov_11ohg0qblo().s[55]++;
    this.requestHistory.push({
      timestamp: Date.now(),
      type,
      operation,
      duration,
      error
    });

    // Keep only last 100 records
    /* istanbul ignore next */
    cov_11ohg0qblo().s[56]++;
    if (this.requestHistory.length > 100) {
      /* istanbul ignore next */
      cov_11ohg0qblo().b[9][0]++;
      cov_11ohg0qblo().s[57]++;
      this.requestHistory = this.requestHistory.slice(-100);
    } else
    /* istanbul ignore next */
    {
      cov_11ohg0qblo().b[9][1]++;
    }
  }
  getStatus() {
    /* istanbul ignore next */
    cov_11ohg0qblo().f[5]++;
    const now =
    /* istanbul ignore next */
    (cov_11ohg0qblo().s[58]++, Date.now());
    const timeSinceLastFailure =
    /* istanbul ignore next */
    (cov_11ohg0qblo().s[59]++, now - this.lastFailureTime);
    const timeSinceLastSuccess =
    /* istanbul ignore next */
    (cov_11ohg0qblo().s[60]++, now - this.lastSuccessTime);
    /* istanbul ignore next */
    cov_11ohg0qblo().s[61]++;
    return {
      state: this.state,
      failures: this.failures,
      successCount: this.successCount,
      lastFailureTime: this.lastFailureTime,
      lastSuccessTime: this.lastSuccessTime,
      timeSinceLastFailure,
      timeSinceLastSuccess,
      totalRequests: this.totalRequests,
      totalSuccesses: this.totalSuccesses,
      totalFailures: this.totalFailures,
      successRate: this.totalRequests > 0 ?
      /* istanbul ignore next */
      (cov_11ohg0qblo().b[10][0]++, (this.totalSuccesses / this.totalRequests * 100).toFixed(2) + '%') :
      /* istanbul ignore next */
      (cov_11ohg0qblo().b[10][1]++, '0%'),
      timeToRecovery: this.state === 'open' ?
      /* istanbul ignore next */
      (cov_11ohg0qblo().b[11][0]++, Math.max(0, this.recoveryTimeout - timeSinceLastFailure)) :
      /* istanbul ignore next */
      (cov_11ohg0qblo().b[11][1]++, 0),
      isHealthy:
      /* istanbul ignore next */
      (cov_11ohg0qblo().b[12][0]++, this.state === 'closed') &&
      /* istanbul ignore next */
      (cov_11ohg0qblo().b[12][1]++, this.failures < this.failureThreshold * 0.5),
      recentHistory: this.requestHistory.slice(-10)
    };
  }

  // Force reset circuit breaker (emergency use only)
  forceReset() {
    /* istanbul ignore next */
    cov_11ohg0qblo().f[6]++;
    cov_11ohg0qblo().s[62]++;
    console.log('🔧 EMERGENCY: Force resetting circuit breaker...');
    /* istanbul ignore next */
    cov_11ohg0qblo().s[63]++;
    this.state = 'closed';
    /* istanbul ignore next */
    cov_11ohg0qblo().s[64]++;
    this.failures = 0;
    /* istanbul ignore next */
    cov_11ohg0qblo().s[65]++;
    this.successCount = 0;
    /* istanbul ignore next */
    cov_11ohg0qblo().s[66]++;
    this.lastFailureTime = 0;
    /* istanbul ignore next */
    cov_11ohg0qblo().s[67]++;
    console.log('✅ Circuit breaker force reset completed');
  }
}
/* istanbul ignore next */
cov_11ohg0qblo().s[68]++;
module.exports = DatabaseCircuitBreaker;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,