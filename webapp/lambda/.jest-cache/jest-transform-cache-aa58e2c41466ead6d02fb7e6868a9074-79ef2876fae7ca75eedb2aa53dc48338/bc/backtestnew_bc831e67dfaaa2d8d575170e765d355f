4e0a825e241885e2d14a9961cedb1da1
/* istanbul ignore next */
function cov_2p6ey3zgfp() {
  var path = "/home/stocks/algo/webapp/lambda/routes/backtest-new.js";
  var hash = "3bd96deaa0c01017f847f522699f68cea40f2814";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/routes/backtest-new.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 34
        }
      },
      "1": {
        start: {
          line: 2,
          column: 15
        },
        end: {
          line: 2,
          column: 31
        }
      },
      "2": {
        start: {
          line: 3,
          column: 30
        },
        end: {
          line: 3,
          column: 59
        }
      },
      "3": {
        start: {
          line: 4,
          column: 18
        },
        end: {
          line: 4,
          column: 46
        }
      },
      "4": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 30
        }
      },
      "5": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "6": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 109,
          column: 3
        }
      },
      "7": {
        start: {
          line: 14,
          column: 2
        },
        end: {
          line: 108,
          column: 3
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 16
        }
      },
      "9": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "10": {
        start: {
          line: 29,
          column: 6
        },
        end: {
          line: 32,
          column: 9
        }
      },
      "11": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "12": {
        start: {
          line: 36,
          column: 6
        },
        end: {
          line: 39,
          column: 9
        }
      },
      "13": {
        start: {
          line: 43,
          column: 23
        },
        end: {
          line: 43,
          column: 90
        }
      },
      "14": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 59,
          column: 7
        }
      },
      "15": {
        start: {
          line: 62,
          column: 19
        },
        end: {
          line: 71,
          column: 5
        }
      },
      "16": {
        start: {
          line: 80,
          column: 19
        },
        end: {
          line: 83,
          column: 5
        }
      },
      "17": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 92,
          column: 7
        }
      },
      "18": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 99,
          column: 7
        }
      },
      "19": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 102,
          column: 44
        }
      },
      "20": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 107,
          column: 7
        }
      },
      "21": {
        start: {
          line: 112,
          column: 0
        },
        end: {
          line: 127,
          column: 3
        }
      },
      "22": {
        start: {
          line: 113,
          column: 25
        },
        end: {
          line: 113,
          column: 35
        }
      },
      "23": {
        start: {
          line: 114,
          column: 19
        },
        end: {
          line: 114,
          column: 50
        }
      },
      "24": {
        start: {
          line: 116,
          column: 2
        },
        end: {
          line: 121,
          column: 3
        }
      },
      "25": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 120,
          column: 7
        }
      },
      "26": {
        start: {
          line: 123,
          column: 2
        },
        end: {
          line: 126,
          column: 5
        }
      },
      "27": {
        start: {
          line: 130,
          column: 0
        },
        end: {
          line: 153,
          column: 3
        }
      },
      "28": {
        start: {
          line: 131,
          column: 25
        },
        end: {
          line: 131,
          column: 35
        }
      },
      "29": {
        start: {
          line: 132,
          column: 19
        },
        end: {
          line: 132,
          column: 50
        }
      },
      "30": {
        start: {
          line: 134,
          column: 2
        },
        end: {
          line: 139,
          column: 3
        }
      },
      "31": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 138,
          column: 7
        }
      },
      "32": {
        start: {
          line: 141,
          column: 2
        },
        end: {
          line: 147,
          column: 3
        }
      },
      "33": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 146,
          column: 7
        }
      },
      "34": {
        start: {
          line: 149,
          column: 2
        },
        end: {
          line: 152,
          column: 5
        }
      },
      "35": {
        start: {
          line: 156,
          column: 0
        },
        end: {
          line: 176,
          column: 3
        }
      },
      "36": {
        start: {
          line: 157,
          column: 17
        },
        end: {
          line: 157,
          column: 29
        }
      },
      "37": {
        start: {
          line: 158,
          column: 24
        },
        end: {
          line: 158,
          column: 26
        }
      },
      "38": {
        start: {
          line: 160,
          column: 2
        },
        end: {
          line: 170,
          column: 3
        }
      },
      "39": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 169,
          column: 7
        }
      },
      "40": {
        start: {
          line: 172,
          column: 2
        },
        end: {
          line: 175,
          column: 5
        }
      },
      "41": {
        start: {
          line: 174,
          column: 44
        },
        end: {
          line: 174,
          column: 89
        }
      },
      "42": {
        start: {
          line: 179,
          column: 0
        },
        end: {
          line: 194,
          column: 3
        }
      },
      "43": {
        start: {
          line: 180,
          column: 25
        },
        end: {
          line: 180,
          column: 35
        }
      },
      "44": {
        start: {
          line: 182,
          column: 2
        },
        end: {
          line: 193,
          column: 3
        }
      },
      "45": {
        start: {
          line: 183,
          column: 4
        },
        end: {
          line: 183,
          column: 39
        }
      },
      "46": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 187,
          column: 7
        }
      },
      "47": {
        start: {
          line: 189,
          column: 4
        },
        end: {
          line: 192,
          column: 7
        }
      },
      "48": {
        start: {
          line: 197,
          column: 0
        },
        end: {
          line: 219,
          column: 3
        }
      },
      "49": {
        start: {
          line: 198,
          column: 2
        },
        end: {
          line: 218,
          column: 3
        }
      },
      "50": {
        start: {
          line: 199,
          column: 19
        },
        end: {
          line: 206,
          column: 6
        }
      },
      "51": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 211,
          column: 7
        }
      },
      "52": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 213,
          column: 52
        }
      },
      "53": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 217,
          column: 7
        }
      },
      "54": {
        start: {
          line: 222,
          column: 0
        },
        end: {
          line: 345,
          column: 3
        }
      },
      "55": {
        start: {
          line: 223,
          column: 20
        },
        end: {
          line: 339,
          column: 3
        }
      },
      "56": {
        start: {
          line: 341,
          column: 2
        },
        end: {
          line: 344,
          column: 5
        }
      },
      "57": {
        start: {
          line: 348,
          column: 0
        },
        end: {
          line: 405,
          column: 3
        }
      },
      "58": {
        start: {
          line: 349,
          column: 27
        },
        end: {
          line: 349,
          column: 35
        }
      },
      "59": {
        start: {
          line: 351,
          column: 2
        },
        end: {
          line: 356,
          column: 3
        }
      },
      "60": {
        start: {
          line: 352,
          column: 4
        },
        end: {
          line: 355,
          column: 7
        }
      },
      "61": {
        start: {
          line: 358,
          column: 2
        },
        end: {
          line: 404,
          column: 3
        }
      },
      "62": {
        start: {
          line: 360,
          column: 4
        },
        end: {
          line: 364,
          column: 7
        }
      },
      "63": {
        start: {
          line: 367,
          column: 30
        },
        end: {
          line: 382,
          column: 5
        }
      },
      "64": {
        start: {
          line: 384,
          column: 4
        },
        end: {
          line: 391,
          column: 5
        }
      },
      "65": {
        start: {
          line: 385,
          column: 6
        },
        end: {
          line: 390,
          column: 7
        }
      },
      "66": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 389,
          column: 11
        }
      },
      "67": {
        start: {
          line: 393,
          column: 4
        },
        end: {
          line: 396,
          column: 7
        }
      },
      "68": {
        start: {
          line: 399,
          column: 4
        },
        end: {
          line: 403,
          column: 7
        }
      },
      "69": {
        start: {
          line: 407,
          column: 0
        },
        end: {
          line: 407,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 20
          },
          end: {
            line: 13,
            column: 21
          }
        },
        loc: {
          start: {
            line: 13,
            column: 40
          },
          end: {
            line: 109,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 112,
            column: 34
          },
          end: {
            line: 112,
            column: 35
          }
        },
        loc: {
          start: {
            line: 112,
            column: 48
          },
          end: {
            line: 127,
            column: 1
          }
        },
        line: 112
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 130,
            column: 34
          },
          end: {
            line: 130,
            column: 35
          }
        },
        loc: {
          start: {
            line: 130,
            column: 48
          },
          end: {
            line: 153,
            column: 1
          }
        },
        line: 130
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 156,
            column: 23
          },
          end: {
            line: 156,
            column: 24
          }
        },
        loc: {
          start: {
            line: 156,
            column: 37
          },
          end: {
            line: 176,
            column: 1
          }
        },
        line: 156
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 174,
            column: 34
          },
          end: {
            line: 174,
            column: 35
          }
        },
        loc: {
          start: {
            line: 174,
            column: 44
          },
          end: {
            line: 174,
            column: 89
          }
        },
        line: 174
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 179,
            column: 30
          },
          end: {
            line: 179,
            column: 31
          }
        },
        loc: {
          start: {
            line: 179,
            column: 44
          },
          end: {
            line: 194,
            column: 1
          }
        },
        line: 179
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 197,
            column: 23
          },
          end: {
            line: 197,
            column: 24
          }
        },
        loc: {
          start: {
            line: 197,
            column: 43
          },
          end: {
            line: 219,
            column: 1
          }
        },
        line: 197
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 222,
            column: 25
          },
          end: {
            line: 222,
            column: 26
          }
        },
        loc: {
          start: {
            line: 222,
            column: 39
          },
          end: {
            line: 345,
            column: 1
          }
        },
        line: 222
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 348,
            column: 25
          },
          end: {
            line: 348,
            column: 26
          }
        },
        loc: {
          start: {
            line: 348,
            column: 39
          },
          end: {
            line: 405,
            column: 1
          }
        },
        line: 348
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 6
          },
          end: {
            line: 20,
            column: 29
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 20,
            column: 23
          },
          end: {
            line: 20,
            column: 29
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 6
          },
          end: {
            line: 21,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 21,
            column: 19
          },
          end: {
            line: 21,
            column: 24
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 6
          },
          end: {
            line: 22,
            column: 22
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 22,
            column: 17
          },
          end: {
            line: 22,
            column: 22
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 23,
            column: 6
          },
          end: {
            line: 23,
            column: 23
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 23,
            column: 21
          },
          end: {
            line: 23,
            column: 23
          }
        }],
        line: 23
      },
      "4": {
        loc: {
          start: {
            line: 24,
            column: 6
          },
          end: {
            line: 24,
            column: 23
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 24,
            column: 18
          },
          end: {
            line: 24,
            column: 23
          }
        }],
        line: 24
      },
      "5": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "6": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 21
          }
        }, {
          start: {
            line: 28,
            column: 25
          },
          end: {
            line: 28,
            column: 33
          }
        }, {
          start: {
            line: 28,
            column: 37
          },
          end: {
            line: 28,
            column: 47
          }
        }, {
          start: {
            line: 28,
            column: 51
          },
          end: {
            line: 28,
            column: 59
          }
        }],
        line: 28
      },
      "7": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "8": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 31
          }
        }, {
          start: {
            line: 35,
            column: 35
          },
          end: {
            line: 35,
            column: 55
          }
        }],
        line: 35
      },
      "9": {
        loc: {
          start: {
            line: 116,
            column: 2
          },
          end: {
            line: 121,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 2
          },
          end: {
            line: 121,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "10": {
        loc: {
          start: {
            line: 134,
            column: 2
          },
          end: {
            line: 139,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 2
          },
          end: {
            line: 139,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "11": {
        loc: {
          start: {
            line: 141,
            column: 2
          },
          end: {
            line: 147,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 2
          },
          end: {
            line: 147,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "12": {
        loc: {
          start: {
            line: 182,
            column: 2
          },
          end: {
            line: 193,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 2
          },
          end: {
            line: 193,
            column: 3
          }
        }, {
          start: {
            line: 188,
            column: 9
          },
          end: {
            line: 193,
            column: 3
          }
        }],
        line: 182
      },
      "13": {
        loc: {
          start: {
            line: 351,
            column: 2
          },
          end: {
            line: 356,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 351,
            column: 2
          },
          end: {
            line: 356,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 351
      },
      "14": {
        loc: {
          start: {
            line: 385,
            column: 6
          },
          end: {
            line: 390,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 385,
            column: 6
          },
          end: {
            line: 390,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 385
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0, 0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3bd96deaa0c01017f847f522699f68cea40f2814"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2p6ey3zgfp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2p6ey3zgfp();
const express =
/* istanbul ignore next */
(cov_2p6ey3zgfp().s[0]++, require('express'));
const router =
/* istanbul ignore next */
(cov_2p6ey3zgfp().s[1]++, express.Router());
const {
  authenticateToken
} =
/* istanbul ignore next */
(cov_2p6ey3zgfp().s[2]++, require('../middleware/auth'));
const {
  query
} =
/* istanbul ignore next */
(cov_2p6ey3zgfp().s[3]++, require('../utils/database'));

// Apply authentication to all routes
/* istanbul ignore next */
cov_2p6ey3zgfp().s[4]++;
router.use(authenticateToken);

// Store active backtests
const activeBacktests =
/* istanbul ignore next */
(cov_2p6ey3zgfp().s[5]++, new Map());

// Run backtest
/* istanbul ignore next */
cov_2p6ey3zgfp().s[6]++;
router.post('/run', async (req, res) => {
  /* istanbul ignore next */
  cov_2p6ey3zgfp().f[0]++;
  cov_2p6ey3zgfp().s[7]++;
  try {
    const {
      strategyCode,
      symbols,
      startDate,
      endDate,
      initialCapital =
      /* istanbul ignore next */
      (cov_2p6ey3zgfp().b[0][0]++, 100000),
      commission =
      /* istanbul ignore next */
      (cov_2p6ey3zgfp().b[1][0]++, 0.001),
      slippage =
      /* istanbul ignore next */
      (cov_2p6ey3zgfp().b[2][0]++, 0.001),
      maxPositions =
      /* istanbul ignore next */
      (cov_2p6ey3zgfp().b[3][0]++, 10),
      benchmark =
      /* istanbul ignore next */
      (cov_2p6ey3zgfp().b[4][0]++, 'SPY')
    } =
    /* istanbul ignore next */
    (cov_2p6ey3zgfp().s[8]++, req.body);

    // Validate inputs
    /* istanbul ignore next */
    cov_2p6ey3zgfp().s[9]++;
    if (
    /* istanbul ignore next */
    (cov_2p6ey3zgfp().b[6][0]++, !strategyCode) ||
    /* istanbul ignore next */
    (cov_2p6ey3zgfp().b[6][1]++, !symbols) ||
    /* istanbul ignore next */
    (cov_2p6ey3zgfp().b[6][2]++, !startDate) ||
    /* istanbul ignore next */
    (cov_2p6ey3zgfp().b[6][3]++, !endDate)) {
      /* istanbul ignore next */
      cov_2p6ey3zgfp().b[5][0]++;
      cov_2p6ey3zgfp().s[10]++;
      return res.status(400).json({
        success: false,
        error: 'Missing required parameters: strategyCode, symbols, startDate, endDate'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2p6ey3zgfp().b[5][1]++;
    }
    cov_2p6ey3zgfp().s[11]++;
    if (
    /* istanbul ignore next */
    (cov_2p6ey3zgfp().b[8][0]++, !Array.isArray(symbols)) ||
    /* istanbul ignore next */
    (cov_2p6ey3zgfp().b[8][1]++, symbols.length === 0)) {
      /* istanbul ignore next */
      cov_2p6ey3zgfp().b[7][0]++;
      cov_2p6ey3zgfp().s[12]++;
      return res.status(400).json({
        success: false,
        error: 'Symbols must be a non-empty array'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2p6ey3zgfp().b[7][1]++;
    }

    // Create unique backtest ID
    const backtestId =
    /* istanbul ignore next */
    (cov_2p6ey3zgfp().s[13]++, `backtest_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);

    // Store backtest as running
    /* istanbul ignore next */
    cov_2p6ey3zgfp().s[14]++;
    activeBacktests.set(backtestId, {
      status: 'running',
      startTime: new Date(),
      config: {
        symbols,
        startDate,
        endDate,
        initialCapital,
        commission,
        slippage,
        maxPositions,
        benchmark
      }
    });

    // Start backtest asynchronously
    const config =
    /* istanbul ignore next */
    (cov_2p6ey3zgfp().s[15]++, {
      symbols,
      startDate,
      endDate,
      initialCapital,
      commission,
      slippage,
      maxPositions,
      benchmark
    });

    // BacktestEngine temporarily disabled - functionality moved to backtest.js
    // const engine = new BacktestEngine(config);

    // Run backtest
    // const result = await engine.runBacktest(strategyCode);

    // Temporary response until backtest engine is fixed
    const result =
    /* istanbul ignore next */
    (cov_2p6ey3zgfp().s[16]++, {
      success: false,
      error: 'Backtest engine temporarily disabled - use /backtest/run instead'
    });

    // Update backtest status
    /* istanbul ignore next */
    cov_2p6ey3zgfp().s[17]++;
    activeBacktests.set(backtestId, {
      status: 'completed',
      startTime: activeBacktests.get(backtestId).startTime,
      endTime: new Date(),
      config,
      result
    });
    /* istanbul ignore next */
    cov_2p6ey3zgfp().s[18]++;
    res.json({
      success: true,
      backtestId,
      result,
      message: 'Backtest completed successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2p6ey3zgfp().s[19]++;
    console.error('Backtest error:', error);
    /* istanbul ignore next */
    cov_2p6ey3zgfp().s[20]++;
    res.status(500).json({
      success: false,
      error: 'Backtest failed',
      message: error.message
    });
  }
});

// Get backtest status
/* istanbul ignore next */
cov_2p6ey3zgfp().s[21]++;
router.get('/status/:backtestId', (req, res) => {
  /* istanbul ignore next */
  cov_2p6ey3zgfp().f[1]++;
  const {
    backtestId
  } =
  /* istanbul ignore next */
  (cov_2p6ey3zgfp().s[22]++, req.params);
  const backtest =
  /* istanbul ignore next */
  (cov_2p6ey3zgfp().s[23]++, activeBacktests.get(backtestId));
  /* istanbul ignore next */
  cov_2p6ey3zgfp().s[24]++;
  if (!backtest) {
    /* istanbul ignore next */
    cov_2p6ey3zgfp().b[9][0]++;
    cov_2p6ey3zgfp().s[25]++;
    return res.status(404).json({
      success: false,
      error: 'Backtest not found'
    });
  } else
  /* istanbul ignore next */
  {
    cov_2p6ey3zgfp().b[9][1]++;
  }
  cov_2p6ey3zgfp().s[26]++;
  res.json({
    success: true,
    backtest
  });
});

// Get backtest result
/* istanbul ignore next */
cov_2p6ey3zgfp().s[27]++;
router.get('/result/:backtestId', (req, res) => {
  /* istanbul ignore next */
  cov_2p6ey3zgfp().f[2]++;
  const {
    backtestId
  } =
  /* istanbul ignore next */
  (cov_2p6ey3zgfp().s[28]++, req.params);
  const backtest =
  /* istanbul ignore next */
  (cov_2p6ey3zgfp().s[29]++, activeBacktests.get(backtestId));
  /* istanbul ignore next */
  cov_2p6ey3zgfp().s[30]++;
  if (!backtest) {
    /* istanbul ignore next */
    cov_2p6ey3zgfp().b[10][0]++;
    cov_2p6ey3zgfp().s[31]++;
    return res.status(404).json({
      success: false,
      error: 'Backtest not found'
    });
  } else
  /* istanbul ignore next */
  {
    cov_2p6ey3zgfp().b[10][1]++;
  }
  cov_2p6ey3zgfp().s[32]++;
  if (backtest.status !== 'completed') {
    /* istanbul ignore next */
    cov_2p6ey3zgfp().b[11][0]++;
    cov_2p6ey3zgfp().s[33]++;
    return res.status(400).json({
      success: false,
      error: 'Backtest not completed yet',
      status: backtest.status
    });
  } else
  /* istanbul ignore next */
  {
    cov_2p6ey3zgfp().b[11][1]++;
  }
  cov_2p6ey3zgfp().s[34]++;
  res.json({
    success: true,
    result: backtest.result
  });
});

// Get user's backtest history
/* istanbul ignore next */
cov_2p6ey3zgfp().s[35]++;
router.get('/history', (req, res) => {
  /* istanbul ignore next */
  cov_2p6ey3zgfp().f[3]++;
  const userId =
  /* istanbul ignore next */
  (cov_2p6ey3zgfp().s[36]++, req.user.sub);
  const userBacktests =
  /* istanbul ignore next */
  (cov_2p6ey3zgfp().s[37]++, []);
  /* istanbul ignore next */
  cov_2p6ey3zgfp().s[38]++;
  for (const [id, backtest] of activeBacktests.entries()) {
    /* istanbul ignore next */
    cov_2p6ey3zgfp().s[39]++;
    // In a real implementation, you'd filter by userId
    userBacktests.push({
      id,
      status: backtest.status,
      startTime: backtest.startTime,
      endTime: backtest.endTime,
      config: backtest.config,
      summary: backtest.result?.summary
    });
  }
  /* istanbul ignore next */
  cov_2p6ey3zgfp().s[40]++;
  res.json({
    success: true,
    backtests: userBacktests.sort((a, b) => {
      /* istanbul ignore next */
      cov_2p6ey3zgfp().f[4]++;
      cov_2p6ey3zgfp().s[41]++;
      return new Date(b.startTime) - new Date(a.startTime);
    })
  });
});

// Delete backtest
/* istanbul ignore next */
cov_2p6ey3zgfp().s[42]++;
router.delete('/:backtestId', (req, res) => {
  /* istanbul ignore next */
  cov_2p6ey3zgfp().f[5]++;
  const {
    backtestId
  } =
  /* istanbul ignore next */
  (cov_2p6ey3zgfp().s[43]++, req.params);
  /* istanbul ignore next */
  cov_2p6ey3zgfp().s[44]++;
  if (activeBacktests.has(backtestId)) {
    /* istanbul ignore next */
    cov_2p6ey3zgfp().b[12][0]++;
    cov_2p6ey3zgfp().s[45]++;
    activeBacktests.delete(backtestId);
    /* istanbul ignore next */
    cov_2p6ey3zgfp().s[46]++;
    res.json({
      success: true,
      message: 'Backtest deleted'
    });
  } else {
    /* istanbul ignore next */
    cov_2p6ey3zgfp().b[12][1]++;
    cov_2p6ey3zgfp().s[47]++;
    res.status(404).json({
      success: false,
      error: 'Backtest not found'
    });
  }
});

// Get available symbols for backtesting
/* istanbul ignore next */
cov_2p6ey3zgfp().s[48]++;
router.get('/symbols', async (req, res) => {
  /* istanbul ignore next */
  cov_2p6ey3zgfp().f[6]++;
  cov_2p6ey3zgfp().s[49]++;
  try {
    const result =
    /* istanbul ignore next */
    (cov_2p6ey3zgfp().s[50]++, await query(`
      SELECT DISTINCT symbol, company_name, sector, market_cap
      FROM stock_fundamentals sf
      JOIN stock_symbols_enhanced sse ON sf.symbol = sse.symbol
      WHERE market_cap > 1000000000
      ORDER BY market_cap DESC
      LIMIT 500
    `));
    /* istanbul ignore next */
    cov_2p6ey3zgfp().s[51]++;
    res.json({
      success: true,
      symbols: result.rows
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2p6ey3zgfp().s[52]++;
    console.error('Error fetching symbols:', error);
    /* istanbul ignore next */
    cov_2p6ey3zgfp().s[53]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch symbols'
    });
  }
});

// Get strategy templates
/* istanbul ignore next */
cov_2p6ey3zgfp().s[54]++;
router.get('/templates', (req, res) => {
  /* istanbul ignore next */
  cov_2p6ey3zgfp().f[7]++;
  const templates =
  /* istanbul ignore next */
  (cov_2p6ey3zgfp().s[55]++, [{
    id: 'buy_and_hold',
    name: 'Buy and Hold',
    description: 'Simple buy and hold strategy',
    code: `
// Buy and Hold Strategy
if (dayCount === 1) {
  // Buy equal amounts of each symbol on first day
  const cashPerSymbol = cash / data.length;
  
  for (const [symbol, stockData] of Object.entries(data)) {
    const quantity = Math.floor(cashPerSymbol / stockData.close);
    if (quantity > 0) {
      buy(symbol, quantity, stockData.close);
      log('Bought ' + quantity + ' shares of ' + symbol + ' at $' + stockData.close);
    }
  }
}
`
  }, {
    id: 'moving_average_crossover',
    name: 'Moving Average Crossover',
    description: 'Buy when short MA crosses above long MA',
    code: `
// Moving Average Crossover Strategy
for (const [symbol, stockData] of Object.entries(data)) {
  const position = getPosition(symbol);
  const sma20 = stockData.sma_20;
  const sma50 = stockData.sma_50;
  
  if (!sma20 || !sma50) continue;
  
  // Buy signal: SMA20 crosses above SMA50
  if (sma20 > sma50 && !position) {
    const quantity = Math.floor(cash * 0.1 / stockData.close); // 10% of cash
    if (quantity > 0) {
      buy(symbol, quantity, stockData.close);
      log('Buy signal: ' + symbol + ' at $' + stockData.close);
    }
  }
  
  // Sell signal: SMA20 crosses below SMA50
  if (sma20 < sma50 && position) {
    sellAll(symbol);
    log('Sell signal: ' + symbol + ' at $' + stockData.close);
  }
}
`
  }, {
    id: 'rsi_mean_reversion',
    name: 'RSI Mean Reversion',
    description: 'Buy oversold stocks (RSI < 30), sell overbought (RSI > 70)',
    code: `
// RSI Mean Reversion Strategy
for (const [symbol, stockData] of Object.entries(data)) {
  const position = getPosition(symbol);
  const rsi = stockData.rsi;
  
  if (!rsi) continue;
  
  // Buy signal: RSI < 30 (oversold)
  if (rsi < 30 && !position) {
    const quantity = Math.floor(cash * 0.05 / stockData.close); // 5% of cash
    if (quantity > 0) {
      buy(symbol, quantity, stockData.close);
      log('RSI oversold buy: ' + symbol + ' RSI=' + rsi.toFixed(2));
    }
  }
  
  // Sell signal: RSI > 70 (overbought)
  if (rsi > 70 && position) {
    sellAll(symbol);
    log('RSI overbought sell: ' + symbol + ' RSI=' + rsi.toFixed(2));
  }
}
`
  }, {
    id: 'momentum_strategy',
    name: 'Momentum Strategy',
    description: 'Buy stocks with strong momentum, sell weak ones',
    code: `
// Momentum Strategy
for (const [symbol, stockData] of Object.entries(data)) {
  const position = getPosition(symbol);
  const sma20 = stockData.sma_20;
  const sma50 = stockData.sma_50;
  const rsi = stockData.rsi;
  const price = stockData.close;
  
  if (!sma20 || !sma50 || !rsi) continue;
  
  // Strong momentum conditions
  const bullishMomentum = price > sma20 && sma20 > sma50 && rsi > 50 && rsi < 80;
  const bearishMomentum = price < sma20 && sma20 < sma50 && rsi < 50;
  
  // Buy signal
  if (bullishMomentum && !position) {
    const quantity = Math.floor(cash * 0.08 / price); // 8% of cash
    if (quantity > 0) {
      buy(symbol, quantity, price);
      log('Momentum buy: ' + symbol + ' at $' + price);
    }
  }
  
  // Sell signal
  if (bearishMomentum && position) {
    sellAll(symbol);
    log('Momentum sell: ' + symbol + ' at $' + price);
  }
}
`
  }]);
  /* istanbul ignore next */
  cov_2p6ey3zgfp().s[56]++;
  res.json({
    success: true,
    templates
  });
});

// Validate strategy code
/* istanbul ignore next */
cov_2p6ey3zgfp().s[57]++;
router.post('/validate', (req, res) => {
  /* istanbul ignore next */
  cov_2p6ey3zgfp().f[8]++;
  const {
    strategyCode
  } =
  /* istanbul ignore next */
  (cov_2p6ey3zgfp().s[58]++, req.body);
  /* istanbul ignore next */
  cov_2p6ey3zgfp().s[59]++;
  if (!strategyCode) {
    /* istanbul ignore next */
    cov_2p6ey3zgfp().b[13][0]++;
    cov_2p6ey3zgfp().s[60]++;
    return res.status(400).json({
      success: false,
      error: 'Strategy code is required'
    });
  } else
  /* istanbul ignore next */
  {
    cov_2p6ey3zgfp().b[13][1]++;
  }
  cov_2p6ey3zgfp().s[61]++;
  try {
    /* istanbul ignore next */
    cov_2p6ey3zgfp().s[62]++;
    // Basic syntax validation
    new Function('context', `
      with(context) {
        ${strategyCode}
      }
    `);

    // Check for dangerous patterns
    const dangerousPatterns =
    /* istanbul ignore next */
    (cov_2p6ey3zgfp().s[63]++, [/require\s*\(/, /import\s+/, /eval\s*\(/, /Function\s*\(/, /process\./, /global\./, /window\./, /document\./, /setTimeout/, /setInterval/, /clearTimeout/, /clearInterval/, /XMLHttpRequest/, /fetch\s*\(/]);
    /* istanbul ignore next */
    cov_2p6ey3zgfp().s[64]++;
    for (const pattern of dangerousPatterns) {
      /* istanbul ignore next */
      cov_2p6ey3zgfp().s[65]++;
      if (pattern.test(strategyCode)) {
        /* istanbul ignore next */
        cov_2p6ey3zgfp().b[14][0]++;
        cov_2p6ey3zgfp().s[66]++;
        return res.status(400).json({
          success: false,
          error: `Dangerous pattern detected: ${pattern.source}`
        });
      } else
      /* istanbul ignore next */
      {
        cov_2p6ey3zgfp().b[14][1]++;
      }
    }
    /* istanbul ignore next */
    cov_2p6ey3zgfp().s[67]++;
    res.json({
      success: true,
      message: 'Strategy code is valid'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2p6ey3zgfp().s[68]++;
    res.status(400).json({
      success: false,
      error: 'Syntax error in strategy code',
      details: error.message
    });
  }
});
/* istanbul ignore next */
cov_2p6ey3zgfp().s[69]++;
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,