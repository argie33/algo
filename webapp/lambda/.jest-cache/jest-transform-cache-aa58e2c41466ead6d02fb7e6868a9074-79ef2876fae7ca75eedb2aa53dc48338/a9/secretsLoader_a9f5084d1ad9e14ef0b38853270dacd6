2e2d8939aa0451a8c202ed0eb0977510
/* istanbul ignore next */
function cov_uov7ymlab() {
  var path = "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js";
  var hash = "fbf5e2ad19fd95b15140930d88f98532acf88880";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 56
        },
        end: {
          line: 5,
          column: 98
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 11,
          column: 7
        }
      },
      "2": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 34
        }
      },
      "3": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 29
        }
      },
      "4": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 20,
          column: 5
        }
      },
      "5": {
        start: {
          line: 18,
          column: 6
        },
        end: {
          line: 18,
          column: 46
        }
      },
      "6": {
        start: {
          line: 19,
          column: 6
        },
        end: {
          line: 19,
          column: 13
        }
      },
      "7": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 53
        }
      },
      "8": {
        start: {
          line: 23,
          column: 22
        },
        end: {
          line: 23,
          column: 32
        }
      },
      "9": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "10": {
        start: {
          line: 27,
          column: 6
        },
        end: {
          line: 27,
          column: 35
        }
      },
      "11": {
        start: {
          line: 30,
          column: 6
        },
        end: {
          line: 30,
          column: 46
        }
      },
      "12": {
        start: {
          line: 33,
          column: 6
        },
        end: {
          line: 33,
          column: 34
        }
      },
      "13": {
        start: {
          line: 35,
          column: 6
        },
        end: {
          line: 35,
          column: 30
        }
      },
      "14": {
        start: {
          line: 36,
          column: 6
        },
        end: {
          line: 36,
          column: 86
        }
      },
      "15": {
        start: {
          line: 39,
          column: 6
        },
        end: {
          line: 39,
          column: 64
        }
      },
      "16": {
        start: {
          line: 40,
          column: 6
        },
        end: {
          line: 40,
          column: 74
        }
      },
      "17": {
        start: {
          line: 43,
          column: 6
        },
        end: {
          line: 43,
          column: 45
        }
      },
      "18": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "19": {
        start: {
          line: 50,
          column: 24
        },
        end: {
          line: 50,
          column: 49
        }
      },
      "20": {
        start: {
          line: 51,
          column: 6
        },
        end: {
          line: 60,
          column: 7
        }
      },
      "21": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 54
        }
      },
      "22": {
        start: {
          line: 53,
          column: 26
        },
        end: {
          line: 53,
          column: 57
        }
      },
      "23": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "24": {
        start: {
          line: 58,
          column: 10
        },
        end: {
          line: 58,
          column: 55
        }
      },
      "25": {
        start: {
          line: 62,
          column: 6
        },
        end: {
          line: 62,
          column: 73
        }
      },
      "26": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 122,
          column: 5
        }
      },
      "27": {
        start: {
          line: 68,
          column: 6
        },
        end: {
          line: 68,
          column: 61
        }
      },
      "28": {
        start: {
          line: 71,
          column: 30
        },
        end: {
          line: 78,
          column: 7
        }
      },
      "29": {
        start: {
          line: 80,
          column: 29
        },
        end: {
          line: 80,
          column: 33
        }
      },
      "30": {
        start: {
          line: 82,
          column: 6
        },
        end: {
          line: 105,
          column: 7
        }
      },
      "31": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "32": {
        start: {
          line: 84,
          column: 25
        },
        end: {
          line: 84,
          column: 57
        }
      },
      "33": {
        start: {
          line: 85,
          column: 10
        },
        end: {
          line: 100,
          column: 11
        }
      },
      "34": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 94,
          column: 13
        }
      },
      "35": {
        start: {
          line: 87,
          column: 14
        },
        end: {
          line: 87,
          column: 40
        }
      },
      "36": {
        start: {
          line: 88,
          column: 19
        },
        end: {
          line: 94,
          column: 13
        }
      },
      "37": {
        start: {
          line: 89,
          column: 14
        },
        end: {
          line: 89,
          column: 66
        }
      },
      "38": {
        start: {
          line: 90,
          column: 19
        },
        end: {
          line: 94,
          column: 13
        }
      },
      "39": {
        start: {
          line: 91,
          column: 14
        },
        end: {
          line: 91,
          column: 54
        }
      },
      "40": {
        start: {
          line: 92,
          column: 19
        },
        end: {
          line: 94,
          column: 13
        }
      },
      "41": {
        start: {
          line: 93,
          column: 14
        },
        end: {
          line: 93,
          column: 50
        }
      },
      "42": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 99,
          column: 13
        }
      },
      "43": {
        start: {
          line: 97,
          column: 14
        },
        end: {
          line: 97,
          column: 80
        }
      },
      "44": {
        start: {
          line: 98,
          column: 14
        },
        end: {
          line: 98,
          column: 20
        }
      },
      "45": {
        start: {
          line: 102,
          column: 10
        },
        end: {
          line: 102,
          column: 60
        }
      },
      "46": {
        start: {
          line: 103,
          column: 10
        },
        end: {
          line: 103,
          column: 19
        }
      },
      "47": {
        start: {
          line: 107,
          column: 6
        },
        end: {
          line: 115,
          column: 7
        }
      },
      "48": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 65
        }
      },
      "49": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 71
        }
      },
      "50": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 107
        }
      },
      "51": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 115
        }
      },
      "52": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 91
        }
      },
      "53": {
        start: {
          line: 118,
          column: 6
        },
        end: {
          line: 118,
          column: 82
        }
      },
      "54": {
        start: {
          line: 119,
          column: 6
        },
        end: {
          line: 119,
          column: 113
        }
      },
      "55": {
        start: {
          line: 121,
          column: 6
        },
        end: {
          line: 121,
          column: 89
        }
      },
      "56": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 171,
          column: 5
        }
      },
      "57": {
        start: {
          line: 127,
          column: 6
        },
        end: {
          line: 127,
          column: 47
        }
      },
      "58": {
        start: {
          line: 129,
          column: 33
        },
        end: {
          line: 136,
          column: 7
        }
      },
      "59": {
        start: {
          line: 138,
          column: 22
        },
        end: {
          line: 138,
          column: 26
        }
      },
      "60": {
        start: {
          line: 140,
          column: 6
        },
        end: {
          line: 160,
          column: 7
        }
      },
      "61": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "62": {
        start: {
          line: 142,
          column: 25
        },
        end: {
          line: 142,
          column: 57
        }
      },
      "63": {
        start: {
          line: 143,
          column: 10
        },
        end: {
          line: 156,
          column: 11
        }
      },
      "64": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 150,
          column: 13
        }
      },
      "65": {
        start: {
          line: 145,
          column: 14
        },
        end: {
          line: 145,
          column: 33
        }
      },
      "66": {
        start: {
          line: 146,
          column: 19
        },
        end: {
          line: 150,
          column: 13
        }
      },
      "67": {
        start: {
          line: 147,
          column: 14
        },
        end: {
          line: 147,
          column: 44
        }
      },
      "68": {
        start: {
          line: 148,
          column: 19
        },
        end: {
          line: 150,
          column: 13
        }
      },
      "69": {
        start: {
          line: 149,
          column: 14
        },
        end: {
          line: 149,
          column: 43
        }
      },
      "70": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 155,
          column: 13
        }
      },
      "71": {
        start: {
          line: 153,
          column: 14
        },
        end: {
          line: 153,
          column: 73
        }
      },
      "72": {
        start: {
          line: 154,
          column: 14
        },
        end: {
          line: 154,
          column: 20
        }
      },
      "73": {
        start: {
          line: 158,
          column: 10
        },
        end: {
          line: 158,
          column: 19
        }
      },
      "74": {
        start: {
          line: 162,
          column: 6
        },
        end: {
          line: 167,
          column: 7
        }
      },
      "75": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 43
        }
      },
      "76": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 56
        }
      },
      "77": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 83
        }
      },
      "78": {
        start: {
          line: 170,
          column: 6
        },
        end: {
          line: 170,
          column: 68
        }
      },
      "79": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 206,
          column: 5
        }
      },
      "80": {
        start: {
          line: 177,
          column: 6
        },
        end: {
          line: 179,
          column: 7
        }
      },
      "81": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 47
        }
      },
      "82": {
        start: {
          line: 181,
          column: 22
        },
        end: {
          line: 181,
          column: 71
        }
      },
      "83": {
        start: {
          line: 182,
          column: 23
        },
        end: {
          line: 182,
          column: 54
        }
      },
      "84": {
        start: {
          line: 185,
          column: 6
        },
        end: {
          line: 193,
          column: 7
        }
      },
      "85": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 190,
          column: 9
        }
      },
      "86": {
        start: {
          line: 187,
          column: 10
        },
        end: {
          line: 187,
          column: 53
        }
      },
      "87": {
        start: {
          line: 189,
          column: 10
        },
        end: {
          line: 189,
          column: 41
        }
      },
      "88": {
        start: {
          line: 191,
          column: 13
        },
        end: {
          line: 193,
          column: 7
        }
      },
      "89": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 80
        }
      },
      "90": {
        start: {
          line: 196,
          column: 6
        },
        end: {
          line: 196,
          column: 46
        }
      },
      "91": {
        start: {
          line: 198,
          column: 6
        },
        end: {
          line: 198,
          column: 20
        }
      },
      "92": {
        start: {
          line: 200,
          column: 6
        },
        end: {
          line: 204,
          column: 7
        }
      },
      "93": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 56
        }
      },
      "94": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 203,
          column: 76
        }
      },
      "95": {
        start: {
          line: 205,
          column: 6
        },
        end: {
          line: 205,
          column: 18
        }
      },
      "96": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 214,
          column: 64
        }
      },
      "97": {
        start: {
          line: 216,
          column: 4
        },
        end: {
          line: 218,
          column: 5
        }
      },
      "98": {
        start: {
          line: 217,
          column: 6
        },
        end: {
          line: 217,
          column: 99
        }
      },
      "99": {
        start: {
          line: 220,
          column: 4
        },
        end: {
          line: 220,
          column: 56
        }
      },
      "100": {
        start: {
          line: 228,
          column: 4
        },
        end: {
          line: 228,
          column: 65
        }
      },
      "101": {
        start: {
          line: 230,
          column: 28
        },
        end: {
          line: 233,
          column: 5
        }
      },
      "102": {
        start: {
          line: 235,
          column: 20
        },
        end: {
          line: 235,
          column: 74
        }
      },
      "103": {
        start: {
          line: 235,
          column: 53
        },
        end: {
          line: 235,
          column: 73
        }
      },
      "104": {
        start: {
          line: 237,
          column: 4
        },
        end: {
          line: 240,
          column: 5
        }
      },
      "105": {
        start: {
          line: 238,
          column: 6
        },
        end: {
          line: 238,
          column: 70
        }
      },
      "106": {
        start: {
          line: 239,
          column: 6
        },
        end: {
          line: 239,
          column: 73
        }
      },
      "107": {
        start: {
          line: 242,
          column: 4
        },
        end: {
          line: 242,
          column: 68
        }
      },
      "108": {
        start: {
          line: 247,
          column: 4
        },
        end: {
          line: 247,
          column: 28
        }
      },
      "109": {
        start: {
          line: 252,
          column: 4
        },
        end: {
          line: 252,
          column: 96
        }
      },
      "110": {
        start: {
          line: 257,
          column: 4
        },
        end: {
          line: 264,
          column: 6
        }
      },
      "111": {
        start: {
          line: 269,
          column: 22
        },
        end: {
          line: 269,
          column: 41
        }
      },
      "112": {
        start: {
          line: 271,
          column: 0
        },
        end: {
          line: 271,
          column: 31
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 2
          },
          end: {
            line: 8,
            column: 3
          }
        },
        loc: {
          start: {
            line: 8,
            column: 16
          },
          end: {
            line: 14,
            column: 3
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 2
          },
          end: {
            line: 16,
            column: 3
          }
        },
        loc: {
          start: {
            line: 16,
            column: 25
          },
          end: {
            line: 45,
            column: 3
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 47,
            column: 2
          },
          end: {
            line: 47,
            column: 3
          }
        },
        loc: {
          start: {
            line: 47,
            column: 26
          },
          end: {
            line: 64,
            column: 3
          }
        },
        line: 47
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 66,
            column: 2
          },
          end: {
            line: 66,
            column: 3
          }
        },
        loc: {
          start: {
            line: 66,
            column: 37
          },
          end: {
            line: 123,
            column: 3
          }
        },
        line: 66
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 125,
            column: 2
          },
          end: {
            line: 125,
            column: 3
          }
        },
        loc: {
          start: {
            line: 125,
            column: 25
          },
          end: {
            line: 172,
            column: 3
          }
        },
        line: 125
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 174,
            column: 2
          },
          end: {
            line: 174,
            column: 3
          }
        },
        loc: {
          start: {
            line: 174,
            column: 28
          },
          end: {
            line: 207,
            column: 3
          }
        },
        line: 174
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 213,
            column: 2
          },
          end: {
            line: 213,
            column: 3
          }
        },
        loc: {
          start: {
            line: 213,
            column: 34
          },
          end: {
            line: 221,
            column: 3
          }
        },
        line: 213
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 227,
            column: 2
          },
          end: {
            line: 227,
            column: 3
          }
        },
        loc: {
          start: {
            line: 227,
            column: 36
          },
          end: {
            line: 243,
            column: 3
          }
        },
        line: 227
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 235,
            column: 43
          },
          end: {
            line: 235,
            column: 44
          }
        },
        loc: {
          start: {
            line: 235,
            column: 53
          },
          end: {
            line: 235,
            column: 73
          }
        },
        line: 235
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 246,
            column: 2
          },
          end: {
            line: 246,
            column: 3
          }
        },
        loc: {
          start: {
            line: 246,
            column: 18
          },
          end: {
            line: 248,
            column: 3
          }
        },
        line: 246
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 251,
            column: 2
          },
          end: {
            line: 251,
            column: 3
          }
        },
        loc: {
          start: {
            line: 251,
            column: 23
          },
          end: {
            line: 253,
            column: 3
          }
        },
        line: 251
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 256,
            column: 2
          },
          end: {
            line: 256,
            column: 3
          }
        },
        loc: {
          start: {
            line: 256,
            column: 14
          },
          end: {
            line: 265,
            column: 3
          }
        },
        line: 256
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 14
          },
          end: {
            line: 10,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 10,
            column: 14
          },
          end: {
            line: 10,
            column: 43
          }
        }, {
          start: {
            line: 10,
            column: 47
          },
          end: {
            line: 10,
            column: 69
          }
        }, {
          start: {
            line: 10,
            column: 73
          },
          end: {
            line: 10,
            column: 84
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 51,
            column: 6
          },
          end: {
            line: 60,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 6
          },
          end: {
            line: 60,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "3": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "4": {
        loc: {
          start: {
            line: 85,
            column: 10
          },
          end: {
            line: 100,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 10
          },
          end: {
            line: 100,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "5": {
        loc: {
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 94,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 94,
            column: 13
          }
        }, {
          start: {
            line: 88,
            column: 19
          },
          end: {
            line: 94,
            column: 13
          }
        }],
        line: 86
      },
      "6": {
        loc: {
          start: {
            line: 88,
            column: 19
          },
          end: {
            line: 94,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 19
          },
          end: {
            line: 94,
            column: 13
          }
        }, {
          start: {
            line: 90,
            column: 19
          },
          end: {
            line: 94,
            column: 13
          }
        }],
        line: 88
      },
      "7": {
        loc: {
          start: {
            line: 90,
            column: 19
          },
          end: {
            line: 94,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 19
          },
          end: {
            line: 94,
            column: 13
          }
        }, {
          start: {
            line: 92,
            column: 19
          },
          end: {
            line: 94,
            column: 13
          }
        }],
        line: 90
      },
      "8": {
        loc: {
          start: {
            line: 92,
            column: 19
          },
          end: {
            line: 94,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 19
          },
          end: {
            line: 94,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "9": {
        loc: {
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 99,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 99,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "10": {
        loc: {
          start: {
            line: 107,
            column: 6
          },
          end: {
            line: 115,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 6
          },
          end: {
            line: 115,
            column: 7
          }
        }, {
          start: {
            line: 110,
            column: 13
          },
          end: {
            line: 115,
            column: 7
          }
        }],
        line: 107
      },
      "11": {
        loc: {
          start: {
            line: 143,
            column: 10
          },
          end: {
            line: 156,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 10
          },
          end: {
            line: 156,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "12": {
        loc: {
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 150,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 150,
            column: 13
          }
        }, {
          start: {
            line: 146,
            column: 19
          },
          end: {
            line: 150,
            column: 13
          }
        }],
        line: 144
      },
      "13": {
        loc: {
          start: {
            line: 146,
            column: 19
          },
          end: {
            line: 150,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 19
          },
          end: {
            line: 150,
            column: 13
          }
        }, {
          start: {
            line: 148,
            column: 19
          },
          end: {
            line: 150,
            column: 13
          }
        }],
        line: 146
      },
      "14": {
        loc: {
          start: {
            line: 148,
            column: 19
          },
          end: {
            line: 150,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 19
          },
          end: {
            line: 150,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "15": {
        loc: {
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 155,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 155,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "16": {
        loc: {
          start: {
            line: 162,
            column: 6
          },
          end: {
            line: 167,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 6
          },
          end: {
            line: 167,
            column: 7
          }
        }, {
          start: {
            line: 165,
            column: 13
          },
          end: {
            line: 167,
            column: 7
          }
        }],
        line: 162
      },
      "17": {
        loc: {
          start: {
            line: 177,
            column: 6
          },
          end: {
            line: 179,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 6
          },
          end: {
            line: 179,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "18": {
        loc: {
          start: {
            line: 185,
            column: 6
          },
          end: {
            line: 193,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 6
          },
          end: {
            line: 193,
            column: 7
          }
        }, {
          start: {
            line: 191,
            column: 13
          },
          end: {
            line: 193,
            column: 7
          }
        }],
        line: 185
      },
      "19": {
        loc: {
          start: {
            line: 191,
            column: 13
          },
          end: {
            line: 193,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 13
          },
          end: {
            line: 193,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "20": {
        loc: {
          start: {
            line: 200,
            column: 6
          },
          end: {
            line: 204,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 6
          },
          end: {
            line: 204,
            column: 7
          }
        }, {
          start: {
            line: 202,
            column: 13
          },
          end: {
            line: 204,
            column: 7
          }
        }],
        line: 200
      },
      "21": {
        loc: {
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "22": {
        loc: {
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 240,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 240,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "23": {
        loc: {
          start: {
            line: 252,
            column: 11
          },
          end: {
            line: 252,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 252,
            column: 11
          },
          end: {
            line: 252,
            column: 53
          }
        }, {
          start: {
            line: 252,
            column: 57
          },
          end: {
            line: 252,
            column: 95
          }
        }],
        line: 252
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fbf5e2ad19fd95b15140930d88f98532acf88880"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_uov7ymlab = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_uov7ymlab();
// Centralized Secrets Management for Lambda
// Loads required secrets from AWS Secrets Manager and injects into process.env
// This ensures all Lambda functions have access to required environment variables

const {
  SecretsManagerClient,
  GetSecretValueCommand
} =
/* istanbul ignore next */
(cov_uov7ymlab().s[0]++, require('@aws-sdk/client-secrets-manager'));
class SecretsLoader {
  constructor() {
    /* istanbul ignore next */
    cov_uov7ymlab().f[0]++;
    cov_uov7ymlab().s[1]++;
    this.client = new SecretsManagerClient({
      region:
      /* istanbul ignore next */
      (cov_uov7ymlab().b[0][0]++, process.env.WEBAPP_AWS_REGION) ||
      /* istanbul ignore next */
      (cov_uov7ymlab().b[0][1]++, process.env.AWS_REGION) ||
      /* istanbul ignore next */
      (cov_uov7ymlab().b[0][2]++, 'us-east-1')
    });
    /* istanbul ignore next */
    cov_uov7ymlab().s[2]++;
    this.secretsCache = new Map();
    /* istanbul ignore next */
    cov_uov7ymlab().s[3]++;
    this.initialized = false;
  }
  async loadAllSecrets() {
    /* istanbul ignore next */
    cov_uov7ymlab().f[1]++;
    cov_uov7ymlab().s[4]++;
    if (this.initialized) {
      /* istanbul ignore next */
      cov_uov7ymlab().b[1][0]++;
      cov_uov7ymlab().s[5]++;
      console.log('✅ Secrets already loaded');
      /* istanbul ignore next */
      cov_uov7ymlab().s[6]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_uov7ymlab().b[1][1]++;
    }
    cov_uov7ymlab().s[7]++;
    console.log('🔐 Loading application secrets...');
    const startTime =
    /* istanbul ignore next */
    (cov_uov7ymlab().s[8]++, Date.now());
    /* istanbul ignore next */
    cov_uov7ymlab().s[9]++;
    try {
      /* istanbul ignore next */
      cov_uov7ymlab().s[10]++;
      // Load core application secrets
      await this.loadCoreSecrets();

      // Load API key encryption secret
      /* istanbul ignore next */
      cov_uov7ymlab().s[11]++;
      await this.loadApiKeyEncryptionSecret();

      // Load JWT secrets
      /* istanbul ignore next */
      cov_uov7ymlab().s[12]++;
      await this.loadJwtSecrets();
      /* istanbul ignore next */
      cov_uov7ymlab().s[13]++;
      this.initialized = true;
      /* istanbul ignore next */
      cov_uov7ymlab().s[14]++;
      console.log(`✅ All secrets loaded successfully in ${Date.now() - startTime}ms`);
    } catch (error) {
      /* istanbul ignore next */
      cov_uov7ymlab().s[15]++;
      console.error('❌ Failed to load secrets:', error.message);
      /* istanbul ignore next */
      cov_uov7ymlab().s[16]++;
      console.warn('⚠️  Application will run with limited functionality');

      // Security: Require proper secrets for production deployment
      /* istanbul ignore next */
      cov_uov7ymlab().s[17]++;
      this.setRequiredEnvironmentVariables();
    }
  }
  async loadCoreSecrets() {
    /* istanbul ignore next */
    cov_uov7ymlab().f[2]++;
    cov_uov7ymlab().s[18]++;
    try {
      // Try to get the main application secrets
      const secretArn =
      /* istanbul ignore next */
      (cov_uov7ymlab().s[19]++, process.env.DB_SECRET_ARN);
      /* istanbul ignore next */
      cov_uov7ymlab().s[20]++;
      if (secretArn) {
        /* istanbul ignore next */
        cov_uov7ymlab().b[2][0]++;
        cov_uov7ymlab().s[21]++;
        console.log('🔑 Loading database secrets...');
        const dbSecrets =
        /* istanbul ignore next */
        (cov_uov7ymlab().s[22]++, await this.getSecret(secretArn));

        // Database secrets are already handled by database.js
        // Just validate they're accessible
        /* istanbul ignore next */
        cov_uov7ymlab().s[23]++;
        if (dbSecrets) {
          /* istanbul ignore next */
          cov_uov7ymlab().b[3][0]++;
          cov_uov7ymlab().s[24]++;
          console.log('✅ Database secrets accessible');
        } else
        /* istanbul ignore next */
        {
          cov_uov7ymlab().b[3][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_uov7ymlab().b[2][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_uov7ymlab().s[25]++;
      console.warn('⚠️  Database secrets not available:', error.message);
    }
  }
  async loadApiKeyEncryptionSecret() {
    /* istanbul ignore next */
    cov_uov7ymlab().f[3]++;
    cov_uov7ymlab().s[26]++;
    try {
      /* istanbul ignore next */
      cov_uov7ymlab().s[27]++;
      console.log('🔐 Loading API key encryption secret...');

      // Try multiple possible secret locations (CloudFormation naming first)
      const possibleSecrets =
      /* istanbul ignore next */
      (cov_uov7ymlab().s[28]++, ['stocks-app-api-key-encryption-stocks-app-stack', 'stocks-app-api-key-encryption-dev', 'stocks-app/api-key-encryption', 'stocks/api-key-encryption', 'financial-dashboard/encryption-key', 'webapp/api-encryption-secret']);
      let encryptionSecret =
      /* istanbul ignore next */
      (cov_uov7ymlab().s[29]++, null);
      /* istanbul ignore next */
      cov_uov7ymlab().s[30]++;
      for (const secretName of possibleSecrets) {
        /* istanbul ignore next */
        cov_uov7ymlab().s[31]++;
        try {
          const secret =
          /* istanbul ignore next */
          (cov_uov7ymlab().s[32]++, await this.getSecret(secretName));
          /* istanbul ignore next */
          cov_uov7ymlab().s[33]++;
          if (secret) {
            /* istanbul ignore next */
            cov_uov7ymlab().b[4][0]++;
            cov_uov7ymlab().s[34]++;
            if (typeof secret === 'string') {
              /* istanbul ignore next */
              cov_uov7ymlab().b[5][0]++;
              cov_uov7ymlab().s[35]++;
              encryptionSecret = secret;
            } else {
              /* istanbul ignore next */
              cov_uov7ymlab().b[5][1]++;
              cov_uov7ymlab().s[36]++;
              if (secret.API_KEY_ENCRYPTION_SECRET) {
                /* istanbul ignore next */
                cov_uov7ymlab().b[6][0]++;
                cov_uov7ymlab().s[37]++;
                encryptionSecret = secret.API_KEY_ENCRYPTION_SECRET;
              } else {
                /* istanbul ignore next */
                cov_uov7ymlab().b[6][1]++;
                cov_uov7ymlab().s[38]++;
                if (secret.encryptionKey) {
                  /* istanbul ignore next */
                  cov_uov7ymlab().b[7][0]++;
                  cov_uov7ymlab().s[39]++;
                  encryptionSecret = secret.encryptionKey;
                } else {
                  /* istanbul ignore next */
                  cov_uov7ymlab().b[7][1]++;
                  cov_uov7ymlab().s[40]++;
                  if (secret.secretKey) {
                    /* istanbul ignore next */
                    cov_uov7ymlab().b[8][0]++;
                    cov_uov7ymlab().s[41]++;
                    encryptionSecret = secret.secretKey;
                  } else
                  /* istanbul ignore next */
                  {
                    cov_uov7ymlab().b[8][1]++;
                  }
                }
              }
            }
            /* istanbul ignore next */
            cov_uov7ymlab().s[42]++;
            if (encryptionSecret) {
              /* istanbul ignore next */
              cov_uov7ymlab().b[9][0]++;
              cov_uov7ymlab().s[43]++;
              console.log(`✅ Found encryption secret from AWS Secrets Manager`);
              /* istanbul ignore next */
              cov_uov7ymlab().s[44]++;
              break; // Security: Don't log secret location details
            } else
            /* istanbul ignore next */
            {
              cov_uov7ymlab().b[9][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_uov7ymlab().b[4][1]++;
          }
        } catch (err) {
          /* istanbul ignore next */
          cov_uov7ymlab().s[45]++;
          console.log(`🔍 Secret not found: ${secretName}`);
          /* istanbul ignore next */
          cov_uov7ymlab().s[46]++;
          continue;
        }
      }
      /* istanbul ignore next */
      cov_uov7ymlab().s[47]++;
      if (encryptionSecret) {
        /* istanbul ignore next */
        cov_uov7ymlab().b[10][0]++;
        cov_uov7ymlab().s[48]++;
        process.env.API_KEY_ENCRYPTION_SECRET = encryptionSecret;
        /* istanbul ignore next */
        cov_uov7ymlab().s[49]++;
        console.log('✅ API key encryption secret loaded and injected');
      } else {
        /* istanbul ignore next */
        cov_uov7ymlab().b[10][1]++;
        cov_uov7ymlab().s[50]++;
        console.error('❌ CRITICAL: No API key encryption secret found - API key service will be disabled');
        /* istanbul ignore next */
        cov_uov7ymlab().s[51]++;
        console.error('💡 REQUIRED: Create a secret named "stocks-app/api-key-encryption" in AWS Secrets Manager');
        // Security: Never generate temporary encryption keys for financial data
        /* istanbul ignore next */
        cov_uov7ymlab().s[52]++;
        throw new Error('API key encryption secret is required for production deployment');
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_uov7ymlab().s[53]++;
      console.error('❌ Failed to load API key encryption secret:', error.message);
      /* istanbul ignore next */
      cov_uov7ymlab().s[54]++;
      console.error('💡 REQUIRED: Create a secret named "stocks-app/api-key-encryption" in AWS Secrets Manager');
      // Security: Never generate temporary encryption keys for financial data
      /* istanbul ignore next */
      cov_uov7ymlab().s[55]++;
      throw new Error('API key encryption secret is required for production deployment');
    }
  }
  async loadJwtSecrets() {
    /* istanbul ignore next */
    cov_uov7ymlab().f[4]++;
    cov_uov7ymlab().s[56]++;
    try {
      /* istanbul ignore next */
      cov_uov7ymlab().s[57]++;
      console.log('🔐 Loading JWT secrets...');
      const possibleJwtSecrets =
      /* istanbul ignore next */
      (cov_uov7ymlab().s[58]++, ['stocks-app-jwt-secret-stocks-app-stack', 'stocks-app-jwt-secret-dev', 'stocks-app/jwt-secret', 'stocks/jwt-secret', 'financial-dashboard/jwt-key', 'webapp/jwt-secret']);
      let jwtSecret =
      /* istanbul ignore next */
      (cov_uov7ymlab().s[59]++, null);
      /* istanbul ignore next */
      cov_uov7ymlab().s[60]++;
      for (const secretName of possibleJwtSecrets) {
        /* istanbul ignore next */
        cov_uov7ymlab().s[61]++;
        try {
          const secret =
          /* istanbul ignore next */
          (cov_uov7ymlab().s[62]++, await this.getSecret(secretName));
          /* istanbul ignore next */
          cov_uov7ymlab().s[63]++;
          if (secret) {
            /* istanbul ignore next */
            cov_uov7ymlab().b[11][0]++;
            cov_uov7ymlab().s[64]++;
            if (typeof secret === 'string') {
              /* istanbul ignore next */
              cov_uov7ymlab().b[12][0]++;
              cov_uov7ymlab().s[65]++;
              jwtSecret = secret;
            } else {
              /* istanbul ignore next */
              cov_uov7ymlab().b[12][1]++;
              cov_uov7ymlab().s[66]++;
              if (secret.JWT_SECRET) {
                /* istanbul ignore next */
                cov_uov7ymlab().b[13][0]++;
                cov_uov7ymlab().s[67]++;
                jwtSecret = secret.JWT_SECRET;
              } else {
                /* istanbul ignore next */
                cov_uov7ymlab().b[13][1]++;
                cov_uov7ymlab().s[68]++;
                if (secret.jwtSecret) {
                  /* istanbul ignore next */
                  cov_uov7ymlab().b[14][0]++;
                  cov_uov7ymlab().s[69]++;
                  jwtSecret = secret.jwtSecret;
                } else
                /* istanbul ignore next */
                {
                  cov_uov7ymlab().b[14][1]++;
                }
              }
            }
            /* istanbul ignore next */
            cov_uov7ymlab().s[70]++;
            if (jwtSecret) {
              /* istanbul ignore next */
              cov_uov7ymlab().b[15][0]++;
              cov_uov7ymlab().s[71]++;
              console.log(`✅ Found JWT secret from AWS Secrets Manager`);
              /* istanbul ignore next */
              cov_uov7ymlab().s[72]++;
              break; // Security: Don't log secret location details
            } else
            /* istanbul ignore next */
            {
              cov_uov7ymlab().b[15][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_uov7ymlab().b[11][1]++;
          }
        } catch (err) {
          /* istanbul ignore next */
          cov_uov7ymlab().s[73]++;
          continue;
        }
      }
      /* istanbul ignore next */
      cov_uov7ymlab().s[74]++;
      if (jwtSecret) {
        /* istanbul ignore next */
        cov_uov7ymlab().b[16][0]++;
        cov_uov7ymlab().s[75]++;
        process.env.JWT_SECRET = jwtSecret;
        /* istanbul ignore next */
        cov_uov7ymlab().s[76]++;
        console.log('✅ JWT secret loaded and injected');
      } else {
        /* istanbul ignore next */
        cov_uov7ymlab().b[16][1]++;
        cov_uov7ymlab().s[77]++;
        console.warn('⚠️  No JWT secret found - using existing environment value');
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_uov7ymlab().s[78]++;
      console.warn('⚠️  Failed to load JWT secret:', error.message);
    }
  }
  async getSecret(secretId) {
    /* istanbul ignore next */
    cov_uov7ymlab().f[5]++;
    cov_uov7ymlab().s[79]++;
    try {
      /* istanbul ignore next */
      cov_uov7ymlab().s[80]++;
      // Check cache first
      if (this.secretsCache.has(secretId)) {
        /* istanbul ignore next */
        cov_uov7ymlab().b[17][0]++;
        cov_uov7ymlab().s[81]++;
        return this.secretsCache.get(secretId);
      } else
      /* istanbul ignore next */
      {
        cov_uov7ymlab().b[17][1]++;
      }
      const command =
      /* istanbul ignore next */
      (cov_uov7ymlab().s[82]++, new GetSecretValueCommand({
        SecretId: secretId
      }));
      const response =
      /* istanbul ignore next */
      (cov_uov7ymlab().s[83]++, await this.client.send(command));
      let secret;
      /* istanbul ignore next */
      cov_uov7ymlab().s[84]++;
      if (response.SecretString) {
        /* istanbul ignore next */
        cov_uov7ymlab().b[18][0]++;
        cov_uov7ymlab().s[85]++;
        try {
          /* istanbul ignore next */
          cov_uov7ymlab().s[86]++;
          secret = JSON.parse(response.SecretString);
        } catch (parseError) {
          /* istanbul ignore next */
          cov_uov7ymlab().s[87]++;
          secret = response.SecretString; // Plain string secret
        }
      } else {
        /* istanbul ignore next */
        cov_uov7ymlab().b[18][1]++;
        cov_uov7ymlab().s[88]++;
        if (response.SecretBinary) {
          /* istanbul ignore next */
          cov_uov7ymlab().b[19][0]++;
          cov_uov7ymlab().s[89]++;
          secret = Buffer.from(response.SecretBinary, 'base64').toString('utf-8');
        } else
        /* istanbul ignore next */
        {
          cov_uov7ymlab().b[19][1]++;
        }
      }

      // Cache the secret
      /* istanbul ignore next */
      cov_uov7ymlab().s[90]++;
      this.secretsCache.set(secretId, secret);
      /* istanbul ignore next */
      cov_uov7ymlab().s[91]++;
      return secret;
    } catch (error) {
      /* istanbul ignore next */
      cov_uov7ymlab().s[92]++;
      if (error.name === 'ResourceNotFoundException') {
        /* istanbul ignore next */
        cov_uov7ymlab().b[20][0]++;
        cov_uov7ymlab().s[93]++;
        console.log(`🔍 Secret not found: ${secretId}`);
      } else {
        /* istanbul ignore next */
        cov_uov7ymlab().b[20][1]++;
        cov_uov7ymlab().s[94]++;
        console.error(`❌ Error getting secret ${secretId}:`, error.message);
      }
      /* istanbul ignore next */
      cov_uov7ymlab().s[95]++;
      return null;
    }
  }

  // SECURITY: Removed temporary encryption key generation
  // Financial applications must never use temporary encryption keys
  // This prevents accidental production deployment with insecure keys

  async validateRequiredSecrets() {
    /* istanbul ignore next */
    cov_uov7ymlab().f[6]++;
    cov_uov7ymlab().s[96]++;
    console.log('🔐 Validating required production secrets...');
    /* istanbul ignore next */
    cov_uov7ymlab().s[97]++;
    if (!process.env.API_KEY_ENCRYPTION_SECRET) {
      /* istanbul ignore next */
      cov_uov7ymlab().b[21][0]++;
      cov_uov7ymlab().s[98]++;
      throw new Error('CRITICAL: API_KEY_ENCRYPTION_SECRET is required for financial application');
    } else
    /* istanbul ignore next */
    {
      cov_uov7ymlab().b[21][1]++;
    }
    cov_uov7ymlab().s[99]++;
    console.log('✅ Required secrets validation passed');
  }

  // SECURITY: Removed fallback secrets generation
  // Financial applications must never use temporary/fallback secrets
  // This prevents accidental production deployment with insecure keys

  setRequiredEnvironmentVariables() {
    /* istanbul ignore next */
    cov_uov7ymlab().f[7]++;
    cov_uov7ymlab().s[100]++;
    console.log('🔍 Checking required environment variables...');
    const requiredSecrets =
    /* istanbul ignore next */
    (cov_uov7ymlab().s[101]++, ['API_KEY_ENCRYPTION_SECRET', 'JWT_SECRET']);
    const missing =
    /* istanbul ignore next */
    (cov_uov7ymlab().s[102]++, requiredSecrets.filter(secret => {
      /* istanbul ignore next */
      cov_uov7ymlab().f[8]++;
      cov_uov7ymlab().s[103]++;
      return !process.env[secret];
    }));
    /* istanbul ignore next */
    cov_uov7ymlab().s[104]++;
    if (missing.length > 0) {
      /* istanbul ignore next */
      cov_uov7ymlab().b[22][0]++;
      cov_uov7ymlab().s[105]++;
      console.error('❌ CRITICAL: Missing required secrets:', missing);
      /* istanbul ignore next */
      cov_uov7ymlab().s[106]++;
      throw new Error(`Missing required secrets: ${missing.join(', ')}`);
    } else
    /* istanbul ignore next */
    {
      cov_uov7ymlab().b[22][1]++;
    }
    cov_uov7ymlab().s[107]++;
    console.log('✅ All required environment variables are present');
  }

  // Helper method to check if secrets are loaded
  isInitialized() {
    /* istanbul ignore next */
    cov_uov7ymlab().f[9]++;
    cov_uov7ymlab().s[108]++;
    return this.initialized;
  }

  // Helper method to check if using temporary secrets
  isUsingTempSecrets() {
    /* istanbul ignore next */
    cov_uov7ymlab().f[10]++;
    cov_uov7ymlab().s[109]++;
    return /* istanbul ignore next */(cov_uov7ymlab().b[23][0]++, process.env.TEMP_ENCRYPTION_KEY === 'true') ||
    /* istanbul ignore next */
    (cov_uov7ymlab().b[23][1]++, process.env.TEMP_JWT_SECRET === 'true');
  }

  // Get initialization status for debugging
  getStatus() {
    /* istanbul ignore next */
    cov_uov7ymlab().f[11]++;
    cov_uov7ymlab().s[110]++;
    return {
      initialized: this.initialized,
      hasApiKeyEncryption: !!process.env.API_KEY_ENCRYPTION_SECRET,
      hasJwtSecret: !!process.env.JWT_SECRET,
      usingTempEncryption: process.env.TEMP_ENCRYPTION_KEY === 'true',
      usingTempJwt: process.env.TEMP_JWT_SECRET === 'true',
      cachedSecrets: this.secretsCache.size
    };
  }
}

// Create singleton instance
const secretsLoader =
/* istanbul ignore next */
(cov_uov7ymlab().s[111]++, new SecretsLoader());
/* istanbul ignore next */
cov_uov7ymlab().s[112]++;
module.exports = secretsLoader;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,