{"version":3,"names":["__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__name","target","value","configurable","__export","all","name","get","enumerable","__copyProps","to","from","except","desc","key","call","__toCommonJS","mod","index_exports","AWSSDKSigV4Signer","AwsSdkSigV4ASigner","AwsSdkSigV4Signer","NODE_AUTH_SCHEME_PREFERENCE_OPTIONS","NODE_SIGV4A_CONFIG_OPTIONS","getBearerTokenEnvKey","resolveAWSSDKSigV4Config","resolveAwsSdkSigV4AConfig","resolveAwsSdkSigV4Config","validateSigningProperties","module","exports","import_protocol_http2","require","import_protocol_http","getDateHeader","response","HttpResponse","isInstance","headers","date","Date","getSkewCorrectedDate","systemClockOffset","now","isClockSkewed","clockTime","Math","abs","getTime","getUpdatedSystemClockOffset","currentSystemClockOffset","clockTimeInMs","parse","throwSigningPropertyError","property","Error","signingProperties","context","config","authScheme","endpointV2","properties","authSchemes","signerFunction","signer","signingRegion","signingRegionSet","signingName","sign","httpRequest","identity","HttpRequest","validatedProps","handlerExecutionContext","length","first","second","signedRequest","signingDate","signingService","errorHandler","error","serverTime","ServerTime","$response","initialSystemClockOffset","clockSkewCorrected","$metadata","successHandler","httpResponse","dateHeader","import_protocol_http3","configResolvedSigningRegionSet","sigv4aSigningRegionSet","multiRegionOverride","join","getArrayForCommaSeparatedString","str","split","map","item","trim","replace","toUpperCase","NODE_AUTH_SCHEME_PREFERENCE_ENV_KEY","NODE_AUTH_SCHEME_PREFERENCE_CONFIG_KEY","environmentVariableSelector","env","options","bearerTokenKey","configFileSelector","profile","default","import_core","import_property_provider","normalizeProvider","AWS_SIGV4A_SIGNING_REGION_SET","_","ProviderError","tryNextLink","sigv4a_signing_region_set","import_client","import_core2","import_signature_v4","inputCredentials","credentials","isUserSupplied","resolvedCredentials","set","memoizedProvider","normalizeCredentialProvider","credentialDefaultProvider","boundProvider","bindCallerConfig","attributed","then","creds","setCredentialFeature","memoized","configBound","signingEscapePath","sha256","regionInfoProvider","region","useFipsEndpoint","useDualstackEndpoint","regionInfo","serviceId","params","service","uriEscapePath","SignerCtor","signerConstructor","SignatureV4","assign","defaultSigningName","resolvedConfig","credentialsProvider","memoizeIdentityProvider","isIdentityExpired","doesIdentityRequireRefresh","parentClientConfig","fn","callerClientConfig"],"sources":["index.js"],"sourcesContent":["\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/submodules/httpAuthSchemes/index.ts\nvar index_exports = {};\n__export(index_exports, {\n  AWSSDKSigV4Signer: () => AWSSDKSigV4Signer,\n  AwsSdkSigV4ASigner: () => AwsSdkSigV4ASigner,\n  AwsSdkSigV4Signer: () => AwsSdkSigV4Signer,\n  NODE_AUTH_SCHEME_PREFERENCE_OPTIONS: () => NODE_AUTH_SCHEME_PREFERENCE_OPTIONS,\n  NODE_SIGV4A_CONFIG_OPTIONS: () => NODE_SIGV4A_CONFIG_OPTIONS,\n  getBearerTokenEnvKey: () => getBearerTokenEnvKey,\n  resolveAWSSDKSigV4Config: () => resolveAWSSDKSigV4Config,\n  resolveAwsSdkSigV4AConfig: () => resolveAwsSdkSigV4AConfig,\n  resolveAwsSdkSigV4Config: () => resolveAwsSdkSigV4Config,\n  validateSigningProperties: () => validateSigningProperties\n});\nmodule.exports = __toCommonJS(index_exports);\n\n// src/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4Signer.ts\nvar import_protocol_http2 = require(\"@smithy/protocol-http\");\n\n// src/submodules/httpAuthSchemes/utils/getDateHeader.ts\nvar import_protocol_http = require(\"@smithy/protocol-http\");\nvar getDateHeader = /* @__PURE__ */ __name((response) => import_protocol_http.HttpResponse.isInstance(response) ? response.headers?.date ?? response.headers?.Date : void 0, \"getDateHeader\");\n\n// src/submodules/httpAuthSchemes/utils/getSkewCorrectedDate.ts\nvar getSkewCorrectedDate = /* @__PURE__ */ __name((systemClockOffset) => new Date(Date.now() + systemClockOffset), \"getSkewCorrectedDate\");\n\n// src/submodules/httpAuthSchemes/utils/isClockSkewed.ts\nvar isClockSkewed = /* @__PURE__ */ __name((clockTime, systemClockOffset) => Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - clockTime) >= 3e5, \"isClockSkewed\");\n\n// src/submodules/httpAuthSchemes/utils/getUpdatedSystemClockOffset.ts\nvar getUpdatedSystemClockOffset = /* @__PURE__ */ __name((clockTime, currentSystemClockOffset) => {\n  const clockTimeInMs = Date.parse(clockTime);\n  if (isClockSkewed(clockTimeInMs, currentSystemClockOffset)) {\n    return clockTimeInMs - Date.now();\n  }\n  return currentSystemClockOffset;\n}, \"getUpdatedSystemClockOffset\");\n\n// src/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4Signer.ts\nvar throwSigningPropertyError = /* @__PURE__ */ __name((name, property) => {\n  if (!property) {\n    throw new Error(`Property \\`${name}\\` is not resolved for AWS SDK SigV4Auth`);\n  }\n  return property;\n}, \"throwSigningPropertyError\");\nvar validateSigningProperties = /* @__PURE__ */ __name(async (signingProperties) => {\n  const context = throwSigningPropertyError(\n    \"context\",\n    signingProperties.context\n  );\n  const config = throwSigningPropertyError(\"config\", signingProperties.config);\n  const authScheme = context.endpointV2?.properties?.authSchemes?.[0];\n  const signerFunction = throwSigningPropertyError(\n    \"signer\",\n    config.signer\n  );\n  const signer = await signerFunction(authScheme);\n  const signingRegion = signingProperties?.signingRegion;\n  const signingRegionSet = signingProperties?.signingRegionSet;\n  const signingName = signingProperties?.signingName;\n  return {\n    config,\n    signer,\n    signingRegion,\n    signingRegionSet,\n    signingName\n  };\n}, \"validateSigningProperties\");\nvar AwsSdkSigV4Signer = class {\n  static {\n    __name(this, \"AwsSdkSigV4Signer\");\n  }\n  async sign(httpRequest, identity, signingProperties) {\n    if (!import_protocol_http2.HttpRequest.isInstance(httpRequest)) {\n      throw new Error(\"The request is not an instance of `HttpRequest` and cannot be signed\");\n    }\n    const validatedProps = await validateSigningProperties(signingProperties);\n    const { config, signer } = validatedProps;\n    let { signingRegion, signingName } = validatedProps;\n    const handlerExecutionContext = signingProperties.context;\n    if (handlerExecutionContext?.authSchemes?.length ?? 0 > 1) {\n      const [first, second] = handlerExecutionContext.authSchemes;\n      if (first?.name === \"sigv4a\" && second?.name === \"sigv4\") {\n        signingRegion = second?.signingRegion ?? signingRegion;\n        signingName = second?.signingName ?? signingName;\n      }\n    }\n    const signedRequest = await signer.sign(httpRequest, {\n      signingDate: getSkewCorrectedDate(config.systemClockOffset),\n      signingRegion,\n      signingService: signingName\n    });\n    return signedRequest;\n  }\n  errorHandler(signingProperties) {\n    return (error) => {\n      const serverTime = error.ServerTime ?? getDateHeader(error.$response);\n      if (serverTime) {\n        const config = throwSigningPropertyError(\"config\", signingProperties.config);\n        const initialSystemClockOffset = config.systemClockOffset;\n        config.systemClockOffset = getUpdatedSystemClockOffset(serverTime, config.systemClockOffset);\n        const clockSkewCorrected = config.systemClockOffset !== initialSystemClockOffset;\n        if (clockSkewCorrected && error.$metadata) {\n          error.$metadata.clockSkewCorrected = true;\n        }\n      }\n      throw error;\n    };\n  }\n  successHandler(httpResponse, signingProperties) {\n    const dateHeader = getDateHeader(httpResponse);\n    if (dateHeader) {\n      const config = throwSigningPropertyError(\"config\", signingProperties.config);\n      config.systemClockOffset = getUpdatedSystemClockOffset(dateHeader, config.systemClockOffset);\n    }\n  }\n};\nvar AWSSDKSigV4Signer = AwsSdkSigV4Signer;\n\n// src/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4ASigner.ts\nvar import_protocol_http3 = require(\"@smithy/protocol-http\");\nvar AwsSdkSigV4ASigner = class extends AwsSdkSigV4Signer {\n  static {\n    __name(this, \"AwsSdkSigV4ASigner\");\n  }\n  async sign(httpRequest, identity, signingProperties) {\n    if (!import_protocol_http3.HttpRequest.isInstance(httpRequest)) {\n      throw new Error(\"The request is not an instance of `HttpRequest` and cannot be signed\");\n    }\n    const { config, signer, signingRegion, signingRegionSet, signingName } = await validateSigningProperties(\n      signingProperties\n    );\n    const configResolvedSigningRegionSet = await config.sigv4aSigningRegionSet?.();\n    const multiRegionOverride = (configResolvedSigningRegionSet ?? signingRegionSet ?? [signingRegion]).join(\",\");\n    const signedRequest = await signer.sign(httpRequest, {\n      signingDate: getSkewCorrectedDate(config.systemClockOffset),\n      signingRegion: multiRegionOverride,\n      signingService: signingName\n    });\n    return signedRequest;\n  }\n};\n\n// src/submodules/httpAuthSchemes/utils/getArrayForCommaSeparatedString.ts\nvar getArrayForCommaSeparatedString = /* @__PURE__ */ __name((str) => typeof str === \"string\" && str.length > 0 ? str.split(\",\").map((item) => item.trim()) : [], \"getArrayForCommaSeparatedString\");\n\n// src/submodules/httpAuthSchemes/utils/getBearerTokenEnvKey.ts\nvar getBearerTokenEnvKey = /* @__PURE__ */ __name((signingName) => `AWS_BEARER_TOKEN_${signingName.replace(/[\\s-]/g, \"_\").toUpperCase()}`, \"getBearerTokenEnvKey\");\n\n// src/submodules/httpAuthSchemes/aws_sdk/NODE_AUTH_SCHEME_PREFERENCE_OPTIONS.ts\nvar NODE_AUTH_SCHEME_PREFERENCE_ENV_KEY = \"AWS_AUTH_SCHEME_PREFERENCE\";\nvar NODE_AUTH_SCHEME_PREFERENCE_CONFIG_KEY = \"auth_scheme_preference\";\nvar NODE_AUTH_SCHEME_PREFERENCE_OPTIONS = {\n  /**\n   * Retrieves auth scheme preference from environment variables\n   * @param env - Node process environment object\n   * @returns Array of auth scheme strings if preference is set, undefined otherwise\n   */\n  environmentVariableSelector: /* @__PURE__ */ __name((env, options) => {\n    if (options?.signingName) {\n      const bearerTokenKey = getBearerTokenEnvKey(options.signingName);\n      if (bearerTokenKey in env) return [\"httpBearerAuth\"];\n    }\n    if (!(NODE_AUTH_SCHEME_PREFERENCE_ENV_KEY in env)) return void 0;\n    return getArrayForCommaSeparatedString(env[NODE_AUTH_SCHEME_PREFERENCE_ENV_KEY]);\n  }, \"environmentVariableSelector\"),\n  /**\n   * Retrieves auth scheme preference from config file\n   * @param profile - Config profile object\n   * @returns Array of auth scheme strings if preference is set, undefined otherwise\n   */\n  configFileSelector: /* @__PURE__ */ __name((profile) => {\n    if (!(NODE_AUTH_SCHEME_PREFERENCE_CONFIG_KEY in profile)) return void 0;\n    return getArrayForCommaSeparatedString(profile[NODE_AUTH_SCHEME_PREFERENCE_CONFIG_KEY]);\n  }, \"configFileSelector\"),\n  /**\n   * Default auth scheme preference if not specified in environment or config\n   */\n  default: []\n};\n\n// src/submodules/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4AConfig.ts\nvar import_core = require(\"@smithy/core\");\nvar import_property_provider = require(\"@smithy/property-provider\");\nvar resolveAwsSdkSigV4AConfig = /* @__PURE__ */ __name((config) => {\n  config.sigv4aSigningRegionSet = (0, import_core.normalizeProvider)(config.sigv4aSigningRegionSet);\n  return config;\n}, \"resolveAwsSdkSigV4AConfig\");\nvar NODE_SIGV4A_CONFIG_OPTIONS = {\n  environmentVariableSelector(env) {\n    if (env.AWS_SIGV4A_SIGNING_REGION_SET) {\n      return env.AWS_SIGV4A_SIGNING_REGION_SET.split(\",\").map((_) => _.trim());\n    }\n    throw new import_property_provider.ProviderError(\"AWS_SIGV4A_SIGNING_REGION_SET not set in env.\", {\n      tryNextLink: true\n    });\n  },\n  configFileSelector(profile) {\n    if (profile.sigv4a_signing_region_set) {\n      return (profile.sigv4a_signing_region_set ?? \"\").split(\",\").map((_) => _.trim());\n    }\n    throw new import_property_provider.ProviderError(\"sigv4a_signing_region_set not set in profile.\", {\n      tryNextLink: true\n    });\n  },\n  default: void 0\n};\n\n// src/submodules/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4Config.ts\nvar import_client = require(\"@aws-sdk/core/client\");\nvar import_core2 = require(\"@smithy/core\");\nvar import_signature_v4 = require(\"@smithy/signature-v4\");\nvar resolveAwsSdkSigV4Config = /* @__PURE__ */ __name((config) => {\n  let inputCredentials = config.credentials;\n  let isUserSupplied = !!config.credentials;\n  let resolvedCredentials = void 0;\n  Object.defineProperty(config, \"credentials\", {\n    set(credentials) {\n      if (credentials && credentials !== inputCredentials && credentials !== resolvedCredentials) {\n        isUserSupplied = true;\n      }\n      inputCredentials = credentials;\n      const memoizedProvider = normalizeCredentialProvider(config, {\n        credentials: inputCredentials,\n        credentialDefaultProvider: config.credentialDefaultProvider\n      });\n      const boundProvider = bindCallerConfig(config, memoizedProvider);\n      if (isUserSupplied && !boundProvider.attributed) {\n        resolvedCredentials = /* @__PURE__ */ __name(async (options) => boundProvider(options).then(\n          (creds) => (0, import_client.setCredentialFeature)(creds, \"CREDENTIALS_CODE\", \"e\")\n        ), \"resolvedCredentials\");\n        resolvedCredentials.memoized = boundProvider.memoized;\n        resolvedCredentials.configBound = boundProvider.configBound;\n        resolvedCredentials.attributed = true;\n      } else {\n        resolvedCredentials = boundProvider;\n      }\n    },\n    get() {\n      return resolvedCredentials;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  config.credentials = inputCredentials;\n  const {\n    // Default for signingEscapePath\n    signingEscapePath = true,\n    // Default for systemClockOffset\n    systemClockOffset = config.systemClockOffset || 0,\n    // No default for sha256 since it is platform dependent\n    sha256\n  } = config;\n  let signer;\n  if (config.signer) {\n    signer = (0, import_core2.normalizeProvider)(config.signer);\n  } else if (config.regionInfoProvider) {\n    signer = /* @__PURE__ */ __name(() => (0, import_core2.normalizeProvider)(config.region)().then(\n      async (region) => [\n        await config.regionInfoProvider(region, {\n          useFipsEndpoint: await config.useFipsEndpoint(),\n          useDualstackEndpoint: await config.useDualstackEndpoint()\n        }) || {},\n        region\n      ]\n    ).then(([regionInfo, region]) => {\n      const { signingRegion, signingService } = regionInfo;\n      config.signingRegion = config.signingRegion || signingRegion || region;\n      config.signingName = config.signingName || signingService || config.serviceId;\n      const params = {\n        ...config,\n        credentials: config.credentials,\n        region: config.signingRegion,\n        service: config.signingName,\n        sha256,\n        uriEscapePath: signingEscapePath\n      };\n      const SignerCtor = config.signerConstructor || import_signature_v4.SignatureV4;\n      return new SignerCtor(params);\n    }), \"signer\");\n  } else {\n    signer = /* @__PURE__ */ __name(async (authScheme) => {\n      authScheme = Object.assign(\n        {},\n        {\n          name: \"sigv4\",\n          signingName: config.signingName || config.defaultSigningName,\n          signingRegion: await (0, import_core2.normalizeProvider)(config.region)(),\n          properties: {}\n        },\n        authScheme\n      );\n      const signingRegion = authScheme.signingRegion;\n      const signingService = authScheme.signingName;\n      config.signingRegion = config.signingRegion || signingRegion;\n      config.signingName = config.signingName || signingService || config.serviceId;\n      const params = {\n        ...config,\n        credentials: config.credentials,\n        region: config.signingRegion,\n        service: config.signingName,\n        sha256,\n        uriEscapePath: signingEscapePath\n      };\n      const SignerCtor = config.signerConstructor || import_signature_v4.SignatureV4;\n      return new SignerCtor(params);\n    }, \"signer\");\n  }\n  const resolvedConfig = Object.assign(config, {\n    systemClockOffset,\n    signingEscapePath,\n    signer\n  });\n  return resolvedConfig;\n}, \"resolveAwsSdkSigV4Config\");\nvar resolveAWSSDKSigV4Config = resolveAwsSdkSigV4Config;\nfunction normalizeCredentialProvider(config, {\n  credentials,\n  credentialDefaultProvider\n}) {\n  let credentialsProvider;\n  if (credentials) {\n    if (!credentials?.memoized) {\n      credentialsProvider = (0, import_core2.memoizeIdentityProvider)(credentials, import_core2.isIdentityExpired, import_core2.doesIdentityRequireRefresh);\n    } else {\n      credentialsProvider = credentials;\n    }\n  } else {\n    if (credentialDefaultProvider) {\n      credentialsProvider = (0, import_core2.normalizeProvider)(\n        credentialDefaultProvider(\n          Object.assign({}, config, {\n            parentClientConfig: config\n          })\n        )\n      );\n    } else {\n      credentialsProvider = /* @__PURE__ */ __name(async () => {\n        throw new Error(\n          \"@aws-sdk/core::resolveAwsSdkSigV4Config - `credentials` not provided and no credentialDefaultProvider was configured.\"\n        );\n      }, \"credentialsProvider\");\n    }\n  }\n  credentialsProvider.memoized = true;\n  return credentialsProvider;\n}\n__name(normalizeCredentialProvider, \"normalizeCredentialProvider\");\nfunction bindCallerConfig(config, credentialsProvider) {\n  if (credentialsProvider.configBound) {\n    return credentialsProvider;\n  }\n  const fn = /* @__PURE__ */ __name(async (options) => credentialsProvider({ ...options, callerClientConfig: config }), \"fn\");\n  fn.memoized = credentialsProvider.memoized;\n  fn.configBound = true;\n  return fn;\n}\n__name(bindCallerConfig, \"bindCallerConfig\");\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  AWSSDKSigV4Signer,\n  AwsSdkSigV4ASigner,\n  AwsSdkSigV4Signer,\n  NODE_AUTH_SCHEME_PREFERENCE_OPTIONS,\n  NODE_SIGV4A_CONFIG_OPTIONS,\n  getBearerTokenEnvKey,\n  resolveAWSSDKSigV4Config,\n  resolveAwsSdkSigV4AConfig,\n  resolveAwsSdkSigV4Config,\n  validateSigningProperties\n});\n"],"mappings":"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","ignoreList":[]}