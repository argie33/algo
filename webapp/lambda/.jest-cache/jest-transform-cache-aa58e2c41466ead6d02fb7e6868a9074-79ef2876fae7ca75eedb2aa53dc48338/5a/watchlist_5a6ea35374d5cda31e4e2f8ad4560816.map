{"version":3,"names":["cov_18siojie82","actualCoverage","express","s","require","query","authenticateToken","router","Router","get","req","res","f","userId","user","sub","result","json","rows","error","console","status","id","params","watchlistResult","length","b","post","name","description","color","body","trim","dbError","details","code","message","includes","put","delete","symbol","notes","alert_price","alert_type","alert_value","positionResult","nextPosition","next_position","toUpperCase","itemId","position_order","itemIds","Array","isArray","updatePromises","map","index","Promise","all","module","exports"],"sources":["watchlist.js"],"sourcesContent":["const express = require('express');\nconst { query } = require('../utils/database');\nconst { authenticateToken } = require('../middleware/auth');\n\nconst router = express.Router();\n\n// Get all watchlists for a user\nrouter.get('/', authenticateToken, async (req, res) => {\n  try {\n    const userId = req.user.sub;\n    \n    const result = await query(`\n      SELECT w.*, \n             COUNT(wi.id) as item_count\n      FROM watchlists w\n      LEFT JOIN watchlist_items wi ON w.id = wi.watchlist_id\n      WHERE w.user_id = $1\n      GROUP BY w.id\n      ORDER BY w.created_at DESC\n    `, [userId]);\n    \n    res.json(result.rows);\n  } catch (error) {\n    console.error('Error fetching watchlists:', error);\n    res.status(500).json({ error: 'Failed to fetch watchlists' });\n  }\n});\n\n// Get watchlist items for a specific watchlist\nrouter.get('/:id/items', authenticateToken, async (req, res) => {\n  try {\n    const { id } = req.params;\n    const userId = req.user.sub;\n    \n    // First verify the watchlist belongs to the user\n    const watchlistResult = await query(`\n      SELECT id FROM watchlists WHERE id = $1 AND user_id = $2\n    `, [id, userId]);\n    \n    if (watchlistResult.rows.length === 0) {\n      return res.status(404).json({ error: 'Watchlist not found' });\n    }\n    \n    const result = await query(`\n      SELECT wi.*, \n             pd.price as current_price,\n             pd.change_percent as day_change_percent,\n             pd.change_amount as day_change_amount,\n             pd.previous_close,\n             pd.volume,\n             s.short_name,\n             s.security_name,\n             s.sector,\n             md.market_cap,\n             md.average_volume,\n             md.fifty_two_week_low,\n             md.fifty_two_week_high,\n             km.trailing_pe\n      FROM watchlist_items wi\n      LEFT JOIN price_daily pd ON wi.symbol = pd.symbol\n      LEFT JOIN symbols s ON wi.symbol = s.symbol\n      LEFT JOIN market_data md ON wi.symbol = md.ticker\n      LEFT JOIN key_metrics km ON wi.symbol = km.ticker\n      WHERE wi.watchlist_id = $1\n      ORDER BY wi.position_order ASC, wi.added_at DESC\n    `, [id]);\n    \n    res.json(result.rows);\n  } catch (error) {\n    console.error('Error fetching watchlist items:', error);\n    res.status(500).json({ error: 'Failed to fetch watchlist items' });\n  }\n});\n\n// Create a new watchlist\nrouter.post('/', authenticateToken, async (req, res) => {\n  try {\n    const userId = req.user.sub;\n    const { name, description, color } = req.body;\n    \n    if (!name || name.trim() === '') {\n      return res.status(400).json({ error: 'Watchlist name is required' });\n    }\n    \n    // Check if database/table is available\n    if (req.dbError) {\n      return res.status(503).json({ \n        error: 'Watchlist service temporarily unavailable',\n        details: 'Database connection issues - please try again later'\n      });\n    }\n    \n    const result = await query(`\n      INSERT INTO watchlists (user_id, name, description, color)\n      VALUES ($1, $2, $3, $4)\n      RETURNING *\n    `, [userId, name.trim(), description || null, color || '#1976d2']);\n    \n    res.status(201).json(result.rows[0]);\n  } catch (error) {\n    if (error.code === '23505') { // unique constraint violation\n      return res.status(409).json({ error: 'Watchlist name already exists' });\n    }\n    console.error('Error creating watchlist:', error);\n    res.status(500).json({ \n      error: 'Failed to create watchlist',\n      details: error.message.includes('timeout') ? 'Database timeout - please try again' : 'Internal server error'\n    });\n  }\n});\n\n// Update a watchlist\nrouter.put('/:id', authenticateToken, async (req, res) => {\n  try {\n    const { id } = req.params;\n    const userId = req.user.sub;\n    const { name, description, color } = req.body;\n    \n    if (!name || name.trim() === '') {\n      return res.status(400).json({ error: 'Watchlist name is required' });\n    }\n    \n    const result = await query(`\n      UPDATE watchlists \n      SET name = $1, description = $2, color = $3, updated_at = CURRENT_TIMESTAMP\n      WHERE id = $4 AND user_id = $5\n      RETURNING *\n    `, [name.trim(), description || null, color || '#1976d2', id, userId]);\n    \n    if (result.rows.length === 0) {\n      return res.status(404).json({ error: 'Watchlist not found' });\n    }\n    \n    res.json(result.rows[0]);\n  } catch (error) {\n    if (error.code === '23505') { // unique constraint violation\n      return res.status(409).json({ error: 'Watchlist name already exists' });\n    }\n    console.error('Error updating watchlist:', error);\n    res.status(500).json({ error: 'Failed to update watchlist' });\n  }\n});\n\n// Delete a watchlist\nrouter.delete('/:id', authenticateToken, async (req, res) => {\n  try {\n    const { id } = req.params;\n    const userId = req.user.sub;\n    \n    const result = await query(`\n      DELETE FROM watchlists \n      WHERE id = $1 AND user_id = $2\n      RETURNING *\n    `, [id, userId]);\n    \n    if (result.rows.length === 0) {\n      return res.status(404).json({ error: 'Watchlist not found' });\n    }\n    \n    res.json({ message: 'Watchlist deleted successfully' });\n  } catch (error) {\n    console.error('Error deleting watchlist:', error);\n    res.status(500).json({ error: 'Failed to delete watchlist' });\n  }\n});\n\n// Add item to watchlist\nrouter.post('/:id/items', authenticateToken, async (req, res) => {\n  try {\n    const { id } = req.params;\n    const userId = req.user.sub;\n    const { symbol, notes, alert_price, alert_type, alert_value } = req.body;\n    \n    if (!symbol || symbol.trim() === '') {\n      return res.status(400).json({ error: 'Symbol is required' });\n    }\n    \n    // First verify the watchlist belongs to the user\n    const watchlistResult = await query(`\n      SELECT id FROM watchlists WHERE id = $1 AND user_id = $2\n    `, [id, userId]);\n    \n    if (watchlistResult.rows.length === 0) {\n      return res.status(404).json({ error: 'Watchlist not found' });\n    }\n    \n    // Get the next position order\n    const positionResult = await query(`\n      SELECT COALESCE(MAX(position_order), 0) + 1 as next_position\n      FROM watchlist_items WHERE watchlist_id = $1\n    `, [id]);\n    \n    const nextPosition = positionResult.rows[0].next_position;\n    \n    const result = await query(`\n      INSERT INTO watchlist_items (watchlist_id, symbol, notes, alert_price, alert_type, alert_value, position_order)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      RETURNING *\n    `, [id, symbol.trim().toUpperCase(), notes || null, alert_price || null, alert_type || null, alert_value || null, nextPosition]);\n    \n    res.status(201).json(result.rows[0]);\n  } catch (error) {\n    if (error.code === '23505') { // unique constraint violation\n      return res.status(409).json({ error: 'Symbol already exists in this watchlist' });\n    }\n    console.error('Error adding item to watchlist:', error);\n    res.status(500).json({ error: 'Failed to add item to watchlist' });\n  }\n});\n\n// Update watchlist item\nrouter.put('/:id/items/:itemId', authenticateToken, async (req, res) => {\n  try {\n    const { id, itemId } = req.params;\n    const userId = req.user.sub;\n    const { notes, alert_price, alert_type, alert_value, position_order } = req.body;\n    \n    // First verify the watchlist belongs to the user\n    const watchlistResult = await query(`\n      SELECT id FROM watchlists WHERE id = $1 AND user_id = $2\n    `, [id, userId]);\n    \n    if (watchlistResult.rows.length === 0) {\n      return res.status(404).json({ error: 'Watchlist not found' });\n    }\n    \n    const result = await query(`\n      UPDATE watchlist_items \n      SET notes = $1, alert_price = $2, alert_type = $3, alert_value = $4, position_order = $5\n      WHERE id = $6 AND watchlist_id = $7\n      RETURNING *\n    `, [notes || null, alert_price || null, alert_type || null, alert_value || null, position_order || 0, itemId, id]);\n    \n    if (result.rows.length === 0) {\n      return res.status(404).json({ error: 'Watchlist item not found' });\n    }\n    \n    res.json(result.rows[0]);\n  } catch (error) {\n    console.error('Error updating watchlist item:', error);\n    res.status(500).json({ error: 'Failed to update watchlist item' });\n  }\n});\n\n// Delete item from watchlist\nrouter.delete('/:id/items/:itemId', authenticateToken, async (req, res) => {\n  try {\n    const { id, itemId } = req.params;\n    const userId = req.user.sub;\n    \n    // First verify the watchlist belongs to the user\n    const watchlistResult = await query(`\n      SELECT id FROM watchlists WHERE id = $1 AND user_id = $2\n    `, [id, userId]);\n    \n    if (watchlistResult.rows.length === 0) {\n      return res.status(404).json({ error: 'Watchlist not found' });\n    }\n    \n    const result = await query(`\n      DELETE FROM watchlist_items \n      WHERE id = $1 AND watchlist_id = $2\n      RETURNING *\n    `, [itemId, id]);\n    \n    if (result.rows.length === 0) {\n      return res.status(404).json({ error: 'Watchlist item not found' });\n    }\n    \n    res.json({ message: 'Item removed from watchlist successfully' });\n  } catch (error) {\n    console.error('Error removing item from watchlist:', error);\n    res.status(500).json({ error: 'Failed to remove item from watchlist' });\n  }\n});\n\n// Reorder watchlist items\nrouter.post('/:id/items/reorder', authenticateToken, async (req, res) => {\n  try {\n    const { id } = req.params;\n    const userId = req.user.sub;\n    const { itemIds } = req.body; // Array of item IDs in new order\n    \n    if (!Array.isArray(itemIds)) {\n      return res.status(400).json({ error: 'itemIds must be an array' });\n    }\n    \n    // First verify the watchlist belongs to the user\n    const watchlistResult = await query(`\n      SELECT id FROM watchlists WHERE id = $1 AND user_id = $2\n    `, [id, userId]);\n    \n    if (watchlistResult.rows.length === 0) {\n      return res.status(404).json({ error: 'Watchlist not found' });\n    }\n    \n    // Update position order for each item\n    const updatePromises = itemIds.map((itemId, index) => {\n      return query(`\n        UPDATE watchlist_items \n        SET position_order = $1 \n        WHERE id = $2 AND watchlist_id = $3\n      `, [index + 1, itemId, id]);\n    });\n    \n    await Promise.all(updatePromises);\n    \n    res.json({ message: 'Items reordered successfully' });\n  } catch (error) {\n    console.error('Error reordering watchlist items:', error);\n    res.status(500).json({ error: 'Failed to reorder watchlist items' });\n  }\n});\n\nmodule.exports = router;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}