8fd6cef348536e351834be213b47780b
/* istanbul ignore next */
function cov_wrczz4m8q() {
  var path = "/home/stocks/algo/webapp/lambda/routes/health.js";
  var hash = "cb0813015fd0a57ef5d0d2f160dfc91c22499028";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/routes/health.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 34
        }
      },
      "1": {
        start: {
          line: 2,
          column: 72
        },
        end: {
          line: 2,
          column: 100
        }
      },
      "2": {
        start: {
          line: 3,
          column: 22
        },
        end: {
          line: 3,
          column: 61
        }
      },
      "3": {
        start: {
          line: 4,
          column: 22
        },
        end: {
          line: 4,
          column: 55
        }
      },
      "4": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 55
        }
      },
      "5": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 6,
          column: 59
        }
      },
      "6": {
        start: {
          line: 7,
          column: 56
        },
        end: {
          line: 7,
          column: 98
        }
      },
      "7": {
        start: {
          line: 8,
          column: 67
        },
        end: {
          line: 8,
          column: 119
        }
      },
      "8": {
        start: {
          line: 9,
          column: 25
        },
        end: {
          line: 9,
          column: 61
        }
      },
      "9": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 32
        }
      },
      "10": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 31
        }
      },
      "11": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 102,
          column: 3
        }
      },
      "12": {
        start: {
          line: 16,
          column: 20
        },
        end: {
          line: 16,
          column: 30
        }
      },
      "13": {
        start: {
          line: 17,
          column: 21
        },
        end: {
          line: 17,
          column: 26
        }
      },
      "14": {
        start: {
          line: 19,
          column: 2
        },
        end: {
          line: 101,
          column: 3
        }
      },
      "15": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "16": {
        start: {
          line: 22,
          column: 6
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "17": {
        start: {
          line: 41,
          column: 28
        },
        end: {
          line: 41,
          column: 54
        }
      },
      "18": {
        start: {
          line: 42,
          column: 27
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "19": {
        start: {
          line: 43,
          column: 6
        },
        end: {
          line: 43,
          column: 77
        }
      },
      "20": {
        start: {
          line: 43,
          column: 23
        },
        end: {
          line: 43,
          column: 64
        }
      },
      "21": {
        start: {
          line: 46,
          column: 21
        },
        end: {
          line: 46,
          column: 74
        }
      },
      "22": {
        start: {
          line: 47,
          column: 22
        },
        end: {
          line: 47,
          column: 53
        }
      },
      "23": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 71,
          column: 5
        }
      },
      "24": {
        start: {
          line: 50,
          column: 6
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "25": {
        start: {
          line: 61,
          column: 6
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "26": {
        start: {
          line: 74,
          column: 21
        },
        end: {
          line: 74,
          column: 43
        }
      },
      "27": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 75,
          column: 49
        }
      },
      "28": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "29": {
        start: {
          line: 79,
          column: 6
        },
        end: {
          line: 89,
          column: 9
        }
      },
      "30": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 100,
          column: 7
        }
      },
      "31": {
        start: {
          line: 105,
          column: 0
        },
        end: {
          line: 184,
          column: 3
        }
      },
      "32": {
        start: {
          line: 106,
          column: 2
        },
        end: {
          line: 183,
          column: 3
        }
      },
      "33": {
        start: {
          line: 107,
          column: 22
        },
        end: {
          line: 107,
          column: 50
        }
      },
      "34": {
        start: {
          line: 110,
          column: 25
        },
        end: {
          line: 116,
          column: 6
        }
      },
      "35": {
        start: {
          line: 118,
          column: 27
        },
        end: {
          line: 118,
          column: 67
        }
      },
      "36": {
        start: {
          line: 118,
          column: 54
        },
        end: {
          line: 118,
          column: 66
        }
      },
      "37": {
        start: {
          line: 121,
          column: 33
        },
        end: {
          line: 121,
          column: 66
        }
      },
      "38": {
        start: {
          line: 122,
          column: 20
        },
        end: {
          line: 122,
          column: 22
        }
      },
      "39": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 146,
          column: 5
        }
      },
      "40": {
        start: {
          line: 125,
          column: 6
        },
        end: {
          line: 145,
          column: 7
        }
      },
      "41": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 139,
          column: 9
        }
      },
      "42": {
        start: {
          line: 127,
          column: 25
        },
        end: {
          line: 127,
          column: 86
        }
      },
      "43": {
        start: {
          line: 128,
          column: 10
        },
        end: {
          line: 132,
          column: 12
        }
      },
      "44": {
        start: {
          line: 134,
          column: 10
        },
        end: {
          line: 138,
          column: 12
        }
      },
      "45": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 144,
          column: 10
        }
      },
      "46": {
        start: {
          line: 149,
          column: 30
        },
        end: {
          line: 149,
          column: 77
        }
      },
      "47": {
        start: {
          line: 150,
          column: 27
        },
        end: {
          line: 150,
          column: 29
        }
      },
      "48": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 157,
          column: 5
        }
      },
      "49": {
        start: {
          line: 153,
          column: 6
        },
        end: {
          line: 156,
          column: 8
        }
      },
      "50": {
        start: {
          line: 159,
          column: 30
        },
        end: {
          line: 159,
          column: 85
        }
      },
      "51": {
        start: {
          line: 159,
          column: 64
        },
        end: {
          line: 159,
          column: 84
        }
      },
      "52": {
        start: {
          line: 161,
          column: 4
        },
        end: {
          line: 172,
          column: 7
        }
      },
      "53": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 175,
          column: 52
        }
      },
      "54": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 182,
          column: 7
        }
      },
      "55": {
        start: {
          line: 189,
          column: 0
        },
        end: {
          line: 218,
          column: 3
        }
      },
      "56": {
        start: {
          line: 190,
          column: 2
        },
        end: {
          line: 217,
          column: 3
        }
      },
      "57": {
        start: {
          line: 191,
          column: 22
        },
        end: {
          line: 191,
          column: 50
        }
      },
      "58": {
        start: {
          line: 193,
          column: 19
        },
        end: {
          line: 201,
          column: 6
        }
      },
      "59": {
        start: {
          line: 203,
          column: 4
        },
        end: {
          line: 207,
          column: 7
        }
      },
      "60": {
        start: {
          line: 210,
          column: 4
        },
        end: {
          line: 210,
          column: 44
        }
      },
      "61": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 216,
          column: 7
        }
      },
      "62": {
        start: {
          line: 221,
          column: 0
        },
        end: {
          line: 250,
          column: 3
        }
      },
      "63": {
        start: {
          line: 222,
          column: 2
        },
        end: {
          line: 249,
          column: 3
        }
      },
      "64": {
        start: {
          line: 223,
          column: 22
        },
        end: {
          line: 223,
          column: 50
        }
      },
      "65": {
        start: {
          line: 225,
          column: 19
        },
        end: {
          line: 233,
          column: 6
        }
      },
      "66": {
        start: {
          line: 235,
          column: 4
        },
        end: {
          line: 240,
          column: 7
        }
      },
      "67": {
        start: {
          line: 243,
          column: 4
        },
        end: {
          line: 243,
          column: 48
        }
      },
      "68": {
        start: {
          line: 244,
          column: 4
        },
        end: {
          line: 248,
          column: 7
        }
      },
      "69": {
        start: {
          line: 253,
          column: 0
        },
        end: {
          line: 302,
          column: 3
        }
      },
      "70": {
        start: {
          line: 254,
          column: 2
        },
        end: {
          line: 301,
          column: 3
        }
      },
      "71": {
        start: {
          line: 255,
          column: 4
        },
        end: {
          line: 255,
          column: 65
        }
      },
      "72": {
        start: {
          line: 256,
          column: 22
        },
        end: {
          line: 256,
          column: 32
        }
      },
      "73": {
        start: {
          line: 258,
          column: 21
        },
        end: {
          line: 264,
          column: 5
        }
      },
      "74": {
        start: {
          line: 266,
          column: 28
        },
        end: {
          line: 266,
          column: 94
        }
      },
      "75": {
        start: {
          line: 266,
          column: 64
        },
        end: {
          line: 266,
          column: 86
        }
      },
      "76": {
        start: {
          line: 267,
          column: 26
        },
        end: {
          line: 267,
          column: 54
        }
      },
      "77": {
        start: {
          line: 268,
          column: 23
        },
        end: {
          line: 268,
          column: 56
        }
      },
      "78": {
        start: {
          line: 269,
          column: 21
        },
        end: {
          line: 269,
          column: 43
        }
      },
      "79": {
        start: {
          line: 271,
          column: 4
        },
        end: {
          line: 271,
          column: 79
        }
      },
      "80": {
        start: {
          line: 272,
          column: 4
        },
        end: {
          line: 272,
          column: 76
        }
      },
      "81": {
        start: {
          line: 274,
          column: 25
        },
        end: {
          line: 287,
          column: 5
        }
      },
      "82": {
        start: {
          line: 283,
          column: 63
        },
        end: {
          line: 283,
          column: 86
        }
      },
      "83": {
        start: {
          line: 284,
          column: 61
        },
        end: {
          line: 284,
          column: 82
        }
      },
      "84": {
        start: {
          line: 289,
          column: 4
        },
        end: {
          line: 293,
          column: 5
        }
      },
      "85": {
        start: {
          line: 290,
          column: 6
        },
        end: {
          line: 290,
          column: 32
        }
      },
      "86": {
        start: {
          line: 292,
          column: 6
        },
        end: {
          line: 292,
          column: 64
        }
      },
      "87": {
        start: {
          line: 296,
          column: 4
        },
        end: {
          line: 296,
          column: 69
        }
      },
      "88": {
        start: {
          line: 297,
          column: 4
        },
        end: {
          line: 300,
          column: 7
        }
      },
      "89": {
        start: {
          line: 305,
          column: 0
        },
        end: {
          line: 342,
          column: 3
        }
      },
      "90": {
        start: {
          line: 306,
          column: 2
        },
        end: {
          line: 341,
          column: 3
        }
      },
      "91": {
        start: {
          line: 307,
          column: 21
        },
        end: {
          line: 313,
          column: 5
        }
      },
      "92": {
        start: {
          line: 315,
          column: 23
        },
        end: {
          line: 315,
          column: 93
        }
      },
      "93": {
        start: {
          line: 315,
          column: 64
        },
        end: {
          line: 315,
          column: 92
        }
      },
      "94": {
        start: {
          line: 317,
          column: 4
        },
        end: {
          line: 330,
          column: 7
        }
      },
      "95": {
        start: {
          line: 325,
          column: 62
        },
        end: {
          line: 325,
          column: 84
        }
      },
      "96": {
        start: {
          line: 326,
          column: 63
        },
        end: {
          line: 326,
          column: 86
        }
      },
      "97": {
        start: {
          line: 327,
          column: 61
        },
        end: {
          line: 327,
          column: 82
        }
      },
      "98": {
        start: {
          line: 333,
          column: 4
        },
        end: {
          line: 333,
          column: 62
        }
      },
      "99": {
        start: {
          line: 334,
          column: 4
        },
        end: {
          line: 340,
          column: 7
        }
      },
      "100": {
        start: {
          line: 345,
          column: 0
        },
        end: {
          line: 382,
          column: 3
        }
      },
      "101": {
        start: {
          line: 346,
          column: 2
        },
        end: {
          line: 381,
          column: 3
        }
      },
      "102": {
        start: {
          line: 347,
          column: 22
        },
        end: {
          line: 347,
          column: 50
        }
      },
      "103": {
        start: {
          line: 348,
          column: 22
        },
        end: {
          line: 348,
          column: 56
        }
      },
      "104": {
        start: {
          line: 351,
          column: 23
        },
        end: {
          line: 355,
          column: 19
        }
      },
      "105": {
        start: {
          line: 357,
          column: 24
        },
        end: {
          line: 357,
          column: 63
        }
      },
      "106": {
        start: {
          line: 359,
          column: 20
        },
        end: {
          line: 359,
          column: 24
        }
      },
      "107": {
        start: {
          line: 360,
          column: 4
        },
        end: {
          line: 363,
          column: 5
        }
      },
      "108": {
        start: {
          line: 361,
          column: 19
        },
        end: {
          line: 361,
          column: 85
        }
      },
      "109": {
        start: {
          line: 362,
          column: 6
        },
        end: {
          line: 362,
          column: 72
        }
      },
      "110": {
        start: {
          line: 365,
          column: 4
        },
        end: {
          line: 371,
          column: 7
        }
      },
      "111": {
        start: {
          line: 374,
          column: 4
        },
        end: {
          line: 374,
          column: 47
        }
      },
      "112": {
        start: {
          line: 375,
          column: 4
        },
        end: {
          line: 380,
          column: 7
        }
      },
      "113": {
        start: {
          line: 385,
          column: 0
        },
        end: {
          line: 413,
          column: 3
        }
      },
      "114": {
        start: {
          line: 386,
          column: 2
        },
        end: {
          line: 412,
          column: 3
        }
      },
      "115": {
        start: {
          line: 387,
          column: 28
        },
        end: {
          line: 387,
          column: 67
        }
      },
      "116": {
        start: {
          line: 388,
          column: 26
        },
        end: {
          line: 396,
          column: 5
        }
      },
      "117": {
        start: {
          line: 398,
          column: 4
        },
        end: {
          line: 408,
          column: 7
        }
      },
      "118": {
        start: {
          line: 403,
          column: 73
        },
        end: {
          line: 403,
          column: 92
        }
      },
      "119": {
        start: {
          line: 404,
          column: 77
        },
        end: {
          line: 404,
          column: 101
        }
      },
      "120": {
        start: {
          line: 405,
          column: 69
        },
        end: {
          line: 405,
          column: 90
        }
      },
      "121": {
        start: {
          line: 410,
          column: 4
        },
        end: {
          line: 410,
          column: 59
        }
      },
      "122": {
        start: {
          line: 411,
          column: 4
        },
        end: {
          line: 411,
          column: 67
        }
      },
      "123": {
        start: {
          line: 416,
          column: 0
        },
        end: {
          line: 469,
          column: 3
        }
      },
      "124": {
        start: {
          line: 417,
          column: 2
        },
        end: {
          line: 468,
          column: 3
        }
      },
      "125": {
        start: {
          line: 418,
          column: 28
        },
        end: {
          line: 418,
          column: 67
        }
      },
      "126": {
        start: {
          line: 419,
          column: 22
        },
        end: {
          line: 419,
          column: 24
        }
      },
      "127": {
        start: {
          line: 422,
          column: 4
        },
        end: {
          line: 438,
          column: 5
        }
      },
      "128": {
        start: {
          line: 423,
          column: 35
        },
        end: {
          line: 423,
          column: 71
        }
      },
      "129": {
        start: {
          line: 424,
          column: 30
        },
        end: {
          line: 424,
          column: 59
        }
      },
      "130": {
        start: {
          line: 426,
          column: 6
        },
        end: {
          line: 437,
          column: 8
        }
      },
      "131": {
        start: {
          line: 441,
          column: 28
        },
        end: {
          line: 451,
          column: 5
        }
      },
      "132": {
        start: {
          line: 444,
          column: 8
        },
        end: {
          line: 444,
          column: 50
        }
      },
      "133": {
        start: {
          line: 444,
          column: 70
        },
        end: {
          line: 444,
          column: 73
        }
      },
      "134": {
        start: {
          line: 446,
          column: 8
        },
        end: {
          line: 446,
          column: 49
        }
      },
      "135": {
        start: {
          line: 446,
          column: 69
        },
        end: {
          line: 446,
          column: 72
        }
      },
      "136": {
        start: {
          line: 448,
          column: 8
        },
        end: {
          line: 448,
          column: 40
        }
      },
      "137": {
        start: {
          line: 449,
          column: 71
        },
        end: {
          line: 449,
          column: 93
        }
      },
      "138": {
        start: {
          line: 453,
          column: 4
        },
        end: {
          line: 464,
          column: 7
        }
      },
      "139": {
        start: {
          line: 459,
          column: 62
        },
        end: {
          line: 459,
          column: 97
        }
      },
      "140": {
        start: {
          line: 466,
          column: 4
        },
        end: {
          line: 466,
          column: 64
        }
      },
      "141": {
        start: {
          line: 467,
          column: 4
        },
        end: {
          line: 467,
          column: 83
        }
      },
      "142": {
        start: {
          line: 472,
          column: 0
        },
        end: {
          line: 507,
          column: 3
        }
      },
      "143": {
        start: {
          line: 473,
          column: 2
        },
        end: {
          line: 506,
          column: 3
        }
      },
      "144": {
        start: {
          line: 474,
          column: 4
        },
        end: {
          line: 474,
          column: 66
        }
      },
      "145": {
        start: {
          line: 475,
          column: 22
        },
        end: {
          line: 475,
          column: 32
        }
      },
      "146": {
        start: {
          line: 477,
          column: 20
        },
        end: {
          line: 480,
          column: 5
        }
      },
      "147": {
        start: {
          line: 482,
          column: 19
        },
        end: {
          line: 482,
          column: 75
        }
      },
      "148": {
        start: {
          line: 483,
          column: 21
        },
        end: {
          line: 483,
          column: 43
        }
      },
      "149": {
        start: {
          line: 485,
          column: 4
        },
        end: {
          line: 485,
          column: 66
        }
      },
      "150": {
        start: {
          line: 486,
          column: 4
        },
        end: {
          line: 486,
          column: 153
        }
      },
      "151": {
        start: {
          line: 489,
          column: 22
        },
        end: {
          line: 489,
          column: 97
        }
      },
      "152": {
        start: {
          line: 491,
          column: 25
        },
        end: {
          line: 496,
          column: 5
        }
      },
      "153": {
        start: {
          line: 498,
          column: 4
        },
        end: {
          line: 502,
          column: 5
        }
      },
      "154": {
        start: {
          line: 499,
          column: 6
        },
        end: {
          line: 499,
          column: 32
        }
      },
      "155": {
        start: {
          line: 501,
          column: 6
        },
        end: {
          line: 501,
          column: 62
        }
      },
      "156": {
        start: {
          line: 504,
          column: 4
        },
        end: {
          line: 504,
          column: 56
        }
      },
      "157": {
        start: {
          line: 505,
          column: 4
        },
        end: {
          line: 505,
          column: 63
        }
      },
      "158": {
        start: {
          line: 510,
          column: 0
        },
        end: {
          line: 534,
          column: 3
        }
      },
      "159": {
        start: {
          line: 511,
          column: 2
        },
        end: {
          line: 533,
          column: 3
        }
      },
      "160": {
        start: {
          line: 512,
          column: 22
        },
        end: {
          line: 512,
          column: 42
        }
      },
      "161": {
        start: {
          line: 513,
          column: 27
        },
        end: {
          line: 513,
          column: 53
        }
      },
      "162": {
        start: {
          line: 515,
          column: 19
        },
        end: {
          line: 518,
          column: 6
        }
      },
      "163": {
        start: {
          line: 520,
          column: 26
        },
        end: {
          line: 520,
          column: 67
        }
      },
      "164": {
        start: {
          line: 522,
          column: 4
        },
        end: {
          line: 529,
          column: 7
        }
      },
      "165": {
        start: {
          line: 531,
          column: 4
        },
        end: {
          line: 531,
          column: 90
        }
      },
      "166": {
        start: {
          line: 532,
          column: 4
        },
        end: {
          line: 532,
          column: 67
        }
      },
      "167": {
        start: {
          line: 537,
          column: 0
        },
        end: {
          line: 551,
          column: 3
        }
      },
      "168": {
        start: {
          line: 538,
          column: 2
        },
        end: {
          line: 550,
          column: 3
        }
      },
      "169": {
        start: {
          line: 539,
          column: 24
        },
        end: {
          line: 539,
          column: 56
        }
      },
      "170": {
        start: {
          line: 540,
          column: 4
        },
        end: {
          line: 540,
          column: 33
        }
      },
      "171": {
        start: {
          line: 542,
          column: 4
        },
        end: {
          line: 546,
          column: 7
        }
      },
      "172": {
        start: {
          line: 548,
          column: 4
        },
        end: {
          line: 548,
          column: 60
        }
      },
      "173": {
        start: {
          line: 549,
          column: 4
        },
        end: {
          line: 549,
          column: 67
        }
      },
      "174": {
        start: {
          line: 554,
          column: 0
        },
        end: {
          line: 589,
          column: 3
        }
      },
      "175": {
        start: {
          line: 555,
          column: 2
        },
        end: {
          line: 588,
          column: 3
        }
      },
      "176": {
        start: {
          line: 556,
          column: 22
        },
        end: {
          line: 556,
          column: 50
        }
      },
      "177": {
        start: {
          line: 557,
          column: 22
        },
        end: {
          line: 557,
          column: 48
        }
      },
      "178": {
        start: {
          line: 560,
          column: 19
        },
        end: {
          line: 570,
          column: 19
        }
      },
      "179": {
        start: {
          line: 572,
          column: 4
        },
        end: {
          line: 578,
          column: 7
        }
      },
      "180": {
        start: {
          line: 581,
          column: 4
        },
        end: {
          line: 581,
          column: 58
        }
      },
      "181": {
        start: {
          line: 582,
          column: 4
        },
        end: {
          line: 587,
          column: 7
        }
      },
      "182": {
        start: {
          line: 592,
          column: 0
        },
        end: {
          line: 681,
          column: 3
        }
      },
      "183": {
        start: {
          line: 593,
          column: 2
        },
        end: {
          line: 680,
          column: 3
        }
      },
      "184": {
        start: {
          line: 594,
          column: 22
        },
        end: {
          line: 594,
          column: 32
        }
      },
      "185": {
        start: {
          line: 597,
          column: 24
        },
        end: {
          line: 641,
          column: 5
        }
      },
      "186": {
        start: {
          line: 644,
          column: 4
        },
        end: {
          line: 649,
          column: 5
        }
      },
      "187": {
        start: {
          line: 645,
          column: 23
        },
        end: {
          line: 645,
          column: 42
        }
      },
      "188": {
        start: {
          line: 646,
          column: 6
        },
        end: {
          line: 646,
          column: 98
        }
      },
      "189": {
        start: {
          line: 648,
          column: 6
        },
        end: {
          line: 648,
          column: 51
        }
      },
      "190": {
        start: {
          line: 651,
          column: 4
        },
        end: {
          line: 656,
          column: 5
        }
      },
      "191": {
        start: {
          line: 652,
          column: 6
        },
        end: {
          line: 652,
          column: 46
        }
      },
      "192": {
        start: {
          line: 653,
          column: 6
        },
        end: {
          line: 653,
          column: 57
        }
      },
      "193": {
        start: {
          line: 655,
          column: 6
        },
        end: {
          line: 655,
          column: 56
        }
      },
      "194": {
        start: {
          line: 658,
          column: 4
        },
        end: {
          line: 667,
          column: 5
        }
      },
      "195": {
        start: {
          line: 659,
          column: 24
        },
        end: {
          line: 659,
          column: 65
        }
      },
      "196": {
        start: {
          line: 660,
          column: 6
        },
        end: {
          line: 664,
          column: 7
        }
      },
      "197": {
        start: {
          line: 661,
          column: 8
        },
        end: {
          line: 661,
          column: 60
        }
      },
      "198": {
        start: {
          line: 663,
          column: 8
        },
        end: {
          line: 663,
          column: 67
        }
      },
      "199": {
        start: {
          line: 666,
          column: 6
        },
        end: {
          line: 666,
          column: 57
        }
      },
      "200": {
        start: {
          line: 669,
          column: 21
        },
        end: {
          line: 669,
          column: 43
        }
      },
      "201": {
        start: {
          line: 670,
          column: 4
        },
        end: {
          line: 670,
          column: 54
        }
      },
      "202": {
        start: {
          line: 672,
          column: 4
        },
        end: {
          line: 672,
          column: 29
        }
      },
      "203": {
        start: {
          line: 674,
          column: 4
        },
        end: {
          line: 674,
          column: 57
        }
      },
      "204": {
        start: {
          line: 675,
          column: 4
        },
        end: {
          line: 679,
          column: 7
        }
      },
      "205": {
        start: {
          line: 684,
          column: 0
        },
        end: {
          line: 702,
          column: 3
        }
      },
      "206": {
        start: {
          line: 685,
          column: 2
        },
        end: {
          line: 701,
          column: 3
        }
      },
      "207": {
        start: {
          line: 686,
          column: 28
        },
        end: {
          line: 686,
          column: 63
        }
      },
      "208": {
        start: {
          line: 687,
          column: 20
        },
        end: {
          line: 687,
          column: 48
        }
      },
      "209": {
        start: {
          line: 689,
          column: 4
        },
        end: {
          line: 693,
          column: 7
        }
      },
      "210": {
        start: {
          line: 695,
          column: 4
        },
        end: {
          line: 695,
          column: 60
        }
      },
      "211": {
        start: {
          line: 696,
          column: 4
        },
        end: {
          line: 700,
          column: 7
        }
      },
      "212": {
        start: {
          line: 705,
          column: 0
        },
        end: {
          line: 739,
          column: 3
        }
      },
      "213": {
        start: {
          line: 706,
          column: 2
        },
        end: {
          line: 738,
          column: 3
        }
      },
      "214": {
        start: {
          line: 707,
          column: 4
        },
        end: {
          line: 730,
          column: 7
        }
      },
      "215": {
        start: {
          line: 733,
          column: 4
        },
        end: {
          line: 737,
          column: 7
        }
      },
      "216": {
        start: {
          line: 742,
          column: 0
        },
        end: {
          line: 754,
          column: 3
        }
      },
      "217": {
        start: {
          line: 743,
          column: 2
        },
        end: {
          line: 743,
          column: 49
        }
      },
      "218": {
        start: {
          line: 744,
          column: 2
        },
        end: {
          line: 744,
          column: 67
        }
      },
      "219": {
        start: {
          line: 745,
          column: 2
        },
        end: {
          line: 745,
          column: 61
        }
      },
      "220": {
        start: {
          line: 747,
          column: 2
        },
        end: {
          line: 753,
          column: 5
        }
      },
      "221": {
        start: {
          line: 757,
          column: 0
        },
        end: {
          line: 828,
          column: 3
        }
      },
      "222": {
        start: {
          line: 758,
          column: 2
        },
        end: {
          line: 827,
          column: 3
        }
      },
      "223": {
        start: {
          line: 759,
          column: 4
        },
        end: {
          line: 759,
          column: 53
        }
      },
      "224": {
        start: {
          line: 762,
          column: 23
        },
        end: {
          line: 762,
          column: 55
        }
      },
      "225": {
        start: {
          line: 765,
          column: 4
        },
        end: {
          line: 810,
          column: 5
        }
      },
      "226": {
        start: {
          line: 767,
          column: 25
        },
        end: {
          line: 771,
          column: 8
        }
      },
      "227": {
        start: {
          line: 773,
          column: 6
        },
        end: {
          line: 806,
          column: 7
        }
      },
      "228": {
        start: {
          line: 774,
          column: 8
        },
        end: {
          line: 774,
          column: 72
        }
      },
      "229": {
        start: {
          line: 777,
          column: 8
        },
        end: {
          line: 801,
          column: 9
        }
      },
      "230": {
        start: {
          line: 778,
          column: 10
        },
        end: {
          line: 800,
          column: 13
        }
      },
      "231": {
        start: {
          line: 803,
          column: 8
        },
        end: {
          line: 803,
          column: 67
        }
      },
      "232": {
        start: {
          line: 805,
          column: 8
        },
        end: {
          line: 805,
          column: 80
        }
      },
      "233": {
        start: {
          line: 808,
          column: 6
        },
        end: {
          line: 808,
          column: 97
        }
      },
      "234": {
        start: {
          line: 812,
          column: 4
        },
        end: {
          line: 817,
          column: 7
        }
      },
      "235": {
        start: {
          line: 820,
          column: 4
        },
        end: {
          line: 820,
          column: 62
        }
      },
      "236": {
        start: {
          line: 821,
          column: 4
        },
        end: {
          line: 826,
          column: 7
        }
      },
      "237": {
        start: {
          line: 835,
          column: 2
        },
        end: {
          line: 1016,
          column: 3
        }
      },
      "238": {
        start: {
          line: 836,
          column: 4
        },
        end: {
          line: 836,
          column: 66
        }
      },
      "239": {
        start: {
          line: 837,
          column: 22
        },
        end: {
          line: 837,
          column: 32
        }
      },
      "240": {
        start: {
          line: 840,
          column: 24
        },
        end: {
          line: 840,
          column: 43
        }
      },
      "241": {
        start: {
          line: 841,
          column: 4
        },
        end: {
          line: 861,
          column: 5
        }
      },
      "242": {
        start: {
          line: 842,
          column: 6
        },
        end: {
          line: 860,
          column: 8
        }
      },
      "243": {
        start: {
          line: 864,
          column: 32
        },
        end: {
          line: 875,
          column: 5
        }
      },
      "244": {
        start: {
          line: 877,
          column: 27
        },
        end: {
          line: 880,
          column: 5
        }
      },
      "245": {
        start: {
          line: 884,
          column: 6
        },
        end: {
          line: 888,
          column: 7
        }
      },
      "246": {
        start: {
          line: 885,
          column: 8
        },
        end: {
          line: 887,
          column: 9
        }
      },
      "247": {
        start: {
          line: 886,
          column: 10
        },
        end: {
          line: 886,
          column: 26
        }
      },
      "248": {
        start: {
          line: 889,
          column: 6
        },
        end: {
          line: 889,
          column: 21
        }
      },
      "249": {
        start: {
          line: 893,
          column: 4
        },
        end: {
          line: 893,
          column: 74
        }
      },
      "250": {
        start: {
          line: 894,
          column: 23
        },
        end: {
          line: 908,
          column: 5
        }
      },
      "251": {
        start: {
          line: 910,
          column: 25
        },
        end: {
          line: 910,
          column: 59
        }
      },
      "252": {
        start: {
          line: 911,
          column: 22
        },
        end: {
          line: 911,
          column: 39
        }
      },
      "253": {
        start: {
          line: 912,
          column: 4
        },
        end: {
          line: 912,
          column: 67
        }
      },
      "254": {
        start: {
          line: 915,
          column: 24
        },
        end: {
          line: 915,
          column: 26
        }
      },
      "255": {
        start: {
          line: 916,
          column: 23
        },
        end: {
          line: 916,
          column: 24
        }
      },
      "256": {
        start: {
          line: 917,
          column: 24
        },
        end: {
          line: 917,
          column: 25
        }
      },
      "257": {
        start: {
          line: 918,
          column: 22
        },
        end: {
          line: 918,
          column: 23
        }
      },
      "258": {
        start: {
          line: 919,
          column: 22
        },
        end: {
          line: 919,
          column: 23
        }
      },
      "259": {
        start: {
          line: 920,
          column: 22
        },
        end: {
          line: 920,
          column: 23
        }
      },
      "260": {
        start: {
          line: 922,
          column: 4
        },
        end: {
          line: 922,
          column: 54
        }
      },
      "261": {
        start: {
          line: 923,
          column: 4
        },
        end: {
          line: 964,
          column: 5
        }
      },
      "262": {
        start: {
          line: 924,
          column: 24
        },
        end: {
          line: 924,
          column: 40
        }
      },
      "263": {
        start: {
          line: 925,
          column: 28
        },
        end: {
          line: 925,
          column: 63
        }
      },
      "264": {
        start: {
          line: 926,
          column: 6
        },
        end: {
          line: 926,
          column: 36
        }
      },
      "265": {
        start: {
          line: 929,
          column: 26
        },
        end: {
          line: 929,
          column: 116
        }
      },
      "266": {
        start: {
          line: 932,
          column: 19
        },
        end: {
          line: 932,
          column: 28
        }
      },
      "267": {
        start: {
          line: 933,
          column: 20
        },
        end: {
          line: 933,
          column: 25
        }
      },
      "268": {
        start: {
          line: 935,
          column: 6
        },
        end: {
          line: 950,
          column: 7
        }
      },
      "269": {
        start: {
          line: 936,
          column: 8
        },
        end: {
          line: 936,
          column: 25
        }
      },
      "270": {
        start: {
          line: 937,
          column: 8
        },
        end: {
          line: 937,
          column: 22
        }
      },
      "271": {
        start: {
          line: 938,
          column: 13
        },
        end: {
          line: 950,
          column: 7
        }
      },
      "272": {
        start: {
          line: 939,
          column: 33
        },
        end: {
          line: 939,
          column: 88
        }
      },
      "273": {
        start: {
          line: 940,
          column: 8
        },
        end: {
          line: 946,
          column: 9
        }
      },
      "274": {
        start: {
          line: 941,
          column: 10
        },
        end: {
          line: 941,
          column: 27
        }
      },
      "275": {
        start: {
          line: 942,
          column: 10
        },
        end: {
          line: 942,
          column: 25
        }
      },
      "276": {
        start: {
          line: 943,
          column: 10
        },
        end: {
          line: 943,
          column: 24
        }
      },
      "277": {
        start: {
          line: 945,
          column: 10
        },
        end: {
          line: 945,
          column: 26
        }
      },
      "278": {
        start: {
          line: 949,
          column: 8
        },
        end: {
          line: 949,
          column: 24
        }
      },
      "279": {
        start: {
          line: 952,
          column: 6
        },
        end: {
          line: 963,
          column: 8
        }
      },
      "280": {
        start: {
          line: 967,
          column: 20
        },
        end: {
          line: 976,
          column: 5
        }
      },
      "281": {
        start: {
          line: 978,
          column: 21
        },
        end: {
          line: 978,
          column: 43
        }
      },
      "282": {
        start: {
          line: 979,
          column: 4
        },
        end: {
          line: 979,
          column: 84
        }
      },
      "283": {
        start: {
          line: 980,
          column: 4
        },
        end: {
          line: 980,
          column: 137
        }
      },
      "284": {
        start: {
          line: 982,
          column: 4
        },
        end: {
          line: 993,
          column: 6
        }
      },
      "285": {
        start: {
          line: 996,
          column: 4
        },
        end: {
          line: 996,
          column: 74
        }
      },
      "286": {
        start: {
          line: 997,
          column: 4
        },
        end: {
          line: 1015,
          column: 6
        }
      },
      "287": {
        start: {
          line: 1028,
          column: 2
        },
        end: {
          line: 1070,
          column: 3
        }
      },
      "288": {
        start: {
          line: 1029,
          column: 4
        },
        end: {
          line: 1029,
          column: 50
        }
      },
      "289": {
        start: {
          line: 1030,
          column: 22
        },
        end: {
          line: 1030,
          column: 32
        }
      },
      "290": {
        start: {
          line: 1033,
          column: 21
        },
        end: {
          line: 1038,
          column: 6
        }
      },
      "291": {
        start: {
          line: 1036,
          column: 8
        },
        end: {
          line: 1036,
          column: 82
        }
      },
      "292": {
        start: {
          line: 1036,
          column: 25
        },
        end: {
          line: 1036,
          column: 75
        }
      },
      "293": {
        start: {
          line: 1040,
          column: 21
        },
        end: {
          line: 1040,
          column: 43
        }
      },
      "294": {
        start: {
          line: 1042,
          column: 4
        },
        end: {
          line: 1061,
          column: 5
        }
      },
      "295": {
        start: {
          line: 1043,
          column: 6
        },
        end: {
          line: 1053,
          column: 8
        }
      },
      "296": {
        start: {
          line: 1055,
          column: 6
        },
        end: {
          line: 1060,
          column: 8
        }
      },
      "297": {
        start: {
          line: 1063,
          column: 4
        },
        end: {
          line: 1063,
          column: 60
        }
      },
      "298": {
        start: {
          line: 1064,
          column: 4
        },
        end: {
          line: 1069,
          column: 6
        }
      },
      "299": {
        start: {
          line: 1077,
          column: 2
        },
        end: {
          line: 1167,
          column: 3
        }
      },
      "300": {
        start: {
          line: 1078,
          column: 4
        },
        end: {
          line: 1078,
          column: 52
        }
      },
      "301": {
        start: {
          line: 1079,
          column: 22
        },
        end: {
          line: 1079,
          column: 32
        }
      },
      "302": {
        start: {
          line: 1082,
          column: 26
        },
        end: {
          line: 1082,
          column: 30
        }
      },
      "303": {
        start: {
          line: 1084,
          column: 4
        },
        end: {
          line: 1108,
          column: 5
        }
      },
      "304": {
        start: {
          line: 1086,
          column: 31
        },
        end: {
          line: 1091,
          column: 8
        }
      },
      "305": {
        start: {
          line: 1093,
          column: 6
        },
        end: {
          line: 1105,
          column: 7
        }
      },
      "306": {
        start: {
          line: 1094,
          column: 20
        },
        end: {
          line: 1094,
          column: 44
        }
      },
      "307": {
        start: {
          line: 1097,
          column: 29
        },
        end: {
          line: 1097,
          column: 85
        }
      },
      "308": {
        start: {
          line: 1098,
          column: 32
        },
        end: {
          line: 1098,
          column: 91
        }
      },
      "309": {
        start: {
          line: 1100,
          column: 8
        },
        end: {
          line: 1104,
          column: 10
        }
      },
      "310": {
        start: {
          line: 1107,
          column: 6
        },
        end: {
          line: 1107,
          column: 89
        }
      },
      "311": {
        start: {
          line: 1110,
          column: 4
        },
        end: {
          line: 1157,
          column: 5
        }
      },
      "312": {
        start: {
          line: 1112,
          column: 21
        },
        end: {
          line: 1116,
          column: 7
        }
      },
      "313": {
        start: {
          line: 1119,
          column: 26
        },
        end: {
          line: 1124,
          column: 8
        }
      },
      "314": {
        start: {
          line: 1122,
          column: 10
        },
        end: {
          line: 1122,
          column: 74
        }
      },
      "315": {
        start: {
          line: 1122,
          column: 27
        },
        end: {
          line: 1122,
          column: 66
        }
      },
      "316": {
        start: {
          line: 1126,
          column: 23
        },
        end: {
          line: 1126,
          column: 45
        }
      },
      "317": {
        start: {
          line: 1128,
          column: 6
        },
        end: {
          line: 1142,
          column: 8
        }
      },
      "318": {
        start: {
          line: 1145,
          column: 6
        },
        end: {
          line: 1156,
          column: 8
        }
      },
      "319": {
        start: {
          line: 1159,
          column: 4
        },
        end: {
          line: 1159,
          column: 62
        }
      },
      "320": {
        start: {
          line: 1160,
          column: 4
        },
        end: {
          line: 1166,
          column: 6
        }
      },
      "321": {
        start: {
          line: 1174,
          column: 2
        },
        end: {
          line: 1224,
          column: 3
        }
      },
      "322": {
        start: {
          line: 1175,
          column: 4
        },
        end: {
          line: 1175,
          column: 61
        }
      },
      "323": {
        start: {
          line: 1176,
          column: 22
        },
        end: {
          line: 1176,
          column: 32
        }
      },
      "324": {
        start: {
          line: 1178,
          column: 27
        },
        end: {
          line: 1180,
          column: 6
        }
      },
      "325": {
        start: {
          line: 1183,
          column: 26
        },
        end: {
          line: 1183,
          column: 96
        }
      },
      "326": {
        start: {
          line: 1185,
          column: 4
        },
        end: {
          line: 1192,
          column: 5
        }
      },
      "327": {
        start: {
          line: 1186,
          column: 6
        },
        end: {
          line: 1191,
          column: 8
        }
      },
      "328": {
        start: {
          line: 1195,
          column: 4
        },
        end: {
          line: 1200,
          column: 7
        }
      },
      "329": {
        start: {
          line: 1198,
          column: 8
        },
        end: {
          line: 1198,
          column: 76
        }
      },
      "330": {
        start: {
          line: 1198,
          column: 25
        },
        end: {
          line: 1198,
          column: 69
        }
      },
      "331": {
        start: {
          line: 1202,
          column: 21
        },
        end: {
          line: 1202,
          column: 43
        }
      },
      "332": {
        start: {
          line: 1204,
          column: 4
        },
        end: {
          line: 1214,
          column: 6
        }
      },
      "333": {
        start: {
          line: 1216,
          column: 4
        },
        end: {
          line: 1216,
          column: 71
        }
      },
      "334": {
        start: {
          line: 1217,
          column: 4
        },
        end: {
          line: 1223,
          column: 6
        }
      },
      "335": {
        start: {
          line: 1231,
          column: 2
        },
        end: {
          line: 1263,
          column: 3
        }
      },
      "336": {
        start: {
          line: 1232,
          column: 4
        },
        end: {
          line: 1232,
          column: 49
        }
      },
      "337": {
        start: {
          line: 1234,
          column: 4
        },
        end: {
          line: 1240,
          column: 5
        }
      },
      "338": {
        start: {
          line: 1235,
          column: 6
        },
        end: {
          line: 1239,
          column: 8
        }
      },
      "339": {
        start: {
          line: 1244,
          column: 21
        },
        end: {
          line: 1244,
          column: 48
        }
      },
      "340": {
        start: {
          line: 1246,
          column: 4
        },
        end: {
          line: 1255,
          column: 6
        }
      },
      "341": {
        start: {
          line: 1257,
          column: 4
        },
        end: {
          line: 1257,
          column: 59
        }
      },
      "342": {
        start: {
          line: 1258,
          column: 4
        },
        end: {
          line: 1262,
          column: 6
        }
      },
      "343": {
        start: {
          line: 1270,
          column: 2
        },
        end: {
          line: 1325,
          column: 3
        }
      },
      "344": {
        start: {
          line: 1271,
          column: 4
        },
        end: {
          line: 1271,
          column: 53
        }
      },
      "345": {
        start: {
          line: 1272,
          column: 22
        },
        end: {
          line: 1272,
          column: 32
        }
      },
      "346": {
        start: {
          line: 1274,
          column: 23
        },
        end: {
          line: 1274,
          column: 55
        }
      },
      "347": {
        start: {
          line: 1275,
          column: 21
        },
        end: {
          line: 1275,
          column: 50
        }
      },
      "348": {
        start: {
          line: 1277,
          column: 4
        },
        end: {
          line: 1286,
          column: 5
        }
      },
      "349": {
        start: {
          line: 1278,
          column: 6
        },
        end: {
          line: 1285,
          column: 8
        }
      },
      "350": {
        start: {
          line: 1288,
          column: 23
        },
        end: {
          line: 1290,
          column: 6
        }
      },
      "351": {
        start: {
          line: 1293,
          column: 4
        },
        end: {
          line: 1298,
          column: 7
        }
      },
      "352": {
        start: {
          line: 1296,
          column: 8
        },
        end: {
          line: 1296,
          column: 68
        }
      },
      "353": {
        start: {
          line: 1296,
          column: 25
        },
        end: {
          line: 1296,
          column: 61
        }
      },
      "354": {
        start: {
          line: 1300,
          column: 21
        },
        end: {
          line: 1300,
          column: 43
        }
      },
      "355": {
        start: {
          line: 1302,
          column: 4
        },
        end: {
          line: 1315,
          column: 6
        }
      },
      "356": {
        start: {
          line: 1317,
          column: 4
        },
        end: {
          line: 1317,
          column: 63
        }
      },
      "357": {
        start: {
          line: 1318,
          column: 4
        },
        end: {
          line: 1324,
          column: 6
        }
      },
      "358": {
        start: {
          line: 1330,
          column: 2
        },
        end: {
          line: 1360,
          column: 3
        }
      },
      "359": {
        start: {
          line: 1332,
          column: 4
        },
        end: {
          line: 1332,
          column: 44
        }
      },
      "360": {
        start: {
          line: 1335,
          column: 23
        },
        end: {
          line: 1335,
          column: 58
        }
      },
      "361": {
        start: {
          line: 1337,
          column: 4
        },
        end: {
          line: 1347,
          column: 6
        }
      },
      "362": {
        start: {
          line: 1349,
          column: 4
        },
        end: {
          line: 1359,
          column: 6
        }
      },
      "363": {
        start: {
          line: 1364,
          column: 2
        },
        end: {
          line: 1402,
          column: 3
        }
      },
      "364": {
        start: {
          line: 1365,
          column: 4
        },
        end: {
          line: 1365,
          column: 60
        }
      },
      "365": {
        start: {
          line: 1368,
          column: 4
        },
        end: {
          line: 1368,
          column: 40
        }
      },
      "366": {
        start: {
          line: 1371,
          column: 23
        },
        end: {
          line: 1371,
          column: 61
        }
      },
      "367": {
        start: {
          line: 1374,
          column: 26
        },
        end: {
          line: 1374,
          column: 54
        }
      },
      "368": {
        start: {
          line: 1376,
          column: 4
        },
        end: {
          line: 1388,
          column: 6
        }
      },
      "369": {
        start: {
          line: 1390,
          column: 4
        },
        end: {
          line: 1390,
          column: 70
        }
      },
      "370": {
        start: {
          line: 1391,
          column: 4
        },
        end: {
          line: 1401,
          column: 6
        }
      },
      "371": {
        start: {
          line: 1406,
          column: 2
        },
        end: {
          line: 1436,
          column: 3
        }
      },
      "372": {
        start: {
          line: 1407,
          column: 4
        },
        end: {
          line: 1407,
          column: 60
        }
      },
      "373": {
        start: {
          line: 1410,
          column: 26
        },
        end: {
          line: 1410,
          column: 64
        }
      },
      "374": {
        start: {
          line: 1412,
          column: 4
        },
        end: {
          line: 1423,
          column: 6
        }
      },
      "375": {
        start: {
          line: 1425,
          column: 4
        },
        end: {
          line: 1425,
          column: 70
        }
      },
      "376": {
        start: {
          line: 1426,
          column: 4
        },
        end: {
          line: 1435,
          column: 6
        }
      },
      "377": {
        start: {
          line: 1440,
          column: 2
        },
        end: {
          line: 1493,
          column: 3
        }
      },
      "378": {
        start: {
          line: 1441,
          column: 27
        },
        end: {
          line: 1446,
          column: 5
        }
      },
      "379": {
        start: {
          line: 1448,
          column: 24
        },
        end: {
          line: 1448,
          column: 26
        }
      },
      "380": {
        start: {
          line: 1450,
          column: 4
        },
        end: {
          line: 1473,
          column: 5
        }
      },
      "381": {
        start: {
          line: 1451,
          column: 6
        },
        end: {
          line: 1472,
          column: 7
        }
      },
      "382": {
        start: {
          line: 1452,
          column: 23
        },
        end: {
          line: 1452,
          column: 84
        }
      },
      "383": {
        start: {
          line: 1453,
          column: 8
        },
        end: {
          line: 1457,
          column: 10
        }
      },
      "384": {
        start: {
          line: 1459,
          column: 8
        },
        end: {
          line: 1471,
          column: 9
        }
      },
      "385": {
        start: {
          line: 1460,
          column: 10
        },
        end: {
          line: 1464,
          column: 12
        }
      },
      "386": {
        start: {
          line: 1466,
          column: 10
        },
        end: {
          line: 1470,
          column: 12
        }
      },
      "387": {
        start: {
          line: 1475,
          column: 23
        },
        end: {
          line: 1475,
          column: 84
        }
      },
      "388": {
        start: {
          line: 1475,
          column: 61
        },
        end: {
          line: 1475,
          column: 83
        }
      },
      "389": {
        start: {
          line: 1477,
          column: 4
        },
        end: {
          line: 1486,
          column: 6
        }
      },
      "390": {
        start: {
          line: 1482,
          column: 63
        },
        end: {
          line: 1482,
          column: 85
        }
      },
      "391": {
        start: {
          line: 1483,
          column: 63
        },
        end: {
          line: 1483,
          column: 85
        }
      },
      "392": {
        start: {
          line: 1484,
          column: 61
        },
        end: {
          line: 1484,
          column: 81
        }
      },
      "393": {
        start: {
          line: 1488,
          column: 4
        },
        end: {
          line: 1492,
          column: 6
        }
      },
      "394": {
        start: {
          line: 1497,
          column: 2
        },
        end: {
          line: 1532,
          column: 3
        }
      },
      "395": {
        start: {
          line: 1498,
          column: 22
        },
        end: {
          line: 1498,
          column: 63
        }
      },
      "396": {
        start: {
          line: 1500,
          column: 4
        },
        end: {
          line: 1506,
          column: 5
        }
      },
      "397": {
        start: {
          line: 1501,
          column: 6
        },
        end: {
          line: 1505,
          column: 8
        }
      },
      "398": {
        start: {
          line: 1509,
          column: 4
        },
        end: {
          line: 1525,
          column: 5
        }
      },
      "399": {
        start: {
          line: 1510,
          column: 6
        },
        end: {
          line: 1510,
          column: 46
        }
      },
      "400": {
        start: {
          line: 1511,
          column: 6
        },
        end: {
          line: 1516,
          column: 8
        }
      },
      "401": {
        start: {
          line: 1518,
          column: 6
        },
        end: {
          line: 1524,
          column: 8
        }
      },
      "402": {
        start: {
          line: 1527,
          column: 4
        },
        end: {
          line: 1531,
          column: 6
        }
      },
      "403": {
        start: {
          line: 1539,
          column: 26
        },
        end: {
          line: 1539,
          column: 28
        }
      },
      "404": {
        start: {
          line: 1541,
          column: 2
        },
        end: {
          line: 1564,
          column: 3
        }
      },
      "405": {
        start: {
          line: 1542,
          column: 4
        },
        end: {
          line: 1563,
          column: 5
        }
      },
      "406": {
        start: {
          line: 1543,
          column: 6
        },
        end: {
          line: 1548,
          column: 9
        }
      },
      "407": {
        start: {
          line: 1549,
          column: 11
        },
        end: {
          line: 1563,
          column: 5
        }
      },
      "408": {
        start: {
          line: 1550,
          column: 6
        },
        end: {
          line: 1555,
          column: 9
        }
      },
      "409": {
        start: {
          line: 1556,
          column: 11
        },
        end: {
          line: 1563,
          column: 5
        }
      },
      "410": {
        start: {
          line: 1557,
          column: 6
        },
        end: {
          line: 1562,
          column: 9
        }
      },
      "411": {
        start: {
          line: 1566,
          column: 2
        },
        end: {
          line: 1573,
          column: 3
        }
      },
      "412": {
        start: {
          line: 1567,
          column: 4
        },
        end: {
          line: 1572,
          column: 7
        }
      },
      "413": {
        start: {
          line: 1575,
          column: 2
        },
        end: {
          line: 1575,
          column: 25
        }
      },
      "414": {
        start: {
          line: 1579,
          column: 0
        },
        end: {
          line: 1697,
          column: 3
        }
      },
      "415": {
        start: {
          line: 1580,
          column: 20
        },
        end: {
          line: 1580,
          column: 53
        }
      },
      "416": {
        start: {
          line: 1581,
          column: 23
        },
        end: {
          line: 1581,
          column: 33
        }
      },
      "417": {
        start: {
          line: 1583,
          column: 2
        },
        end: {
          line: 1696,
          column: 3
        }
      },
      "418": {
        start: {
          line: 1584,
          column: 4
        },
        end: {
          line: 1588,
          column: 7
        }
      },
      "419": {
        start: {
          line: 1591,
          column: 4
        },
        end: {
          line: 1591,
          column: 87
        }
      },
      "420": {
        start: {
          line: 1592,
          column: 29
        },
        end: {
          line: 1592,
          column: 68
        }
      },
      "421": {
        start: {
          line: 1594,
          column: 25
        },
        end: {
          line: 1654,
          column: 5
        }
      },
      "422": {
        start: {
          line: 1657,
          column: 21
        },
        end: {
          line: 1657,
          column: 24
        }
      },
      "423": {
        start: {
          line: 1658,
          column: 4
        },
        end: {
          line: 1664,
          column: 5
        }
      },
      "424": {
        start: {
          line: 1659,
          column: 6
        },
        end: {
          line: 1659,
          column: 23
        }
      },
      "425": {
        start: {
          line: 1660,
          column: 11
        },
        end: {
          line: 1664,
          column: 5
        }
      },
      "426": {
        start: {
          line: 1661,
          column: 6
        },
        end: {
          line: 1661,
          column: 23
        }
      },
      "427": {
        start: {
          line: 1662,
          column: 11
        },
        end: {
          line: 1664,
          column: 5
        }
      },
      "428": {
        start: {
          line: 1663,
          column: 6
        },
        end: {
          line: 1663,
          column: 23
        }
      },
      "429": {
        start: {
          line: 1666,
          column: 26
        },
        end: {
          line: 1666,
          column: 51
        }
      },
      "430": {
        start: {
          line: 1667,
          column: 4
        },
        end: {
          line: 1673,
          column: 7
        }
      },
      "431": {
        start: {
          line: 1675,
          column: 4
        },
        end: {
          line: 1675,
          column: 46
        }
      },
      "432": {
        start: {
          line: 1678,
          column: 26
        },
        end: {
          line: 1678,
          column: 51
        }
      },
      "433": {
        start: {
          line: 1679,
          column: 4
        },
        end: {
          line: 1684,
          column: 7
        }
      },
      "434": {
        start: {
          line: 1686,
          column: 4
        },
        end: {
          line: 1695,
          column: 7
        }
      },
      "435": {
        start: {
          line: 1703,
          column: 26
        },
        end: {
          line: 1703,
          column: 28
        }
      },
      "436": {
        start: {
          line: 1705,
          column: 2
        },
        end: {
          line: 1714,
          column: 3
        }
      },
      "437": {
        start: {
          line: 1706,
          column: 4
        },
        end: {
          line: 1712,
          column: 7
        }
      },
      "438": {
        start: {
          line: 1713,
          column: 4
        },
        end: {
          line: 1713,
          column: 27
        }
      },
      "439": {
        start: {
          line: 1716,
          column: 2
        },
        end: {
          line: 1725,
          column: 3
        }
      },
      "440": {
        start: {
          line: 1717,
          column: 4
        },
        end: {
          line: 1724,
          column: 7
        }
      },
      "441": {
        start: {
          line: 1727,
          column: 2
        },
        end: {
          line: 1743,
          column: 3
        }
      },
      "442": {
        start: {
          line: 1728,
          column: 23
        },
        end: {
          line: 1728,
          column: 72
        }
      },
      "443": {
        start: {
          line: 1730,
          column: 4
        },
        end: {
          line: 1742,
          column: 7
        }
      },
      "444": {
        start: {
          line: 1731,
          column: 27
        },
        end: {
          line: 1731,
          column: 64
        }
      },
      "445": {
        start: {
          line: 1732,
          column: 6
        },
        end: {
          line: 1741,
          column: 7
        }
      },
      "446": {
        start: {
          line: 1733,
          column: 8
        },
        end: {
          line: 1740,
          column: 11
        }
      },
      "447": {
        start: {
          line: 1745,
          column: 2
        },
        end: {
          line: 1753,
          column: 3
        }
      },
      "448": {
        start: {
          line: 1746,
          column: 4
        },
        end: {
          line: 1752,
          column: 7
        }
      },
      "449": {
        start: {
          line: 1755,
          column: 2
        },
        end: {
          line: 1763,
          column: 3
        }
      },
      "450": {
        start: {
          line: 1756,
          column: 4
        },
        end: {
          line: 1762,
          column: 7
        }
      },
      "451": {
        start: {
          line: 1765,
          column: 2
        },
        end: {
          line: 1765,
          column: 25
        }
      },
      "452": {
        start: {
          line: 1772,
          column: 18
        },
        end: {
          line: 1777,
          column: 3
        }
      },
      "453": {
        start: {
          line: 1779,
          column: 2
        },
        end: {
          line: 1779,
          column: 73
        }
      },
      "454": {
        start: {
          line: 1786,
          column: 2
        },
        end: {
          line: 1816,
          column: 3
        }
      },
      "455": {
        start: {
          line: 1787,
          column: 23
        },
        end: {
          line: 1787,
          column: 77
        }
      },
      "456": {
        start: {
          line: 1788,
          column: 21
        },
        end: {
          line: 1788,
          column: 75
        }
      },
      "457": {
        start: {
          line: 1789,
          column: 23
        },
        end: {
          line: 1789,
          column: 34
        }
      },
      "458": {
        start: {
          line: 1790,
          column: 25
        },
        end: {
          line: 1790,
          column: 31
        }
      },
      "459": {
        start: {
          line: 1793,
          column: 22
        },
        end: {
          line: 1793,
          column: 103
        }
      },
      "460": {
        start: {
          line: 1796,
          column: 22
        },
        end: {
          line: 1796,
          column: 102
        }
      },
      "461": {
        start: {
          line: 1798,
          column: 20
        },
        end: {
          line: 1798,
          column: 44
        }
      },
      "462": {
        start: {
          line: 1800,
          column: 4
        },
        end: {
          line: 1809,
          column: 6
        }
      },
      "463": {
        start: {
          line: 1811,
          column: 4
        },
        end: {
          line: 1815,
          column: 6
        }
      },
      "464": {
        start: {
          line: 1823,
          column: 2
        },
        end: {
          line: 1856,
          column: 3
        }
      },
      "465": {
        start: {
          line: 1824,
          column: 23
        },
        end: {
          line: 1824,
          column: 77
        }
      },
      "466": {
        start: {
          line: 1825,
          column: 25
        },
        end: {
          line: 1825,
          column: 40
        }
      },
      "467": {
        start: {
          line: 1826,
          column: 28
        },
        end: {
          line: 1826,
          column: 45
        }
      },
      "468": {
        start: {
          line: 1829,
          column: 18
        },
        end: {
          line: 1829,
          column: 106
        }
      },
      "469": {
        start: {
          line: 1832,
          column: 23
        },
        end: {
          line: 1832,
          column: 69
        }
      },
      "470": {
        start: {
          line: 1834,
          column: 20
        },
        end: {
          line: 1834,
          column: 112
        }
      },
      "471": {
        start: {
          line: 1836,
          column: 4
        },
        end: {
          line: 1847,
          column: 6
        }
      },
      "472": {
        start: {
          line: 1849,
          column: 4
        },
        end: {
          line: 1855,
          column: 6
        }
      },
      "473": {
        start: {
          line: 1863,
          column: 26
        },
        end: {
          line: 1863,
          column: 28
        }
      },
      "474": {
        start: {
          line: 1865,
          column: 2
        },
        end: {
          line: 1873,
          column: 3
        }
      },
      "475": {
        start: {
          line: 1866,
          column: 4
        },
        end: {
          line: 1872,
          column: 7
        }
      },
      "476": {
        start: {
          line: 1875,
          column: 2
        },
        end: {
          line: 1883,
          column: 3
        }
      },
      "477": {
        start: {
          line: 1876,
          column: 4
        },
        end: {
          line: 1882,
          column: 7
        }
      },
      "478": {
        start: {
          line: 1885,
          column: 2
        },
        end: {
          line: 1893,
          column: 3
        }
      },
      "479": {
        start: {
          line: 1886,
          column: 4
        },
        end: {
          line: 1892,
          column: 7
        }
      },
      "480": {
        start: {
          line: 1895,
          column: 2
        },
        end: {
          line: 1903,
          column: 3
        }
      },
      "481": {
        start: {
          line: 1896,
          column: 4
        },
        end: {
          line: 1902,
          column: 7
        }
      },
      "482": {
        start: {
          line: 1905,
          column: 2
        },
        end: {
          line: 1913,
          column: 3
        }
      },
      "483": {
        start: {
          line: 1906,
          column: 4
        },
        end: {
          line: 1912,
          column: 7
        }
      },
      "484": {
        start: {
          line: 1915,
          column: 2
        },
        end: {
          line: 1923,
          column: 3
        }
      },
      "485": {
        start: {
          line: 1916,
          column: 4
        },
        end: {
          line: 1922,
          column: 7
        }
      },
      "486": {
        start: {
          line: 1925,
          column: 2
        },
        end: {
          line: 1925,
          column: 25
        }
      },
      "487": {
        start: {
          line: 1934,
          column: 2
        },
        end: {
          line: 1936,
          column: 3
        }
      },
      "488": {
        start: {
          line: 1935,
          column: 4
        },
        end: {
          line: 1935,
          column: 15
        }
      },
      "489": {
        start: {
          line: 1938,
          column: 2
        },
        end: {
          line: 1940,
          column: 3
        }
      },
      "490": {
        start: {
          line: 1939,
          column: 4
        },
        end: {
          line: 1939,
          column: 13
        }
      },
      "491": {
        start: {
          line: 1942,
          column: 2
        },
        end: {
          line: 1944,
          column: 3
        }
      },
      "492": {
        start: {
          line: 1943,
          column: 4
        },
        end: {
          line: 1943,
          column: 14
        }
      },
      "493": {
        start: {
          line: 1947,
          column: 20
        },
        end: {
          line: 1947,
          column: 21
        }
      },
      "494": {
        start: {
          line: 1948,
          column: 22
        },
        end: {
          line: 1948,
          column: 77
        }
      },
      "495": {
        start: {
          line: 1949,
          column: 2
        },
        end: {
          line: 1949,
          column: 33
        }
      },
      "496": {
        start: {
          line: 1956,
          column: 2
        },
        end: {
          line: 1958,
          column: 3
        }
      },
      "497": {
        start: {
          line: 1957,
          column: 4
        },
        end: {
          line: 1957,
          column: 22
        }
      },
      "498": {
        start: {
          line: 1960,
          column: 2
        },
        end: {
          line: 1962,
          column: 3
        }
      },
      "499": {
        start: {
          line: 1961,
          column: 4
        },
        end: {
          line: 1961,
          column: 21
        }
      },
      "500": {
        start: {
          line: 1964,
          column: 2
        },
        end: {
          line: 1966,
          column: 3
        }
      },
      "501": {
        start: {
          line: 1965,
          column: 4
        },
        end: {
          line: 1965,
          column: 21
        }
      },
      "502": {
        start: {
          line: 1968,
          column: 2
        },
        end: {
          line: 1970,
          column: 3
        }
      },
      "503": {
        start: {
          line: 1969,
          column: 4
        },
        end: {
          line: 1969,
          column: 19
        }
      },
      "504": {
        start: {
          line: 1972,
          column: 2
        },
        end: {
          line: 1972,
          column: 15
        }
      },
      "505": {
        start: {
          line: 1979,
          column: 14
        },
        end: {
          line: 1979,
          column: 24
        }
      },
      "506": {
        start: {
          line: 1980,
          column: 31
        },
        end: {
          line: 1980,
          column: 60
        }
      },
      "507": {
        start: {
          line: 1982,
          column: 2
        },
        end: {
          line: 1999,
          column: 3
        }
      },
      "508": {
        start: {
          line: 1983,
          column: 22
        },
        end: {
          line: 1983,
          column: 27
        }
      },
      "509": {
        start: {
          line: 1984,
          column: 30
        },
        end: {
          line: 1984,
          column: 62
        }
      },
      "510": {
        start: {
          line: 1986,
          column: 4
        },
        end: {
          line: 1992,
          column: 5
        }
      },
      "511": {
        start: {
          line: 1987,
          column: 6
        },
        end: {
          line: 1991,
          column: 8
        }
      },
      "512": {
        start: {
          line: 1994,
          column: 4
        },
        end: {
          line: 1998,
          column: 6
        }
      },
      "513": {
        start: {
          line: 2001,
          column: 2
        },
        end: {
          line: 2007,
          column: 3
        }
      },
      "514": {
        start: {
          line: 2002,
          column: 4
        },
        end: {
          line: 2006,
          column: 6
        }
      },
      "515": {
        start: {
          line: 2009,
          column: 2
        },
        end: {
          line: 2013,
          column: 4
        }
      },
      "516": {
        start: {
          line: 2020,
          column: 2
        },
        end: {
          line: 2022,
          column: 3
        }
      },
      "517": {
        start: {
          line: 2021,
          column: 4
        },
        end: {
          line: 2021,
          column: 69
        }
      },
      "518": {
        start: {
          line: 2024,
          column: 2
        },
        end: {
          line: 2026,
          column: 3
        }
      },
      "519": {
        start: {
          line: 2025,
          column: 4
        },
        end: {
          line: 2025,
          column: 52
        }
      },
      "520": {
        start: {
          line: 2028,
          column: 2
        },
        end: {
          line: 2030,
          column: 3
        }
      },
      "521": {
        start: {
          line: 2029,
          column: 4
        },
        end: {
          line: 2029,
          column: 96
        }
      },
      "522": {
        start: {
          line: 2032,
          column: 2
        },
        end: {
          line: 2034,
          column: 3
        }
      },
      "523": {
        start: {
          line: 2033,
          column: 4
        },
        end: {
          line: 2033,
          column: 45
        }
      },
      "524": {
        start: {
          line: 2036,
          column: 2
        },
        end: {
          line: 2036,
          column: 30
        }
      },
      "525": {
        start: {
          line: 2043,
          column: 2
        },
        end: {
          line: 2045,
          column: 3
        }
      },
      "526": {
        start: {
          line: 2044,
          column: 4
        },
        end: {
          line: 2044,
          column: 22
        }
      },
      "527": {
        start: {
          line: 2047,
          column: 2
        },
        end: {
          line: 2049,
          column: 3
        }
      },
      "528": {
        start: {
          line: 2048,
          column: 4
        },
        end: {
          line: 2048,
          column: 21
        }
      },
      "529": {
        start: {
          line: 2051,
          column: 2
        },
        end: {
          line: 2053,
          column: 3
        }
      },
      "530": {
        start: {
          line: 2052,
          column: 4
        },
        end: {
          line: 2052,
          column: 21
        }
      },
      "531": {
        start: {
          line: 2055,
          column: 2
        },
        end: {
          line: 2057,
          column: 3
        }
      },
      "532": {
        start: {
          line: 2056,
          column: 4
        },
        end: {
          line: 2056,
          column: 19
        }
      },
      "533": {
        start: {
          line: 2059,
          column: 2
        },
        end: {
          line: 2059,
          column: 19
        }
      },
      "534": {
        start: {
          line: 2066,
          column: 19
        },
        end: {
          line: 2066,
          column: 43
        }
      },
      "535": {
        start: {
          line: 2068,
          column: 2
        },
        end: {
          line: 2070,
          column: 3
        }
      },
      "536": {
        start: {
          line: 2069,
          column: 4
        },
        end: {
          line: 2069,
          column: 15
        }
      },
      "537": {
        start: {
          line: 2072,
          column: 21
        },
        end: {
          line: 2072,
          column: 93
        }
      },
      "538": {
        start: {
          line: 2072,
          column: 55
        },
        end: {
          line: 2072,
          column: 89
        }
      },
      "539": {
        start: {
          line: 2073,
          column: 2
        },
        end: {
          line: 2073,
          column: 50
        }
      },
      "540": {
        start: {
          line: 2080,
          column: 26
        },
        end: {
          line: 2080,
          column: 28
        }
      },
      "541": {
        start: {
          line: 2081,
          column: 19
        },
        end: {
          line: 2081,
          column: 44
        }
      },
      "542": {
        start: {
          line: 2084,
          column: 27
        },
        end: {
          line: 2084,
          column: 104
        }
      },
      "543": {
        start: {
          line: 2084,
          column: 61
        },
        end: {
          line: 2084,
          column: 103
        }
      },
      "544": {
        start: {
          line: 2085,
          column: 2
        },
        end: {
          line: 2093,
          column: 3
        }
      },
      "545": {
        start: {
          line: 2086,
          column: 4
        },
        end: {
          line: 2092,
          column: 7
        }
      },
      "546": {
        start: {
          line: 2090,
          column: 51
        },
        end: {
          line: 2090,
          column: 54
        }
      },
      "547": {
        start: {
          line: 2096,
          column: 26
        },
        end: {
          line: 2096,
          column: 102
        }
      },
      "548": {
        start: {
          line: 2096,
          column: 60
        },
        end: {
          line: 2096,
          column: 101
        }
      },
      "549": {
        start: {
          line: 2097,
          column: 2
        },
        end: {
          line: 2105,
          column: 3
        }
      },
      "550": {
        start: {
          line: 2098,
          column: 4
        },
        end: {
          line: 2104,
          column: 7
        }
      },
      "551": {
        start: {
          line: 2102,
          column: 50
        },
        end: {
          line: 2102,
          column: 53
        }
      },
      "552": {
        start: {
          line: 2108,
          column: 25
        },
        end: {
          line: 2108,
          column: 92
        }
      },
      "553": {
        start: {
          line: 2108,
          column: 59
        },
        end: {
          line: 2108,
          column: 91
        }
      },
      "554": {
        start: {
          line: 2109,
          column: 2
        },
        end: {
          line: 2117,
          column: 3
        }
      },
      "555": {
        start: {
          line: 2110,
          column: 4
        },
        end: {
          line: 2116,
          column: 7
        }
      },
      "556": {
        start: {
          line: 2114,
          column: 49
        },
        end: {
          line: 2114,
          column: 52
        }
      },
      "557": {
        start: {
          line: 2120,
          column: 24
        },
        end: {
          line: 2120,
          column: 62
        }
      },
      "558": {
        start: {
          line: 2121,
          column: 2
        },
        end: {
          line: 2128,
          column: 3
        }
      },
      "559": {
        start: {
          line: 2122,
          column: 4
        },
        end: {
          line: 2127,
          column: 7
        }
      },
      "560": {
        start: {
          line: 2130,
          column: 2
        },
        end: {
          line: 2137,
          column: 3
        }
      },
      "561": {
        start: {
          line: 2131,
          column: 4
        },
        end: {
          line: 2136,
          column: 7
        }
      },
      "562": {
        start: {
          line: 2139,
          column: 2
        },
        end: {
          line: 2139,
          column: 25
        }
      },
      "563": {
        start: {
          line: 2142,
          column: 0
        },
        end: {
          line: 2142,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 15,
            column: 16
          },
          end: {
            line: 15,
            column: 17
          }
        },
        loc: {
          start: {
            line: 15,
            column: 36
          },
          end: {
            line: 102,
            column: 1
          }
        },
        line: 15
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 42,
            column: 39
          },
          end: {
            line: 42,
            column: 40
          }
        },
        loc: {
          start: {
            line: 43,
            column: 6
          },
          end: {
            line: 43,
            column: 77
          }
        },
        line: 43
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 43,
            column: 17
          },
          end: {
            line: 43,
            column: 18
          }
        },
        loc: {
          start: {
            line: 43,
            column: 23
          },
          end: {
            line: 43,
            column: 64
          }
        },
        line: 43
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 105,
            column: 21
          },
          end: {
            line: 105,
            column: 22
          }
        },
        loc: {
          start: {
            line: 105,
            column: 41
          },
          end: {
            line: 184,
            column: 1
          }
        },
        line: 105
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 118,
            column: 49
          },
          end: {
            line: 118,
            column: 50
          }
        },
        loc: {
          start: {
            line: 118,
            column: 54
          },
          end: {
            line: 118,
            column: 66
          }
        },
        line: 118
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 159,
            column: 59
          },
          end: {
            line: 159,
            column: 60
          }
        },
        loc: {
          start: {
            line: 159,
            column: 64
          },
          end: {
            line: 159,
            column: 84
          }
        },
        line: 159
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 189,
            column: 29
          },
          end: {
            line: 189,
            column: 30
          }
        },
        loc: {
          start: {
            line: 189,
            column: 49
          },
          end: {
            line: 218,
            column: 1
          }
        },
        line: 189
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 221,
            column: 28
          },
          end: {
            line: 221,
            column: 29
          }
        },
        loc: {
          start: {
            line: 221,
            column: 48
          },
          end: {
            line: 250,
            column: 1
          }
        },
        line: 221
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 253,
            column: 33
          },
          end: {
            line: 253,
            column: 34
          }
        },
        loc: {
          start: {
            line: 253,
            column: 53
          },
          end: {
            line: 302,
            column: 1
          }
        },
        line: 253
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 266,
            column: 59
          },
          end: {
            line: 266,
            column: 60
          }
        },
        loc: {
          start: {
            line: 266,
            column: 64
          },
          end: {
            line: 266,
            column: 86
          }
        },
        line: 266
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 283,
            column: 58
          },
          end: {
            line: 283,
            column: 59
          }
        },
        loc: {
          start: {
            line: 283,
            column: 63
          },
          end: {
            line: 283,
            column: 86
          }
        },
        line: 283
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 284,
            column: 56
          },
          end: {
            line: 284,
            column: 57
          }
        },
        loc: {
          start: {
            line: 284,
            column: 61
          },
          end: {
            line: 284,
            column: 82
          }
        },
        line: 284
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 305,
            column: 28
          },
          end: {
            line: 305,
            column: 29
          }
        },
        loc: {
          start: {
            line: 305,
            column: 48
          },
          end: {
            line: 342,
            column: 1
          }
        },
        line: 305
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 315,
            column: 53
          },
          end: {
            line: 315,
            column: 54
          }
        },
        loc: {
          start: {
            line: 315,
            column: 64
          },
          end: {
            line: 315,
            column: 92
          }
        },
        line: 315
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 325,
            column: 57
          },
          end: {
            line: 325,
            column: 58
          }
        },
        loc: {
          start: {
            line: 325,
            column: 62
          },
          end: {
            line: 325,
            column: 84
          }
        },
        line: 325
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 326,
            column: 58
          },
          end: {
            line: 326,
            column: 59
          }
        },
        loc: {
          start: {
            line: 326,
            column: 63
          },
          end: {
            line: 326,
            column: 86
          }
        },
        line: 326
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 327,
            column: 56
          },
          end: {
            line: 327,
            column: 57
          }
        },
        loc: {
          start: {
            line: 327,
            column: 61
          },
          end: {
            line: 327,
            column: 82
          }
        },
        line: 327
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 345,
            column: 32
          },
          end: {
            line: 345,
            column: 33
          }
        },
        loc: {
          start: {
            line: 345,
            column: 52
          },
          end: {
            line: 382,
            column: 1
          }
        },
        line: 345
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 385,
            column: 30
          },
          end: {
            line: 385,
            column: 31
          }
        },
        loc: {
          start: {
            line: 385,
            column: 50
          },
          end: {
            line: 413,
            column: 1
          }
        },
        line: 385
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 403,
            column: 67
          },
          end: {
            line: 403,
            column: 68
          }
        },
        loc: {
          start: {
            line: 403,
            column: 73
          },
          end: {
            line: 403,
            column: 92
          }
        },
        line: 403
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 404,
            column: 71
          },
          end: {
            line: 404,
            column: 72
          }
        },
        loc: {
          start: {
            line: 404,
            column: 77
          },
          end: {
            line: 404,
            column: 101
          }
        },
        line: 404
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 405,
            column: 63
          },
          end: {
            line: 405,
            column: 64
          }
        },
        loc: {
          start: {
            line: 405,
            column: 69
          },
          end: {
            line: 405,
            column: 90
          }
        },
        line: 405
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 416,
            column: 41
          },
          end: {
            line: 416,
            column: 42
          }
        },
        loc: {
          start: {
            line: 416,
            column: 61
          },
          end: {
            line: 469,
            column: 1
          }
        },
        line: 416
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 443,
            column: 57
          },
          end: {
            line: 443,
            column: 58
          }
        },
        loc: {
          start: {
            line: 444,
            column: 8
          },
          end: {
            line: 444,
            column: 50
          }
        },
        line: 444
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 444,
            column: 56
          },
          end: {
            line: 444,
            column: 57
          }
        },
        loc: {
          start: {
            line: 444,
            column: 70
          },
          end: {
            line: 444,
            column: 73
          }
        },
        line: 444
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 445,
            column: 56
          },
          end: {
            line: 445,
            column: 57
          }
        },
        loc: {
          start: {
            line: 446,
            column: 8
          },
          end: {
            line: 446,
            column: 49
          }
        },
        line: 446
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 446,
            column: 55
          },
          end: {
            line: 446,
            column: 56
          }
        },
        loc: {
          start: {
            line: 446,
            column: 69
          },
          end: {
            line: 446,
            column: 72
          }
        },
        line: 446
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 447,
            column: 55
          },
          end: {
            line: 447,
            column: 56
          }
        },
        loc: {
          start: {
            line: 448,
            column: 8
          },
          end: {
            line: 448,
            column: 40
          }
        },
        line: 448
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 449,
            column: 53
          },
          end: {
            line: 449,
            column: 54
          }
        },
        loc: {
          start: {
            line: 449,
            column: 71
          },
          end: {
            line: 449,
            column: 93
          }
        },
        line: 449
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 459,
            column: 57
          },
          end: {
            line: 459,
            column: 58
          }
        },
        loc: {
          start: {
            line: 459,
            column: 62
          },
          end: {
            line: 459,
            column: 97
          }
        },
        line: 459
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 472,
            column: 33
          },
          end: {
            line: 472,
            column: 34
          }
        },
        loc: {
          start: {
            line: 472,
            column: 53
          },
          end: {
            line: 507,
            column: 1
          }
        },
        line: 472
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 510,
            column: 39
          },
          end: {
            line: 510,
            column: 40
          }
        },
        loc: {
          start: {
            line: 510,
            column: 59
          },
          end: {
            line: 534,
            column: 1
          }
        },
        line: 510
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 537,
            column: 46
          },
          end: {
            line: 537,
            column: 47
          }
        },
        loc: {
          start: {
            line: 537,
            column: 66
          },
          end: {
            line: 551,
            column: 1
          }
        },
        line: 537
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 554,
            column: 37
          },
          end: {
            line: 554,
            column: 38
          }
        },
        loc: {
          start: {
            line: 554,
            column: 57
          },
          end: {
            line: 589,
            column: 1
          }
        },
        line: 554
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 592,
            column: 27
          },
          end: {
            line: 592,
            column: 28
          }
        },
        loc: {
          start: {
            line: 592,
            column: 47
          },
          end: {
            line: 681,
            column: 1
          }
        },
        line: 592
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 684,
            column: 30
          },
          end: {
            line: 684,
            column: 31
          }
        },
        loc: {
          start: {
            line: 684,
            column: 50
          },
          end: {
            line: 702,
            column: 1
          }
        },
        line: 684
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 705,
            column: 25
          },
          end: {
            line: 705,
            column: 26
          }
        },
        loc: {
          start: {
            line: 705,
            column: 45
          },
          end: {
            line: 739,
            column: 1
          }
        },
        line: 705
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 742,
            column: 31
          },
          end: {
            line: 742,
            column: 32
          }
        },
        loc: {
          start: {
            line: 742,
            column: 51
          },
          end: {
            line: 754,
            column: 1
          }
        },
        line: 742
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 757,
            column: 30
          },
          end: {
            line: 757,
            column: 31
          }
        },
        loc: {
          start: {
            line: 757,
            column: 50
          },
          end: {
            line: 828,
            column: 1
          }
        },
        line: 757
      },
      "39": {
        name: "getComprehensiveDbHealth",
        decl: {
          start: {
            line: 834,
            column: 15
          },
          end: {
            line: 834,
            column: 39
          }
        },
        loc: {
          start: {
            line: 834,
            column: 42
          },
          end: {
            line: 1017,
            column: 1
          }
        },
        line: 834
      },
      "40": {
        name: "categorizeTable",
        decl: {
          start: {
            line: 883,
            column: 13
          },
          end: {
            line: 883,
            column: 28
          }
        },
        loc: {
          start: {
            line: 883,
            column: 40
          },
          end: {
            line: 890,
            column: 5
          }
        },
        line: 883
      },
      "41": {
        name: "checkDatabaseHealth",
        decl: {
          start: {
            line: 1027,
            column: 15
          },
          end: {
            line: 1027,
            column: 34
          }
        },
        loc: {
          start: {
            line: 1027,
            column: 37
          },
          end: {
            line: 1071,
            column: 1
          }
        },
        line: 1027
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 1035,
            column: 18
          },
          end: {
            line: 1035,
            column: 19
          }
        },
        loc: {
          start: {
            line: 1036,
            column: 8
          },
          end: {
            line: 1036,
            column: 82
          }
        },
        line: 1036
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 1036,
            column: 19
          },
          end: {
            line: 1036,
            column: 20
          }
        },
        loc: {
          start: {
            line: 1036,
            column: 25
          },
          end: {
            line: 1036,
            column: 75
          }
        },
        line: 1036
      },
      "44": {
        name: "checkAlpacaApiHealth",
        decl: {
          start: {
            line: 1076,
            column: 15
          },
          end: {
            line: 1076,
            column: 35
          }
        },
        loc: {
          start: {
            line: 1076,
            column: 38
          },
          end: {
            line: 1168,
            column: 1
          }
        },
        line: 1076
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 1121,
            column: 20
          },
          end: {
            line: 1121,
            column: 21
          }
        },
        loc: {
          start: {
            line: 1122,
            column: 10
          },
          end: {
            line: 1122,
            column: 74
          }
        },
        line: 1122
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 1122,
            column: 21
          },
          end: {
            line: 1122,
            column: 22
          }
        },
        loc: {
          start: {
            line: 1122,
            column: 27
          },
          end: {
            line: 1122,
            column: 66
          }
        },
        line: 1122
      },
      "47": {
        name: "checkAwsSecretsManagerHealth",
        decl: {
          start: {
            line: 1173,
            column: 15
          },
          end: {
            line: 1173,
            column: 43
          }
        },
        loc: {
          start: {
            line: 1173,
            column: 46
          },
          end: {
            line: 1225,
            column: 1
          }
        },
        line: 1173
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 1197,
            column: 18
          },
          end: {
            line: 1197,
            column: 19
          }
        },
        loc: {
          start: {
            line: 1198,
            column: 8
          },
          end: {
            line: 1198,
            column: 76
          }
        },
        line: 1198
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 1198,
            column: 19
          },
          end: {
            line: 1198,
            column: 20
          }
        },
        loc: {
          start: {
            line: 1198,
            column: 25
          },
          end: {
            line: 1198,
            column: 69
          }
        },
        line: 1198
      },
      "50": {
        name: "checkAwsRdsHealth",
        decl: {
          start: {
            line: 1230,
            column: 15
          },
          end: {
            line: 1230,
            column: 32
          }
        },
        loc: {
          start: {
            line: 1230,
            column: 35
          },
          end: {
            line: 1264,
            column: 1
          }
        },
        line: 1230
      },
      "51": {
        name: "checkAwsCognitoHealth",
        decl: {
          start: {
            line: 1269,
            column: 15
          },
          end: {
            line: 1269,
            column: 36
          }
        },
        loc: {
          start: {
            line: 1269,
            column: 39
          },
          end: {
            line: 1326,
            column: 1
          }
        },
        line: 1269
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 1295,
            column: 18
          },
          end: {
            line: 1295,
            column: 19
          }
        },
        loc: {
          start: {
            line: 1296,
            column: 8
          },
          end: {
            line: 1296,
            column: 68
          }
        },
        line: 1296
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 1296,
            column: 19
          },
          end: {
            line: 1296,
            column: 20
          }
        },
        loc: {
          start: {
            line: 1296,
            column: 25
          },
          end: {
            line: 1296,
            column: 61
          }
        },
        line: 1296
      },
      "54": {
        name: "checkApiKeyServiceHealth",
        decl: {
          start: {
            line: 1329,
            column: 15
          },
          end: {
            line: 1329,
            column: 39
          }
        },
        loc: {
          start: {
            line: 1329,
            column: 42
          },
          end: {
            line: 1361,
            column: 1
          }
        },
        line: 1329
      },
      "55": {
        name: "checkJwtSecretServiceHealth",
        decl: {
          start: {
            line: 1363,
            column: 15
          },
          end: {
            line: 1363,
            column: 42
          }
        },
        loc: {
          start: {
            line: 1363,
            column: 45
          },
          end: {
            line: 1403,
            column: 1
          }
        },
        line: 1363
      },
      "56": {
        name: "checkEncryptionServiceHealth",
        decl: {
          start: {
            line: 1405,
            column: 15
          },
          end: {
            line: 1405,
            column: 43
          }
        },
        loc: {
          start: {
            line: 1405,
            column: 46
          },
          end: {
            line: 1437,
            column: 1
          }
        },
        line: 1405
      },
      "57": {
        name: "checkDatabaseTablesForApiKeys",
        decl: {
          start: {
            line: 1439,
            column: 15
          },
          end: {
            line: 1439,
            column: 44
          }
        },
        loc: {
          start: {
            line: 1439,
            column: 47
          },
          end: {
            line: 1494,
            column: 1
          }
        },
        line: 1439
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 1475,
            column: 56
          },
          end: {
            line: 1475,
            column: 57
          }
        },
        loc: {
          start: {
            line: 1475,
            column: 61
          },
          end: {
            line: 1475,
            column: 83
          }
        },
        line: 1475
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 1482,
            column: 58
          },
          end: {
            line: 1482,
            column: 59
          }
        },
        loc: {
          start: {
            line: 1482,
            column: 63
          },
          end: {
            line: 1482,
            column: 85
          }
        },
        line: 1482
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 1483,
            column: 58
          },
          end: {
            line: 1483,
            column: 59
          }
        },
        loc: {
          start: {
            line: 1483,
            column: 63
          },
          end: {
            line: 1483,
            column: 85
          }
        },
        line: 1483
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 1484,
            column: 56
          },
          end: {
            line: 1484,
            column: 57
          }
        },
        loc: {
          start: {
            line: 1484,
            column: 61
          },
          end: {
            line: 1484,
            column: 81
          }
        },
        line: 1484
      },
      "62": {
        name: "checkSecretsManagerHealth",
        decl: {
          start: {
            line: 1496,
            column: 15
          },
          end: {
            line: 1496,
            column: 40
          }
        },
        loc: {
          start: {
            line: 1496,
            column: 43
          },
          end: {
            line: 1533,
            column: 1
          }
        },
        line: 1496
      },
      "63": {
        name: "generateTimeoutRecommendations",
        decl: {
          start: {
            line: 1538,
            column: 9
          },
          end: {
            line: 1538,
            column: 39
          }
        },
        loc: {
          start: {
            line: 1538,
            column: 57
          },
          end: {
            line: 1576,
            column: 1
          }
        },
        line: 1538
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 1579,
            column: 31
          },
          end: {
            line: 1579,
            column: 32
          }
        },
        loc: {
          start: {
            line: 1579,
            column: 51
          },
          end: {
            line: 1697,
            column: 1
          }
        },
        line: 1579
      },
      "65": {
        name: "generateSchemaRecommendations",
        decl: {
          start: {
            line: 1702,
            column: 9
          },
          end: {
            line: 1702,
            column: 38
          }
        },
        loc: {
          start: {
            line: 1702,
            column: 57
          },
          end: {
            line: 1766,
            column: 1
          }
        },
        line: 1702
      },
      "66": {
        name: "(anonymous_66)",
        decl: {
          start: {
            line: 1730,
            column: 23
          },
          end: {
            line: 1730,
            column: 24
          }
        },
        loc: {
          start: {
            line: 1730,
            column: 35
          },
          end: {
            line: 1742,
            column: 5
          }
        },
        line: 1730
      },
      "67": {
        name: "getCategoryImpact",
        decl: {
          start: {
            line: 1771,
            column: 9
          },
          end: {
            line: 1771,
            column: 26
          }
        },
        loc: {
          start: {
            line: 1771,
            column: 37
          },
          end: {
            line: 1780,
            column: 1
          }
        },
        line: 1771
      },
      "68": {
        name: "testEncryptionFunctionality",
        decl: {
          start: {
            line: 1785,
            column: 15
          },
          end: {
            line: 1785,
            column: 42
          }
        },
        loc: {
          start: {
            line: 1785,
            column: 45
          },
          end: {
            line: 1817,
            column: 1
          }
        },
        line: 1785
      },
      "69": {
        name: "testJwtFunctionality",
        decl: {
          start: {
            line: 1822,
            column: 15
          },
          end: {
            line: 1822,
            column: 35
          }
        },
        loc: {
          start: {
            line: 1822,
            column: 38
          },
          end: {
            line: 1857,
            column: 1
          }
        },
        line: 1822
      },
      "70": {
        name: "generateApiServiceRecommendations",
        decl: {
          start: {
            line: 1862,
            column: 9
          },
          end: {
            line: 1862,
            column: 42
          }
        },
        loc: {
          start: {
            line: 1862,
            column: 53
          },
          end: {
            line: 1926,
            column: 1
          }
        },
        line: 1862
      },
      "71": {
        name: "calculateHealthScore",
        decl: {
          start: {
            line: 1933,
            column: 9
          },
          end: {
            line: 1933,
            column: 29
          }
        },
        loc: {
          start: {
            line: 1933,
            column: 39
          },
          end: {
            line: 1950,
            column: 1
          }
        },
        line: 1933
      },
      "72": {
        name: "calculateRiskLevel",
        decl: {
          start: {
            line: 1955,
            column: 9
          },
          end: {
            line: 1955,
            column: 27
          }
        },
        loc: {
          start: {
            line: 1955,
            column: 37
          },
          end: {
            line: 1973,
            column: 1
          }
        },
        line: 1955
      },
      "73": {
        name: "getNextStateTransition",
        decl: {
          start: {
            line: 1978,
            column: 9
          },
          end: {
            line: 1978,
            column: 31
          }
        },
        loc: {
          start: {
            line: 1978,
            column: 41
          },
          end: {
            line: 2014,
            column: 1
          }
        },
        line: 1978
      },
      "74": {
        name: "getRecommendedAction",
        decl: {
          start: {
            line: 2019,
            column: 9
          },
          end: {
            line: 2019,
            column: 29
          }
        },
        loc: {
          start: {
            line: 2019,
            column: 39
          },
          end: {
            line: 2037,
            column: 1
          }
        },
        line: 2019
      },
      "75": {
        name: "getAlertLevel",
        decl: {
          start: {
            line: 2042,
            column: 9
          },
          end: {
            line: 2042,
            column: 22
          }
        },
        loc: {
          start: {
            line: 2042,
            column: 32
          },
          end: {
            line: 2060,
            column: 1
          }
        },
        line: 2042
      },
      "76": {
        name: "calculateOverallHealthScore",
        decl: {
          start: {
            line: 2065,
            column: 9
          },
          end: {
            line: 2065,
            column: 36
          }
        },
        loc: {
          start: {
            line: 2065,
            column: 48
          },
          end: {
            line: 2074,
            column: 1
          }
        },
        line: 2065
      },
      "77": {
        name: "(anonymous_77)",
        decl: {
          start: {
            line: 2072,
            column: 37
          },
          end: {
            line: 2072,
            column: 38
          }
        },
        loc: {
          start: {
            line: 2072,
            column: 55
          },
          end: {
            line: 2072,
            column: 89
          }
        },
        line: 2072
      },
      "78": {
        name: "generateSystemRecommendations",
        decl: {
          start: {
            line: 2079,
            column: 9
          },
          end: {
            line: 2079,
            column: 38
          }
        },
        loc: {
          start: {
            line: 2079,
            column: 50
          },
          end: {
            line: 2140,
            column: 1
          }
        },
        line: 2079
      },
      "79": {
        name: "(anonymous_79)",
        decl: {
          start: {
            line: 2084,
            column: 43
          },
          end: {
            line: 2084,
            column: 44
          }
        },
        loc: {
          start: {
            line: 2084,
            column: 61
          },
          end: {
            line: 2084,
            column: 103
          }
        },
        line: 2084
      },
      "80": {
        name: "(anonymous_80)",
        decl: {
          start: {
            line: 2090,
            column: 37
          },
          end: {
            line: 2090,
            column: 38
          }
        },
        loc: {
          start: {
            line: 2090,
            column: 51
          },
          end: {
            line: 2090,
            column: 54
          }
        },
        line: 2090
      },
      "81": {
        name: "(anonymous_81)",
        decl: {
          start: {
            line: 2096,
            column: 42
          },
          end: {
            line: 2096,
            column: 43
          }
        },
        loc: {
          start: {
            line: 2096,
            column: 60
          },
          end: {
            line: 2096,
            column: 101
          }
        },
        line: 2096
      },
      "82": {
        name: "(anonymous_82)",
        decl: {
          start: {
            line: 2102,
            column: 36
          },
          end: {
            line: 2102,
            column: 37
          }
        },
        loc: {
          start: {
            line: 2102,
            column: 50
          },
          end: {
            line: 2102,
            column: 53
          }
        },
        line: 2102
      },
      "83": {
        name: "(anonymous_83)",
        decl: {
          start: {
            line: 2108,
            column: 41
          },
          end: {
            line: 2108,
            column: 42
          }
        },
        loc: {
          start: {
            line: 2108,
            column: 59
          },
          end: {
            line: 2108,
            column: 91
          }
        },
        line: 2108
      },
      "84": {
        name: "(anonymous_84)",
        decl: {
          start: {
            line: 2114,
            column: 35
          },
          end: {
            line: 2114,
            column: 36
          }
        },
        loc: {
          start: {
            line: 2114,
            column: 49
          },
          end: {
            line: 2114,
            column: 52
          }
        },
        line: 2114
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 21
          },
          end: {
            line: 26,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 21
          },
          end: {
            line: 26,
            column: 44
          }
        }, {
          start: {
            line: 26,
            column: 48
          },
          end: {
            line: 26,
            column: 53
          }
        }],
        line: 26
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 46
          },
          end: {
            line: 31,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 46
          },
          end: {
            line: 31,
            column: 69
          }
        }, {
          start: {
            line: 31,
            column: 73
          },
          end: {
            line: 31,
            column: 78
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        }, {
          start: {
            line: 60,
            column: 11
          },
          end: {
            line: 71,
            column: 5
          }
        }],
        line: 49
      },
      "4": {
        loc: {
          start: {
            line: 54,
            column: 21
          },
          end: {
            line: 54,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 21
          },
          end: {
            line: 54,
            column: 44
          }
        }, {
          start: {
            line: 54,
            column: 48
          },
          end: {
            line: 54,
            column: 53
          }
        }],
        line: 54
      },
      "5": {
        loc: {
          start: {
            line: 56,
            column: 46
          },
          end: {
            line: 56,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 46
          },
          end: {
            line: 56,
            column: 69
          }
        }, {
          start: {
            line: 56,
            column: 73
          },
          end: {
            line: 56,
            column: 78
          }
        }],
        line: 56
      },
      "6": {
        loc: {
          start: {
            line: 65,
            column: 21
          },
          end: {
            line: 65,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 21
          },
          end: {
            line: 65,
            column: 44
          }
        }, {
          start: {
            line: 65,
            column: 48
          },
          end: {
            line: 65,
            column: 53
          }
        }],
        line: 65
      },
      "7": {
        loc: {
          start: {
            line: 67,
            column: 46
          },
          end: {
            line: 67,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 46
          },
          end: {
            line: 67,
            column: 69
          }
        }, {
          start: {
            line: 67,
            column: 73
          },
          end: {
            line: 67,
            column: 78
          }
        }],
        line: 67
      },
      "8": {
        loc: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "9": {
        loc: {
          start: {
            line: 84,
            column: 46
          },
          end: {
            line: 84,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 46
          },
          end: {
            line: 84,
            column: 69
          }
        }, {
          start: {
            line: 84,
            column: 73
          },
          end: {
            line: 84,
            column: 78
          }
        }],
        line: 84
      },
      "10": {
        loc: {
          start: {
            line: 96,
            column: 44
          },
          end: {
            line: 96,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 44
          },
          end: {
            line: 96,
            column: 67
          }
        }, {
          start: {
            line: 96,
            column: 71
          },
          end: {
            line: 96,
            column: 76
          }
        }],
        line: 96
      },
      "11": {
        loc: {
          start: {
            line: 125,
            column: 6
          },
          end: {
            line: 145,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 6
          },
          end: {
            line: 145,
            column: 7
          }
        }, {
          start: {
            line: 140,
            column: 13
          },
          end: {
            line: 145,
            column: 7
          }
        }],
        line: 125
      },
      "12": {
        loc: {
          start: {
            line: 161,
            column: 22
          },
          end: {
            line: 161,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 161,
            column: 42
          },
          end: {
            line: 161,
            column: 45
          }
        }, {
          start: {
            line: 161,
            column: 48
          },
          end: {
            line: 161,
            column: 51
          }
        }],
        line: 161
      },
      "13": {
        loc: {
          start: {
            line: 162,
            column: 14
          },
          end: {
            line: 162,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 162,
            column: 34
          },
          end: {
            line: 162,
            column: 41
          }
        }, {
          start: {
            line: 162,
            column: 44
          },
          end: {
            line: 162,
            column: 55
          }
        }],
        line: 162
      },
      "14": {
        loc: {
          start: {
            line: 166,
            column: 19
          },
          end: {
            line: 166,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 166,
            column: 19
          },
          end: {
            line: 166,
            column: 42
          }
        }, {
          start: {
            line: 166,
            column: 46
          },
          end: {
            line: 166,
            column: 51
          }
        }],
        line: 166
      },
      "15": {
        loc: {
          start: {
            line: 275,
            column: 14
          },
          end: {
            line: 275,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 275,
            column: 27
          },
          end: {
            line: 275,
            column: 36
          }
        }, {
          start: {
            line: 275,
            column: 39
          },
          end: {
            line: 275,
            column: 49
          }
        }],
        line: 275
      },
      "16": {
        loc: {
          start: {
            line: 289,
            column: 4
          },
          end: {
            line: 293,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 289,
            column: 4
          },
          end: {
            line: 293,
            column: 5
          }
        }, {
          start: {
            line: 291,
            column: 11
          },
          end: {
            line: 293,
            column: 5
          }
        }],
        line: 289
      },
      "17": {
        loc: {
          start: {
            line: 317,
            column: 15
          },
          end: {
            line: 317,
            column: 37
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 317,
            column: 28
          },
          end: {
            line: 317,
            column: 31
          }
        }, {
          start: {
            line: 317,
            column: 34
          },
          end: {
            line: 317,
            column: 37
          }
        }],
        line: 317
      },
      "18": {
        loc: {
          start: {
            line: 318,
            column: 14
          },
          end: {
            line: 318,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 318,
            column: 27
          },
          end: {
            line: 318,
            column: 36
          }
        }, {
          start: {
            line: 318,
            column: 39
          },
          end: {
            line: 318,
            column: 49
          }
        }],
        line: 318
      },
      "19": {
        loc: {
          start: {
            line: 348,
            column: 22
          },
          end: {
            line: 348,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 348,
            column: 22
          },
          end: {
            line: 348,
            column: 37
          }
        }, {
          start: {
            line: 348,
            column: 41
          },
          end: {
            line: 348,
            column: 56
          }
        }],
        line: 348
      },
      "20": {
        loc: {
          start: {
            line: 360,
            column: 4
          },
          end: {
            line: 363,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 360,
            column: 4
          },
          end: {
            line: 363,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 360
      },
      "21": {
        loc: {
          start: {
            line: 377,
            column: 13
          },
          end: {
            line: 377,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 377,
            column: 13
          },
          end: {
            line: 377,
            column: 28
          }
        }, {
          start: {
            line: 377,
            column: 32
          },
          end: {
            line: 377,
            column: 47
          }
        }],
        line: 377
      },
      "22": {
        loc: {
          start: {
            line: 489,
            column: 22
          },
          end: {
            line: 489,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 489,
            column: 22
          },
          end: {
            line: 489,
            column: 58
          }
        }, {
          start: {
            line: 489,
            column: 62
          },
          end: {
            line: 489,
            column: 97
          }
        }],
        line: 489
      },
      "23": {
        loc: {
          start: {
            line: 494,
            column: 14
          },
          end: {
            line: 494,
            column: 48
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 494,
            column: 26
          },
          end: {
            line: 494,
            column: 35
          }
        }, {
          start: {
            line: 494,
            column: 38
          },
          end: {
            line: 494,
            column: 48
          }
        }],
        line: 494
      },
      "24": {
        loc: {
          start: {
            line: 498,
            column: 4
          },
          end: {
            line: 502,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 498,
            column: 4
          },
          end: {
            line: 502,
            column: 5
          }
        }, {
          start: {
            line: 500,
            column: 11
          },
          end: {
            line: 502,
            column: 5
          }
        }],
        line: 498
      },
      "25": {
        loc: {
          start: {
            line: 525,
            column: 16
          },
          end: {
            line: 525,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 525,
            column: 16
          },
          end: {
            line: 525,
            column: 29
          }
        }, {
          start: {
            line: 525,
            column: 33
          },
          end: {
            line: 525,
            column: 37
          }
        }],
        line: 525
      },
      "26": {
        loc: {
          start: {
            line: 526,
            column: 15
          },
          end: {
            line: 528,
            column: 47
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 527,
            column: 10
          },
          end: {
            line: 527,
            column: 39
          }
        }, {
          start: {
            line: 528,
            column: 10
          },
          end: {
            line: 528,
            column: 47
          }
        }],
        line: 526
      },
      "27": {
        loc: {
          start: {
            line: 557,
            column: 22
          },
          end: {
            line: 557,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 557,
            column: 22
          },
          end: {
            line: 557,
            column: 37
          }
        }, {
          start: {
            line: 557,
            column: 41
          },
          end: {
            line: 557,
            column: 48
          }
        }],
        line: 557
      },
      "28": {
        loc: {
          start: {
            line: 584,
            column: 13
          },
          end: {
            line: 584,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 584,
            column: 13
          },
          end: {
            line: 584,
            column: 28
          }
        }, {
          start: {
            line: 584,
            column: 32
          },
          end: {
            line: 584,
            column: 39
          }
        }],
        line: 584
      },
      "29": {
        loc: {
          start: {
            line: 601,
            column: 19
          },
          end: {
            line: 601,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 601,
            column: 19
          },
          end: {
            line: 601,
            column: 42
          }
        }, {
          start: {
            line: 601,
            column: 46
          },
          end: {
            line: 601,
            column: 51
          }
        }],
        line: 601
      },
      "30": {
        loc: {
          start: {
            line: 602,
            column: 14
          },
          end: {
            line: 602,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 602,
            column: 14
          },
          end: {
            line: 602,
            column: 36
          }
        }, {
          start: {
            line: 602,
            column: 40
          },
          end: {
            line: 602,
            column: 69
          }
        }, {
          start: {
            line: 602,
            column: 73
          },
          end: {
            line: 602,
            column: 84
          }
        }],
        line: 602
      },
      "31": {
        loc: {
          start: {
            line: 616,
            column: 20
          },
          end: {
            line: 616,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 616,
            column: 46
          },
          end: {
            line: 616,
            column: 58
          }
        }, {
          start: {
            line: 616,
            column: 61
          },
          end: {
            line: 616,
            column: 77
          }
        }],
        line: 616
      },
      "32": {
        loc: {
          start: {
            line: 617,
            column: 21
          },
          end: {
            line: 617,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 617,
            column: 49
          },
          end: {
            line: 617,
            column: 61
          }
        }, {
          start: {
            line: 617,
            column: 64
          },
          end: {
            line: 617,
            column: 80
          }
        }],
        line: 617
      },
      "33": {
        loc: {
          start: {
            line: 618,
            column: 26
          },
          end: {
            line: 618,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 618,
            column: 26
          },
          end: {
            line: 618,
            column: 56
          }
        }, {
          start: {
            line: 618,
            column: 60
          },
          end: {
            line: 618,
            column: 69
          }
        }],
        line: 618
      },
      "34": {
        loc: {
          start: {
            line: 619,
            column: 19
          },
          end: {
            line: 619,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 619,
            column: 19
          },
          end: {
            line: 619,
            column: 42
          }
        }, {
          start: {
            line: 619,
            column: 46
          },
          end: {
            line: 619,
            column: 55
          }
        }],
        line: 619
      },
      "35": {
        loc: {
          start: {
            line: 622,
            column: 27
          },
          end: {
            line: 622,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 622,
            column: 62
          },
          end: {
            line: 622,
            column: 74
          }
        }, {
          start: {
            line: 622,
            column: 77
          },
          end: {
            line: 622,
            column: 93
          }
        }],
        line: 622
      },
      "36": {
        loc: {
          start: {
            line: 623,
            column: 25
          },
          end: {
            line: 623,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 623,
            column: 57
          },
          end: {
            line: 623,
            column: 69
          }
        }, {
          start: {
            line: 623,
            column: 72
          },
          end: {
            line: 623,
            column: 88
          }
        }],
        line: 623
      },
      "37": {
        loc: {
          start: {
            line: 626,
            column: 28
          },
          end: {
            line: 626,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 626,
            column: 72
          },
          end: {
            line: 626,
            column: 84
          }
        }, {
          start: {
            line: 626,
            column: 87
          },
          end: {
            line: 626,
            column: 103
          }
        }],
        line: 626
      },
      "38": {
        loc: {
          start: {
            line: 629,
            column: 24
          },
          end: {
            line: 629,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 629,
            column: 24
          },
          end: {
            line: 629,
            column: 60
          }
        }, {
          start: {
            line: 629,
            column: 64
          },
          end: {
            line: 629,
            column: 73
          }
        }],
        line: 629
      },
      "39": {
        loc: {
          start: {
            line: 630,
            column: 27
          },
          end: {
            line: 630,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 630,
            column: 27
          },
          end: {
            line: 630,
            column: 66
          }
        }, {
          start: {
            line: 630,
            column: 70
          },
          end: {
            line: 630,
            column: 79
          }
        }],
        line: 630
      },
      "40": {
        loc: {
          start: {
            line: 631,
            column: 18
          },
          end: {
            line: 631,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 631,
            column: 18
          },
          end: {
            line: 631,
            column: 40
          }
        }, {
          start: {
            line: 631,
            column: 44
          },
          end: {
            line: 631,
            column: 53
          }
        }],
        line: 631
      },
      "41": {
        loc: {
          start: {
            line: 646,
            column: 42
          },
          end: {
            line: 646,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 646,
            column: 74
          },
          end: {
            line: 646,
            column: 83
          }
        }, {
          start: {
            line: 646,
            column: 86
          },
          end: {
            line: 646,
            column: 97
          }
        }],
        line: 646
      },
      "42": {
        loc: {
          start: {
            line: 660,
            column: 6
          },
          end: {
            line: 664,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 660,
            column: 6
          },
          end: {
            line: 664,
            column: 7
          }
        }, {
          start: {
            line: 662,
            column: 13
          },
          end: {
            line: 664,
            column: 7
          }
        }],
        line: 660
      },
      "43": {
        loc: {
          start: {
            line: 719,
            column: 23
          },
          end: {
            line: 719,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 719,
            column: 51
          },
          end: {
            line: 719,
            column: 56
          }
        }, {
          start: {
            line: 719,
            column: 59
          },
          end: {
            line: 719,
            column: 68
          }
        }],
        line: 719
      },
      "44": {
        loc: {
          start: {
            line: 773,
            column: 6
          },
          end: {
            line: 806,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 773,
            column: 6
          },
          end: {
            line: 806,
            column: 7
          }
        }, {
          start: {
            line: 804,
            column: 13
          },
          end: {
            line: 806,
            column: 7
          }
        }],
        line: 773
      },
      "45": {
        loc: {
          start: {
            line: 841,
            column: 4
          },
          end: {
            line: 861,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 841,
            column: 4
          },
          end: {
            line: 861,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 841
      },
      "46": {
        loc: {
          start: {
            line: 885,
            column: 8
          },
          end: {
            line: 887,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 885,
            column: 8
          },
          end: {
            line: 887,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 885
      },
      "47": {
        loc: {
          start: {
            line: 925,
            column: 28
          },
          end: {
            line: 925,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 925,
            column: 28
          },
          end: {
            line: 925,
            column: 58
          }
        }, {
          start: {
            line: 925,
            column: 62
          },
          end: {
            line: 925,
            column: 63
          }
        }],
        line: 925
      },
      "48": {
        loc: {
          start: {
            line: 929,
            column: 26
          },
          end: {
            line: 929,
            column: 116
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 929,
            column: 26
          },
          end: {
            line: 929,
            column: 44
          }
        }, {
          start: {
            line: 929,
            column: 48
          },
          end: {
            line: 929,
            column: 70
          }
        }, {
          start: {
            line: 929,
            column: 74
          },
          end: {
            line: 929,
            column: 91
          }
        }, {
          start: {
            line: 929,
            column: 95
          },
          end: {
            line: 929,
            column: 116
          }
        }],
        line: 929
      },
      "49": {
        loc: {
          start: {
            line: 935,
            column: 6
          },
          end: {
            line: 950,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 935,
            column: 6
          },
          end: {
            line: 950,
            column: 7
          }
        }, {
          start: {
            line: 938,
            column: 13
          },
          end: {
            line: 950,
            column: 7
          }
        }],
        line: 935
      },
      "50": {
        loc: {
          start: {
            line: 938,
            column: 13
          },
          end: {
            line: 950,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 938,
            column: 13
          },
          end: {
            line: 950,
            column: 7
          }
        }, {
          start: {
            line: 947,
            column: 13
          },
          end: {
            line: 950,
            column: 7
          }
        }],
        line: 938
      },
      "51": {
        loc: {
          start: {
            line: 940,
            column: 8
          },
          end: {
            line: 946,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 940,
            column: 8
          },
          end: {
            line: 946,
            column: 9
          }
        }, {
          start: {
            line: 944,
            column: 15
          },
          end: {
            line: 946,
            column: 9
          }
        }],
        line: 940
      },
      "52": {
        loc: {
          start: {
            line: 1042,
            column: 4
          },
          end: {
            line: 1061,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1042,
            column: 4
          },
          end: {
            line: 1061,
            column: 5
          }
        }, {
          start: {
            line: 1054,
            column: 11
          },
          end: {
            line: 1061,
            column: 5
          }
        }],
        line: 1042
      },
      "53": {
        loc: {
          start: {
            line: 1047,
            column: 17
          },
          end: {
            line: 1047,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1047,
            column: 17
          },
          end: {
            line: 1047,
            column: 33
          }
        }, {
          start: {
            line: 1047,
            column: 37
          },
          end: {
            line: 1047,
            column: 46
          }
        }],
        line: 1047
      },
      "54": {
        loc: {
          start: {
            line: 1049,
            column: 16
          },
          end: {
            line: 1049,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1049,
            column: 42
          },
          end: {
            line: 1049,
            column: 54
          }
        }, {
          start: {
            line: 1049,
            column: 57
          },
          end: {
            line: 1049,
            column: 73
          }
        }],
        line: 1049
      },
      "55": {
        loc: {
          start: {
            line: 1093,
            column: 6
          },
          end: {
            line: 1105,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1093,
            column: 6
          },
          end: {
            line: 1105,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1093
      },
      "56": {
        loc: {
          start: {
            line: 1110,
            column: 4
          },
          end: {
            line: 1157,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1110,
            column: 4
          },
          end: {
            line: 1157,
            column: 5
          }
        }, {
          start: {
            line: 1143,
            column: 11
          },
          end: {
            line: 1157,
            column: 5
          }
        }],
        line: 1110
      },
      "57": {
        loc: {
          start: {
            line: 1132,
            column: 21
          },
          end: {
            line: 1132,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1132,
            column: 49
          },
          end: {
            line: 1132,
            column: 58
          }
        }, {
          start: {
            line: 1132,
            column: 61
          },
          end: {
            line: 1132,
            column: 67
          }
        }],
        line: 1132
      },
      "58": {
        loc: {
          start: {
            line: 1134,
            column: 18
          },
          end: {
            line: 1134,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1134,
            column: 18
          },
          end: {
            line: 1134,
            column: 37
          }
        }, {
          start: {
            line: 1134,
            column: 41
          },
          end: {
            line: 1134,
            column: 50
          }
        }],
        line: 1134
      },
      "59": {
        loc: {
          start: {
            line: 1135,
            column: 26
          },
          end: {
            line: 1135,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1135,
            column: 26
          },
          end: {
            line: 1135,
            column: 54
          }
        }, {
          start: {
            line: 1135,
            column: 58
          },
          end: {
            line: 1135,
            column: 63
          }
        }],
        line: 1135
      },
      "60": {
        loc: {
          start: {
            line: 1179,
            column: 14
          },
          end: {
            line: 1179,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1179,
            column: 14
          },
          end: {
            line: 1179,
            column: 43
          }
        }, {
          start: {
            line: 1179,
            column: 47
          },
          end: {
            line: 1179,
            column: 69
          }
        }, {
          start: {
            line: 1179,
            column: 73
          },
          end: {
            line: 1179,
            column: 84
          }
        }],
        line: 1179
      },
      "61": {
        loc: {
          start: {
            line: 1183,
            column: 26
          },
          end: {
            line: 1183,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1183,
            column: 26
          },
          end: {
            line: 1183,
            column: 51
          }
        }, {
          start: {
            line: 1183,
            column: 55
          },
          end: {
            line: 1183,
            column: 96
          }
        }],
        line: 1183
      },
      "62": {
        loc: {
          start: {
            line: 1185,
            column: 4
          },
          end: {
            line: 1192,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1185,
            column: 4
          },
          end: {
            line: 1192,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1185
      },
      "63": {
        loc: {
          start: {
            line: 1190,
            column: 16
          },
          end: {
            line: 1190,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1190,
            column: 16
          },
          end: {
            line: 1190,
            column: 45
          }
        }, {
          start: {
            line: 1190,
            column: 49
          },
          end: {
            line: 1190,
            column: 71
          }
        }, {
          start: {
            line: 1190,
            column: 75
          },
          end: {
            line: 1190,
            column: 86
          }
        }],
        line: 1190
      },
      "64": {
        loc: {
          start: {
            line: 1209,
            column: 14
          },
          end: {
            line: 1209,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1209,
            column: 14
          },
          end: {
            line: 1209,
            column: 43
          }
        }, {
          start: {
            line: 1209,
            column: 47
          },
          end: {
            line: 1209,
            column: 69
          }
        }, {
          start: {
            line: 1209,
            column: 73
          },
          end: {
            line: 1209,
            column: 84
          }
        }],
        line: 1209
      },
      "65": {
        loc: {
          start: {
            line: 1222,
            column: 14
          },
          end: {
            line: 1222,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1222,
            column: 14
          },
          end: {
            line: 1222,
            column: 43
          }
        }, {
          start: {
            line: 1222,
            column: 47
          },
          end: {
            line: 1222,
            column: 69
          }
        }, {
          start: {
            line: 1222,
            column: 73
          },
          end: {
            line: 1222,
            column: 84
          }
        }],
        line: 1222
      },
      "66": {
        loc: {
          start: {
            line: 1234,
            column: 4
          },
          end: {
            line: 1240,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1234,
            column: 4
          },
          end: {
            line: 1240,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1234
      },
      "67": {
        loc: {
          start: {
            line: 1248,
            column: 15
          },
          end: {
            line: 1248,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1248,
            column: 47
          },
          end: {
            line: 1248,
            column: 79
          }
        }, {
          start: {
            line: 1248,
            column: 82
          },
          end: {
            line: 1248,
            column: 109
          }
        }],
        line: 1248
      },
      "68": {
        loc: {
          start: {
            line: 1277,
            column: 4
          },
          end: {
            line: 1286,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1277,
            column: 4
          },
          end: {
            line: 1286,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1277
      },
      "69": {
        loc: {
          start: {
            line: 1277,
            column: 8
          },
          end: {
            line: 1277,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1277,
            column: 8
          },
          end: {
            line: 1277,
            column: 19
          }
        }, {
          start: {
            line: 1277,
            column: 23
          },
          end: {
            line: 1277,
            column: 32
          }
        }],
        line: 1277
      },
      "70": {
        loc: {
          start: {
            line: 1282,
            column: 16
          },
          end: {
            line: 1282,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1282,
            column: 16
          },
          end: {
            line: 1282,
            column: 45
          }
        }, {
          start: {
            line: 1282,
            column: 49
          },
          end: {
            line: 1282,
            column: 71
          }
        }, {
          start: {
            line: 1282,
            column: 75
          },
          end: {
            line: 1282,
            column: 86
          }
        }],
        line: 1282
      },
      "71": {
        loc: {
          start: {
            line: 1289,
            column: 14
          },
          end: {
            line: 1289,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1289,
            column: 14
          },
          end: {
            line: 1289,
            column: 43
          }
        }, {
          start: {
            line: 1289,
            column: 47
          },
          end: {
            line: 1289,
            column: 69
          }
        }, {
          start: {
            line: 1289,
            column: 73
          },
          end: {
            line: 1289,
            column: 84
          }
        }],
        line: 1289
      },
      "72": {
        loc: {
          start: {
            line: 1307,
            column: 14
          },
          end: {
            line: 1307,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1307,
            column: 14
          },
          end: {
            line: 1307,
            column: 43
          }
        }, {
          start: {
            line: 1307,
            column: 47
          },
          end: {
            line: 1307,
            column: 69
          }
        }, {
          start: {
            line: 1307,
            column: 73
          },
          end: {
            line: 1307,
            column: 84
          }
        }],
        line: 1307
      },
      "73": {
        loc: {
          start: {
            line: 1323,
            column: 14
          },
          end: {
            line: 1323,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1323,
            column: 14
          },
          end: {
            line: 1323,
            column: 43
          }
        }, {
          start: {
            line: 1323,
            column: 47
          },
          end: {
            line: 1323,
            column: 69
          }
        }, {
          start: {
            line: 1323,
            column: 73
          },
          end: {
            line: 1323,
            column: 84
          }
        }],
        line: 1323
      },
      "74": {
        loc: {
          start: {
            line: 1338,
            column: 14
          },
          end: {
            line: 1338,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1338,
            column: 62
          },
          end: {
            line: 1338,
            column: 71
          }
        }, {
          start: {
            line: 1338,
            column: 74
          },
          end: {
            line: 1338,
            column: 84
          }
        }],
        line: 1338
      },
      "75": {
        loc: {
          start: {
            line: 1338,
            column: 14
          },
          end: {
            line: 1338,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1338,
            column: 14
          },
          end: {
            line: 1338,
            column: 37
          }
        }, {
          start: {
            line: 1338,
            column: 41
          },
          end: {
            line: 1338,
            column: 59
          }
        }],
        line: 1338
      },
      "76": {
        loc: {
          start: {
            line: 1377,
            column: 14
          },
          end: {
            line: 1377,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1377,
            column: 62
          },
          end: {
            line: 1377,
            column: 71
          }
        }, {
          start: {
            line: 1377,
            column: 74
          },
          end: {
            line: 1377,
            column: 84
          }
        }],
        line: 1377
      },
      "77": {
        loc: {
          start: {
            line: 1377,
            column: 14
          },
          end: {
            line: 1377,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1377,
            column: 14
          },
          end: {
            line: 1377,
            column: 34
          }
        }, {
          start: {
            line: 1377,
            column: 38
          },
          end: {
            line: 1377,
            column: 59
          }
        }],
        line: 1377
      },
      "78": {
        loc: {
          start: {
            line: 1381,
            column: 15
          },
          end: {
            line: 1381,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1381,
            column: 38
          },
          end: {
            line: 1381,
            column: 71
          }
        }, {
          start: {
            line: 1381,
            column: 74
          },
          end: {
            line: 1381,
            column: 111
          }
        }],
        line: 1381
      },
      "79": {
        loc: {
          start: {
            line: 1386,
            column: 24
          },
          end: {
            line: 1386,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1386,
            column: 24
          },
          end: {
            line: 1386,
            column: 55
          }
        }, {
          start: {
            line: 1386,
            column: 59
          },
          end: {
            line: 1386,
            column: 68
          }
        }],
        line: 1386
      },
      "80": {
        loc: {
          start: {
            line: 1413,
            column: 14
          },
          end: {
            line: 1413,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1413,
            column: 52
          },
          end: {
            line: 1413,
            column: 61
          }
        }, {
          start: {
            line: 1413,
            column: 64
          },
          end: {
            line: 1413,
            column: 74
          }
        }],
        line: 1413
      },
      "81": {
        loc: {
          start: {
            line: 1459,
            column: 8
          },
          end: {
            line: 1471,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1459,
            column: 8
          },
          end: {
            line: 1471,
            column: 9
          }
        }, {
          start: {
            line: 1465,
            column: 15
          },
          end: {
            line: 1471,
            column: 9
          }
        }],
        line: 1459
      },
      "82": {
        loc: {
          start: {
            line: 1478,
            column: 14
          },
          end: {
            line: 1478,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1478,
            column: 27
          },
          end: {
            line: 1478,
            column: 36
          }
        }, {
          start: {
            line: 1478,
            column: 39
          },
          end: {
            line: 1478,
            column: 49
          }
        }],
        line: 1478
      },
      "83": {
        loc: {
          start: {
            line: 1500,
            column: 4
          },
          end: {
            line: 1506,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1500,
            column: 4
          },
          end: {
            line: 1506,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1500
      },
      "84": {
        loc: {
          start: {
            line: 1542,
            column: 4
          },
          end: {
            line: 1563,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1542,
            column: 4
          },
          end: {
            line: 1563,
            column: 5
          }
        }, {
          start: {
            line: 1549,
            column: 11
          },
          end: {
            line: 1563,
            column: 5
          }
        }],
        line: 1542
      },
      "85": {
        loc: {
          start: {
            line: 1549,
            column: 11
          },
          end: {
            line: 1563,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1549,
            column: 11
          },
          end: {
            line: 1563,
            column: 5
          }
        }, {
          start: {
            line: 1556,
            column: 11
          },
          end: {
            line: 1563,
            column: 5
          }
        }],
        line: 1549
      },
      "86": {
        loc: {
          start: {
            line: 1556,
            column: 11
          },
          end: {
            line: 1563,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1556,
            column: 11
          },
          end: {
            line: 1563,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1556
      },
      "87": {
        loc: {
          start: {
            line: 1566,
            column: 2
          },
          end: {
            line: 1573,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1566,
            column: 2
          },
          end: {
            line: 1573,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1566
      },
      "88": {
        loc: {
          start: {
            line: 1598,
            column: 18
          },
          end: {
            line: 1598,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1598,
            column: 43
          },
          end: {
            line: 1598,
            column: 50
          }
        }, {
          start: {
            line: 1598,
            column: 53
          },
          end: {
            line: 1598,
            column: 62
          }
        }],
        line: 1598
      },
      "89": {
        loc: {
          start: {
            line: 1600,
            column: 28
          },
          end: {
            line: 1600,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1600,
            column: 28
          },
          end: {
            line: 1600,
            column: 60
          }
        }, {
          start: {
            line: 1600,
            column: 64
          },
          end: {
            line: 1600,
            column: 66
          }
        }],
        line: 1600
      },
      "90": {
        loc: {
          start: {
            line: 1604,
            column: 20
          },
          end: {
            line: 1640,
            column: 16
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1604,
            column: 50
          },
          end: {
            line: 1640,
            column: 9
          }
        }, {
          start: {
            line: 1640,
            column: 12
          },
          end: {
            line: 1640,
            column: 16
          }
        }],
        line: 1604
      },
      "91": {
        loc: {
          start: {
            line: 1606,
            column: 20
          },
          end: {
            line: 1606,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1606,
            column: 76
          },
          end: {
            line: 1606,
            column: 86
          }
        }, {
          start: {
            line: 1606,
            column: 89
          },
          end: {
            line: 1606,
            column: 101
          }
        }],
        line: 1606
      },
      "92": {
        loc: {
          start: {
            line: 1613,
            column: 20
          },
          end: {
            line: 1613,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1613,
            column: 81
          },
          end: {
            line: 1613,
            column: 91
          }
        }, {
          start: {
            line: 1613,
            column: 94
          },
          end: {
            line: 1613,
            column: 106
          }
        }],
        line: 1613
      },
      "93": {
        loc: {
          start: {
            line: 1620,
            column: 20
          },
          end: {
            line: 1620,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1620,
            column: 83
          },
          end: {
            line: 1620,
            column: 93
          }
        }, {
          start: {
            line: 1620,
            column: 96
          },
          end: {
            line: 1620,
            column: 108
          }
        }],
        line: 1620
      },
      "94": {
        loc: {
          start: {
            line: 1627,
            column: 20
          },
          end: {
            line: 1627,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1627,
            column: 81
          },
          end: {
            line: 1627,
            column: 91
          }
        }, {
          start: {
            line: 1627,
            column: 94
          },
          end: {
            line: 1627,
            column: 106
          }
        }],
        line: 1627
      },
      "95": {
        loc: {
          start: {
            line: 1658,
            column: 4
          },
          end: {
            line: 1664,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1658,
            column: 4
          },
          end: {
            line: 1664,
            column: 5
          }
        }, {
          start: {
            line: 1660,
            column: 11
          },
          end: {
            line: 1664,
            column: 5
          }
        }],
        line: 1658
      },
      "96": {
        loc: {
          start: {
            line: 1660,
            column: 11
          },
          end: {
            line: 1664,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1660,
            column: 11
          },
          end: {
            line: 1664,
            column: 5
          }
        }, {
          start: {
            line: 1662,
            column: 11
          },
          end: {
            line: 1664,
            column: 5
          }
        }],
        line: 1660
      },
      "97": {
        loc: {
          start: {
            line: 1660,
            column: 15
          },
          end: {
            line: 1660,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1660,
            column: 15
          },
          end: {
            line: 1660,
            column: 47
          }
        }, {
          start: {
            line: 1660,
            column: 51
          },
          end: {
            line: 1660,
            column: 94
          }
        }],
        line: 1660
      },
      "98": {
        loc: {
          start: {
            line: 1662,
            column: 11
          },
          end: {
            line: 1664,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1662,
            column: 11
          },
          end: {
            line: 1664,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1662
      },
      "99": {
        loc: {
          start: {
            line: 1670,
            column: 23
          },
          end: {
            line: 1670,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1670,
            column: 23
          },
          end: {
            line: 1670,
            column: 63
          }
        }, {
          start: {
            line: 1670,
            column: 67
          },
          end: {
            line: 1670,
            column: 68
          }
        }],
        line: 1670
      },
      "100": {
        loc: {
          start: {
            line: 1689,
            column: 15
          },
          end: {
            line: 1689,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1689,
            column: 56
          },
          end: {
            line: 1689,
            column: 69
          }
        }, {
          start: {
            line: 1689,
            column: 72
          },
          end: {
            line: 1689,
            column: 95
          }
        }],
        line: 1689
      },
      "101": {
        loc: {
          start: {
            line: 1705,
            column: 2
          },
          end: {
            line: 1714,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1705,
            column: 2
          },
          end: {
            line: 1714,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1705
      },
      "102": {
        loc: {
          start: {
            line: 1716,
            column: 2
          },
          end: {
            line: 1725,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1716,
            column: 2
          },
          end: {
            line: 1725,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1716
      },
      "103": {
        loc: {
          start: {
            line: 1716,
            column: 6
          },
          end: {
            line: 1716,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1716,
            column: 6
          },
          end: {
            line: 1716,
            column: 38
          }
        }, {
          start: {
            line: 1716,
            column: 42
          },
          end: {
            line: 1716,
            column: 85
          }
        }],
        line: 1716
      },
      "104": {
        loc: {
          start: {
            line: 1727,
            column: 2
          },
          end: {
            line: 1743,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1727,
            column: 2
          },
          end: {
            line: 1743,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1727
      },
      "105": {
        loc: {
          start: {
            line: 1732,
            column: 6
          },
          end: {
            line: 1741,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1732,
            column: 6
          },
          end: {
            line: 1741,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1732
      },
      "106": {
        loc: {
          start: {
            line: 1732,
            column: 10
          },
          end: {
            line: 1732,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1732,
            column: 10
          },
          end: {
            line: 1732,
            column: 22
          }
        }, {
          start: {
            line: 1732,
            column: 26
          },
          end: {
            line: 1732,
            column: 57
          }
        }],
        line: 1732
      },
      "107": {
        loc: {
          start: {
            line: 1735,
            column: 20
          },
          end: {
            line: 1735,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1735,
            column: 42
          },
          end: {
            line: 1735,
            column: 48
          }
        }, {
          start: {
            line: 1735,
            column: 51
          },
          end: {
            line: 1735,
            column: 59
          }
        }],
        line: 1735
      },
      "108": {
        loc: {
          start: {
            line: 1745,
            column: 2
          },
          end: {
            line: 1753,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1745,
            column: 2
          },
          end: {
            line: 1753,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1745
      },
      "109": {
        loc: {
          start: {
            line: 1745,
            column: 6
          },
          end: {
            line: 1745,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1745,
            column: 6
          },
          end: {
            line: 1745,
            column: 45
          }
        }, {
          start: {
            line: 1745,
            column: 49
          },
          end: {
            line: 1745,
            column: 88
          }
        }],
        line: 1745
      },
      "110": {
        loc: {
          start: {
            line: 1755,
            column: 2
          },
          end: {
            line: 1763,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1755,
            column: 2
          },
          end: {
            line: 1763,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1755
      },
      "111": {
        loc: {
          start: {
            line: 1779,
            column: 9
          },
          end: {
            line: 1779,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1779,
            column: 9
          },
          end: {
            line: 1779,
            column: 26
          }
        }, {
          start: {
            line: 1779,
            column: 30
          },
          end: {
            line: 1779,
            column: 72
          }
        }],
        line: 1779
      },
      "112": {
        loc: {
          start: {
            line: 1802,
            column: 15
          },
          end: {
            line: 1802,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1802,
            column: 25
          },
          end: {
            line: 1802,
            column: 49
          }
        }, {
          start: {
            line: 1802,
            column: 52
          },
          end: {
            line: 1802,
            column: 76
          }
        }],
        line: 1802
      },
      "113": {
        loc: {
          start: {
            line: 1834,
            column: 20
          },
          end: {
            line: 1834,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1834,
            column: 20
          },
          end: {
            line: 1834,
            column: 36
          }
        }, {
          start: {
            line: 1834,
            column: 40
          },
          end: {
            line: 1834,
            column: 72
          }
        }, {
          start: {
            line: 1834,
            column: 76
          },
          end: {
            line: 1834,
            column: 112
          }
        }],
        line: 1834
      },
      "114": {
        loc: {
          start: {
            line: 1840,
            column: 15
          },
          end: {
            line: 1840,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1840,
            column: 25
          },
          end: {
            line: 1840,
            column: 42
          }
        }, {
          start: {
            line: 1840,
            column: 45
          },
          end: {
            line: 1840,
            column: 62
          }
        }],
        line: 1840
      },
      "115": {
        loc: {
          start: {
            line: 1842,
            column: 21
          },
          end: {
            line: 1842,
            column: 45
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1842,
            column: 29
          },
          end: {
            line: 1842,
            column: 41
          }
        }, {
          start: {
            line: 1842,
            column: 44
          },
          end: {
            line: 1842,
            column: 45
          }
        }],
        line: 1842
      },
      "116": {
        loc: {
          start: {
            line: 1865,
            column: 2
          },
          end: {
            line: 1873,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1865,
            column: 2
          },
          end: {
            line: 1873,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1865
      },
      "117": {
        loc: {
          start: {
            line: 1875,
            column: 2
          },
          end: {
            line: 1883,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1875,
            column: 2
          },
          end: {
            line: 1883,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1875
      },
      "118": {
        loc: {
          start: {
            line: 1885,
            column: 2
          },
          end: {
            line: 1893,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1885,
            column: 2
          },
          end: {
            line: 1893,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1885
      },
      "119": {
        loc: {
          start: {
            line: 1895,
            column: 2
          },
          end: {
            line: 1903,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1895,
            column: 2
          },
          end: {
            line: 1903,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1895
      },
      "120": {
        loc: {
          start: {
            line: 1905,
            column: 2
          },
          end: {
            line: 1913,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1905,
            column: 2
          },
          end: {
            line: 1913,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1905
      },
      "121": {
        loc: {
          start: {
            line: 1915,
            column: 2
          },
          end: {
            line: 1923,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1915,
            column: 2
          },
          end: {
            line: 1923,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1915
      },
      "122": {
        loc: {
          start: {
            line: 1934,
            column: 2
          },
          end: {
            line: 1936,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1934,
            column: 2
          },
          end: {
            line: 1936,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1934
      },
      "123": {
        loc: {
          start: {
            line: 1934,
            column: 6
          },
          end: {
            line: 1934,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1934,
            column: 6
          },
          end: {
            line: 1934,
            column: 32
          }
        }, {
          start: {
            line: 1934,
            column: 36
          },
          end: {
            line: 1934,
            column: 58
          }
        }],
        line: 1934
      },
      "124": {
        loc: {
          start: {
            line: 1938,
            column: 2
          },
          end: {
            line: 1940,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1938,
            column: 2
          },
          end: {
            line: 1940,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1938
      },
      "125": {
        loc: {
          start: {
            line: 1942,
            column: 2
          },
          end: {
            line: 1944,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1942,
            column: 2
          },
          end: {
            line: 1944,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1942
      },
      "126": {
        loc: {
          start: {
            line: 1956,
            column: 2
          },
          end: {
            line: 1958,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1956,
            column: 2
          },
          end: {
            line: 1958,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1956
      },
      "127": {
        loc: {
          start: {
            line: 1960,
            column: 2
          },
          end: {
            line: 1962,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1960,
            column: 2
          },
          end: {
            line: 1962,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1960
      },
      "128": {
        loc: {
          start: {
            line: 1964,
            column: 2
          },
          end: {
            line: 1966,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1964,
            column: 2
          },
          end: {
            line: 1966,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1964
      },
      "129": {
        loc: {
          start: {
            line: 1968,
            column: 2
          },
          end: {
            line: 1970,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1968,
            column: 2
          },
          end: {
            line: 1970,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1968
      },
      "130": {
        loc: {
          start: {
            line: 1982,
            column: 2
          },
          end: {
            line: 1999,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1982,
            column: 2
          },
          end: {
            line: 1999,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1982
      },
      "131": {
        loc: {
          start: {
            line: 1986,
            column: 4
          },
          end: {
            line: 1992,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1986,
            column: 4
          },
          end: {
            line: 1992,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1986
      },
      "132": {
        loc: {
          start: {
            line: 2001,
            column: 2
          },
          end: {
            line: 2007,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2001,
            column: 2
          },
          end: {
            line: 2007,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2001
      },
      "133": {
        loc: {
          start: {
            line: 2020,
            column: 2
          },
          end: {
            line: 2022,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2020,
            column: 2
          },
          end: {
            line: 2022,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2020
      },
      "134": {
        loc: {
          start: {
            line: 2024,
            column: 2
          },
          end: {
            line: 2026,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2024,
            column: 2
          },
          end: {
            line: 2026,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2024
      },
      "135": {
        loc: {
          start: {
            line: 2028,
            column: 2
          },
          end: {
            line: 2030,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2028,
            column: 2
          },
          end: {
            line: 2030,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2028
      },
      "136": {
        loc: {
          start: {
            line: 2032,
            column: 2
          },
          end: {
            line: 2034,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2032,
            column: 2
          },
          end: {
            line: 2034,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2032
      },
      "137": {
        loc: {
          start: {
            line: 2043,
            column: 2
          },
          end: {
            line: 2045,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2043,
            column: 2
          },
          end: {
            line: 2045,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2043
      },
      "138": {
        loc: {
          start: {
            line: 2047,
            column: 2
          },
          end: {
            line: 2049,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2047,
            column: 2
          },
          end: {
            line: 2049,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2047
      },
      "139": {
        loc: {
          start: {
            line: 2051,
            column: 2
          },
          end: {
            line: 2053,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2051,
            column: 2
          },
          end: {
            line: 2053,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2051
      },
      "140": {
        loc: {
          start: {
            line: 2055,
            column: 2
          },
          end: {
            line: 2057,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2055,
            column: 2
          },
          end: {
            line: 2057,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2055
      },
      "141": {
        loc: {
          start: {
            line: 2068,
            column: 2
          },
          end: {
            line: 2070,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2068,
            column: 2
          },
          end: {
            line: 2070,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2068
      },
      "142": {
        loc: {
          start: {
            line: 2085,
            column: 2
          },
          end: {
            line: 2093,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2085,
            column: 2
          },
          end: {
            line: 2093,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2085
      },
      "143": {
        loc: {
          start: {
            line: 2097,
            column: 2
          },
          end: {
            line: 2105,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2097,
            column: 2
          },
          end: {
            line: 2105,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2097
      },
      "144": {
        loc: {
          start: {
            line: 2109,
            column: 2
          },
          end: {
            line: 2117,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2109,
            column: 2
          },
          end: {
            line: 2117,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2109
      },
      "145": {
        loc: {
          start: {
            line: 2121,
            column: 2
          },
          end: {
            line: 2128,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2121,
            column: 2
          },
          end: {
            line: 2128,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2121
      },
      "146": {
        loc: {
          start: {
            line: 2130,
            column: 2
          },
          end: {
            line: 2137,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2130,
            column: 2
          },
          end: {
            line: 2137,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2130
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0,
      "320": 0,
      "321": 0,
      "322": 0,
      "323": 0,
      "324": 0,
      "325": 0,
      "326": 0,
      "327": 0,
      "328": 0,
      "329": 0,
      "330": 0,
      "331": 0,
      "332": 0,
      "333": 0,
      "334": 0,
      "335": 0,
      "336": 0,
      "337": 0,
      "338": 0,
      "339": 0,
      "340": 0,
      "341": 0,
      "342": 0,
      "343": 0,
      "344": 0,
      "345": 0,
      "346": 0,
      "347": 0,
      "348": 0,
      "349": 0,
      "350": 0,
      "351": 0,
      "352": 0,
      "353": 0,
      "354": 0,
      "355": 0,
      "356": 0,
      "357": 0,
      "358": 0,
      "359": 0,
      "360": 0,
      "361": 0,
      "362": 0,
      "363": 0,
      "364": 0,
      "365": 0,
      "366": 0,
      "367": 0,
      "368": 0,
      "369": 0,
      "370": 0,
      "371": 0,
      "372": 0,
      "373": 0,
      "374": 0,
      "375": 0,
      "376": 0,
      "377": 0,
      "378": 0,
      "379": 0,
      "380": 0,
      "381": 0,
      "382": 0,
      "383": 0,
      "384": 0,
      "385": 0,
      "386": 0,
      "387": 0,
      "388": 0,
      "389": 0,
      "390": 0,
      "391": 0,
      "392": 0,
      "393": 0,
      "394": 0,
      "395": 0,
      "396": 0,
      "397": 0,
      "398": 0,
      "399": 0,
      "400": 0,
      "401": 0,
      "402": 0,
      "403": 0,
      "404": 0,
      "405": 0,
      "406": 0,
      "407": 0,
      "408": 0,
      "409": 0,
      "410": 0,
      "411": 0,
      "412": 0,
      "413": 0,
      "414": 0,
      "415": 0,
      "416": 0,
      "417": 0,
      "418": 0,
      "419": 0,
      "420": 0,
      "421": 0,
      "422": 0,
      "423": 0,
      "424": 0,
      "425": 0,
      "426": 0,
      "427": 0,
      "428": 0,
      "429": 0,
      "430": 0,
      "431": 0,
      "432": 0,
      "433": 0,
      "434": 0,
      "435": 0,
      "436": 0,
      "437": 0,
      "438": 0,
      "439": 0,
      "440": 0,
      "441": 0,
      "442": 0,
      "443": 0,
      "444": 0,
      "445": 0,
      "446": 0,
      "447": 0,
      "448": 0,
      "449": 0,
      "450": 0,
      "451": 0,
      "452": 0,
      "453": 0,
      "454": 0,
      "455": 0,
      "456": 0,
      "457": 0,
      "458": 0,
      "459": 0,
      "460": 0,
      "461": 0,
      "462": 0,
      "463": 0,
      "464": 0,
      "465": 0,
      "466": 0,
      "467": 0,
      "468": 0,
      "469": 0,
      "470": 0,
      "471": 0,
      "472": 0,
      "473": 0,
      "474": 0,
      "475": 0,
      "476": 0,
      "477": 0,
      "478": 0,
      "479": 0,
      "480": 0,
      "481": 0,
      "482": 0,
      "483": 0,
      "484": 0,
      "485": 0,
      "486": 0,
      "487": 0,
      "488": 0,
      "489": 0,
      "490": 0,
      "491": 0,
      "492": 0,
      "493": 0,
      "494": 0,
      "495": 0,
      "496": 0,
      "497": 0,
      "498": 0,
      "499": 0,
      "500": 0,
      "501": 0,
      "502": 0,
      "503": 0,
      "504": 0,
      "505": 0,
      "506": 0,
      "507": 0,
      "508": 0,
      "509": 0,
      "510": 0,
      "511": 0,
      "512": 0,
      "513": 0,
      "514": 0,
      "515": 0,
      "516": 0,
      "517": 0,
      "518": 0,
      "519": 0,
      "520": 0,
      "521": 0,
      "522": 0,
      "523": 0,
      "524": 0,
      "525": 0,
      "526": 0,
      "527": 0,
      "528": 0,
      "529": 0,
      "530": 0,
      "531": 0,
      "532": 0,
      "533": 0,
      "534": 0,
      "535": 0,
      "536": 0,
      "537": 0,
      "538": 0,
      "539": 0,
      "540": 0,
      "541": 0,
      "542": 0,
      "543": 0,
      "544": 0,
      "545": 0,
      "546": 0,
      "547": 0,
      "548": 0,
      "549": 0,
      "550": 0,
      "551": 0,
      "552": 0,
      "553": 0,
      "554": 0,
      "555": 0,
      "556": 0,
      "557": 0,
      "558": 0,
      "559": 0,
      "560": 0,
      "561": 0,
      "562": 0,
      "563": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0, 0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0, 0],
      "64": [0, 0, 0],
      "65": [0, 0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0, 0],
      "71": [0, 0, 0],
      "72": [0, 0, 0],
      "73": [0, 0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0, 0],
      "96": [0, 0],
      "97": [0, 0],
      "98": [0, 0],
      "99": [0, 0],
      "100": [0, 0],
      "101": [0, 0],
      "102": [0, 0],
      "103": [0, 0],
      "104": [0, 0],
      "105": [0, 0],
      "106": [0, 0],
      "107": [0, 0],
      "108": [0, 0],
      "109": [0, 0],
      "110": [0, 0],
      "111": [0, 0],
      "112": [0, 0],
      "113": [0, 0, 0],
      "114": [0, 0],
      "115": [0, 0],
      "116": [0, 0],
      "117": [0, 0],
      "118": [0, 0],
      "119": [0, 0],
      "120": [0, 0],
      "121": [0, 0],
      "122": [0, 0],
      "123": [0, 0],
      "124": [0, 0],
      "125": [0, 0],
      "126": [0, 0],
      "127": [0, 0],
      "128": [0, 0],
      "129": [0, 0],
      "130": [0, 0],
      "131": [0, 0],
      "132": [0, 0],
      "133": [0, 0],
      "134": [0, 0],
      "135": [0, 0],
      "136": [0, 0],
      "137": [0, 0],
      "138": [0, 0],
      "139": [0, 0],
      "140": [0, 0],
      "141": [0, 0],
      "142": [0, 0],
      "143": [0, 0],
      "144": [0, 0],
      "145": [0, 0],
      "146": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cb0813015fd0a57ef5d0d2f160dfc91c22499028"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_wrczz4m8q = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_wrczz4m8q();
const express =
/* istanbul ignore next */
(cov_wrczz4m8q().s[0]++, require('express'));
const {
  healthCheck,
  query,
  validateDatabaseSchema,
  REQUIRED_SCHEMA
} =
/* istanbul ignore next */
(cov_wrczz4m8q().s[1]++, require('../utils/database'));
const apiKeyService =
/* istanbul ignore next */
(cov_wrczz4m8q().s[2]++, require('../utils/simpleApiKeyService'));
const AlpacaService =
/* istanbul ignore next */
(cov_wrczz4m8q().s[3]++, require('../utils/alpacaService'));
const timeoutHelper =
/* istanbul ignore next */
(cov_wrczz4m8q().s[4]++, require('../utils/timeoutHelper'));
const schemaValidator =
/* istanbul ignore next */
(cov_wrczz4m8q().s[5]++, require('../utils/schemaValidator'));
const {
  SecretsManagerClient,
  GetSecretValueCommand
} =
/* istanbul ignore next */
(cov_wrczz4m8q().s[6]++, require('@aws-sdk/client-secrets-manager'));
const {
  CognitoIdentityProviderClient,
  DescribeUserPoolCommand
} =
/* istanbul ignore next */
(cov_wrczz4m8q().s[7]++, require('@aws-sdk/client-cognito-identity-provider'));
const jwtSecretManager =
/* istanbul ignore next */
(cov_wrczz4m8q().s[8]++, require('../utils/jwtSecretManager'));
const crypto =
/* istanbul ignore next */
(cov_wrczz4m8q().s[9]++, require('crypto'));
const router =
/* istanbul ignore next */
(cov_wrczz4m8q().s[10]++, express.Router());

// Infrastructure health check - tests database connectivity only
/* istanbul ignore next */
cov_wrczz4m8q().s[11]++;
router.get('/', async (req, res) => {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[0]++;
  const startTime =
  /* istanbul ignore next */
  (cov_wrczz4m8q().s[12]++, Date.now());
  const maxTimeout =
  /* istanbul ignore next */
  (cov_wrczz4m8q().s[13]++, 10000); // 10 second max timeout
  /* istanbul ignore next */
  cov_wrczz4m8q().s[14]++;
  try {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[15]++;
    // Quick health check without database
    if (req.query.quick === 'true') {
      /* istanbul ignore next */
      cov_wrczz4m8q().b[0][0]++;
      cov_wrczz4m8q().s[16]++;
      return res.success({
        status: 'healthy',
        healthy: true,
        service: 'Financial Dashboard API',
        environment:
        /* istanbul ignore next */
        (cov_wrczz4m8q().b[1][0]++, process.env.ENVIRONMENT) ||
        /* istanbul ignore next */
        (cov_wrczz4m8q().b[1][1]++, 'dev'),
        memory: process.memoryUsage(),
        uptime: process.uptime(),
        note: 'Quick infrastructure check - database not tested',
        database: {
          status: 'not_tested'
        },
        api: {
          version: '1.0.0',
          environment:
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[2][0]++, process.env.ENVIRONMENT) ||
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[2][1]++, 'dev')
        },
        config: {
          hasDbSecret: !!process.env.DB_SECRET_ARN,
          hasDbEndpoint: !!process.env.DB_ENDPOINT,
          hasAwsRegion: !!process.env.AWS_REGION
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_wrczz4m8q().b[0][1]++;
    }

    // Full health check with timeout protection
    const dbHealthPromise =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[17]++, getComprehensiveDbHealth());
    const timeoutPromise =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[18]++, new Promise((_, reject) => {
      /* istanbul ignore next */
      cov_wrczz4m8q().f[1]++;
      cov_wrczz4m8q().s[19]++;
      return setTimeout(() => {
        /* istanbul ignore next */
        cov_wrczz4m8q().f[2]++;
        cov_wrczz4m8q().s[20]++;
        return reject(new Error('Health check timeout'));
      }, maxTimeout);
    }));
    const dbHealth =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[21]++, await Promise.race([dbHealthPromise, timeoutPromise]));
    const isHealthy =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[22]++, dbHealth.status === 'connected');
    /* istanbul ignore next */
    cov_wrczz4m8q().s[23]++;
    if (isHealthy) {
      /* istanbul ignore next */
      cov_wrczz4m8q().b[3][0]++;
      cov_wrczz4m8q().s[24]++;
      return res.success({
        status: 'healthy',
        healthy: true,
        service: 'Financial Dashboard API',
        environment:
        /* istanbul ignore next */
        (cov_wrczz4m8q().b[4][0]++, process.env.ENVIRONMENT) ||
        /* istanbul ignore next */
        (cov_wrczz4m8q().b[4][1]++, 'dev'),
        database: dbHealth.database,
        api: {
          version: '1.0.0',
          environment:
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[5][0]++, process.env.ENVIRONMENT) ||
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[5][1]++, 'dev')
        },
        memory: process.memoryUsage(),
        uptime: process.uptime()
      });
    } else {
      /* istanbul ignore next */
      cov_wrczz4m8q().b[3][1]++;
      cov_wrczz4m8q().s[25]++;
      return res.serviceUnavailable('Database', {
        status: 'unhealthy',
        healthy: false,
        service: 'Financial Dashboard API',
        environment:
        /* istanbul ignore next */
        (cov_wrczz4m8q().b[6][0]++, process.env.ENVIRONMENT) ||
        /* istanbul ignore next */
        (cov_wrczz4m8q().b[6][1]++, 'dev'),
        database: dbHealth.database,
        api: {
          version: '1.0.0',
          environment:
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[7][0]++, process.env.ENVIRONMENT) ||
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[7][1]++, 'dev')
        },
        memory: process.memoryUsage(),
        uptime: process.uptime()
      });
    }
  } catch (error) {
    const duration =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[26]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[27]++;
    console.error('Health check failed:', error);

    // Handle timeout specifically
    /* istanbul ignore next */
    cov_wrczz4m8q().s[28]++;
    if (error.message === 'Health check timeout') {
      /* istanbul ignore next */
      cov_wrczz4m8q().b[8][0]++;
      cov_wrczz4m8q().s[29]++;
      return res.status(408).json({
        status: 'timeout',
        healthy: false,
        message: 'Health check timed out after 10 seconds',
        database: {
          status: 'timeout',
          error: 'Database health check exceeded timeout'
        },
        api: {
          version: '1.0.0',
          environment:
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[9][0]++, process.env.ENVIRONMENT) ||
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[9][1]++, 'dev')
        },
        duration: duration,
        memory: process.memoryUsage(),
        uptime: process.uptime(),
        timestamp: new Date().toISOString()
      });
    } else
    /* istanbul ignore next */
    {
      cov_wrczz4m8q().b[8][1]++;
    }
    cov_wrczz4m8q().s[30]++;
    res.serverError('Health check failed', {
      status: 'unhealthy',
      healthy: false,
      database: {
        status: 'error',
        error: error.message
      },
      api: {
        version: '1.0.0',
        environment:
        /* istanbul ignore next */
        (cov_wrczz4m8q().b[10][0]++, process.env.ENVIRONMENT) ||
        /* istanbul ignore next */
        (cov_wrczz4m8q().b[10][1]++, 'dev')
      },
      duration: duration,
      memory: process.memoryUsage(),
      uptime: process.uptime()
    });
  }
});

// Application readiness check - tests if database has tables
/* istanbul ignore next */
cov_wrczz4m8q().s[31]++;
router.get('/ready', async (req, res) => {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[3]++;
  cov_wrczz4m8q().s[32]++;
  try {
    const {
      query
    } =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[33]++, require('../utils/database'));

    // First check what tables actually exist
    const tablesResult =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[34]++, await query(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public' 
      AND table_type = 'BASE TABLE'
      ORDER BY table_name;
    `));
    const existingTables =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[35]++, tablesResult.rows.map(r => {
      /* istanbul ignore next */
      cov_wrczz4m8q().f[4]++;
      cov_wrczz4m8q().s[36]++;
      return r.table_name;
    }));

    // Check critical webapp tables (not stock_symbols - that comes from data loading)
    const criticalWebappTables =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[37]++, ['last_updated', 'health_status']);
    const results =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[38]++, {});
    /* istanbul ignore next */
    cov_wrczz4m8q().s[39]++;
    for (const table of criticalWebappTables) {
      /* istanbul ignore next */
      cov_wrczz4m8q().s[40]++;
      if (existingTables.includes(table)) {
        /* istanbul ignore next */
        cov_wrczz4m8q().b[11][0]++;
        cov_wrczz4m8q().s[41]++;
        try {
          const result =
          /* istanbul ignore next */
          (cov_wrczz4m8q().s[42]++, await query(`SELECT COUNT(*) as count FROM ${table} LIMIT 1`));
          /* istanbul ignore next */
          cov_wrczz4m8q().s[43]++;
          results[table] = {
            exists: true,
            count: parseInt(result.rows[0].count),
            status: 'ready'
          };
        } catch (error) {
          /* istanbul ignore next */
          cov_wrczz4m8q().s[44]++;
          results[table] = {
            exists: true,
            error: error.message,
            status: 'error'
          };
        }
      } else {
        /* istanbul ignore next */
        cov_wrczz4m8q().b[11][1]++;
        cov_wrczz4m8q().s[45]++;
        results[table] = {
          exists: false,
          status: 'not_ready'
        };
      }
    }

    // Check if data loading tables exist (but don't fail if they don't)
    const dataLoadingTables =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[46]++, ['stock_symbols', 'company_profiles', 'prices']);
    const dataTablesInfo =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[47]++, {});
    /* istanbul ignore next */
    cov_wrczz4m8q().s[48]++;
    for (const table of dataLoadingTables) {
      /* istanbul ignore next */
      cov_wrczz4m8q().s[49]++;
      dataTablesInfo[table] = {
        exists: existingTables.includes(table),
        note: 'Created by data loading scripts'
      };
    }
    const webappTablesReady =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[50]++, Object.values(results).every(r => {
      /* istanbul ignore next */
      cov_wrczz4m8q().f[5]++;
      cov_wrczz4m8q().s[51]++;
      return r.status === 'ready';
    }));
    /* istanbul ignore next */
    cov_wrczz4m8q().s[52]++;
    return res.status(webappTablesReady ?
    /* istanbul ignore next */
    (cov_wrczz4m8q().b[12][0]++, 200) :
    /* istanbul ignore next */
    (cov_wrczz4m8q().b[12][1]++, 503)).json({
      status: webappTablesReady ?
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[13][0]++, 'ready') :
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[13][1]++, 'not_ready'),
      ready: webappTablesReady,
      service: 'Financial Dashboard API',
      timestamp: new Date().toISOString(),
      environment:
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[14][0]++, process.env.ENVIRONMENT) ||
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[14][1]++, 'dev'),
      webapp_tables: results,
      data_loading_tables: dataTablesInfo,
      total_tables_found: existingTables.length,
      all_tables: existingTables,
      note: 'Webapp tables must be ready; data tables are optional'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[53]++;
    console.error('Readiness check failed:', error);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[54]++;
    res.status(503).json({
      status: 'not_ready',
      ready: false,
      timestamp: new Date().toISOString(),
      error: error.message,
      note: 'Application readiness check failed'
    });
  }
});

// REMOVED: Emergency table creation endpoint - use proper IaC deployment instead

// Debug endpoint for raw database queries
/* istanbul ignore next */
cov_wrczz4m8q().s[55]++;
router.get('/debug/db-test', async (req, res) => {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[6]++;
  cov_wrczz4m8q().s[56]++;
  try {
    const {
      query
    } =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[57]++, require('../utils/database'));
    const result =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[58]++, await query(`
      SELECT 
        NOW() as current_time,
        current_database() as db_name,
        current_user as db_user,
        version() as db_version,
        inet_server_addr() as server_ip,
        inet_server_port() as server_port
    `));
    /* istanbul ignore next */
    cov_wrczz4m8q().s[59]++;
    res.json({
      status: 'success',
      database_info: result.rows[0],
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[60]++;
    console.error('DB test failed:', error);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[61]++;
    res.status(500).json({
      status: 'error',
      error: error.message,
      code: error.code,
      timestamp: new Date().toISOString()
    });
  }
});

// Debug endpoint to list all tables in database
/* istanbul ignore next */
cov_wrczz4m8q().s[62]++;
router.get('/debug/tables', async (req, res) => {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[7]++;
  cov_wrczz4m8q().s[63]++;
  try {
    const {
      query
    } =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[64]++, require('../utils/database'));
    const result =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[65]++, await query(`
      SELECT 
        table_name,
        table_type,
        is_insertable_into
      FROM information_schema.tables 
      WHERE table_schema = 'public'
      ORDER BY table_name
    `));
    /* istanbul ignore next */
    cov_wrczz4m8q().s[66]++;
    res.json({
      status: 'success',
      table_count: result.rows.length,
      tables: result.rows,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[67]++;
    console.error('Tables list failed:', error);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[68]++;
    res.status(500).json({
      status: 'error',
      error: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// External services health check - tests all external dependencies
/* istanbul ignore next */
cov_wrczz4m8q().s[69]++;
router.get('/external-services', async (req, res) => {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[8]++;
  cov_wrczz4m8q().s[70]++;
  try {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[71]++;
    console.log('🔍 Starting external services health check...');
    const startTime =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[72]++, Date.now());
    const services =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[73]++, {
      database: await checkDatabaseHealth(),
      alpacaApi: await checkAlpacaApiHealth(),
      awsSecretsManager: await checkAwsSecretsManagerHealth(),
      awsRds: await checkAwsRdsHealth(),
      awsCognito: await checkAwsCognitoHealth()
    });
    const healthyServices =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[74]++, Object.values(services).filter(s => {
      /* istanbul ignore next */
      cov_wrczz4m8q().f[9]++;
      cov_wrczz4m8q().s[75]++;
      return s.status === 'healthy';
    }).length);
    const totalServices =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[76]++, Object.keys(services).length);
    const allHealthy =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[77]++, healthyServices === totalServices);
    const duration =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[78]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[79]++;
    console.log(`✅ External services health check completed in ${duration}ms`);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[80]++;
    console.log(`📊 Services: ${healthyServices}/${totalServices} healthy`);
    const responseData =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[81]++, {
      status: allHealthy ?
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[15][0]++, 'healthy') :
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[15][1]++, 'degraded'),
      healthy: allHealthy,
      service: 'External Services Health',
      duration: `${duration}ms`,
      services,
      summary: {
        total_services: totalServices,
        healthy_services: healthyServices,
        degraded_services: Object.values(services).filter(s => {
          /* istanbul ignore next */
          cov_wrczz4m8q().f[10]++;
          cov_wrczz4m8q().s[82]++;
          return s.status === 'degraded';
        }).length,
        failed_services: Object.values(services).filter(s => {
          /* istanbul ignore next */
          cov_wrczz4m8q().f[11]++;
          cov_wrczz4m8q().s[83]++;
          return s.status === 'failed';
        }).length,
        health_percentage: Math.round(healthyServices / totalServices * 100)
      }
    });
    /* istanbul ignore next */
    cov_wrczz4m8q().s[84]++;
    if (allHealthy) {
      /* istanbul ignore next */
      cov_wrczz4m8q().b[16][0]++;
      cov_wrczz4m8q().s[85]++;
      res.success(responseData);
    } else {
      /* istanbul ignore next */
      cov_wrczz4m8q().b[16][1]++;
      cov_wrczz4m8q().s[86]++;
      res.serviceUnavailable('External services', responseData);
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[87]++;
    console.error('❌ External services health check failed:', error);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[88]++;
    res.serverError('External services health check failed', {
      service: 'External Services Health',
      error: error.message
    });
  }
});

// API services health check - tests API key service and related functionality
/* istanbul ignore next */
cov_wrczz4m8q().s[89]++;
router.get('/api-services', async (req, res) => {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[12]++;
  cov_wrczz4m8q().s[90]++;
  try {
    const services =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[91]++, {
      apiKeyService: await checkApiKeyServiceHealth(),
      jwtSecretService: await checkJwtSecretServiceHealth(),
      encryptionService: await checkEncryptionServiceHealth(),
      database: await checkDatabaseTablesForApiKeys(),
      secrets: await checkSecretsManagerHealth()
    });
    const allHealthy =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[92]++, Object.values(services).every(service => {
      /* istanbul ignore next */
      cov_wrczz4m8q().f[13]++;
      cov_wrczz4m8q().s[93]++;
      return service.status === 'healthy';
    }));
    /* istanbul ignore next */
    cov_wrczz4m8q().s[94]++;
    res.status(allHealthy ?
    /* istanbul ignore next */
    (cov_wrczz4m8q().b[17][0]++, 200) :
    /* istanbul ignore next */
    (cov_wrczz4m8q().b[17][1]++, 503)).json({
      status: allHealthy ?
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[18][0]++, 'healthy') :
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[18][1]++, 'degraded'),
      healthy: allHealthy,
      service: 'API Services Health',
      timestamp: new Date().toISOString(),
      services,
      summary: {
        total_services: Object.keys(services).length,
        healthy_services: Object.values(services).filter(s => {
          /* istanbul ignore next */
          cov_wrczz4m8q().f[14]++;
          cov_wrczz4m8q().s[95]++;
          return s.status === 'healthy';
        }).length,
        degraded_services: Object.values(services).filter(s => {
          /* istanbul ignore next */
          cov_wrczz4m8q().f[15]++;
          cov_wrczz4m8q().s[96]++;
          return s.status === 'degraded';
        }).length,
        failed_services: Object.values(services).filter(s => {
          /* istanbul ignore next */
          cov_wrczz4m8q().f[16]++;
          cov_wrczz4m8q().s[97]++;
          return s.status === 'failed';
        }).length
      },
      recommendations: generateApiServiceRecommendations(services)
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[98]++;
    console.error('API services health check failed:', error);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[99]++;
    res.status(500).json({
      status: 'error',
      healthy: false,
      service: 'API Services Health',
      error: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Debug endpoint to test specific table queries
/* istanbul ignore next */
cov_wrczz4m8q().s[100]++;
router.get('/debug/test-query', async (req, res) => {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[17]++;
  cov_wrczz4m8q().s[101]++;
  try {
    const {
      query
    } =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[102]++, require('../utils/database'));
    const tableName =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[103]++,
    /* istanbul ignore next */
    (cov_wrczz4m8q().b[19][0]++, req.query.table) ||
    /* istanbul ignore next */
    (cov_wrczz4m8q().b[19][1]++, 'stock_symbols'));

    // First check if table exists
    const tableCheck =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[104]++, await query(`
      SELECT COUNT(*) as exists 
      FROM information_schema.tables 
      WHERE table_schema = 'public' AND table_name = $1
    `, [tableName]));
    const tableExists =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[105]++, parseInt(tableCheck.rows[0].exists) > 0);
    let tableData =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[106]++, null);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[107]++;
    if (tableExists) {
      /* istanbul ignore next */
      cov_wrczz4m8q().b[20][0]++;
      const data =
      /* istanbul ignore next */
      (cov_wrczz4m8q().s[108]++, await query(`SELECT COUNT(*) as record_count FROM "${tableName}"`));
      /* istanbul ignore next */
      cov_wrczz4m8q().s[109]++;
      tableData = {
        record_count: parseInt(data.rows[0].record_count)
      };
    } else
    /* istanbul ignore next */
    {
      cov_wrczz4m8q().b[20][1]++;
    }
    cov_wrczz4m8q().s[110]++;
    res.json({
      status: 'success',
      table: tableName,
      exists: tableExists,
      data: tableData,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[111]++;
    console.error('Test query failed:', error);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[112]++;
    res.status(500).json({
      status: 'error',
      table:
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[21][0]++, req.query.table) ||
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[21][1]++, 'stock_symbols'),
      error: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Timeout and circuit breaker monitoring endpoint
/* istanbul ignore next */
cov_wrczz4m8q().s[113]++;
router.get('/timeout-status', async (req, res) => {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[18]++;
  cov_wrczz4m8q().s[114]++;
  try {
    const circuitBreakers =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[115]++, timeoutHelper.getCircuitBreakerStatus());
    const timeoutConfig =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[116]++, {
      database: timeoutHelper.defaultTimeouts.database,
      alpaca: timeoutHelper.defaultTimeouts.alpaca,
      news: timeoutHelper.defaultTimeouts.news,
      sentiment: timeoutHelper.defaultTimeouts.sentiment,
      external: timeoutHelper.defaultTimeouts.external,
      upload: timeoutHelper.defaultTimeouts.upload,
      websocket: timeoutHelper.defaultTimeouts.websocket
    });
    /* istanbul ignore next */
    cov_wrczz4m8q().s[117]++;
    res.success({
      timeouts: timeoutConfig,
      circuitBreakers: circuitBreakers,
      summary: {
        totalCircuitBreakers: Object.keys(circuitBreakers).length,
        openCircuitBreakers: Object.values(circuitBreakers).filter(cb => {
          /* istanbul ignore next */
          cov_wrczz4m8q().f[19]++;
          cov_wrczz4m8q().s[118]++;
          return cb.state === 'open';
        }).length,
        halfOpenCircuitBreakers: Object.values(circuitBreakers).filter(cb => {
          /* istanbul ignore next */
          cov_wrczz4m8q().f[20]++;
          cov_wrczz4m8q().s[119]++;
          return cb.state === 'half-open';
        }).length,
        healthyServices: Object.values(circuitBreakers).filter(cb => {
          /* istanbul ignore next */
          cov_wrczz4m8q().f[21]++;
          cov_wrczz4m8q().s[120]++;
          return cb.state === 'closed';
        }).length
      },
      recommendations: generateTimeoutRecommendations(circuitBreakers)
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[121]++;
    console.error('❌ Timeout status check failed:', error);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[122]++;
    res.serverError('Failed to get timeout status', error.message);
  }
});

// Enhanced circuit breaker analytics endpoint
/* istanbul ignore next */
cov_wrczz4m8q().s[123]++;
router.get('/circuit-breaker-analytics', async (req, res) => {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[22]++;
  cov_wrczz4m8q().s[124]++;
  try {
    const circuitBreakers =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[125]++, timeoutHelper.getCircuitBreakerStatus());
    const analytics =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[126]++, {});

    // Analyze each circuit breaker
    /* istanbul ignore next */
    cov_wrczz4m8q().s[127]++;
    for (const [serviceKey, breaker] of Object.entries(circuitBreakers)) {
      const timeSinceLastFailure =
      /* istanbul ignore next */
      (cov_wrczz4m8q().s[128]++, Date.now() - breaker.lastFailureTime);
      const isRecentFailure =
      /* istanbul ignore next */
      (cov_wrczz4m8q().s[129]++, timeSinceLastFailure < 300000); // 5 minutes
      /* istanbul ignore next */
      cov_wrczz4m8q().s[130]++;
      analytics[serviceKey] = {
        ...breaker,
        analysis: {
          healthScore: calculateHealthScore(breaker),
          riskLevel: calculateRiskLevel(breaker),
          timeSinceLastFailure: timeSinceLastFailure,
          isRecentFailure,
          nextStateTransition: getNextStateTransition(breaker),
          recommendedAction: getRecommendedAction(breaker),
          alertLevel: getAlertLevel(breaker)
        }
      };
    }

    // Generate system-wide analytics
    const systemAnalytics =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[131]++, {
      overallHealthScore: calculateOverallHealthScore(analytics),
      criticalServices: Object.entries(analytics).filter(([_, breaker]) => {
        /* istanbul ignore next */
        cov_wrczz4m8q().f[23]++;
        cov_wrczz4m8q().s[132]++;
        return breaker.analysis.alertLevel === 'critical';
      }).map(([key, _]) => {
        /* istanbul ignore next */
        cov_wrczz4m8q().f[24]++;
        cov_wrczz4m8q().s[133]++;
        return key;
      }),
      warningServices: Object.entries(analytics).filter(([_, breaker]) => {
        /* istanbul ignore next */
        cov_wrczz4m8q().f[25]++;
        cov_wrczz4m8q().s[134]++;
        return breaker.analysis.alertLevel === 'warning';
      }).map(([key, _]) => {
        /* istanbul ignore next */
        cov_wrczz4m8q().f[26]++;
        cov_wrczz4m8q().s[135]++;
        return key;
      }),
      recentFailures: Object.entries(analytics).filter(([_, breaker]) => {
        /* istanbul ignore next */
        cov_wrczz4m8q().f[27]++;
        cov_wrczz4m8q().s[136]++;
        return breaker.analysis.isRecentFailure;
      }).length,
      totalFailures: Object.values(analytics).reduce((sum, breaker) => {
        /* istanbul ignore next */
        cov_wrczz4m8q().f[28]++;
        cov_wrczz4m8q().s[137]++;
        return sum + breaker.failures;
      }, 0),
      recommendations: generateSystemRecommendations(analytics)
    });
    /* istanbul ignore next */
    cov_wrczz4m8q().s[138]++;
    res.success({
      timestamp: new Date().toISOString(),
      analytics,
      systemAnalytics,
      summary: {
        totalServices: Object.keys(analytics).length,
        healthyServices: Object.values(analytics).filter(a => {
          /* istanbul ignore next */
          cov_wrczz4m8q().f[29]++;
          cov_wrczz4m8q().s[139]++;
          return a.analysis.alertLevel === 'healthy';
        }).length,
        warningServices: systemAnalytics.warningServices.length,
        criticalServices: systemAnalytics.criticalServices.length,
        overallHealthScore: systemAnalytics.overallHealthScore
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[140]++;
    console.error('❌ Circuit breaker analytics failed:', error);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[141]++;
    res.serverError('Failed to generate circuit breaker analytics', error.message);
  }
});

// Schema validation endpoint - comprehensive database schema analysis
/* istanbul ignore next */
cov_wrczz4m8q().s[142]++;
router.get('/schema-validation', async (req, res) => {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[30]++;
  cov_wrczz4m8q().s[143]++;
  try {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[144]++;
    console.log('🔍 Starting comprehensive schema validation...');
    const startTime =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[145]++, Date.now());
    const options =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[146]++, {
      includeOptional: req.query.include_optional !== 'false',
      strict: req.query.strict === 'true'
    });
    const report =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[147]++, await schemaValidator.getSchemaValidationReport(options));
    const duration =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[148]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[149]++;
    console.log(`✅ Schema validation completed in ${duration}ms`);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[150]++;
    console.log(`📊 Summary: ${report.summary.existingTables}/${report.summary.totalTables} tables exist, ${report.summary.validSchemas} valid schemas`);

    // Determine overall health status
    const isHealthy =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[151]++,
    /* istanbul ignore next */
    (cov_wrczz4m8q().b[22][0]++, report.summary.missingRequired === 0) &&
    /* istanbul ignore next */
    (cov_wrczz4m8q().b[22][1]++, report.summary.invalidSchemas === 0));
    const responseData =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[152]++, {
      ...report,
      duration: `${duration}ms`,
      status: isHealthy ?
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[23][0]++, 'healthy') :
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[23][1]++, 'degraded'),
      healthy: isHealthy
    });
    /* istanbul ignore next */
    cov_wrczz4m8q().s[153]++;
    if (isHealthy) {
      /* istanbul ignore next */
      cov_wrczz4m8q().b[24][0]++;
      cov_wrczz4m8q().s[154]++;
      res.success(responseData);
    } else {
      /* istanbul ignore next */
      cov_wrczz4m8q().b[24][1]++;
      cov_wrczz4m8q().s[155]++;
      res.serviceUnavailable('Database schema', responseData);
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[156]++;
    console.error('❌ Schema validation failed:', error);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[157]++;
    res.serverError('Schema validation failed', error.message);
  }
});

// Table existence check endpoint
/* istanbul ignore next */
cov_wrczz4m8q().s[158]++;
router.get('/table-exists/:tableName', async (req, res) => {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[31]++;
  cov_wrczz4m8q().s[159]++;
  try {
    const tableName =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[160]++, req.params.tableName);
    const throwOnMissing =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[161]++, req.query.throw === 'true');
    const exists =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[162]++, await schemaValidator.validateTableExists(tableName, {
      throwOnMissing,
      useCache: req.query.no_cache !== 'true'
    }));
    const expectedTable =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[163]++, schemaValidator.expectedTables[tableName]);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[164]++;
    res.success({
      table: tableName,
      exists,
      expected:
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[25][0]++, expectedTable) ||
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[25][1]++, null),
      message: exists ?
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[26][0]++, `Table '${tableName}' exists`) :
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[26][1]++, `Table '${tableName}' does not exist`)
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[165]++;
    console.error(`❌ Table existence check failed for '${req.params.tableName}':`, error);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[166]++;
    res.serverError('Table existence check failed', error.message);
  }
});

// Schema validation cache management
/* istanbul ignore next */
cov_wrczz4m8q().s[167]++;
router.post('/schema-validation/clear-cache', async (req, res) => {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[32]++;
  cov_wrczz4m8q().s[168]++;
  try {
    const cacheStatus =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[169]++, schemaValidator.getCacheStatus());
    /* istanbul ignore next */
    cov_wrczz4m8q().s[170]++;
    schemaValidator.clearCache();
    /* istanbul ignore next */
    cov_wrczz4m8q().s[171]++;
    res.success({
      message: 'Schema validation cache cleared',
      previousCacheSize: cacheStatus.size,
      clearedEntries: cacheStatus.entries.length
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[172]++;
    console.error('❌ Failed to clear schema cache:', error);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[173]++;
    res.serverError('Failed to clear schema cache', error.message);
  }
});

// Debug endpoint to check table structure
/* istanbul ignore next */
cov_wrczz4m8q().s[174]++;
router.get('/debug/table-structure', async (req, res) => {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[33]++;
  cov_wrczz4m8q().s[175]++;
  try {
    const {
      query
    } =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[176]++, require('../utils/database'));
    const tableName =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[177]++,
    /* istanbul ignore next */
    (cov_wrczz4m8q().b[27][0]++, req.query.table) ||
    /* istanbul ignore next */
    (cov_wrczz4m8q().b[27][1]++, 'users'));

    // Get table column information
    const result =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[178]++, await query(`
      SELECT 
        column_name,
        data_type,
        is_nullable,
        column_default,
        character_maximum_length
      FROM information_schema.columns 
      WHERE table_schema = 'public' AND table_name = $1
      ORDER BY ordinal_position
    `, [tableName]));
    /* istanbul ignore next */
    cov_wrczz4m8q().s[179]++;
    res.json({
      status: 'success',
      table: tableName,
      column_count: result.rows.length,
      columns: result.rows,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[180]++;
    console.error('Table structure check failed:', error);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[181]++;
    res.status(500).json({
      status: 'error',
      table:
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[28][0]++, req.query.table) ||
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[28][1]++, 'users'),
      error: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Diagnostics endpoint - comprehensive system information
/* istanbul ignore next */
cov_wrczz4m8q().s[182]++;
router.get('/diagnostics', async (req, res) => {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[34]++;
  cov_wrczz4m8q().s[183]++;
  try {
    const startTime =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[184]++, Date.now());

    // Gather comprehensive system diagnostics
    const diagnostics =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[185]++, {
      service: 'Financial Dashboard API',
      version: '1.0.0',
      status: 'operational',
      environment:
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[29][0]++, process.env.ENVIRONMENT) ||
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[29][1]++, 'dev'),
      region:
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[30][0]++, process.env.AWS_REGION) ||
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[30][1]++, process.env.WEBAPP_AWS_REGION) ||
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[30][2]++, 'us-east-1'),
      // System info
      system: {
        memory: process.memoryUsage(),
        uptime: process.uptime(),
        platform: process.platform,
        nodeVersion: process.version,
        timestamp: new Date().toISOString()
      },
      // Configuration status
      configuration: {
        database: {
          endpoint: process.env.DB_ENDPOINT ?
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[31][0]++, 'configured') :
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[31][1]++, 'not_configured'),
          secretArn: process.env.DB_SECRET_ARN ?
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[32][0]++, 'configured') :
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[32][1]++, 'not_configured'),
          connectTimeout:
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[33][0]++, process.env.DB_CONNECT_TIMEOUT) ||
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[33][1]++, 'default'),
          poolMax:
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[34][0]++, process.env.DB_POOL_MAX) ||
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[34][1]++, 'default')
        },
        authentication: {
          cognitoUserPool: process.env.COGNITO_USER_POOL_ID ?
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[35][0]++, 'configured') :
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[35][1]++, 'not_configured'),
          cognitoClient: process.env.COGNITO_CLIENT_ID ?
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[36][0]++, 'configured') :
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[36][1]++, 'not_configured')
        },
        apiKeys: {
          encryptionSecret: process.env.API_KEY_ENCRYPTION_SECRET_ARN ?
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[37][0]++, 'configured') :
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[37][1]++, 'not_configured')
        },
        lambda: {
          functionName:
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[38][0]++, process.env.AWS_LAMBDA_FUNCTION_NAME) ||
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[38][1]++, 'unknown'),
          functionVersion:
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[39][0]++, process.env.AWS_LAMBDA_FUNCTION_VERSION) ||
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[39][1]++, 'unknown'),
          region:
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[40][0]++, process.env.AWS_REGION) ||
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[40][1]++, 'unknown')
        }
      },
      // Quick health checks
      healthChecks: {
        database: 'checking...',
        apiKeyService: 'checking...',
        secretsManager: 'checking...'
      }
    });

    // Perform basic health checks
    /* istanbul ignore next */
    cov_wrczz4m8q().s[186]++;
    try {
      const dbHealth =
      /* istanbul ignore next */
      (cov_wrczz4m8q().s[187]++, await healthCheck());
      /* istanbul ignore next */
      cov_wrczz4m8q().s[188]++;
      diagnostics.healthChecks.database = dbHealth.status === 'healthy' ?
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[41][0]++, 'healthy') :
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[41][1]++, 'unhealthy');
    } catch (error) {
      /* istanbul ignore next */
      cov_wrczz4m8q().s[189]++;
      diagnostics.healthChecks.database = 'failed';
    }
    /* istanbul ignore next */
    cov_wrczz4m8q().s[190]++;
    try {
      /* istanbul ignore next */
      cov_wrczz4m8q().s[191]++;
      await apiKeyService.ensureInitialized();
      /* istanbul ignore next */
      cov_wrczz4m8q().s[192]++;
      diagnostics.healthChecks.apiKeyService = 'healthy';
    } catch (error) {
      /* istanbul ignore next */
      cov_wrczz4m8q().s[193]++;
      diagnostics.healthChecks.apiKeyService = 'failed';
    }
    /* istanbul ignore next */
    cov_wrczz4m8q().s[194]++;
    try {
      const secretArn =
      /* istanbul ignore next */
      (cov_wrczz4m8q().s[195]++, process.env.API_KEY_ENCRYPTION_SECRET_ARN);
      /* istanbul ignore next */
      cov_wrczz4m8q().s[196]++;
      if (secretArn) {
        /* istanbul ignore next */
        cov_wrczz4m8q().b[42][0]++;
        cov_wrczz4m8q().s[197]++;
        diagnostics.healthChecks.secretsManager = 'healthy';
      } else {
        /* istanbul ignore next */
        cov_wrczz4m8q().b[42][1]++;
        cov_wrczz4m8q().s[198]++;
        diagnostics.healthChecks.secretsManager = 'not_configured';
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_wrczz4m8q().s[199]++;
      diagnostics.healthChecks.secretsManager = 'failed';
    }
    const duration =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[200]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[201]++;
    diagnostics.diagnosticsDuration = `${duration}ms`;
    /* istanbul ignore next */
    cov_wrczz4m8q().s[202]++;
    res.success(diagnostics);
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[203]++;
    console.error('Diagnostics endpoint failed:', error);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[204]++;
    res.serverError('Diagnostics failed', {
      error: error.message,
      service: 'Financial Dashboard API',
      timestamp: new Date().toISOString()
    });
  }
});

// Lambda performance metrics endpoint
/* istanbul ignore next */
cov_wrczz4m8q().s[205]++;
router.get('/lambda-metrics', async (req, res) => {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[35]++;
  cov_wrczz4m8q().s[206]++;
  try {
    const lambdaOptimizer =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[207]++, require('../utils/lambdaOptimizer'));
    const metrics =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[208]++, lambdaOptimizer.getMetrics());
    /* istanbul ignore next */
    cov_wrczz4m8q().s[209]++;
    res.success({
      lambdaMetrics: metrics,
      endpoint: 'lambda-metrics',
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[210]++;
    console.error('Lambda metrics endpoint failed:', error);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[211]++;
    res.serverError('Lambda metrics failed', {
      error: error.message,
      endpoint: 'lambda-metrics',
      timestamp: new Date().toISOString()
    });
  }
});

// Debug endpoint for environment and configuration
/* istanbul ignore next */
cov_wrczz4m8q().s[212]++;
router.get('/debug/env', async (req, res) => {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[36]++;
  cov_wrczz4m8q().s[213]++;
  try {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[214]++;
    res.json({
      status: 'success',
      environment: {
        NODE_ENV: process.env.NODE_ENV,
        ENVIRONMENT: process.env.ENVIRONMENT,
        AWS_REGION: process.env.AWS_REGION,
        WEBAPP_AWS_REGION: process.env.WEBAPP_AWS_REGION,
        AWS_LAMBDA_FUNCTION_NAME: process.env.AWS_LAMBDA_FUNCTION_NAME,
        AWS_LAMBDA_FUNCTION_VERSION: process.env.AWS_LAMBDA_FUNCTION_VERSION
      },
      database_config: {
        DB_ENDPOINT: process.env.DB_ENDPOINT,
        DB_SECRET_ARN: process.env.DB_SECRET_ARN ?
        /* istanbul ignore next */
        (cov_wrczz4m8q().b[43][0]++, 'SET') :
        /* istanbul ignore next */
        (cov_wrczz4m8q().b[43][1]++, 'NOT_SET'),
        DB_CONNECT_TIMEOUT: process.env.DB_CONNECT_TIMEOUT,
        DB_POOL_MAX: process.env.DB_POOL_MAX
      },
      lambda_info: {
        memory: process.memoryUsage(),
        uptime: process.uptime(),
        platform: process.platform,
        node_version: process.version
      },
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[215]++;
    res.status(500).json({
      status: 'error',
      error: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Debug endpoint to test CORS
/* istanbul ignore next */
cov_wrczz4m8q().s[216]++;
router.get('/debug/cors-test', async (req, res) => {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[37]++;
  cov_wrczz4m8q().s[217]++;
  res.header('Access-Control-Allow-Origin', '*');
  /* istanbul ignore next */
  cov_wrczz4m8q().s[218]++;
  res.header('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');
  /* istanbul ignore next */
  cov_wrczz4m8q().s[219]++;
  res.header('Access-Control-Allow-Headers', 'Content-Type');
  /* istanbul ignore next */
  cov_wrczz4m8q().s[220]++;
  res.json({
    status: 'success',
    message: 'CORS test successful',
    headers: req.headers,
    origin: req.get('origin'),
    timestamp: new Date().toISOString()
  });
});

// Update health status endpoint - for "Update All Tables" button
/* istanbul ignore next */
cov_wrczz4m8q().s[221]++;
router.post('/update-status', async (req, res) => {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[38]++;
  cov_wrczz4m8q().s[222]++;
  try {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[223]++;
    console.log('🔄 Health status update requested');

    // Get comprehensive database health
    const healthData =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[224]++, await getComprehensiveDbHealth());

    // Optionally store in health_status table if it exists
    /* istanbul ignore next */
    cov_wrczz4m8q().s[225]++;
    try {
      // Check if health_status table exists
      const tableCheck =
      /* istanbul ignore next */
      (cov_wrczz4m8q().s[226]++, await query(`
        SELECT COUNT(*) as exists 
        FROM information_schema.tables 
        WHERE table_schema = 'public' AND table_name = 'health_status'
      `));
      /* istanbul ignore next */
      cov_wrczz4m8q().s[227]++;
      if (parseInt(tableCheck.rows[0].exists) > 0) {
        /* istanbul ignore next */
        cov_wrczz4m8q().b[44][0]++;
        cov_wrczz4m8q().s[228]++;
        console.log('💾 Storing health data in health_status table...');

        // Store each table's health data
        /* istanbul ignore next */
        cov_wrczz4m8q().s[229]++;
        for (const [tableName, tableData] of Object.entries(healthData.database.tables)) {
          /* istanbul ignore next */
          cov_wrczz4m8q().s[230]++;
          await query(`
            INSERT INTO health_status (
              table_name, record_count, status, last_updated, 
              last_checked, critical_table, table_category, error_message
            ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8)
            ON CONFLICT (table_name) DO UPDATE SET
              record_count = EXCLUDED.record_count,
              status = EXCLUDED.status,
              last_updated = EXCLUDED.last_updated,
              last_checked = EXCLUDED.last_checked,
              critical_table = EXCLUDED.critical_table,
              table_category = EXCLUDED.table_category,
              error_message = EXCLUDED.error_message
          `, [tableName, tableData.record_count, tableData.status, tableData.last_updated, tableData.last_checked, tableData.critical_table, tableData.table_category, tableData.error]);
        }
        /* istanbul ignore next */
        cov_wrczz4m8q().s[231]++;
        console.log('✅ Health data stored in health_status table');
      } else {
        /* istanbul ignore next */
        cov_wrczz4m8q().b[44][1]++;
        cov_wrczz4m8q().s[232]++;
        console.log('⚠️ health_status table does not exist - skipping storage');
      }
    } catch (storeError) {
      /* istanbul ignore next */
      cov_wrczz4m8q().s[233]++;
      console.warn('⚠️ Failed to store health data in health_status table:', storeError.message);
      // Don't fail the whole request if storage fails
    }
    /* istanbul ignore next */
    cov_wrczz4m8q().s[234]++;
    res.json({
      status: 'success',
      message: 'Database health status updated successfully',
      data: healthData,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[235]++;
    console.error('❌ Failed to update health status:', error);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[236]++;
    res.status(500).json({
      status: 'error',
      error: 'Failed to update health status',
      details: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

/**
 * Comprehensive database health check that analyzes all tables
 * This is what the frontend ServiceHealth.jsx expects to receive
 */
async function getComprehensiveDbHealth() {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[39]++;
  cov_wrczz4m8q().s[237]++;
  try {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[238]++;
    console.log('🔍 Starting optimized database health check...');
    const startTime =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[239]++, Date.now());

    // First test basic connectivity
    const basicHealth =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[240]++, await healthCheck());
    /* istanbul ignore next */
    cov_wrczz4m8q().s[241]++;
    if (basicHealth.status !== 'healthy') {
      /* istanbul ignore next */
      cov_wrczz4m8q().b[45][0]++;
      cov_wrczz4m8q().s[242]++;
      return {
        status: 'disconnected',
        error: basicHealth.error,
        database: {
          status: 'error',
          tables: {},
          summary: {
            total_tables: 0,
            healthy_tables: 0,
            stale_tables: 0,
            error_tables: 0,
            empty_tables: 0,
            missing_tables: 0,
            total_records: 0,
            total_missing_data: 0
          }
        },
        timestamp: new Date().toISOString()
      };
    } else
    /* istanbul ignore next */
    {
      cov_wrczz4m8q().b[45][1]++;
    }

    // Define table categories and critical tables
    const tableCategorization =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[243]++, {
      'symbols': ['symbols', 'stock_symbols', 'etf_symbols'],
      'prices': ['price_daily', 'price_weekly', 'price_monthly', 'latest_prices'],
      'technicals': ['technicals_daily', 'technicals_weekly', 'technicals_monthly', 'latest_technicals'],
      'financials': ['balance_sheet', 'income_statement', 'cash_flow', 'key_metrics'],
      'company': ['company_profile', 'company_profiles'],
      'earnings': ['earnings_estimates', 'earnings_history', 'earnings_metrics'],
      'sentiment': ['fear_greed_index', 'naaim', 'aaii_sentiment'],
      'trading': ['buy_sell_daily', 'buy_sell_weekly', 'swing_trader', 'trade_executions'],
      'portfolio': ['portfolio_holdings', 'position_history', 'user_api_keys'],
      'system': ['health_status', 'last_updated']
    });
    const criticalTables =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[244]++, ['symbols', 'stock_symbols', 'price_daily', 'latest_prices', 'portfolio_holdings', 'user_api_keys', 'health_status', 'last_updated']);

    // Function to categorize table
    function categorizeTable(tableName) {
      /* istanbul ignore next */
      cov_wrczz4m8q().f[40]++;
      cov_wrczz4m8q().s[245]++;
      for (const [category, tables] of Object.entries(tableCategorization)) {
        /* istanbul ignore next */
        cov_wrczz4m8q().s[246]++;
        if (tables.includes(tableName)) {
          /* istanbul ignore next */
          cov_wrczz4m8q().b[46][0]++;
          cov_wrczz4m8q().s[247]++;
          return category;
        } else
        /* istanbul ignore next */
        {
          cov_wrczz4m8q().b[46][1]++;
        }
      }
      /* istanbul ignore next */
      cov_wrczz4m8q().s[248]++;
      return 'other';
    }

    // OPTIMIZED: Get table info and record counts in one efficient query
    /* istanbul ignore next */
    cov_wrczz4m8q().s[249]++;
    console.log('📋 Getting table info and record counts efficiently...');
    const batchQuery =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[250]++, `
      SELECT 
        t.table_name,
        t.table_type,
        COALESCE(s.n_tup_ins - s.n_tup_del, 0) as estimated_rows,
        s.last_vacuum,
        s.last_autovacuum,
        s.last_analyze,
        s.last_autoanalyze
      FROM information_schema.tables t
      LEFT JOIN pg_stat_user_tables s ON s.relname = t.table_name
      WHERE t.table_schema = 'public' 
      AND t.table_type = 'BASE TABLE'
      ORDER BY t.table_name
    `);
    const tablesResult =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[251]++, await query(batchQuery, [], 15000));
    const allTables =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[252]++, tablesResult.rows);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[253]++;
    console.log(`📋 Found ${allTables.length} tables in database`);

    // Build table health data efficiently
    const tableHealth =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[254]++, {});
    let totalRecords =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[255]++, 0);
    let healthyTables =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[256]++, 0);
    let staleTables =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[257]++, 0);
    let errorTables =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[258]++, 0);
    let emptyTables =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[259]++, 0);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[260]++;
    console.log('🔍 Processing table health data...');
    /* istanbul ignore next */
    cov_wrczz4m8q().s[261]++;
    for (const table of allTables) {
      const tableName =
      /* istanbul ignore next */
      (cov_wrczz4m8q().s[262]++, table.table_name);
      const estimatedRows =
      /* istanbul ignore next */
      (cov_wrczz4m8q().s[263]++,
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[47][0]++, parseInt(table.estimated_rows)) ||
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[47][1]++, 0));
      /* istanbul ignore next */
      cov_wrczz4m8q().s[264]++;
      totalRecords += estimatedRows;

      // Use pg_stat timestamps for freshness check
      const lastUpdated =
      /* istanbul ignore next */
      (cov_wrczz4m8q().s[265]++,
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[48][0]++, table.last_analyze) ||
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[48][1]++, table.last_autoanalyze) ||
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[48][2]++, table.last_vacuum) ||
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[48][3]++, table.last_autovacuum));

      // Determine table status
      let status =
      /* istanbul ignore next */
      (cov_wrczz4m8q().s[266]++, 'healthy');
      let isStale =
      /* istanbul ignore next */
      (cov_wrczz4m8q().s[267]++, false);
      /* istanbul ignore next */
      cov_wrczz4m8q().s[268]++;
      if (estimatedRows === 0) {
        /* istanbul ignore next */
        cov_wrczz4m8q().b[49][0]++;
        cov_wrczz4m8q().s[269]++;
        status = 'empty';
        /* istanbul ignore next */
        cov_wrczz4m8q().s[270]++;
        emptyTables++;
      } else {
        /* istanbul ignore next */
        cov_wrczz4m8q().b[49][1]++;
        cov_wrczz4m8q().s[271]++;
        if (lastUpdated) {
          /* istanbul ignore next */
          cov_wrczz4m8q().b[50][0]++;
          const hoursSinceUpdate =
          /* istanbul ignore next */
          (cov_wrczz4m8q().s[272]++, (new Date() - new Date(lastUpdated)) / (1000 * 60 * 60));
          /* istanbul ignore next */
          cov_wrczz4m8q().s[273]++;
          if (hoursSinceUpdate > 72) {
            /* istanbul ignore next */
            cov_wrczz4m8q().b[51][0]++;
            cov_wrczz4m8q().s[274]++;
            // 3 days
            status = 'stale';
            /* istanbul ignore next */
            cov_wrczz4m8q().s[275]++;
            isStale = true;
            /* istanbul ignore next */
            cov_wrczz4m8q().s[276]++;
            staleTables++;
          } else {
            /* istanbul ignore next */
            cov_wrczz4m8q().b[51][1]++;
            cov_wrczz4m8q().s[277]++;
            healthyTables++;
          }
        } else {
          /* istanbul ignore next */
          cov_wrczz4m8q().b[50][1]++;
          cov_wrczz4m8q().s[278]++;
          // No timestamp available, assume healthy if has data
          healthyTables++;
        }
      }
      /* istanbul ignore next */
      cov_wrczz4m8q().s[279]++;
      tableHealth[tableName] = {
        status: status,
        record_count: estimatedRows,
        last_updated: lastUpdated,
        last_checked: new Date().toISOString(),
        table_category: categorizeTable(tableName),
        critical_table: criticalTables.includes(tableName),
        is_stale: isStale,
        missing_data_count: 0,
        error: null,
        note: 'Using pg_stat estimated counts for performance'
      };
    }

    // Calculate summary statistics
    const summary =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[280]++, {
      total_tables: allTables.length,
      healthy_tables: healthyTables,
      stale_tables: staleTables,
      error_tables: errorTables,
      empty_tables: emptyTables,
      missing_tables: 0,
      // Tables we expect but don't exist
      total_records: totalRecords,
      total_missing_data: 0 // Could be enhanced
    });
    const duration =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[281]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[282]++;
    console.log(`✅ Comprehensive database health check completed in ${duration}ms`);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[283]++;
    console.log(`📊 Summary: ${summary.total_tables} tables, ${summary.healthy_tables} healthy, ${summary.total_records} total records`);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[284]++;
    return {
      status: 'connected',
      database: {
        status: 'connected',
        currentTime: basicHealth.timestamp,
        postgresVersion: basicHealth.version,
        tables: tableHealth,
        summary: summary
      },
      timestamp: new Date().toISOString(),
      note: `Analyzed ${allTables.length} database tables in ${duration}ms`
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[285]++;
    console.error('❌ Comprehensive database health check failed:', error);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[286]++;
    return {
      status: 'error',
      error: error.message,
      database: {
        status: 'error',
        tables: {},
        summary: {
          total_tables: 0,
          healthy_tables: 0,
          stale_tables: 0,
          error_tables: 0,
          empty_tables: 0,
          missing_tables: 0,
          total_records: 0,
          total_missing_data: 0
        }
      },
      timestamp: new Date().toISOString()
    };
  }
}

// Create health_status table if it doesn't exist (for storing health data)
// REMOVED: Table creation endpoints - tables should be created by db-init infrastructure

// External Service Health Check Functions

/**
 * Database health check with timeout and circuit breaker
 */
async function checkDatabaseHealth() {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[41]++;
  cov_wrczz4m8q().s[287]++;
  try {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[288]++;
    console.log('🔍 Checking database health...');
    const startTime =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[289]++, Date.now());

    // Test basic connectivity with timeout
    const dbHealth =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[290]++, await Promise.race([healthCheck(), new Promise((_, reject) => {
      /* istanbul ignore next */
      cov_wrczz4m8q().f[42]++;
      cov_wrczz4m8q().s[291]++;
      return setTimeout(() => {
        /* istanbul ignore next */
        cov_wrczz4m8q().f[43]++;
        cov_wrczz4m8q().s[292]++;
        return reject(new Error('Database health check timeout'));
      }, 5000);
    })]));
    const duration =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[293]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[294]++;
    if (dbHealth.status === 'healthy') {
      /* istanbul ignore next */
      cov_wrczz4m8q().b[52][0]++;
      cov_wrczz4m8q().s[295]++;
      return {
        status: 'healthy',
        message: 'Database is connected and responsive',
        responseTime: `${duration}ms`,
        version:
        /* istanbul ignore next */
        (cov_wrczz4m8q().b[53][0]++, dbHealth.version) ||
        /* istanbul ignore next */
        (cov_wrczz4m8q().b[53][1]++, 'unknown'),
        connection: {
          host: process.env.DB_ENDPOINT ?
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[54][0]++, 'configured') :
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[54][1]++, 'not_configured'),
          pool: 'active',
          ssl: 'enabled'
        }
      };
    } else {
      /* istanbul ignore next */
      cov_wrczz4m8q().b[52][1]++;
      cov_wrczz4m8q().s[296]++;
      return {
        status: 'failed',
        message: 'Database connection failed',
        error: dbHealth.error,
        responseTime: `${duration}ms`
      };
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[297]++;
    console.error('❌ Database health check failed:', error);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[298]++;
    return {
      status: 'failed',
      message: 'Database health check failed',
      error: error.message,
      timeout: error.message.includes('timeout')
    };
  }
}

/**
 * Alpaca API health check with sample credentials
 */
async function checkAlpacaApiHealth() {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[44]++;
  cov_wrczz4m8q().s[299]++;
  try {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[300]++;
    console.log('🔍 Checking Alpaca API health...');
    const startTime =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[301]++, Date.now());

    // Check if we have any valid Alpaca credentials to test with
    let testCredentials =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[302]++, null);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[303]++;
    try {
      // Try to get any user's API credentials for testing
      const credentialsQuery =
      /* istanbul ignore next */
      (cov_wrczz4m8q().s[304]++, await query(`
        SELECT api_key_encrypted, api_secret_encrypted, is_sandbox 
        FROM user_api_keys 
        WHERE provider = 'alpaca' AND status = 'active' 
        LIMIT 1
      `));
      /* istanbul ignore next */
      cov_wrczz4m8q().s[305]++;
      if (credentialsQuery.rows.length > 0) {
        /* istanbul ignore next */
        cov_wrczz4m8q().b[55][0]++;
        const row =
        /* istanbul ignore next */
        (cov_wrczz4m8q().s[306]++, credentialsQuery.rows[0]);

        // Decrypt credentials for testing
        const decryptedKey =
        /* istanbul ignore next */
        (cov_wrczz4m8q().s[307]++, await apiKeyService.decryptApiKey(row.api_key_encrypted));
        const decryptedSecret =
        /* istanbul ignore next */
        (cov_wrczz4m8q().s[308]++, await apiKeyService.decryptApiKey(row.api_secret_encrypted));
        /* istanbul ignore next */
        cov_wrczz4m8q().s[309]++;
        testCredentials = {
          apiKey: decryptedKey,
          apiSecret: decryptedSecret,
          isSandbox: row.is_sandbox
        };
      } else
      /* istanbul ignore next */
      {
        cov_wrczz4m8q().b[55][1]++;
      }
    } catch (dbError) {
      /* istanbul ignore next */
      cov_wrczz4m8q().s[310]++;
      console.log('⚠️ Could not fetch test credentials from database:', dbError.message);
    }
    /* istanbul ignore next */
    cov_wrczz4m8q().s[311]++;
    if (testCredentials) {
      /* istanbul ignore next */
      cov_wrczz4m8q().b[56][0]++;
      // Test with real credentials
      const alpaca =
      /* istanbul ignore next */
      (cov_wrczz4m8q().s[312]++, new AlpacaService(testCredentials.apiKey, testCredentials.apiSecret, testCredentials.isSandbox));

      // Test API connectivity with account info (lightweight call)
      const accountInfo =
      /* istanbul ignore next */
      (cov_wrczz4m8q().s[313]++, await Promise.race([alpaca.getAccount(), new Promise((_, reject) => {
        /* istanbul ignore next */
        cov_wrczz4m8q().f[45]++;
        cov_wrczz4m8q().s[314]++;
        return setTimeout(() => {
          /* istanbul ignore next */
          cov_wrczz4m8q().f[46]++;
          cov_wrczz4m8q().s[315]++;
          return reject(new Error('Alpaca API timeout'));
        }, 10000);
      })]));
      const duration =
      /* istanbul ignore next */
      (cov_wrczz4m8q().s[316]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_wrczz4m8q().s[317]++;
      return {
        status: 'healthy',
        message: 'Alpaca API is accessible and responsive',
        responseTime: `${duration}ms`,
        environment: testCredentials.isSandbox ?
        /* istanbul ignore next */
        (cov_wrczz4m8q().b[57][0]++, 'sandbox') :
        /* istanbul ignore next */
        (cov_wrczz4m8q().b[57][1]++, 'live'),
        account: {
          status:
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[58][0]++, accountInfo?.status) ||
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[58][1]++, 'unknown'),
          tradingBlocked:
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[59][0]++, accountInfo?.trading_blocked) ||
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[59][1]++, false)
        },
        features: {
          trading: true,
          marketData: true,
          portfolio: true
        }
      };
    } else {
      /* istanbul ignore next */
      cov_wrczz4m8q().b[56][1]++;
      cov_wrczz4m8q().s[318]++;
      // No credentials available - check basic API availability
      return {
        status: 'degraded',
        message: 'No API credentials available for testing',
        responseTime: 'N/A',
        environment: 'unknown',
        features: {
          trading: false,
          marketData: false,
          portfolio: false
        },
        note: 'Add API credentials in Settings to enable full functionality'
      };
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[319]++;
    console.error('❌ Alpaca API health check failed:', error);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[320]++;
    return {
      status: 'failed',
      message: 'Alpaca API health check failed',
      error: error.message,
      timeout: error.message.includes('timeout'),
      circuitBreakerTriggered: error.message.includes('circuit breaker')
    };
  }
}

/**
 * AWS Secrets Manager health check
 */
async function checkAwsSecretsManagerHealth() {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[47]++;
  cov_wrczz4m8q().s[321]++;
  try {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[322]++;
    console.log('🔍 Checking AWS Secrets Manager health...');
    const startTime =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[323]++, Date.now());
    const secretsManager =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[324]++, new SecretsManagerClient({
      region:
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[60][0]++, process.env.WEBAPP_AWS_REGION) ||
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[60][1]++, process.env.AWS_REGION) ||
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[60][2]++, 'us-east-1')
    }));

    // Test basic Secrets Manager connectivity
    const testSecretArn =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[325]++,
    /* istanbul ignore next */
    (cov_wrczz4m8q().b[61][0]++, process.env.DB_SECRET_ARN) ||
    /* istanbul ignore next */
    (cov_wrczz4m8q().b[61][1]++, process.env.API_KEY_ENCRYPTION_SECRET_ARN));
    /* istanbul ignore next */
    cov_wrczz4m8q().s[326]++;
    if (!testSecretArn) {
      /* istanbul ignore next */
      cov_wrczz4m8q().b[62][0]++;
      cov_wrczz4m8q().s[327]++;
      return {
        status: 'degraded',
        message: 'No Secrets Manager ARNs configured',
        configured: false,
        region:
        /* istanbul ignore next */
        (cov_wrczz4m8q().b[63][0]++, process.env.WEBAPP_AWS_REGION) ||
        /* istanbul ignore next */
        (cov_wrczz4m8q().b[63][1]++, process.env.AWS_REGION) ||
        /* istanbul ignore next */
        (cov_wrczz4m8q().b[63][2]++, 'us-east-1')
      };
    } else
    /* istanbul ignore next */
    {
      cov_wrczz4m8q().b[62][1]++;
    }

    // Test secrets access with timeout
    cov_wrczz4m8q().s[328]++;
    await Promise.race([secretsManager.send(new GetSecretValueCommand({
      SecretId: testSecretArn
    })), new Promise((_, reject) => {
      /* istanbul ignore next */
      cov_wrczz4m8q().f[48]++;
      cov_wrczz4m8q().s[329]++;
      return setTimeout(() => {
        /* istanbul ignore next */
        cov_wrczz4m8q().f[49]++;
        cov_wrczz4m8q().s[330]++;
        return reject(new Error('Secrets Manager timeout'));
      }, 5000);
    })]);
    const duration =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[331]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[332]++;
    return {
      status: 'healthy',
      message: 'AWS Secrets Manager is accessible',
      responseTime: `${duration}ms`,
      configured: true,
      region:
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[64][0]++, process.env.WEBAPP_AWS_REGION) ||
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[64][1]++, process.env.AWS_REGION) ||
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[64][2]++, 'us-east-1'),
      secrets: {
        dbSecret: !!process.env.DB_SECRET_ARN,
        apiKeySecret: !!process.env.API_KEY_ENCRYPTION_SECRET_ARN
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[333]++;
    console.error('❌ AWS Secrets Manager health check failed:', error);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[334]++;
    return {
      status: 'failed',
      message: 'AWS Secrets Manager health check failed',
      error: error.message,
      timeout: error.message.includes('timeout'),
      region:
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[65][0]++, process.env.WEBAPP_AWS_REGION) ||
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[65][1]++, process.env.AWS_REGION) ||
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[65][2]++, 'us-east-1')
    };
  }
}

/**
 * AWS RDS health check
 */
async function checkAwsRdsHealth() {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[50]++;
  cov_wrczz4m8q().s[335]++;
  try {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[336]++;
    console.log('🔍 Checking AWS RDS health...');
    /* istanbul ignore next */
    cov_wrczz4m8q().s[337]++;
    if (!process.env.DB_ENDPOINT) {
      /* istanbul ignore next */
      cov_wrczz4m8q().b[66][0]++;
      cov_wrczz4m8q().s[338]++;
      return {
        status: 'degraded',
        message: 'DB_ENDPOINT not configured',
        configured: false
      };
    } else
    /* istanbul ignore next */
    {
      cov_wrczz4m8q().b[66][1]++;
    }

    // RDS health is primarily determined by database connectivity
    // We can also check RDS-specific metrics if needed
    const dbHealth =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[339]++, await checkDatabaseHealth());
    /* istanbul ignore next */
    cov_wrczz4m8q().s[340]++;
    return {
      status: dbHealth.status,
      message: dbHealth.status === 'healthy' ?
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[67][0]++, 'AWS RDS instance is accessible') :
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[67][1]++, 'AWS RDS connection issues'),
      responseTime: dbHealth.responseTime,
      configured: true,
      endpoint: 'configured',
      ssl: 'enforced',
      multiAz: 'unknown',
      // Would need RDS API to check
      backups: 'unknown' // Would need RDS API to check
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[341]++;
    console.error('❌ AWS RDS health check failed:', error);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[342]++;
    return {
      status: 'failed',
      message: 'AWS RDS health check failed',
      error: error.message
    };
  }
}

/**
 * AWS Cognito health check
 */
async function checkAwsCognitoHealth() {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[51]++;
  cov_wrczz4m8q().s[343]++;
  try {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[344]++;
    console.log('🔍 Checking AWS Cognito health...');
    const startTime =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[345]++, Date.now());
    const userPoolId =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[346]++, process.env.COGNITO_USER_POOL_ID);
    const clientId =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[347]++, process.env.COGNITO_CLIENT_ID);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[348]++;
    if (
    /* istanbul ignore next */
    (cov_wrczz4m8q().b[69][0]++, !userPoolId) ||
    /* istanbul ignore next */
    (cov_wrczz4m8q().b[69][1]++, !clientId)) {
      /* istanbul ignore next */
      cov_wrczz4m8q().b[68][0]++;
      cov_wrczz4m8q().s[349]++;
      return {
        status: 'degraded',
        message: 'Cognito configuration not complete',
        configured: false,
        region:
        /* istanbul ignore next */
        (cov_wrczz4m8q().b[70][0]++, process.env.WEBAPP_AWS_REGION) ||
        /* istanbul ignore next */
        (cov_wrczz4m8q().b[70][1]++, process.env.AWS_REGION) ||
        /* istanbul ignore next */
        (cov_wrczz4m8q().b[70][2]++, 'us-east-1'),
        userPool: !!userPoolId,
        clientId: !!clientId
      };
    } else
    /* istanbul ignore next */
    {
      cov_wrczz4m8q().b[68][1]++;
    }
    const cognitoIdp =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[350]++, new CognitoIdentityProviderClient({
      region:
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[71][0]++, process.env.WEBAPP_AWS_REGION) ||
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[71][1]++, process.env.AWS_REGION) ||
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[71][2]++, 'us-east-1')
    }));

    // Test Cognito connectivity by describing the user pool
    /* istanbul ignore next */
    cov_wrczz4m8q().s[351]++;
    await Promise.race([cognitoIdp.send(new DescribeUserPoolCommand({
      UserPoolId: userPoolId
    })), new Promise((_, reject) => {
      /* istanbul ignore next */
      cov_wrczz4m8q().f[52]++;
      cov_wrczz4m8q().s[352]++;
      return setTimeout(() => {
        /* istanbul ignore next */
        cov_wrczz4m8q().f[53]++;
        cov_wrczz4m8q().s[353]++;
        return reject(new Error('Cognito timeout'));
      }, 5000);
    })]);
    const duration =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[354]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[355]++;
    return {
      status: 'healthy',
      message: 'AWS Cognito is accessible',
      responseTime: `${duration}ms`,
      configured: true,
      region:
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[72][0]++, process.env.WEBAPP_AWS_REGION) ||
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[72][1]++, process.env.AWS_REGION) ||
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[72][2]++, 'us-east-1'),
      userPool: !!userPoolId,
      clientId: !!clientId,
      features: {
        authentication: true,
        userManagement: true,
        mfa: 'unknown' // Would need to check user pool config
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[356]++;
    console.error('❌ AWS Cognito health check failed:', error);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[357]++;
    return {
      status: 'failed',
      message: 'AWS Cognito health check failed',
      error: error.message,
      timeout: error.message.includes('timeout'),
      region:
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[73][0]++, process.env.WEBAPP_AWS_REGION) ||
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[73][1]++, process.env.AWS_REGION) ||
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[73][2]++, 'us-east-1')
    };
  }
}

// API Service Health Check Functions
async function checkApiKeyServiceHealth() {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[54]++;
  cov_wrczz4m8q().s[358]++;
  try {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[359]++;
    // Check if API key service is initialized and enabled
    await apiKeyService.ensureInitialized();

    // Test encryption/decryption functionality
    const testResult =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[360]++, await testEncryptionFunctionality());
    /* istanbul ignore next */
    cov_wrczz4m8q().s[361]++;
    return {
      status:
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[75][0]++, apiKeyService.isEnabled) &&
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[75][1]++, testResult.success) ?
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[74][0]++, 'healthy') :
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[74][1]++, 'degraded'),
      enabled: apiKeyService.isEnabled,
      message: 'API key service is initialized and enabled',
      features: {
        encryption: apiKeyService.isEnabled,
        secretsManager: !!process.env.API_KEY_ENCRYPTION_SECRET_ARN,
        encryptionTest: testResult.success
      },
      encryptionTest: testResult
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[362]++;
    return {
      status: 'failed',
      enabled: false,
      error: error.message,
      message: 'API key service is not available',
      features: {
        encryption: false,
        secretsManager: !!process.env.API_KEY_ENCRYPTION_SECRET_ARN,
        encryptionTest: false
      }
    };
  }
}
async function checkJwtSecretServiceHealth() {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[55]++;
  cov_wrczz4m8q().s[363]++;
  try {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[364]++;
    console.log('🔍 Checking JWT secret service health...');

    // Initialize JWT secret manager
    /* istanbul ignore next */
    cov_wrczz4m8q().s[365]++;
    await jwtSecretManager.initialize();

    // Get secret info
    const secretInfo =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[366]++, await jwtSecretManager.getSecretInfo());

    // Test JWT token generation and validation
    const jwtTestResult =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[367]++, await testJwtFunctionality());
    /* istanbul ignore next */
    cov_wrczz4m8q().s[368]++;
    return {
      status:
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[77][0]++, secretInfo.available) &&
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[77][1]++, jwtTestResult.success) ?
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[76][0]++, 'healthy') :
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[76][1]++, 'degraded'),
      available: secretInfo.available,
      source: secretInfo.source,
      validation: secretInfo.validation,
      message: secretInfo.available ?
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[78][0]++, 'JWT secret service is available') :
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[78][1]++, 'JWT secret service is not available'),
      jwtTest: jwtTestResult,
      features: {
        tokenGeneration: jwtTestResult.tokenGenerated,
        tokenValidation: jwtTestResult.tokenValid,
        secretStrength:
        /* istanbul ignore next */
        (cov_wrczz4m8q().b[79][0]++, secretInfo.validation?.strength) ||
        /* istanbul ignore next */
        (cov_wrczz4m8q().b[79][1]++, 'unknown')
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[369]++;
    console.error('❌ JWT secret service health check failed:', error);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[370]++;
    return {
      status: 'failed',
      available: false,
      error: error.message,
      message: 'JWT secret service health check failed',
      features: {
        tokenGeneration: false,
        tokenValidation: false,
        secretStrength: 'unknown'
      }
    };
  }
}
async function checkEncryptionServiceHealth() {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[56]++;
  cov_wrczz4m8q().s[371]++;
  try {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[372]++;
    console.log('🔍 Checking encryption service health...');

    // Get overall service health
    const serviceHealth =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[373]++, await apiKeyService.getServiceHealth());
    /* istanbul ignore next */
    cov_wrczz4m8q().s[374]++;
    return {
      status: serviceHealth.overall === 'healthy' ?
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[80][0]++, 'healthy') :
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[80][1]++, 'degraded'),
      encryption: serviceHealth.encryptionService,
      jwt: serviceHealth.jwtService,
      overall: serviceHealth.overall,
      message: `Encryption service is ${serviceHealth.overall}`,
      features: {
        hasEncryptionSecret: serviceHealth.encryptionService.hasSecret,
        jwtAvailable: serviceHealth.jwtService.available,
        secretLength: serviceHealth.encryptionService.secretLength
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[375]++;
    console.error('❌ Encryption service health check failed:', error);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[376]++;
    return {
      status: 'failed',
      error: error.message,
      message: 'Encryption service health check failed',
      features: {
        hasEncryptionSecret: false,
        jwtAvailable: false,
        secretLength: 0
      }
    };
  }
}
async function checkDatabaseTablesForApiKeys() {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[57]++;
  cov_wrczz4m8q().s[377]++;
  try {
    const requiredTables =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[378]++, ['user_api_keys', 'portfolio_holdings', 'portfolio_metadata', 'portfolio_data_refresh_requests']);
    const tableStatus =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[379]++, {});
    /* istanbul ignore next */
    cov_wrczz4m8q().s[380]++;
    for (const table of requiredTables) {
      /* istanbul ignore next */
      cov_wrczz4m8q().s[381]++;
      try {
        const result =
        /* istanbul ignore next */
        (cov_wrczz4m8q().s[382]++, await query(`SELECT COUNT(*) as count FROM ${table} LIMIT 1`));
        /* istanbul ignore next */
        cov_wrczz4m8q().s[383]++;
        tableStatus[table] = {
          exists: true,
          status: 'healthy',
          count: parseInt(result.rows[0].count)
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_wrczz4m8q().s[384]++;
        if (error.message.includes('does not exist')) {
          /* istanbul ignore next */
          cov_wrczz4m8q().b[81][0]++;
          cov_wrczz4m8q().s[385]++;
          tableStatus[table] = {
            exists: false,
            status: 'missing',
            error: 'Table does not exist'
          };
        } else {
          /* istanbul ignore next */
          cov_wrczz4m8q().b[81][1]++;
          cov_wrczz4m8q().s[386]++;
          tableStatus[table] = {
            exists: true,
            status: 'error',
            error: error.message
          };
        }
      }
    }
    const allHealthy =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[387]++, Object.values(tableStatus).every(t => {
      /* istanbul ignore next */
      cov_wrczz4m8q().f[58]++;
      cov_wrczz4m8q().s[388]++;
      return t.status === 'healthy';
    }));
    /* istanbul ignore next */
    cov_wrczz4m8q().s[389]++;
    return {
      status: allHealthy ?
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[82][0]++, 'healthy') :
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[82][1]++, 'degraded'),
      tables: tableStatus,
      summary: {
        total_tables: requiredTables.length,
        healthy_tables: Object.values(tableStatus).filter(t => {
          /* istanbul ignore next */
          cov_wrczz4m8q().f[59]++;
          cov_wrczz4m8q().s[390]++;
          return t.status === 'healthy';
        }).length,
        missing_tables: Object.values(tableStatus).filter(t => {
          /* istanbul ignore next */
          cov_wrczz4m8q().f[60]++;
          cov_wrczz4m8q().s[391]++;
          return t.status === 'missing';
        }).length,
        error_tables: Object.values(tableStatus).filter(t => {
          /* istanbul ignore next */
          cov_wrczz4m8q().f[61]++;
          cov_wrczz4m8q().s[392]++;
          return t.status === 'error';
        }).length
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[393]++;
    return {
      status: 'failed',
      error: error.message,
      message: 'Failed to check database tables'
    };
  }
}
async function checkSecretsManagerHealth() {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[62]++;
  cov_wrczz4m8q().s[394]++;
  try {
    const secretArn =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[395]++, process.env.API_KEY_ENCRYPTION_SECRET_ARN);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[396]++;
    if (!secretArn) {
      /* istanbul ignore next */
      cov_wrczz4m8q().b[83][0]++;
      cov_wrczz4m8q().s[397]++;
      return {
        status: 'degraded',
        message: 'API_KEY_ENCRYPTION_SECRET_ARN not configured',
        configured: false
      };
    } else
    /* istanbul ignore next */
    {
      cov_wrczz4m8q().b[83][1]++;
    }

    // Try to load the secret (this will test both permissions and secret existence)
    cov_wrczz4m8q().s[398]++;
    try {
      /* istanbul ignore next */
      cov_wrczz4m8q().s[399]++;
      await apiKeyService.ensureInitialized();
      /* istanbul ignore next */
      cov_wrczz4m8q().s[400]++;
      return {
        status: 'healthy',
        message: 'Secrets Manager access is working',
        configured: true,
        secretArn: secretArn.substring(0, 50) + '...' // Truncate for security
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_wrczz4m8q().s[401]++;
      return {
        status: 'failed',
        message: 'Cannot access encryption secret',
        configured: true,
        error: error.message,
        secretArn: secretArn.substring(0, 50) + '...'
      };
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[402]++;
    return {
      status: 'failed',
      error: error.message,
      message: 'Secrets Manager health check failed'
    };
  }
}

/**
 * Generate timeout recommendations based on circuit breaker status
 */
function generateTimeoutRecommendations(circuitBreakers) {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[63]++;
  const recommendations =
  /* istanbul ignore next */
  (cov_wrczz4m8q().s[403]++, []);
  /* istanbul ignore next */
  cov_wrczz4m8q().s[404]++;
  for (const [serviceKey, breaker] of Object.entries(circuitBreakers)) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[405]++;
    if (breaker.state === 'open') {
      /* istanbul ignore next */
      cov_wrczz4m8q().b[84][0]++;
      cov_wrczz4m8q().s[406]++;
      recommendations.push({
        service: serviceKey,
        issue: 'Circuit breaker is open',
        recommendation: 'Service is currently unavailable due to repeated failures. Check service health.',
        priority: 'high'
      });
    } else {
      /* istanbul ignore next */
      cov_wrczz4m8q().b[84][1]++;
      cov_wrczz4m8q().s[407]++;
      if (breaker.state === 'half-open') {
        /* istanbul ignore next */
        cov_wrczz4m8q().b[85][0]++;
        cov_wrczz4m8q().s[408]++;
        recommendations.push({
          service: serviceKey,
          issue: 'Circuit breaker is half-open',
          recommendation: 'Service is recovering from failures. Monitor closely.',
          priority: 'medium'
        });
      } else {
        /* istanbul ignore next */
        cov_wrczz4m8q().b[85][1]++;
        cov_wrczz4m8q().s[409]++;
        if (breaker.failures > 2) {
          /* istanbul ignore next */
          cov_wrczz4m8q().b[86][0]++;
          cov_wrczz4m8q().s[410]++;
          recommendations.push({
            service: serviceKey,
            issue: 'Recent failures detected',
            recommendation: 'Service has recent failures but is still operational. Consider investigating.',
            priority: 'low'
          });
        } else
        /* istanbul ignore next */
        {
          cov_wrczz4m8q().b[86][1]++;
        }
      }
    }
  }
  /* istanbul ignore next */
  cov_wrczz4m8q().s[411]++;
  if (recommendations.length === 0) {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[87][0]++;
    cov_wrczz4m8q().s[412]++;
    recommendations.push({
      service: 'all',
      issue: 'none',
      recommendation: 'All services are operating normally with proper timeout handling.',
      priority: 'info'
    });
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[87][1]++;
  }
  cov_wrczz4m8q().s[413]++;
  return recommendations;
}

// Comprehensive Database Schema Validation Endpoint
/* istanbul ignore next */
cov_wrczz4m8q().s[414]++;
router.get('/database/schema', async (req, res) => {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[64]++;
  const requestId =
  /* istanbul ignore next */
  (cov_wrczz4m8q().s[415]++, crypto.randomUUID().split('-')[0]);
  const requestStart =
  /* istanbul ignore next */
  (cov_wrczz4m8q().s[416]++, Date.now());
  /* istanbul ignore next */
  cov_wrczz4m8q().s[417]++;
  try {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[418]++;
    console.log(`🚀 [${requestId}] Database schema validation endpoint called`, {
      userAgent: req.headers['user-agent'],
      ip: req.ip,
      timestamp: new Date().toISOString()
    });

    // Perform comprehensive database schema validation
    /* istanbul ignore next */
    cov_wrczz4m8q().s[419]++;
    console.log(`🔍 [${requestId}] Starting comprehensive database schema validation`);
    const schemaValidation =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[420]++, await validateDatabaseSchema(requestId));
    const responseData =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[421]++, {
      success: true,
      schema_validation: {
        overall: {
          status: schemaValidation.valid ?
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[88][0]++, 'valid') :
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[88][1]++, 'invalid'),
          health_percentage: schemaValidation.healthPercentage,
          critical_missing:
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[89][0]++, schemaValidation.criticalMissing) ||
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[89][1]++, []),
          total_required: schemaValidation.totalRequired,
          total_existing: schemaValidation.totalExisting
        },
        categories: schemaValidation.validation ?
        /* istanbul ignore next */
        (cov_wrczz4m8q().b[90][0]++, {
          core: {
            status: schemaValidation.validation.core.missing.length === 0 ?
            /* istanbul ignore next */
            (cov_wrczz4m8q().b[91][0]++, 'complete') :
            /* istanbul ignore next */
            (cov_wrczz4m8q().b[91][1]++, 'incomplete'),
            required: schemaValidation.validation.core.required.length,
            existing: schemaValidation.validation.core.existing.length,
            missing: schemaValidation.validation.core.missing,
            existing_tables: schemaValidation.validation.core.existing
          },
          portfolio: {
            status: schemaValidation.validation.portfolio.missing.length === 0 ?
            /* istanbul ignore next */
            (cov_wrczz4m8q().b[92][0]++, 'complete') :
            /* istanbul ignore next */
            (cov_wrczz4m8q().b[92][1]++, 'incomplete'),
            required: schemaValidation.validation.portfolio.required.length,
            existing: schemaValidation.validation.portfolio.existing.length,
            missing: schemaValidation.validation.portfolio.missing,
            existing_tables: schemaValidation.validation.portfolio.existing
          },
          market_data: {
            status: schemaValidation.validation.market_data.missing.length === 0 ?
            /* istanbul ignore next */
            (cov_wrczz4m8q().b[93][0]++, 'complete') :
            /* istanbul ignore next */
            (cov_wrczz4m8q().b[93][1]++, 'incomplete'),
            required: schemaValidation.validation.market_data.required.length,
            existing: schemaValidation.validation.market_data.existing.length,
            missing: schemaValidation.validation.market_data.missing,
            existing_tables: schemaValidation.validation.market_data.existing
          },
          analytics: {
            status: schemaValidation.validation.analytics.missing.length === 0 ?
            /* istanbul ignore next */
            (cov_wrczz4m8q().b[94][0]++, 'complete') :
            /* istanbul ignore next */
            (cov_wrczz4m8q().b[94][1]++, 'incomplete'),
            required: schemaValidation.validation.analytics.required.length,
            existing: schemaValidation.validation.analytics.existing.length,
            missing: schemaValidation.validation.analytics.missing,
            existing_tables: schemaValidation.validation.analytics.existing
          },
          optional: {
            status: 'optional',
            required: schemaValidation.validation.optional.required.length,
            existing: schemaValidation.validation.optional.existing.length,
            missing: schemaValidation.validation.optional.missing,
            existing_tables: schemaValidation.validation.optional.existing
          }
        }) :
        /* istanbul ignore next */
        (cov_wrczz4m8q().b[90][1]++, null),
        schema_definition: REQUIRED_SCHEMA,
        recommendations: generateSchemaRecommendations(schemaValidation),
        validation_info: {
          duration_ms: schemaValidation.validationDuration,
          timestamp: schemaValidation.timestamp,
          request_id: requestId
        }
      },
      request_info: {
        request_id: requestId,
        total_duration_ms: Date.now() - requestStart,
        timestamp: new Date().toISOString()
      }
    });

    // Set appropriate HTTP status based on schema health
    let statusCode =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[422]++, 200);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[423]++;
    if (schemaValidation.error) {
      /* istanbul ignore next */
      cov_wrczz4m8q().b[95][0]++;
      cov_wrczz4m8q().s[424]++;
      statusCode = 500;
    } else {
      /* istanbul ignore next */
      cov_wrczz4m8q().b[95][1]++;
      cov_wrczz4m8q().s[425]++;
      if (
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[97][0]++, schemaValidation.criticalMissing) &&
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[97][1]++, schemaValidation.criticalMissing.length > 0)) {
        /* istanbul ignore next */
        cov_wrczz4m8q().b[96][0]++;
        cov_wrczz4m8q().s[426]++;
        statusCode = 503; // Service unavailable due to missing critical tables
      } else {
        /* istanbul ignore next */
        cov_wrczz4m8q().b[96][1]++;
        cov_wrczz4m8q().s[427]++;
        if (schemaValidation.healthPercentage < 80) {
          /* istanbul ignore next */
          cov_wrczz4m8q().b[98][0]++;
          cov_wrczz4m8q().s[428]++;
          statusCode = 206; // Partial content - some tables missing but not critical
        } else
        /* istanbul ignore next */
        {
          cov_wrczz4m8q().b[98][1]++;
        }
      }
    }
    const totalDuration =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[429]++, Date.now() - requestStart);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[430]++;
    console.log(`✅ [${requestId}] Database schema validation completed in ${totalDuration}ms`, {
      status: statusCode,
      schemaHealth: `${schemaValidation.healthPercentage}%`,
      criticalMissing:
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[99][0]++, schemaValidation.criticalMissing?.length) ||
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[99][1]++, 0),
      totalRequired: schemaValidation.totalRequired,
      totalExisting: schemaValidation.totalExisting
    });
    /* istanbul ignore next */
    cov_wrczz4m8q().s[431]++;
    res.status(statusCode).json(responseData);
  } catch (error) {
    const errorDuration =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[432]++, Date.now() - requestStart);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[433]++;
    console.error(`❌ [${requestId}] Database schema validation FAILED after ${errorDuration}ms:`, {
      error: error.message,
      errorStack: error.stack,
      impact: 'Cannot validate database schema',
      recommendation: 'Check database connectivity and permissions'
    });
    /* istanbul ignore next */
    cov_wrczz4m8q().s[434]++;
    res.status(500).json({
      success: false,
      error: 'Database schema validation failed',
      details: process.env.NODE_ENV === 'development' ?
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[100][0]++, error.message) :
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[100][1]++, 'Internal server error'),
      request_info: {
        request_id: requestId,
        error_duration_ms: errorDuration,
        timestamp: new Date().toISOString()
      }
    });
  }
});

/**
 * Generate schema-specific recommendations based on validation results
 */
function generateSchemaRecommendations(schemaValidation) {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[65]++;
  const recommendations =
  /* istanbul ignore next */
  (cov_wrczz4m8q().s[435]++, []);
  /* istanbul ignore next */
  cov_wrczz4m8q().s[436]++;
  if (schemaValidation.error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[101][0]++;
    cov_wrczz4m8q().s[437]++;
    recommendations.push({
      type: 'error',
      priority: 'critical',
      message: 'Database schema validation failed',
      action: 'Check database connectivity and permissions',
      details: schemaValidation.error
    });
    /* istanbul ignore next */
    cov_wrczz4m8q().s[438]++;
    return recommendations;
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[101][1]++;
  }
  cov_wrczz4m8q().s[439]++;
  if (
  /* istanbul ignore next */
  (cov_wrczz4m8q().b[103][0]++, schemaValidation.criticalMissing) &&
  /* istanbul ignore next */
  (cov_wrczz4m8q().b[103][1]++, schemaValidation.criticalMissing.length > 0)) {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[102][0]++;
    cov_wrczz4m8q().s[440]++;
    recommendations.push({
      type: 'critical_tables_missing',
      priority: 'critical',
      message: `${schemaValidation.criticalMissing.length} critical tables missing`,
      action: 'Run database initialization scripts immediately',
      details: schemaValidation.criticalMissing,
      impact: 'Core application functionality will not work'
    });
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[102][1]++;
  }
  cov_wrczz4m8q().s[441]++;
  if (schemaValidation.validation) {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[104][0]++;
    const categories =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[442]++, ['core', 'portfolio', 'market_data', 'analytics']);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[443]++;
    categories.forEach(category => {
      /* istanbul ignore next */
      cov_wrczz4m8q().f[66]++;
      const categoryData =
      /* istanbul ignore next */
      (cov_wrczz4m8q().s[444]++, schemaValidation.validation[category]);
      /* istanbul ignore next */
      cov_wrczz4m8q().s[445]++;
      if (
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[106][0]++, categoryData) &&
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[106][1]++, categoryData.missing.length > 0)) {
        /* istanbul ignore next */
        cov_wrczz4m8q().b[105][0]++;
        cov_wrczz4m8q().s[446]++;
        recommendations.push({
          type: 'category_tables_missing',
          priority: category === 'core' ?
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[107][0]++, 'high') :
          /* istanbul ignore next */
          (cov_wrczz4m8q().b[107][1]++, 'medium'),
          message: `Missing ${categoryData.missing.length} ${category} tables`,
          action: `Create missing ${category} tables: ${categoryData.missing.join(', ')}`,
          details: categoryData.missing,
          impact: getCategoryImpact(category)
        });
      } else
      /* istanbul ignore next */
      {
        cov_wrczz4m8q().b[105][1]++;
      }
    });
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[104][1]++;
  }
  cov_wrczz4m8q().s[447]++;
  if (
  /* istanbul ignore next */
  (cov_wrczz4m8q().b[109][0]++, schemaValidation.healthPercentage < 100) &&
  /* istanbul ignore next */
  (cov_wrczz4m8q().b[109][1]++, schemaValidation.healthPercentage >= 80)) {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[108][0]++;
    cov_wrczz4m8q().s[448]++;
    recommendations.push({
      type: 'partial_schema',
      priority: 'low',
      message: `Schema is ${schemaValidation.healthPercentage}% complete`,
      action: 'Consider creating missing optional tables for full functionality',
      details: 'Some advanced features may be limited'
    });
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[108][1]++;
  }
  cov_wrczz4m8q().s[449]++;
  if (recommendations.length === 0) {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[110][0]++;
    cov_wrczz4m8q().s[450]++;
    recommendations.push({
      type: 'schema_complete',
      priority: 'info',
      message: 'Database schema is complete and healthy',
      action: 'No action required',
      details: 'All required tables are present and accessible'
    });
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[110][1]++;
  }
  cov_wrczz4m8q().s[451]++;
  return recommendations;
}

/**
 * Get category-specific impact description for recommendations
 */
function getCategoryImpact(category) {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[67]++;
  const impacts =
  /* istanbul ignore next */
  (cov_wrczz4m8q().s[452]++, {
    core: 'User authentication and API key management will fail',
    portfolio: 'Portfolio tracking and management features will be broken',
    market_data: 'Stock data and market information will be unavailable',
    analytics: 'Trading signals and analysis features will not work'
  });
  /* istanbul ignore next */
  cov_wrczz4m8q().s[453]++;
  return /* istanbul ignore next */(cov_wrczz4m8q().b[111][0]++, impacts[category]) ||
  /* istanbul ignore next */
  (cov_wrczz4m8q().b[111][1]++, 'Some application features may be limited');
}

/**
 * Test encryption functionality with sample data
 */
async function testEncryptionFunctionality() {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[68]++;
  cov_wrczz4m8q().s[454]++;
  try {
    const testApiKey =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[455]++, 'TEST_KEY_' + Math.random().toString(36).substr(2, 10));
    const testSalt =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[456]++, 'test_salt_' + Math.random().toString(36).substr(2, 8));
    const testUserId =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[457]++, 'test_user');
    const testProvider =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[458]++, 'test');

    // Test encryption
    const encrypted =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[459]++, await apiKeyService.encryptApiKey(testApiKey, testSalt, testUserId, testProvider));

    // Test decryption
    const decrypted =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[460]++, await apiKeyService.decryptApiKey(encrypted, testSalt, testUserId, testProvider));
    const success =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[461]++, testApiKey === decrypted);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[462]++;
    return {
      success,
      message: success ?
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[112][0]++, 'Encryption test passed') :
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[112][1]++, 'Encryption test failed'),
      details: {
        originalLength: testApiKey.length,
        encryptedLength: encrypted.encrypted.length,
        decryptedLength: decrypted.length,
        roundTripSuccess: success
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[463]++;
    return {
      success: false,
      message: 'Encryption test failed',
      error: error.message
    };
  }
}

/**
 * Test JWT functionality with sample data
 */
async function testJwtFunctionality() {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[69]++;
  cov_wrczz4m8q().s[464]++;
  try {
    const testUserId =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[465]++, 'test_user_' + Math.random().toString(36).substr(2, 6));
    const testProvider =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[466]++, 'test_provider');
    const testPermissions =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[467]++, ['read', 'write']);

    // Test token generation
    const token =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[468]++, await apiKeyService.generateApiKeyToken(testUserId, testProvider, testPermissions, '1h'));

    // Test token validation
    const validation =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[469]++, await apiKeyService.validateApiKeyToken(token));
    const success =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[470]++,
    /* istanbul ignore next */
    (cov_wrczz4m8q().b[113][0]++, validation.valid) &&
    /* istanbul ignore next */
    (cov_wrczz4m8q().b[113][1]++, validation.userId === testUserId) &&
    /* istanbul ignore next */
    (cov_wrczz4m8q().b[113][2]++, validation.provider === testProvider));
    /* istanbul ignore next */
    cov_wrczz4m8q().s[471]++;
    return {
      success,
      tokenGenerated: !!token,
      tokenValid: validation.valid,
      message: success ?
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[114][0]++, 'JWT test passed') :
      /* istanbul ignore next */
      (cov_wrczz4m8q().b[114][1]++, 'JWT test failed'),
      details: {
        tokenLength: token ?
        /* istanbul ignore next */
        (cov_wrczz4m8q().b[115][0]++, token.length) :
        /* istanbul ignore next */
        (cov_wrczz4m8q().b[115][1]++, 0),
        userIdMatch: validation.userId === testUserId,
        providerMatch: validation.provider === testProvider,
        permissionsMatch: JSON.stringify(validation.permissions) === JSON.stringify(testPermissions)
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_wrczz4m8q().s[472]++;
    return {
      success: false,
      tokenGenerated: false,
      tokenValid: false,
      message: 'JWT test failed',
      error: error.message
    };
  }
}

/**
 * Generate recommendations for API service issues
 */
function generateApiServiceRecommendations(services) {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[70]++;
  const recommendations =
  /* istanbul ignore next */
  (cov_wrczz4m8q().s[473]++, []);
  /* istanbul ignore next */
  cov_wrczz4m8q().s[474]++;
  if (services.encryptionService.status === 'failed') {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[116][0]++;
    cov_wrczz4m8q().s[475]++;
    recommendations.push({
      priority: 'critical',
      service: 'encryption',
      issue: 'Encryption service is not available',
      action: 'Configure API_KEY_ENCRYPTION_SECRET or API_KEY_ENCRYPTION_SECRET_ARN',
      impact: 'Cannot encrypt/decrypt user API keys'
    });
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[116][1]++;
  }
  cov_wrczz4m8q().s[476]++;
  if (services.jwtSecretService.status === 'failed') {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[117][0]++;
    cov_wrczz4m8q().s[477]++;
    recommendations.push({
      priority: 'critical',
      service: 'jwt',
      issue: 'JWT secret service is not available',
      action: 'Configure JWT_SECRET or JWT_SECRET_ARN',
      impact: 'Cannot generate authentication tokens'
    });
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[117][1]++;
  }
  cov_wrczz4m8q().s[478]++;
  if (services.jwtSecretService.validation?.strength === 'low_entropy') {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[118][0]++;
    cov_wrczz4m8q().s[479]++;
    recommendations.push({
      priority: 'medium',
      service: 'jwt',
      issue: 'JWT secret has low entropy',
      action: 'Rotate JWT secret with crypto.randomBytes()',
      impact: 'Reduced security for token signing'
    });
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[118][1]++;
  }
  cov_wrczz4m8q().s[480]++;
  if (services.database.status === 'degraded') {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[119][0]++;
    cov_wrczz4m8q().s[481]++;
    recommendations.push({
      priority: 'high',
      service: 'database',
      issue: 'Some API-related database tables are missing',
      action: 'Run database initialization scripts',
      impact: 'API key storage and portfolio features may not work'
    });
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[119][1]++;
  }
  cov_wrczz4m8q().s[482]++;
  if (services.secrets.status === 'degraded') {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[120][0]++;
    cov_wrczz4m8q().s[483]++;
    recommendations.push({
      priority: 'medium',
      service: 'secrets',
      issue: 'Secrets Manager not fully configured',
      action: 'Set up API_KEY_ENCRYPTION_SECRET_ARN and JWT_SECRET_ARN',
      impact: 'Fallback to environment variables for secrets'
    });
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[120][1]++;
  }
  cov_wrczz4m8q().s[484]++;
  if (recommendations.length === 0) {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[121][0]++;
    cov_wrczz4m8q().s[485]++;
    recommendations.push({
      priority: 'info',
      service: 'all',
      issue: 'All API services are healthy',
      action: 'No action required',
      impact: 'API key service fully operational'
    });
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[121][1]++;
  }
  cov_wrczz4m8q().s[486]++;
  return recommendations;
}

// Circuit Breaker Analytics Helper Functions

/**
 * Calculate health score for a circuit breaker (0-100)
 */
function calculateHealthScore(breaker) {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[71]++;
  cov_wrczz4m8q().s[487]++;
  if (
  /* istanbul ignore next */
  (cov_wrczz4m8q().b[123][0]++, breaker.state === 'closed') &&
  /* istanbul ignore next */
  (cov_wrczz4m8q().b[123][1]++, breaker.failures === 0)) {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[122][0]++;
    cov_wrczz4m8q().s[488]++;
    return 100;
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[122][1]++;
  }
  cov_wrczz4m8q().s[489]++;
  if (breaker.state === 'open') {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[124][0]++;
    cov_wrczz4m8q().s[490]++;
    return 0;
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[124][1]++;
  }
  cov_wrczz4m8q().s[491]++;
  if (breaker.state === 'half-open') {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[125][0]++;
    cov_wrczz4m8q().s[492]++;
    return 50;
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[125][1]++;
  }

  // For closed state with failures
  const threshold =
  /* istanbul ignore next */
  (cov_wrczz4m8q().s[493]++, 5); // Default threshold
  const healthScore =
  /* istanbul ignore next */
  (cov_wrczz4m8q().s[494]++, Math.max(0, 100 - breaker.failures / threshold * 100));
  /* istanbul ignore next */
  cov_wrczz4m8q().s[495]++;
  return Math.round(healthScore);
}

/**
 * Calculate risk level for a circuit breaker
 */
function calculateRiskLevel(breaker) {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[72]++;
  cov_wrczz4m8q().s[496]++;
  if (breaker.state === 'open') {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[126][0]++;
    cov_wrczz4m8q().s[497]++;
    return 'critical';
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[126][1]++;
  }
  cov_wrczz4m8q().s[498]++;
  if (breaker.state === 'half-open') {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[127][0]++;
    cov_wrczz4m8q().s[499]++;
    return 'warning';
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[127][1]++;
  }
  cov_wrczz4m8q().s[500]++;
  if (breaker.failures >= 3) {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[128][0]++;
    cov_wrczz4m8q().s[501]++;
    return 'warning';
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[128][1]++;
  }
  cov_wrczz4m8q().s[502]++;
  if (breaker.failures >= 1) {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[129][0]++;
    cov_wrczz4m8q().s[503]++;
    return 'minor';
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[129][1]++;
  }
  cov_wrczz4m8q().s[504]++;
  return 'low';
}

/**
 * Get next state transition information
 */
function getNextStateTransition(breaker) {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[73]++;
  const now =
  /* istanbul ignore next */
  (cov_wrczz4m8q().s[505]++, Date.now());
  const timeSinceLastFailure =
  /* istanbul ignore next */
  (cov_wrczz4m8q().s[506]++, now - breaker.lastFailureTime);
  /* istanbul ignore next */
  cov_wrczz4m8q().s[507]++;
  if (breaker.state === 'open') {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[130][0]++;
    const timeoutMs =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[508]++, 60000); // 1 minute default timeout
    const timeUntilHalfOpen =
    /* istanbul ignore next */
    (cov_wrczz4m8q().s[509]++, timeoutMs - timeSinceLastFailure);
    /* istanbul ignore next */
    cov_wrczz4m8q().s[510]++;
    if (timeUntilHalfOpen <= 0) {
      /* istanbul ignore next */
      cov_wrczz4m8q().b[131][0]++;
      cov_wrczz4m8q().s[511]++;
      return {
        nextState: 'half-open',
        transitionTime: 'now',
        description: 'Circuit breaker is ready to transition to half-open state'
      };
    } else
    /* istanbul ignore next */
    {
      cov_wrczz4m8q().b[131][1]++;
    }
    cov_wrczz4m8q().s[512]++;
    return {
      nextState: 'half-open',
      transitionTime: `${Math.ceil(timeUntilHalfOpen / 1000)} seconds`,
      description: `Circuit breaker will transition to half-open in ${Math.ceil(timeUntilHalfOpen / 1000)} seconds`
    };
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[130][1]++;
  }
  cov_wrczz4m8q().s[513]++;
  if (breaker.state === 'half-open') {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[132][0]++;
    cov_wrczz4m8q().s[514]++;
    return {
      nextState: 'closed or open',
      transitionTime: 'on next request',
      description: 'Circuit breaker will transition based on next request result'
    };
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[132][1]++;
  }
  cov_wrczz4m8q().s[515]++;
  return {
    nextState: 'stable',
    transitionTime: 'on failure',
    description: 'Circuit breaker will remain closed until failure threshold is reached'
  };
}

/**
 * Get recommended action for circuit breaker
 */
function getRecommendedAction(breaker) {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[74]++;
  cov_wrczz4m8q().s[516]++;
  if (breaker.state === 'open') {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[133][0]++;
    cov_wrczz4m8q().s[517]++;
    return 'Investigate service issues, check connectivity and logs';
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[133][1]++;
  }
  cov_wrczz4m8q().s[518]++;
  if (breaker.state === 'half-open') {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[134][0]++;
    cov_wrczz4m8q().s[519]++;
    return 'Monitor closely, service is recovering';
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[134][1]++;
  }
  cov_wrczz4m8q().s[520]++;
  if (breaker.failures >= 3) {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[135][0]++;
    cov_wrczz4m8q().s[521]++;
    return 'Monitor for patterns, consider increasing timeout or improving service reliability';
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[135][1]++;
  }
  cov_wrczz4m8q().s[522]++;
  if (breaker.failures >= 1) {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[136][0]++;
    cov_wrczz4m8q().s[523]++;
    return 'Monitor for additional failures';
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[136][1]++;
  }
  cov_wrczz4m8q().s[524]++;
  return 'No action required';
}

/**
 * Get alert level for circuit breaker
 */
function getAlertLevel(breaker) {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[75]++;
  cov_wrczz4m8q().s[525]++;
  if (breaker.state === 'open') {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[137][0]++;
    cov_wrczz4m8q().s[526]++;
    return 'critical';
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[137][1]++;
  }
  cov_wrczz4m8q().s[527]++;
  if (breaker.state === 'half-open') {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[138][0]++;
    cov_wrczz4m8q().s[528]++;
    return 'warning';
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[138][1]++;
  }
  cov_wrczz4m8q().s[529]++;
  if (breaker.failures >= 3) {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[139][0]++;
    cov_wrczz4m8q().s[530]++;
    return 'warning';
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[139][1]++;
  }
  cov_wrczz4m8q().s[531]++;
  if (breaker.failures >= 1) {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[140][0]++;
    cov_wrczz4m8q().s[532]++;
    return 'minor';
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[140][1]++;
  }
  cov_wrczz4m8q().s[533]++;
  return 'healthy';
}

/**
 * Calculate overall health score from all circuit breakers
 */
function calculateOverallHealthScore(analytics) {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[76]++;
  const services =
  /* istanbul ignore next */
  (cov_wrczz4m8q().s[534]++, Object.values(analytics));
  /* istanbul ignore next */
  cov_wrczz4m8q().s[535]++;
  if (services.length === 0) {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[141][0]++;
    cov_wrczz4m8q().s[536]++;
    return 100;
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[141][1]++;
  }
  const totalScore =
  /* istanbul ignore next */
  (cov_wrczz4m8q().s[537]++, services.reduce((sum, service) => {
    /* istanbul ignore next */
    cov_wrczz4m8q().f[77]++;
    cov_wrczz4m8q().s[538]++;
    return sum + service.analysis.healthScore;
  }, 0));
  /* istanbul ignore next */
  cov_wrczz4m8q().s[539]++;
  return Math.round(totalScore / services.length);
}

/**
 * Generate system-wide recommendations
 */
function generateSystemRecommendations(analytics) {
  /* istanbul ignore next */
  cov_wrczz4m8q().f[78]++;
  const recommendations =
  /* istanbul ignore next */
  (cov_wrczz4m8q().s[540]++, []);
  const services =
  /* istanbul ignore next */
  (cov_wrczz4m8q().s[541]++, Object.entries(analytics));

  // Check for critical services
  const criticalServices =
  /* istanbul ignore next */
  (cov_wrczz4m8q().s[542]++, services.filter(([_, service]) => {
    /* istanbul ignore next */
    cov_wrczz4m8q().f[79]++;
    cov_wrczz4m8q().s[543]++;
    return service.analysis.alertLevel === 'critical';
  }));
  /* istanbul ignore next */
  cov_wrczz4m8q().s[544]++;
  if (criticalServices.length > 0) {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[142][0]++;
    cov_wrczz4m8q().s[545]++;
    recommendations.push({
      priority: 'critical',
      title: 'Critical Service Failures',
      description: `${criticalServices.length} service(s) have circuit breakers in open state`,
      services: criticalServices.map(([key, _]) => {
        /* istanbul ignore next */
        cov_wrczz4m8q().f[80]++;
        cov_wrczz4m8q().s[546]++;
        return key;
      }),
      action: 'Immediate investigation required'
    });
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[142][1]++;
  }

  // Check for warning services
  const warningServices =
  /* istanbul ignore next */
  (cov_wrczz4m8q().s[547]++, services.filter(([_, service]) => {
    /* istanbul ignore next */
    cov_wrczz4m8q().f[81]++;
    cov_wrczz4m8q().s[548]++;
    return service.analysis.alertLevel === 'warning';
  }));
  /* istanbul ignore next */
  cov_wrczz4m8q().s[549]++;
  if (warningServices.length > 0) {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[143][0]++;
    cov_wrczz4m8q().s[550]++;
    recommendations.push({
      priority: 'warning',
      title: 'Services Under Stress',
      description: `${warningServices.length} service(s) showing signs of instability`,
      services: warningServices.map(([key, _]) => {
        /* istanbul ignore next */
        cov_wrczz4m8q().f[82]++;
        cov_wrczz4m8q().s[551]++;
        return key;
      }),
      action: 'Monitor closely and investigate patterns'
    });
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[143][1]++;
  }

  // Check for recent failures
  const recentFailures =
  /* istanbul ignore next */
  (cov_wrczz4m8q().s[552]++, services.filter(([_, service]) => {
    /* istanbul ignore next */
    cov_wrczz4m8q().f[83]++;
    cov_wrczz4m8q().s[553]++;
    return service.analysis.isRecentFailure;
  }));
  /* istanbul ignore next */
  cov_wrczz4m8q().s[554]++;
  if (recentFailures.length > 0) {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[144][0]++;
    cov_wrczz4m8q().s[555]++;
    recommendations.push({
      priority: 'info',
      title: 'Recent Failures Detected',
      description: `${recentFailures.length} service(s) had failures in the last 5 minutes`,
      services: recentFailures.map(([key, _]) => {
        /* istanbul ignore next */
        cov_wrczz4m8q().f[84]++;
        cov_wrczz4m8q().s[556]++;
        return key;
      }),
      action: 'Review recent activity and error logs'
    });
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[144][1]++;
  }

  // Check overall health
  const overallHealth =
  /* istanbul ignore next */
  (cov_wrczz4m8q().s[557]++, calculateOverallHealthScore(analytics));
  /* istanbul ignore next */
  cov_wrczz4m8q().s[558]++;
  if (overallHealth < 70) {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[145][0]++;
    cov_wrczz4m8q().s[559]++;
    recommendations.push({
      priority: 'warning',
      title: 'Overall System Health Below Threshold',
      description: `System health score is ${overallHealth}%`,
      action: 'Review system architecture and service dependencies'
    });
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[145][1]++;
  }
  cov_wrczz4m8q().s[560]++;
  if (recommendations.length === 0) {
    /* istanbul ignore next */
    cov_wrczz4m8q().b[146][0]++;
    cov_wrczz4m8q().s[561]++;
    recommendations.push({
      priority: 'info',
      title: 'All Services Healthy',
      description: 'All circuit breakers are in healthy state',
      action: 'Continue monitoring'
    });
  } else
  /* istanbul ignore next */
  {
    cov_wrczz4m8q().b[146][1]++;
  }
  cov_wrczz4m8q().s[562]++;
  return recommendations;
}
/* istanbul ignore next */
cov_wrczz4m8q().s[563]++;
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3Zfd3Jjeno0bThxIiwiYWN0dWFsQ292ZXJhZ2UiLCJleHByZXNzIiwicyIsInJlcXVpcmUiLCJoZWFsdGhDaGVjayIsInF1ZXJ5IiwidmFsaWRhdGVEYXRhYmFzZVNjaGVtYSIsIlJFUVVJUkVEX1NDSEVNQSIsImFwaUtleVNlcnZpY2UiLCJBbHBhY2FTZXJ2aWNlIiwidGltZW91dEhlbHBlciIsInNjaGVtYVZhbGlkYXRvciIsIlNlY3JldHNNYW5hZ2VyQ2xpZW50IiwiR2V0U2VjcmV0VmFsdWVDb21tYW5kIiwiQ29nbml0b0lkZW50aXR5UHJvdmlkZXJDbGllbnQiLCJEZXNjcmliZVVzZXJQb29sQ29tbWFuZCIsImp3dFNlY3JldE1hbmFnZXIiLCJjcnlwdG8iLCJyb3V0ZXIiLCJSb3V0ZXIiLCJnZXQiLCJyZXEiLCJyZXMiLCJmIiwic3RhcnRUaW1lIiwiRGF0ZSIsIm5vdyIsIm1heFRpbWVvdXQiLCJxdWljayIsImIiLCJzdWNjZXNzIiwic3RhdHVzIiwiaGVhbHRoeSIsInNlcnZpY2UiLCJlbnZpcm9ubWVudCIsInByb2Nlc3MiLCJlbnYiLCJFTlZJUk9OTUVOVCIsIm1lbW9yeSIsIm1lbW9yeVVzYWdlIiwidXB0aW1lIiwibm90ZSIsImRhdGFiYXNlIiwiYXBpIiwidmVyc2lvbiIsImNvbmZpZyIsImhhc0RiU2VjcmV0IiwiREJfU0VDUkVUX0FSTiIsImhhc0RiRW5kcG9pbnQiLCJEQl9FTkRQT0lOVCIsImhhc0F3c1JlZ2lvbiIsIkFXU19SRUdJT04iLCJkYkhlYWx0aFByb21pc2UiLCJnZXRDb21wcmVoZW5zaXZlRGJIZWFsdGgiLCJ0aW1lb3V0UHJvbWlzZSIsIlByb21pc2UiLCJfIiwicmVqZWN0Iiwic2V0VGltZW91dCIsIkVycm9yIiwiZGJIZWFsdGgiLCJyYWNlIiwiaXNIZWFsdGh5Iiwic2VydmljZVVuYXZhaWxhYmxlIiwiZXJyb3IiLCJkdXJhdGlvbiIsImNvbnNvbGUiLCJtZXNzYWdlIiwianNvbiIsInRpbWVzdGFtcCIsInRvSVNPU3RyaW5nIiwic2VydmVyRXJyb3IiLCJ0YWJsZXNSZXN1bHQiLCJleGlzdGluZ1RhYmxlcyIsInJvd3MiLCJtYXAiLCJyIiwidGFibGVfbmFtZSIsImNyaXRpY2FsV2ViYXBwVGFibGVzIiwicmVzdWx0cyIsInRhYmxlIiwiaW5jbHVkZXMiLCJyZXN1bHQiLCJleGlzdHMiLCJjb3VudCIsInBhcnNlSW50IiwiZGF0YUxvYWRpbmdUYWJsZXMiLCJkYXRhVGFibGVzSW5mbyIsIndlYmFwcFRhYmxlc1JlYWR5IiwiT2JqZWN0IiwidmFsdWVzIiwiZXZlcnkiLCJyZWFkeSIsIndlYmFwcF90YWJsZXMiLCJkYXRhX2xvYWRpbmdfdGFibGVzIiwidG90YWxfdGFibGVzX2ZvdW5kIiwibGVuZ3RoIiwiYWxsX3RhYmxlcyIsImRhdGFiYXNlX2luZm8iLCJjb2RlIiwidGFibGVfY291bnQiLCJ0YWJsZXMiLCJsb2ciLCJzZXJ2aWNlcyIsImNoZWNrRGF0YWJhc2VIZWFsdGgiLCJhbHBhY2FBcGkiLCJjaGVja0FscGFjYUFwaUhlYWx0aCIsImF3c1NlY3JldHNNYW5hZ2VyIiwiY2hlY2tBd3NTZWNyZXRzTWFuYWdlckhlYWx0aCIsImF3c1JkcyIsImNoZWNrQXdzUmRzSGVhbHRoIiwiYXdzQ29nbml0byIsImNoZWNrQXdzQ29nbml0b0hlYWx0aCIsImhlYWx0aHlTZXJ2aWNlcyIsImZpbHRlciIsInRvdGFsU2VydmljZXMiLCJrZXlzIiwiYWxsSGVhbHRoeSIsInJlc3BvbnNlRGF0YSIsInN1bW1hcnkiLCJ0b3RhbF9zZXJ2aWNlcyIsImhlYWx0aHlfc2VydmljZXMiLCJkZWdyYWRlZF9zZXJ2aWNlcyIsImZhaWxlZF9zZXJ2aWNlcyIsImhlYWx0aF9wZXJjZW50YWdlIiwiTWF0aCIsInJvdW5kIiwiY2hlY2tBcGlLZXlTZXJ2aWNlSGVhbHRoIiwiand0U2VjcmV0U2VydmljZSIsImNoZWNrSnd0U2VjcmV0U2VydmljZUhlYWx0aCIsImVuY3J5cHRpb25TZXJ2aWNlIiwiY2hlY2tFbmNyeXB0aW9uU2VydmljZUhlYWx0aCIsImNoZWNrRGF0YWJhc2VUYWJsZXNGb3JBcGlLZXlzIiwic2VjcmV0cyIsImNoZWNrU2VjcmV0c01hbmFnZXJIZWFsdGgiLCJyZWNvbW1lbmRhdGlvbnMiLCJnZW5lcmF0ZUFwaVNlcnZpY2VSZWNvbW1lbmRhdGlvbnMiLCJ0YWJsZU5hbWUiLCJ0YWJsZUNoZWNrIiwidGFibGVFeGlzdHMiLCJ0YWJsZURhdGEiLCJkYXRhIiwicmVjb3JkX2NvdW50IiwiY2lyY3VpdEJyZWFrZXJzIiwiZ2V0Q2lyY3VpdEJyZWFrZXJTdGF0dXMiLCJ0aW1lb3V0Q29uZmlnIiwiZGVmYXVsdFRpbWVvdXRzIiwiYWxwYWNhIiwibmV3cyIsInNlbnRpbWVudCIsImV4dGVybmFsIiwidXBsb2FkIiwid2Vic29ja2V0IiwidGltZW91dHMiLCJ0b3RhbENpcmN1aXRCcmVha2VycyIsIm9wZW5DaXJjdWl0QnJlYWtlcnMiLCJjYiIsInN0YXRlIiwiaGFsZk9wZW5DaXJjdWl0QnJlYWtlcnMiLCJnZW5lcmF0ZVRpbWVvdXRSZWNvbW1lbmRhdGlvbnMiLCJhbmFseXRpY3MiLCJzZXJ2aWNlS2V5IiwiYnJlYWtlciIsImVudHJpZXMiLCJ0aW1lU2luY2VMYXN0RmFpbHVyZSIsImxhc3RGYWlsdXJlVGltZSIsImlzUmVjZW50RmFpbHVyZSIsImFuYWx5c2lzIiwiaGVhbHRoU2NvcmUiLCJjYWxjdWxhdGVIZWFsdGhTY29yZSIsInJpc2tMZXZlbCIsImNhbGN1bGF0ZVJpc2tMZXZlbCIsIm5leHRTdGF0ZVRyYW5zaXRpb24iLCJnZXROZXh0U3RhdGVUcmFuc2l0aW9uIiwicmVjb21tZW5kZWRBY3Rpb24iLCJnZXRSZWNvbW1lbmRlZEFjdGlvbiIsImFsZXJ0TGV2ZWwiLCJnZXRBbGVydExldmVsIiwic3lzdGVtQW5hbHl0aWNzIiwib3ZlcmFsbEhlYWx0aFNjb3JlIiwiY2FsY3VsYXRlT3ZlcmFsbEhlYWx0aFNjb3JlIiwiY3JpdGljYWxTZXJ2aWNlcyIsImtleSIsIndhcm5pbmdTZXJ2aWNlcyIsInJlY2VudEZhaWx1cmVzIiwidG90YWxGYWlsdXJlcyIsInJlZHVjZSIsInN1bSIsImZhaWx1cmVzIiwiZ2VuZXJhdGVTeXN0ZW1SZWNvbW1lbmRhdGlvbnMiLCJhIiwib3B0aW9ucyIsImluY2x1ZGVPcHRpb25hbCIsImluY2x1ZGVfb3B0aW9uYWwiLCJzdHJpY3QiLCJyZXBvcnQiLCJnZXRTY2hlbWFWYWxpZGF0aW9uUmVwb3J0IiwidG90YWxUYWJsZXMiLCJ2YWxpZFNjaGVtYXMiLCJtaXNzaW5nUmVxdWlyZWQiLCJpbnZhbGlkU2NoZW1hcyIsInBhcmFtcyIsInRocm93T25NaXNzaW5nIiwidGhyb3ciLCJ2YWxpZGF0ZVRhYmxlRXhpc3RzIiwidXNlQ2FjaGUiLCJub19jYWNoZSIsImV4cGVjdGVkVGFibGUiLCJleHBlY3RlZFRhYmxlcyIsImV4cGVjdGVkIiwicG9zdCIsImNhY2hlU3RhdHVzIiwiZ2V0Q2FjaGVTdGF0dXMiLCJjbGVhckNhY2hlIiwicHJldmlvdXNDYWNoZVNpemUiLCJzaXplIiwiY2xlYXJlZEVudHJpZXMiLCJjb2x1bW5fY291bnQiLCJjb2x1bW5zIiwiZGlhZ25vc3RpY3MiLCJyZWdpb24iLCJXRUJBUFBfQVdTX1JFR0lPTiIsInN5c3RlbSIsInBsYXRmb3JtIiwibm9kZVZlcnNpb24iLCJjb25maWd1cmF0aW9uIiwiZW5kcG9pbnQiLCJzZWNyZXRBcm4iLCJjb25uZWN0VGltZW91dCIsIkRCX0NPTk5FQ1RfVElNRU9VVCIsInBvb2xNYXgiLCJEQl9QT09MX01BWCIsImF1dGhlbnRpY2F0aW9uIiwiY29nbml0b1VzZXJQb29sIiwiQ09HTklUT19VU0VSX1BPT0xfSUQiLCJjb2duaXRvQ2xpZW50IiwiQ09HTklUT19DTElFTlRfSUQiLCJhcGlLZXlzIiwiZW5jcnlwdGlvblNlY3JldCIsIkFQSV9LRVlfRU5DUllQVElPTl9TRUNSRVRfQVJOIiwibGFtYmRhIiwiZnVuY3Rpb25OYW1lIiwiQVdTX0xBTUJEQV9GVU5DVElPTl9OQU1FIiwiZnVuY3Rpb25WZXJzaW9uIiwiQVdTX0xBTUJEQV9GVU5DVElPTl9WRVJTSU9OIiwiaGVhbHRoQ2hlY2tzIiwic2VjcmV0c01hbmFnZXIiLCJlbnN1cmVJbml0aWFsaXplZCIsImRpYWdub3N0aWNzRHVyYXRpb24iLCJsYW1iZGFPcHRpbWl6ZXIiLCJtZXRyaWNzIiwiZ2V0TWV0cmljcyIsImxhbWJkYU1ldHJpY3MiLCJOT0RFX0VOViIsImRhdGFiYXNlX2NvbmZpZyIsImxhbWJkYV9pbmZvIiwibm9kZV92ZXJzaW9uIiwiaGVhZGVyIiwiaGVhZGVycyIsIm9yaWdpbiIsImhlYWx0aERhdGEiLCJsYXN0X3VwZGF0ZWQiLCJsYXN0X2NoZWNrZWQiLCJjcml0aWNhbF90YWJsZSIsInRhYmxlX2NhdGVnb3J5Iiwic3RvcmVFcnJvciIsIndhcm4iLCJkZXRhaWxzIiwiYmFzaWNIZWFsdGgiLCJ0b3RhbF90YWJsZXMiLCJoZWFsdGh5X3RhYmxlcyIsInN0YWxlX3RhYmxlcyIsImVycm9yX3RhYmxlcyIsImVtcHR5X3RhYmxlcyIsIm1pc3NpbmdfdGFibGVzIiwidG90YWxfcmVjb3JkcyIsInRvdGFsX21pc3NpbmdfZGF0YSIsInRhYmxlQ2F0ZWdvcml6YXRpb24iLCJjcml0aWNhbFRhYmxlcyIsImNhdGVnb3JpemVUYWJsZSIsImNhdGVnb3J5IiwiYmF0Y2hRdWVyeSIsImFsbFRhYmxlcyIsInRhYmxlSGVhbHRoIiwidG90YWxSZWNvcmRzIiwiaGVhbHRoeVRhYmxlcyIsInN0YWxlVGFibGVzIiwiZXJyb3JUYWJsZXMiLCJlbXB0eVRhYmxlcyIsImVzdGltYXRlZFJvd3MiLCJlc3RpbWF0ZWRfcm93cyIsImxhc3RVcGRhdGVkIiwibGFzdF9hbmFseXplIiwibGFzdF9hdXRvYW5hbHl6ZSIsImxhc3RfdmFjdXVtIiwibGFzdF9hdXRvdmFjdXVtIiwiaXNTdGFsZSIsImhvdXJzU2luY2VVcGRhdGUiLCJpc19zdGFsZSIsIm1pc3NpbmdfZGF0YV9jb3VudCIsImN1cnJlbnRUaW1lIiwicG9zdGdyZXNWZXJzaW9uIiwicmVzcG9uc2VUaW1lIiwiY29ubmVjdGlvbiIsImhvc3QiLCJwb29sIiwic3NsIiwidGltZW91dCIsInRlc3RDcmVkZW50aWFscyIsImNyZWRlbnRpYWxzUXVlcnkiLCJyb3ciLCJkZWNyeXB0ZWRLZXkiLCJkZWNyeXB0QXBpS2V5IiwiYXBpX2tleV9lbmNyeXB0ZWQiLCJkZWNyeXB0ZWRTZWNyZXQiLCJhcGlfc2VjcmV0X2VuY3J5cHRlZCIsImFwaUtleSIsImFwaVNlY3JldCIsImlzU2FuZGJveCIsImlzX3NhbmRib3giLCJkYkVycm9yIiwiYWNjb3VudEluZm8iLCJnZXRBY2NvdW50IiwiYWNjb3VudCIsInRyYWRpbmdCbG9ja2VkIiwidHJhZGluZ19ibG9ja2VkIiwiZmVhdHVyZXMiLCJ0cmFkaW5nIiwibWFya2V0RGF0YSIsInBvcnRmb2xpbyIsImNpcmN1aXRCcmVha2VyVHJpZ2dlcmVkIiwidGVzdFNlY3JldEFybiIsImNvbmZpZ3VyZWQiLCJzZW5kIiwiU2VjcmV0SWQiLCJkYlNlY3JldCIsImFwaUtleVNlY3JldCIsIm11bHRpQXoiLCJiYWNrdXBzIiwidXNlclBvb2xJZCIsImNsaWVudElkIiwidXNlclBvb2wiLCJjb2duaXRvSWRwIiwiVXNlclBvb2xJZCIsInVzZXJNYW5hZ2VtZW50IiwibWZhIiwidGVzdFJlc3VsdCIsInRlc3RFbmNyeXB0aW9uRnVuY3Rpb25hbGl0eSIsImlzRW5hYmxlZCIsImVuYWJsZWQiLCJlbmNyeXB0aW9uIiwiZW5jcnlwdGlvblRlc3QiLCJpbml0aWFsaXplIiwic2VjcmV0SW5mbyIsImdldFNlY3JldEluZm8iLCJqd3RUZXN0UmVzdWx0IiwidGVzdEp3dEZ1bmN0aW9uYWxpdHkiLCJhdmFpbGFibGUiLCJzb3VyY2UiLCJ2YWxpZGF0aW9uIiwiand0VGVzdCIsInRva2VuR2VuZXJhdGlvbiIsInRva2VuR2VuZXJhdGVkIiwidG9rZW5WYWxpZGF0aW9uIiwidG9rZW5WYWxpZCIsInNlY3JldFN0cmVuZ3RoIiwic3RyZW5ndGgiLCJzZXJ2aWNlSGVhbHRoIiwiZ2V0U2VydmljZUhlYWx0aCIsIm92ZXJhbGwiLCJqd3QiLCJqd3RTZXJ2aWNlIiwiaGFzRW5jcnlwdGlvblNlY3JldCIsImhhc1NlY3JldCIsImp3dEF2YWlsYWJsZSIsInNlY3JldExlbmd0aCIsInJlcXVpcmVkVGFibGVzIiwidGFibGVTdGF0dXMiLCJ0Iiwic3Vic3RyaW5nIiwicHVzaCIsImlzc3VlIiwicmVjb21tZW5kYXRpb24iLCJwcmlvcml0eSIsInJlcXVlc3RJZCIsInJhbmRvbVVVSUQiLCJzcGxpdCIsInJlcXVlc3RTdGFydCIsInVzZXJBZ2VudCIsImlwIiwic2NoZW1hVmFsaWRhdGlvbiIsInNjaGVtYV92YWxpZGF0aW9uIiwidmFsaWQiLCJoZWFsdGhQZXJjZW50YWdlIiwiY3JpdGljYWxfbWlzc2luZyIsImNyaXRpY2FsTWlzc2luZyIsInRvdGFsX3JlcXVpcmVkIiwidG90YWxSZXF1aXJlZCIsInRvdGFsX2V4aXN0aW5nIiwidG90YWxFeGlzdGluZyIsImNhdGVnb3JpZXMiLCJjb3JlIiwibWlzc2luZyIsInJlcXVpcmVkIiwiZXhpc3RpbmciLCJleGlzdGluZ190YWJsZXMiLCJtYXJrZXRfZGF0YSIsIm9wdGlvbmFsIiwic2NoZW1hX2RlZmluaXRpb24iLCJnZW5lcmF0ZVNjaGVtYVJlY29tbWVuZGF0aW9ucyIsInZhbGlkYXRpb25faW5mbyIsImR1cmF0aW9uX21zIiwidmFsaWRhdGlvbkR1cmF0aW9uIiwicmVxdWVzdF9pZCIsInJlcXVlc3RfaW5mbyIsInRvdGFsX2R1cmF0aW9uX21zIiwic3RhdHVzQ29kZSIsInRvdGFsRHVyYXRpb24iLCJzY2hlbWFIZWFsdGgiLCJlcnJvckR1cmF0aW9uIiwiZXJyb3JTdGFjayIsInN0YWNrIiwiaW1wYWN0IiwiZXJyb3JfZHVyYXRpb25fbXMiLCJ0eXBlIiwiYWN0aW9uIiwiZm9yRWFjaCIsImNhdGVnb3J5RGF0YSIsImpvaW4iLCJnZXRDYXRlZ29yeUltcGFjdCIsImltcGFjdHMiLCJ0ZXN0QXBpS2V5IiwicmFuZG9tIiwidG9TdHJpbmciLCJzdWJzdHIiLCJ0ZXN0U2FsdCIsInRlc3RVc2VySWQiLCJ0ZXN0UHJvdmlkZXIiLCJlbmNyeXB0ZWQiLCJlbmNyeXB0QXBpS2V5IiwiZGVjcnlwdGVkIiwib3JpZ2luYWxMZW5ndGgiLCJlbmNyeXB0ZWRMZW5ndGgiLCJkZWNyeXB0ZWRMZW5ndGgiLCJyb3VuZFRyaXBTdWNjZXNzIiwidGVzdFBlcm1pc3Npb25zIiwidG9rZW4iLCJnZW5lcmF0ZUFwaUtleVRva2VuIiwidmFsaWRhdGVBcGlLZXlUb2tlbiIsInVzZXJJZCIsInByb3ZpZGVyIiwidG9rZW5MZW5ndGgiLCJ1c2VySWRNYXRjaCIsInByb3ZpZGVyTWF0Y2giLCJwZXJtaXNzaW9uc01hdGNoIiwiSlNPTiIsInN0cmluZ2lmeSIsInBlcm1pc3Npb25zIiwidGhyZXNob2xkIiwibWF4IiwidGltZW91dE1zIiwidGltZVVudGlsSGFsZk9wZW4iLCJuZXh0U3RhdGUiLCJ0cmFuc2l0aW9uVGltZSIsImRlc2NyaXB0aW9uIiwiY2VpbCIsInRvdGFsU2NvcmUiLCJ0aXRsZSIsIm92ZXJhbGxIZWFsdGgiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiaGVhbHRoLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCB7IGhlYWx0aENoZWNrLCBxdWVyeSwgdmFsaWRhdGVEYXRhYmFzZVNjaGVtYSwgUkVRVUlSRURfU0NIRU1BIH0gPSByZXF1aXJlKCcuLi91dGlscy9kYXRhYmFzZScpO1xuY29uc3QgYXBpS2V5U2VydmljZSA9IHJlcXVpcmUoJy4uL3V0aWxzL3NpbXBsZUFwaUtleVNlcnZpY2UnKTtcbmNvbnN0IEFscGFjYVNlcnZpY2UgPSByZXF1aXJlKCcuLi91dGlscy9hbHBhY2FTZXJ2aWNlJyk7XG5jb25zdCB0aW1lb3V0SGVscGVyID0gcmVxdWlyZSgnLi4vdXRpbHMvdGltZW91dEhlbHBlcicpO1xuY29uc3Qgc2NoZW1hVmFsaWRhdG9yID0gcmVxdWlyZSgnLi4vdXRpbHMvc2NoZW1hVmFsaWRhdG9yJyk7XG5jb25zdCB7IFNlY3JldHNNYW5hZ2VyQ2xpZW50LCBHZXRTZWNyZXRWYWx1ZUNvbW1hbmQgfSA9IHJlcXVpcmUoJ0Bhd3Mtc2RrL2NsaWVudC1zZWNyZXRzLW1hbmFnZXInKTtcbmNvbnN0IHsgQ29nbml0b0lkZW50aXR5UHJvdmlkZXJDbGllbnQsIERlc2NyaWJlVXNlclBvb2xDb21tYW5kIH0gPSByZXF1aXJlKCdAYXdzLXNkay9jbGllbnQtY29nbml0by1pZGVudGl0eS1wcm92aWRlcicpO1xuY29uc3Qgand0U2VjcmV0TWFuYWdlciA9IHJlcXVpcmUoJy4uL3V0aWxzL2p3dFNlY3JldE1hbmFnZXInKTtcbmNvbnN0IGNyeXB0byA9IHJlcXVpcmUoJ2NyeXB0bycpO1xuXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG4vLyBJbmZyYXN0cnVjdHVyZSBoZWFsdGggY2hlY2sgLSB0ZXN0cyBkYXRhYmFzZSBjb25uZWN0aXZpdHkgb25seVxucm91dGVyLmdldCgnLycsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICBjb25zdCBzdGFydFRpbWUgPSBEYXRlLm5vdygpO1xuICBjb25zdCBtYXhUaW1lb3V0ID0gMTAwMDA7IC8vIDEwIHNlY29uZCBtYXggdGltZW91dFxuICBcbiAgdHJ5IHtcbiAgICAvLyBRdWljayBoZWFsdGggY2hlY2sgd2l0aG91dCBkYXRhYmFzZVxuICAgIGlmIChyZXEucXVlcnkucXVpY2sgPT09ICd0cnVlJykge1xuICAgICAgcmV0dXJuIHJlcy5zdWNjZXNzKHtcbiAgICAgICAgc3RhdHVzOiAnaGVhbHRoeScsXG4gICAgICAgIGhlYWx0aHk6IHRydWUsXG4gICAgICAgIHNlcnZpY2U6ICdGaW5hbmNpYWwgRGFzaGJvYXJkIEFQSScsXG4gICAgICAgIGVudmlyb25tZW50OiBwcm9jZXNzLmVudi5FTlZJUk9OTUVOVCB8fCAnZGV2JyxcbiAgICAgICAgbWVtb3J5OiBwcm9jZXNzLm1lbW9yeVVzYWdlKCksXG4gICAgICAgIHVwdGltZTogcHJvY2Vzcy51cHRpbWUoKSxcbiAgICAgICAgbm90ZTogJ1F1aWNrIGluZnJhc3RydWN0dXJlIGNoZWNrIC0gZGF0YWJhc2Ugbm90IHRlc3RlZCcsXG4gICAgICAgIGRhdGFiYXNlOiB7IHN0YXR1czogJ25vdF90ZXN0ZWQnIH0sXG4gICAgICAgIGFwaTogeyB2ZXJzaW9uOiAnMS4wLjAnLCBlbnZpcm9ubWVudDogcHJvY2Vzcy5lbnYuRU5WSVJPTk1FTlQgfHwgJ2RldicgfSxcbiAgICAgICAgY29uZmlnOiB7XG4gICAgICAgICAgaGFzRGJTZWNyZXQ6ICEhcHJvY2Vzcy5lbnYuREJfU0VDUkVUX0FSTixcbiAgICAgICAgICBoYXNEYkVuZHBvaW50OiAhIXByb2Nlc3MuZW52LkRCX0VORFBPSU5ULFxuICAgICAgICAgIGhhc0F3c1JlZ2lvbjogISFwcm9jZXNzLmVudi5BV1NfUkVHSU9OXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIEZ1bGwgaGVhbHRoIGNoZWNrIHdpdGggdGltZW91dCBwcm90ZWN0aW9uXG4gICAgY29uc3QgZGJIZWFsdGhQcm9taXNlID0gZ2V0Q29tcHJlaGVuc2l2ZURiSGVhbHRoKCk7XG4gICAgY29uc3QgdGltZW91dFByb21pc2UgPSBuZXcgUHJvbWlzZSgoXywgcmVqZWN0KSA9PiBcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4gcmVqZWN0KG5ldyBFcnJvcignSGVhbHRoIGNoZWNrIHRpbWVvdXQnKSksIG1heFRpbWVvdXQpXG4gICAgKTtcbiAgICBcbiAgICBjb25zdCBkYkhlYWx0aCA9IGF3YWl0IFByb21pc2UucmFjZShbZGJIZWFsdGhQcm9taXNlLCB0aW1lb3V0UHJvbWlzZV0pO1xuICAgIGNvbnN0IGlzSGVhbHRoeSA9IGRiSGVhbHRoLnN0YXR1cyA9PT0gJ2Nvbm5lY3RlZCc7XG5cbiAgICBpZiAoaXNIZWFsdGh5KSB7XG4gICAgICByZXR1cm4gcmVzLnN1Y2Nlc3Moe1xuICAgICAgICBzdGF0dXM6ICdoZWFsdGh5JyxcbiAgICAgICAgaGVhbHRoeTogdHJ1ZSxcbiAgICAgICAgc2VydmljZTogJ0ZpbmFuY2lhbCBEYXNoYm9hcmQgQVBJJyxcbiAgICAgICAgZW52aXJvbm1lbnQ6IHByb2Nlc3MuZW52LkVOVklST05NRU5UIHx8ICdkZXYnLFxuICAgICAgICBkYXRhYmFzZTogZGJIZWFsdGguZGF0YWJhc2UsXG4gICAgICAgIGFwaTogeyB2ZXJzaW9uOiAnMS4wLjAnLCBlbnZpcm9ubWVudDogcHJvY2Vzcy5lbnYuRU5WSVJPTk1FTlQgfHwgJ2RldicgfSxcbiAgICAgICAgbWVtb3J5OiBwcm9jZXNzLm1lbW9yeVVzYWdlKCksXG4gICAgICAgIHVwdGltZTogcHJvY2Vzcy51cHRpbWUoKVxuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiByZXMuc2VydmljZVVuYXZhaWxhYmxlKCdEYXRhYmFzZScsIHtcbiAgICAgICAgc3RhdHVzOiAndW5oZWFsdGh5JyxcbiAgICAgICAgaGVhbHRoeTogZmFsc2UsXG4gICAgICAgIHNlcnZpY2U6ICdGaW5hbmNpYWwgRGFzaGJvYXJkIEFQSScsXG4gICAgICAgIGVudmlyb25tZW50OiBwcm9jZXNzLmVudi5FTlZJUk9OTUVOVCB8fCAnZGV2JyxcbiAgICAgICAgZGF0YWJhc2U6IGRiSGVhbHRoLmRhdGFiYXNlLFxuICAgICAgICBhcGk6IHsgdmVyc2lvbjogJzEuMC4wJywgZW52aXJvbm1lbnQ6IHByb2Nlc3MuZW52LkVOVklST05NRU5UIHx8ICdkZXYnIH0sXG4gICAgICAgIG1lbW9yeTogcHJvY2Vzcy5tZW1vcnlVc2FnZSgpLFxuICAgICAgICB1cHRpbWU6IHByb2Nlc3MudXB0aW1lKClcbiAgICAgIH0pO1xuICAgIH1cblxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnN0IGR1cmF0aW9uID0gRGF0ZS5ub3coKSAtIHN0YXJ0VGltZTtcbiAgICBjb25zb2xlLmVycm9yKCdIZWFsdGggY2hlY2sgZmFpbGVkOicsIGVycm9yKTtcbiAgICBcbiAgICAvLyBIYW5kbGUgdGltZW91dCBzcGVjaWZpY2FsbHlcbiAgICBpZiAoZXJyb3IubWVzc2FnZSA9PT0gJ0hlYWx0aCBjaGVjayB0aW1lb3V0Jykge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA4KS5qc29uKHtcbiAgICAgICAgc3RhdHVzOiAndGltZW91dCcsXG4gICAgICAgIGhlYWx0aHk6IGZhbHNlLFxuICAgICAgICBtZXNzYWdlOiAnSGVhbHRoIGNoZWNrIHRpbWVkIG91dCBhZnRlciAxMCBzZWNvbmRzJyxcbiAgICAgICAgZGF0YWJhc2U6IHsgc3RhdHVzOiAndGltZW91dCcsIGVycm9yOiAnRGF0YWJhc2UgaGVhbHRoIGNoZWNrIGV4Y2VlZGVkIHRpbWVvdXQnIH0sXG4gICAgICAgIGFwaTogeyB2ZXJzaW9uOiAnMS4wLjAnLCBlbnZpcm9ubWVudDogcHJvY2Vzcy5lbnYuRU5WSVJPTk1FTlQgfHwgJ2RldicgfSxcbiAgICAgICAgZHVyYXRpb246IGR1cmF0aW9uLFxuICAgICAgICBtZW1vcnk6IHByb2Nlc3MubWVtb3J5VXNhZ2UoKSxcbiAgICAgICAgdXB0aW1lOiBwcm9jZXNzLnVwdGltZSgpLFxuICAgICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxuICAgICAgfSk7XG4gICAgfVxuICAgIFxuICAgIHJlcy5zZXJ2ZXJFcnJvcignSGVhbHRoIGNoZWNrIGZhaWxlZCcsIHtcbiAgICAgIHN0YXR1czogJ3VuaGVhbHRoeScsXG4gICAgICBoZWFsdGh5OiBmYWxzZSxcbiAgICAgIGRhdGFiYXNlOiB7IHN0YXR1czogJ2Vycm9yJywgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSxcbiAgICAgIGFwaTogeyB2ZXJzaW9uOiAnMS4wLjAnLCBlbnZpcm9ubWVudDogcHJvY2Vzcy5lbnYuRU5WSVJPTk1FTlQgfHwgJ2RldicgfSxcbiAgICAgIGR1cmF0aW9uOiBkdXJhdGlvbixcbiAgICAgIG1lbW9yeTogcHJvY2Vzcy5tZW1vcnlVc2FnZSgpLFxuICAgICAgdXB0aW1lOiBwcm9jZXNzLnVwdGltZSgpXG4gICAgfSk7XG4gIH1cbn0pO1xuXG4vLyBBcHBsaWNhdGlvbiByZWFkaW5lc3MgY2hlY2sgLSB0ZXN0cyBpZiBkYXRhYmFzZSBoYXMgdGFibGVzXG5yb3V0ZXIuZ2V0KCcvcmVhZHknLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IHF1ZXJ5IH0gPSByZXF1aXJlKCcuLi91dGlscy9kYXRhYmFzZScpO1xuICAgIFxuICAgIC8vIEZpcnN0IGNoZWNrIHdoYXQgdGFibGVzIGFjdHVhbGx5IGV4aXN0XG4gICAgY29uc3QgdGFibGVzUmVzdWx0ID0gYXdhaXQgcXVlcnkoYFxuICAgICAgU0VMRUNUIHRhYmxlX25hbWUgXG4gICAgICBGUk9NIGluZm9ybWF0aW9uX3NjaGVtYS50YWJsZXMgXG4gICAgICBXSEVSRSB0YWJsZV9zY2hlbWEgPSAncHVibGljJyBcbiAgICAgIEFORCB0YWJsZV90eXBlID0gJ0JBU0UgVEFCTEUnXG4gICAgICBPUkRFUiBCWSB0YWJsZV9uYW1lO1xuICAgIGApO1xuICAgIFxuICAgIGNvbnN0IGV4aXN0aW5nVGFibGVzID0gdGFibGVzUmVzdWx0LnJvd3MubWFwKHIgPT4gci50YWJsZV9uYW1lKTtcbiAgICBcbiAgICAvLyBDaGVjayBjcml0aWNhbCB3ZWJhcHAgdGFibGVzIChub3Qgc3RvY2tfc3ltYm9scyAtIHRoYXQgY29tZXMgZnJvbSBkYXRhIGxvYWRpbmcpXG4gICAgY29uc3QgY3JpdGljYWxXZWJhcHBUYWJsZXMgPSBbJ2xhc3RfdXBkYXRlZCcsICdoZWFsdGhfc3RhdHVzJ107XG4gICAgY29uc3QgcmVzdWx0cyA9IHt9O1xuICAgIFxuICAgIGZvciAoY29uc3QgdGFibGUgb2YgY3JpdGljYWxXZWJhcHBUYWJsZXMpIHtcbiAgICAgIGlmIChleGlzdGluZ1RhYmxlcy5pbmNsdWRlcyh0YWJsZSkpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBxdWVyeShgU0VMRUNUIENPVU5UKCopIGFzIGNvdW50IEZST00gJHt0YWJsZX0gTElNSVQgMWApO1xuICAgICAgICAgIHJlc3VsdHNbdGFibGVdID0geyBcbiAgICAgICAgICAgIGV4aXN0czogdHJ1ZSwgXG4gICAgICAgICAgICBjb3VudDogcGFyc2VJbnQocmVzdWx0LnJvd3NbMF0uY291bnQpLFxuICAgICAgICAgICAgc3RhdHVzOiAncmVhZHknXG4gICAgICAgICAgfTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICByZXN1bHRzW3RhYmxlXSA9IHsgXG4gICAgICAgICAgICBleGlzdHM6IHRydWUsXG4gICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSxcbiAgICAgICAgICAgIHN0YXR1czogJ2Vycm9yJ1xuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlc3VsdHNbdGFibGVdID0geyBcbiAgICAgICAgICBleGlzdHM6IGZhbHNlLFxuICAgICAgICAgIHN0YXR1czogJ25vdF9yZWFkeSdcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLy8gQ2hlY2sgaWYgZGF0YSBsb2FkaW5nIHRhYmxlcyBleGlzdCAoYnV0IGRvbid0IGZhaWwgaWYgdGhleSBkb24ndClcbiAgICBjb25zdCBkYXRhTG9hZGluZ1RhYmxlcyA9IFsnc3RvY2tfc3ltYm9scycsICdjb21wYW55X3Byb2ZpbGVzJywgJ3ByaWNlcyddO1xuICAgIGNvbnN0IGRhdGFUYWJsZXNJbmZvID0ge307XG4gICAgXG4gICAgZm9yIChjb25zdCB0YWJsZSBvZiBkYXRhTG9hZGluZ1RhYmxlcykge1xuICAgICAgZGF0YVRhYmxlc0luZm9bdGFibGVdID0ge1xuICAgICAgICBleGlzdHM6IGV4aXN0aW5nVGFibGVzLmluY2x1ZGVzKHRhYmxlKSxcbiAgICAgICAgbm90ZTogJ0NyZWF0ZWQgYnkgZGF0YSBsb2FkaW5nIHNjcmlwdHMnXG4gICAgICB9O1xuICAgIH1cbiAgICBcbiAgICBjb25zdCB3ZWJhcHBUYWJsZXNSZWFkeSA9IE9iamVjdC52YWx1ZXMocmVzdWx0cykuZXZlcnkociA9PiByLnN0YXR1cyA9PT0gJ3JlYWR5Jyk7XG4gICAgXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMod2ViYXBwVGFibGVzUmVhZHkgPyAyMDAgOiA1MDMpLmpzb24oe1xuICAgICAgc3RhdHVzOiB3ZWJhcHBUYWJsZXNSZWFkeSA/ICdyZWFkeScgOiAnbm90X3JlYWR5JyxcbiAgICAgIHJlYWR5OiB3ZWJhcHBUYWJsZXNSZWFkeSxcbiAgICAgIHNlcnZpY2U6ICdGaW5hbmNpYWwgRGFzaGJvYXJkIEFQSScsXG4gICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgIGVudmlyb25tZW50OiBwcm9jZXNzLmVudi5FTlZJUk9OTUVOVCB8fCAnZGV2JyxcbiAgICAgIHdlYmFwcF90YWJsZXM6IHJlc3VsdHMsXG4gICAgICBkYXRhX2xvYWRpbmdfdGFibGVzOiBkYXRhVGFibGVzSW5mbyxcbiAgICAgIHRvdGFsX3RhYmxlc19mb3VuZDogZXhpc3RpbmdUYWJsZXMubGVuZ3RoLFxuICAgICAgYWxsX3RhYmxlczogZXhpc3RpbmdUYWJsZXMsXG4gICAgICBub3RlOiAnV2ViYXBwIHRhYmxlcyBtdXN0IGJlIHJlYWR5OyBkYXRhIHRhYmxlcyBhcmUgb3B0aW9uYWwnXG4gICAgfSk7XG4gICAgXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignUmVhZGluZXNzIGNoZWNrIGZhaWxlZDonLCBlcnJvcik7XG4gICAgcmVzLnN0YXR1cyg1MDMpLmpzb24oe1xuICAgICAgc3RhdHVzOiAnbm90X3JlYWR5JyxcbiAgICAgIHJlYWR5OiBmYWxzZSxcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsXG4gICAgICBub3RlOiAnQXBwbGljYXRpb24gcmVhZGluZXNzIGNoZWNrIGZhaWxlZCdcbiAgICB9KTtcbiAgfVxufSk7XG5cbi8vIFJFTU9WRUQ6IEVtZXJnZW5jeSB0YWJsZSBjcmVhdGlvbiBlbmRwb2ludCAtIHVzZSBwcm9wZXIgSWFDIGRlcGxveW1lbnQgaW5zdGVhZFxuXG4vLyBEZWJ1ZyBlbmRwb2ludCBmb3IgcmF3IGRhdGFiYXNlIHF1ZXJpZXNcbnJvdXRlci5nZXQoJy9kZWJ1Zy9kYi10ZXN0JywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBxdWVyeSB9ID0gcmVxdWlyZSgnLi4vdXRpbHMvZGF0YWJhc2UnKTtcbiAgICBcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBxdWVyeShgXG4gICAgICBTRUxFQ1QgXG4gICAgICAgIE5PVygpIGFzIGN1cnJlbnRfdGltZSxcbiAgICAgICAgY3VycmVudF9kYXRhYmFzZSgpIGFzIGRiX25hbWUsXG4gICAgICAgIGN1cnJlbnRfdXNlciBhcyBkYl91c2VyLFxuICAgICAgICB2ZXJzaW9uKCkgYXMgZGJfdmVyc2lvbixcbiAgICAgICAgaW5ldF9zZXJ2ZXJfYWRkcigpIGFzIHNlcnZlcl9pcCxcbiAgICAgICAgaW5ldF9zZXJ2ZXJfcG9ydCgpIGFzIHNlcnZlcl9wb3J0XG4gICAgYCk7XG4gICAgXG4gICAgcmVzLmpzb24oe1xuICAgICAgc3RhdHVzOiAnc3VjY2VzcycsXG4gICAgICBkYXRhYmFzZV9pbmZvOiByZXN1bHQucm93c1swXSxcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gICAgfSk7XG4gICAgXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignREIgdGVzdCBmYWlsZWQ6JywgZXJyb3IpO1xuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcbiAgICAgIHN0YXR1czogJ2Vycm9yJyxcbiAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLFxuICAgICAgY29kZTogZXJyb3IuY29kZSxcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gICAgfSk7XG4gIH1cbn0pO1xuXG4vLyBEZWJ1ZyBlbmRwb2ludCB0byBsaXN0IGFsbCB0YWJsZXMgaW4gZGF0YWJhc2VcbnJvdXRlci5nZXQoJy9kZWJ1Zy90YWJsZXMnLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IHF1ZXJ5IH0gPSByZXF1aXJlKCcuLi91dGlscy9kYXRhYmFzZScpO1xuICAgIFxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHF1ZXJ5KGBcbiAgICAgIFNFTEVDVCBcbiAgICAgICAgdGFibGVfbmFtZSxcbiAgICAgICAgdGFibGVfdHlwZSxcbiAgICAgICAgaXNfaW5zZXJ0YWJsZV9pbnRvXG4gICAgICBGUk9NIGluZm9ybWF0aW9uX3NjaGVtYS50YWJsZXMgXG4gICAgICBXSEVSRSB0YWJsZV9zY2hlbWEgPSAncHVibGljJ1xuICAgICAgT1JERVIgQlkgdGFibGVfbmFtZVxuICAgIGApO1xuICAgIFxuICAgIHJlcy5qc29uKHtcbiAgICAgIHN0YXR1czogJ3N1Y2Nlc3MnLFxuICAgICAgdGFibGVfY291bnQ6IHJlc3VsdC5yb3dzLmxlbmd0aCxcbiAgICAgIHRhYmxlczogcmVzdWx0LnJvd3MsXG4gICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxuICAgIH0pO1xuICAgIFxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1RhYmxlcyBsaXN0IGZhaWxlZDonLCBlcnJvcik7XG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgc3RhdHVzOiAnZXJyb3InLFxuICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsXG4gICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxuICAgIH0pO1xuICB9XG59KTtcblxuLy8gRXh0ZXJuYWwgc2VydmljZXMgaGVhbHRoIGNoZWNrIC0gdGVzdHMgYWxsIGV4dGVybmFsIGRlcGVuZGVuY2llc1xucm91dGVyLmdldCgnL2V4dGVybmFsLXNlcnZpY2VzJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc29sZS5sb2coJ/CflI0gU3RhcnRpbmcgZXh0ZXJuYWwgc2VydmljZXMgaGVhbHRoIGNoZWNrLi4uJyk7XG4gICAgY29uc3Qgc3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcbiAgICBcbiAgICBjb25zdCBzZXJ2aWNlcyA9IHtcbiAgICAgIGRhdGFiYXNlOiBhd2FpdCBjaGVja0RhdGFiYXNlSGVhbHRoKCksXG4gICAgICBhbHBhY2FBcGk6IGF3YWl0IGNoZWNrQWxwYWNhQXBpSGVhbHRoKCksXG4gICAgICBhd3NTZWNyZXRzTWFuYWdlcjogYXdhaXQgY2hlY2tBd3NTZWNyZXRzTWFuYWdlckhlYWx0aCgpLFxuICAgICAgYXdzUmRzOiBhd2FpdCBjaGVja0F3c1Jkc0hlYWx0aCgpLFxuICAgICAgYXdzQ29nbml0bzogYXdhaXQgY2hlY2tBd3NDb2duaXRvSGVhbHRoKClcbiAgICB9O1xuICAgIFxuICAgIGNvbnN0IGhlYWx0aHlTZXJ2aWNlcyA9IE9iamVjdC52YWx1ZXMoc2VydmljZXMpLmZpbHRlcihzID0+IHMuc3RhdHVzID09PSAnaGVhbHRoeScpLmxlbmd0aDtcbiAgICBjb25zdCB0b3RhbFNlcnZpY2VzID0gT2JqZWN0LmtleXMoc2VydmljZXMpLmxlbmd0aDtcbiAgICBjb25zdCBhbGxIZWFsdGh5ID0gaGVhbHRoeVNlcnZpY2VzID09PSB0b3RhbFNlcnZpY2VzO1xuICAgIGNvbnN0IGR1cmF0aW9uID0gRGF0ZS5ub3coKSAtIHN0YXJ0VGltZTtcbiAgICBcbiAgICBjb25zb2xlLmxvZyhg4pyFIEV4dGVybmFsIHNlcnZpY2VzIGhlYWx0aCBjaGVjayBjb21wbGV0ZWQgaW4gJHtkdXJhdGlvbn1tc2ApO1xuICAgIGNvbnNvbGUubG9nKGDwn5OKIFNlcnZpY2VzOiAke2hlYWx0aHlTZXJ2aWNlc30vJHt0b3RhbFNlcnZpY2VzfSBoZWFsdGh5YCk7XG4gICAgXG4gICAgY29uc3QgcmVzcG9uc2VEYXRhID0ge1xuICAgICAgc3RhdHVzOiBhbGxIZWFsdGh5ID8gJ2hlYWx0aHknIDogJ2RlZ3JhZGVkJyxcbiAgICAgIGhlYWx0aHk6IGFsbEhlYWx0aHksXG4gICAgICBzZXJ2aWNlOiAnRXh0ZXJuYWwgU2VydmljZXMgSGVhbHRoJyxcbiAgICAgIGR1cmF0aW9uOiBgJHtkdXJhdGlvbn1tc2AsXG4gICAgICBzZXJ2aWNlcyxcbiAgICAgIHN1bW1hcnk6IHtcbiAgICAgICAgdG90YWxfc2VydmljZXM6IHRvdGFsU2VydmljZXMsXG4gICAgICAgIGhlYWx0aHlfc2VydmljZXM6IGhlYWx0aHlTZXJ2aWNlcyxcbiAgICAgICAgZGVncmFkZWRfc2VydmljZXM6IE9iamVjdC52YWx1ZXMoc2VydmljZXMpLmZpbHRlcihzID0+IHMuc3RhdHVzID09PSAnZGVncmFkZWQnKS5sZW5ndGgsXG4gICAgICAgIGZhaWxlZF9zZXJ2aWNlczogT2JqZWN0LnZhbHVlcyhzZXJ2aWNlcykuZmlsdGVyKHMgPT4gcy5zdGF0dXMgPT09ICdmYWlsZWQnKS5sZW5ndGgsXG4gICAgICAgIGhlYWx0aF9wZXJjZW50YWdlOiBNYXRoLnJvdW5kKChoZWFsdGh5U2VydmljZXMgLyB0b3RhbFNlcnZpY2VzKSAqIDEwMClcbiAgICAgIH1cbiAgICB9O1xuICAgIFxuICAgIGlmIChhbGxIZWFsdGh5KSB7XG4gICAgICByZXMuc3VjY2VzcyhyZXNwb25zZURhdGEpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXMuc2VydmljZVVuYXZhaWxhYmxlKCdFeHRlcm5hbCBzZXJ2aWNlcycsIHJlc3BvbnNlRGF0YSk7XG4gICAgfVxuICAgIFxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBFeHRlcm5hbCBzZXJ2aWNlcyBoZWFsdGggY2hlY2sgZmFpbGVkOicsIGVycm9yKTtcbiAgICByZXMuc2VydmVyRXJyb3IoJ0V4dGVybmFsIHNlcnZpY2VzIGhlYWx0aCBjaGVjayBmYWlsZWQnLCB7XG4gICAgICBzZXJ2aWNlOiAnRXh0ZXJuYWwgU2VydmljZXMgSGVhbHRoJyxcbiAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlXG4gICAgfSk7XG4gIH1cbn0pO1xuXG4vLyBBUEkgc2VydmljZXMgaGVhbHRoIGNoZWNrIC0gdGVzdHMgQVBJIGtleSBzZXJ2aWNlIGFuZCByZWxhdGVkIGZ1bmN0aW9uYWxpdHlcbnJvdXRlci5nZXQoJy9hcGktc2VydmljZXMnLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBzZXJ2aWNlcyA9IHtcbiAgICAgIGFwaUtleVNlcnZpY2U6IGF3YWl0IGNoZWNrQXBpS2V5U2VydmljZUhlYWx0aCgpLFxuICAgICAgand0U2VjcmV0U2VydmljZTogYXdhaXQgY2hlY2tKd3RTZWNyZXRTZXJ2aWNlSGVhbHRoKCksXG4gICAgICBlbmNyeXB0aW9uU2VydmljZTogYXdhaXQgY2hlY2tFbmNyeXB0aW9uU2VydmljZUhlYWx0aCgpLFxuICAgICAgZGF0YWJhc2U6IGF3YWl0IGNoZWNrRGF0YWJhc2VUYWJsZXNGb3JBcGlLZXlzKCksXG4gICAgICBzZWNyZXRzOiBhd2FpdCBjaGVja1NlY3JldHNNYW5hZ2VySGVhbHRoKClcbiAgICB9O1xuICAgIFxuICAgIGNvbnN0IGFsbEhlYWx0aHkgPSBPYmplY3QudmFsdWVzKHNlcnZpY2VzKS5ldmVyeShzZXJ2aWNlID0+IHNlcnZpY2Uuc3RhdHVzID09PSAnaGVhbHRoeScpO1xuICAgIFxuICAgIHJlcy5zdGF0dXMoYWxsSGVhbHRoeSA/IDIwMCA6IDUwMykuanNvbih7XG4gICAgICBzdGF0dXM6IGFsbEhlYWx0aHkgPyAnaGVhbHRoeScgOiAnZGVncmFkZWQnLFxuICAgICAgaGVhbHRoeTogYWxsSGVhbHRoeSxcbiAgICAgIHNlcnZpY2U6ICdBUEkgU2VydmljZXMgSGVhbHRoJyxcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgc2VydmljZXMsXG4gICAgICBzdW1tYXJ5OiB7XG4gICAgICAgIHRvdGFsX3NlcnZpY2VzOiBPYmplY3Qua2V5cyhzZXJ2aWNlcykubGVuZ3RoLFxuICAgICAgICBoZWFsdGh5X3NlcnZpY2VzOiBPYmplY3QudmFsdWVzKHNlcnZpY2VzKS5maWx0ZXIocyA9PiBzLnN0YXR1cyA9PT0gJ2hlYWx0aHknKS5sZW5ndGgsXG4gICAgICAgIGRlZ3JhZGVkX3NlcnZpY2VzOiBPYmplY3QudmFsdWVzKHNlcnZpY2VzKS5maWx0ZXIocyA9PiBzLnN0YXR1cyA9PT0gJ2RlZ3JhZGVkJykubGVuZ3RoLFxuICAgICAgICBmYWlsZWRfc2VydmljZXM6IE9iamVjdC52YWx1ZXMoc2VydmljZXMpLmZpbHRlcihzID0+IHMuc3RhdHVzID09PSAnZmFpbGVkJykubGVuZ3RoXG4gICAgICB9LFxuICAgICAgcmVjb21tZW5kYXRpb25zOiBnZW5lcmF0ZUFwaVNlcnZpY2VSZWNvbW1lbmRhdGlvbnMoc2VydmljZXMpXG4gICAgfSk7XG4gICAgXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignQVBJIHNlcnZpY2VzIGhlYWx0aCBjaGVjayBmYWlsZWQ6JywgZXJyb3IpO1xuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcbiAgICAgIHN0YXR1czogJ2Vycm9yJyxcbiAgICAgIGhlYWx0aHk6IGZhbHNlLFxuICAgICAgc2VydmljZTogJ0FQSSBTZXJ2aWNlcyBIZWFsdGgnLFxuICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsXG4gICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxuICAgIH0pO1xuICB9XG59KTtcblxuLy8gRGVidWcgZW5kcG9pbnQgdG8gdGVzdCBzcGVjaWZpYyB0YWJsZSBxdWVyaWVzXG5yb3V0ZXIuZ2V0KCcvZGVidWcvdGVzdC1xdWVyeScsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHsgcXVlcnkgfSA9IHJlcXVpcmUoJy4uL3V0aWxzL2RhdGFiYXNlJyk7XG4gICAgY29uc3QgdGFibGVOYW1lID0gcmVxLnF1ZXJ5LnRhYmxlIHx8ICdzdG9ja19zeW1ib2xzJztcbiAgICBcbiAgICAvLyBGaXJzdCBjaGVjayBpZiB0YWJsZSBleGlzdHNcbiAgICBjb25zdCB0YWJsZUNoZWNrID0gYXdhaXQgcXVlcnkoYFxuICAgICAgU0VMRUNUIENPVU5UKCopIGFzIGV4aXN0cyBcbiAgICAgIEZST00gaW5mb3JtYXRpb25fc2NoZW1hLnRhYmxlcyBcbiAgICAgIFdIRVJFIHRhYmxlX3NjaGVtYSA9ICdwdWJsaWMnIEFORCB0YWJsZV9uYW1lID0gJDFcbiAgICBgLCBbdGFibGVOYW1lXSk7XG4gICAgXG4gICAgY29uc3QgdGFibGVFeGlzdHMgPSBwYXJzZUludCh0YWJsZUNoZWNrLnJvd3NbMF0uZXhpc3RzKSA+IDA7XG4gICAgXG4gICAgbGV0IHRhYmxlRGF0YSA9IG51bGw7XG4gICAgaWYgKHRhYmxlRXhpc3RzKSB7XG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgcXVlcnkoYFNFTEVDVCBDT1VOVCgqKSBhcyByZWNvcmRfY291bnQgRlJPTSBcIiR7dGFibGVOYW1lfVwiYCk7XG4gICAgICB0YWJsZURhdGEgPSB7IHJlY29yZF9jb3VudDogcGFyc2VJbnQoZGF0YS5yb3dzWzBdLnJlY29yZF9jb3VudCkgfTtcbiAgICB9XG4gICAgXG4gICAgcmVzLmpzb24oe1xuICAgICAgc3RhdHVzOiAnc3VjY2VzcycsXG4gICAgICB0YWJsZTogdGFibGVOYW1lLFxuICAgICAgZXhpc3RzOiB0YWJsZUV4aXN0cyxcbiAgICAgIGRhdGE6IHRhYmxlRGF0YSxcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gICAgfSk7XG4gICAgXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignVGVzdCBxdWVyeSBmYWlsZWQ6JywgZXJyb3IpO1xuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcbiAgICAgIHN0YXR1czogJ2Vycm9yJyxcbiAgICAgIHRhYmxlOiByZXEucXVlcnkudGFibGUgfHwgJ3N0b2NrX3N5bWJvbHMnLFxuICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsXG4gICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxuICAgIH0pO1xuICB9XG59KTtcblxuLy8gVGltZW91dCBhbmQgY2lyY3VpdCBicmVha2VyIG1vbml0b3JpbmcgZW5kcG9pbnRcbnJvdXRlci5nZXQoJy90aW1lb3V0LXN0YXR1cycsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IGNpcmN1aXRCcmVha2VycyA9IHRpbWVvdXRIZWxwZXIuZ2V0Q2lyY3VpdEJyZWFrZXJTdGF0dXMoKTtcbiAgICBjb25zdCB0aW1lb3V0Q29uZmlnID0ge1xuICAgICAgZGF0YWJhc2U6IHRpbWVvdXRIZWxwZXIuZGVmYXVsdFRpbWVvdXRzLmRhdGFiYXNlLFxuICAgICAgYWxwYWNhOiB0aW1lb3V0SGVscGVyLmRlZmF1bHRUaW1lb3V0cy5hbHBhY2EsXG4gICAgICBuZXdzOiB0aW1lb3V0SGVscGVyLmRlZmF1bHRUaW1lb3V0cy5uZXdzLFxuICAgICAgc2VudGltZW50OiB0aW1lb3V0SGVscGVyLmRlZmF1bHRUaW1lb3V0cy5zZW50aW1lbnQsXG4gICAgICBleHRlcm5hbDogdGltZW91dEhlbHBlci5kZWZhdWx0VGltZW91dHMuZXh0ZXJuYWwsXG4gICAgICB1cGxvYWQ6IHRpbWVvdXRIZWxwZXIuZGVmYXVsdFRpbWVvdXRzLnVwbG9hZCxcbiAgICAgIHdlYnNvY2tldDogdGltZW91dEhlbHBlci5kZWZhdWx0VGltZW91dHMud2Vic29ja2V0XG4gICAgfTtcblxuICAgIHJlcy5zdWNjZXNzKHtcbiAgICAgIHRpbWVvdXRzOiB0aW1lb3V0Q29uZmlnLFxuICAgICAgY2lyY3VpdEJyZWFrZXJzOiBjaXJjdWl0QnJlYWtlcnMsXG4gICAgICBzdW1tYXJ5OiB7XG4gICAgICAgIHRvdGFsQ2lyY3VpdEJyZWFrZXJzOiBPYmplY3Qua2V5cyhjaXJjdWl0QnJlYWtlcnMpLmxlbmd0aCxcbiAgICAgICAgb3BlbkNpcmN1aXRCcmVha2VyczogT2JqZWN0LnZhbHVlcyhjaXJjdWl0QnJlYWtlcnMpLmZpbHRlcihjYiA9PiBjYi5zdGF0ZSA9PT0gJ29wZW4nKS5sZW5ndGgsXG4gICAgICAgIGhhbGZPcGVuQ2lyY3VpdEJyZWFrZXJzOiBPYmplY3QudmFsdWVzKGNpcmN1aXRCcmVha2VycykuZmlsdGVyKGNiID0+IGNiLnN0YXRlID09PSAnaGFsZi1vcGVuJykubGVuZ3RoLFxuICAgICAgICBoZWFsdGh5U2VydmljZXM6IE9iamVjdC52YWx1ZXMoY2lyY3VpdEJyZWFrZXJzKS5maWx0ZXIoY2IgPT4gY2Iuc3RhdGUgPT09ICdjbG9zZWQnKS5sZW5ndGhcbiAgICAgIH0sXG4gICAgICByZWNvbW1lbmRhdGlvbnM6IGdlbmVyYXRlVGltZW91dFJlY29tbWVuZGF0aW9ucyhjaXJjdWl0QnJlYWtlcnMpXG4gICAgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcign4p2MIFRpbWVvdXQgc3RhdHVzIGNoZWNrIGZhaWxlZDonLCBlcnJvcik7XG4gICAgcmVzLnNlcnZlckVycm9yKCdGYWlsZWQgdG8gZ2V0IHRpbWVvdXQgc3RhdHVzJywgZXJyb3IubWVzc2FnZSk7XG4gIH1cbn0pO1xuXG4vLyBFbmhhbmNlZCBjaXJjdWl0IGJyZWFrZXIgYW5hbHl0aWNzIGVuZHBvaW50XG5yb3V0ZXIuZ2V0KCcvY2lyY3VpdC1icmVha2VyLWFuYWx5dGljcycsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IGNpcmN1aXRCcmVha2VycyA9IHRpbWVvdXRIZWxwZXIuZ2V0Q2lyY3VpdEJyZWFrZXJTdGF0dXMoKTtcbiAgICBjb25zdCBhbmFseXRpY3MgPSB7fTtcbiAgICBcbiAgICAvLyBBbmFseXplIGVhY2ggY2lyY3VpdCBicmVha2VyXG4gICAgZm9yIChjb25zdCBbc2VydmljZUtleSwgYnJlYWtlcl0gb2YgT2JqZWN0LmVudHJpZXMoY2lyY3VpdEJyZWFrZXJzKSkge1xuICAgICAgY29uc3QgdGltZVNpbmNlTGFzdEZhaWx1cmUgPSBEYXRlLm5vdygpIC0gYnJlYWtlci5sYXN0RmFpbHVyZVRpbWU7XG4gICAgICBjb25zdCBpc1JlY2VudEZhaWx1cmUgPSB0aW1lU2luY2VMYXN0RmFpbHVyZSA8IDMwMDAwMDsgLy8gNSBtaW51dGVzXG4gICAgICBcbiAgICAgIGFuYWx5dGljc1tzZXJ2aWNlS2V5XSA9IHtcbiAgICAgICAgLi4uYnJlYWtlcixcbiAgICAgICAgYW5hbHlzaXM6IHtcbiAgICAgICAgICBoZWFsdGhTY29yZTogY2FsY3VsYXRlSGVhbHRoU2NvcmUoYnJlYWtlciksXG4gICAgICAgICAgcmlza0xldmVsOiBjYWxjdWxhdGVSaXNrTGV2ZWwoYnJlYWtlciksXG4gICAgICAgICAgdGltZVNpbmNlTGFzdEZhaWx1cmU6IHRpbWVTaW5jZUxhc3RGYWlsdXJlLFxuICAgICAgICAgIGlzUmVjZW50RmFpbHVyZSxcbiAgICAgICAgICBuZXh0U3RhdGVUcmFuc2l0aW9uOiBnZXROZXh0U3RhdGVUcmFuc2l0aW9uKGJyZWFrZXIpLFxuICAgICAgICAgIHJlY29tbWVuZGVkQWN0aW9uOiBnZXRSZWNvbW1lbmRlZEFjdGlvbihicmVha2VyKSxcbiAgICAgICAgICBhbGVydExldmVsOiBnZXRBbGVydExldmVsKGJyZWFrZXIpXG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuICAgIFxuICAgIC8vIEdlbmVyYXRlIHN5c3RlbS13aWRlIGFuYWx5dGljc1xuICAgIGNvbnN0IHN5c3RlbUFuYWx5dGljcyA9IHtcbiAgICAgIG92ZXJhbGxIZWFsdGhTY29yZTogY2FsY3VsYXRlT3ZlcmFsbEhlYWx0aFNjb3JlKGFuYWx5dGljcyksXG4gICAgICBjcml0aWNhbFNlcnZpY2VzOiBPYmplY3QuZW50cmllcyhhbmFseXRpY3MpLmZpbHRlcigoW18sIGJyZWFrZXJdKSA9PiBcbiAgICAgICAgYnJlYWtlci5hbmFseXNpcy5hbGVydExldmVsID09PSAnY3JpdGljYWwnKS5tYXAoKFtrZXksIF9dKSA9PiBrZXkpLFxuICAgICAgd2FybmluZ1NlcnZpY2VzOiBPYmplY3QuZW50cmllcyhhbmFseXRpY3MpLmZpbHRlcigoW18sIGJyZWFrZXJdKSA9PiBcbiAgICAgICAgYnJlYWtlci5hbmFseXNpcy5hbGVydExldmVsID09PSAnd2FybmluZycpLm1hcCgoW2tleSwgX10pID0+IGtleSksXG4gICAgICByZWNlbnRGYWlsdXJlczogT2JqZWN0LmVudHJpZXMoYW5hbHl0aWNzKS5maWx0ZXIoKFtfLCBicmVha2VyXSkgPT4gXG4gICAgICAgIGJyZWFrZXIuYW5hbHlzaXMuaXNSZWNlbnRGYWlsdXJlKS5sZW5ndGgsXG4gICAgICB0b3RhbEZhaWx1cmVzOiBPYmplY3QudmFsdWVzKGFuYWx5dGljcykucmVkdWNlKChzdW0sIGJyZWFrZXIpID0+IHN1bSArIGJyZWFrZXIuZmFpbHVyZXMsIDApLFxuICAgICAgcmVjb21tZW5kYXRpb25zOiBnZW5lcmF0ZVN5c3RlbVJlY29tbWVuZGF0aW9ucyhhbmFseXRpY3MpXG4gICAgfTtcblxuICAgIHJlcy5zdWNjZXNzKHtcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgYW5hbHl0aWNzLFxuICAgICAgc3lzdGVtQW5hbHl0aWNzLFxuICAgICAgc3VtbWFyeToge1xuICAgICAgICB0b3RhbFNlcnZpY2VzOiBPYmplY3Qua2V5cyhhbmFseXRpY3MpLmxlbmd0aCxcbiAgICAgICAgaGVhbHRoeVNlcnZpY2VzOiBPYmplY3QudmFsdWVzKGFuYWx5dGljcykuZmlsdGVyKGEgPT4gYS5hbmFseXNpcy5hbGVydExldmVsID09PSAnaGVhbHRoeScpLmxlbmd0aCxcbiAgICAgICAgd2FybmluZ1NlcnZpY2VzOiBzeXN0ZW1BbmFseXRpY3Mud2FybmluZ1NlcnZpY2VzLmxlbmd0aCxcbiAgICAgICAgY3JpdGljYWxTZXJ2aWNlczogc3lzdGVtQW5hbHl0aWNzLmNyaXRpY2FsU2VydmljZXMubGVuZ3RoLFxuICAgICAgICBvdmVyYWxsSGVhbHRoU2NvcmU6IHN5c3RlbUFuYWx5dGljcy5vdmVyYWxsSGVhbHRoU2NvcmVcbiAgICAgIH1cbiAgICB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCfinYwgQ2lyY3VpdCBicmVha2VyIGFuYWx5dGljcyBmYWlsZWQ6JywgZXJyb3IpO1xuICAgIHJlcy5zZXJ2ZXJFcnJvcignRmFpbGVkIHRvIGdlbmVyYXRlIGNpcmN1aXQgYnJlYWtlciBhbmFseXRpY3MnLCBlcnJvci5tZXNzYWdlKTtcbiAgfVxufSk7XG5cbi8vIFNjaGVtYSB2YWxpZGF0aW9uIGVuZHBvaW50IC0gY29tcHJlaGVuc2l2ZSBkYXRhYmFzZSBzY2hlbWEgYW5hbHlzaXNcbnJvdXRlci5nZXQoJy9zY2hlbWEtdmFsaWRhdGlvbicsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICB0cnkge1xuICAgIGNvbnNvbGUubG9nKCfwn5SNIFN0YXJ0aW5nIGNvbXByZWhlbnNpdmUgc2NoZW1hIHZhbGlkYXRpb24uLi4nKTtcbiAgICBjb25zdCBzdGFydFRpbWUgPSBEYXRlLm5vdygpO1xuICAgIFxuICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgICBpbmNsdWRlT3B0aW9uYWw6IHJlcS5xdWVyeS5pbmNsdWRlX29wdGlvbmFsICE9PSAnZmFsc2UnLFxuICAgICAgc3RyaWN0OiByZXEucXVlcnkuc3RyaWN0ID09PSAndHJ1ZSdcbiAgICB9O1xuICAgIFxuICAgIGNvbnN0IHJlcG9ydCA9IGF3YWl0IHNjaGVtYVZhbGlkYXRvci5nZXRTY2hlbWFWYWxpZGF0aW9uUmVwb3J0KG9wdGlvbnMpO1xuICAgIGNvbnN0IGR1cmF0aW9uID0gRGF0ZS5ub3coKSAtIHN0YXJ0VGltZTtcbiAgICBcbiAgICBjb25zb2xlLmxvZyhg4pyFIFNjaGVtYSB2YWxpZGF0aW9uIGNvbXBsZXRlZCBpbiAke2R1cmF0aW9ufW1zYCk7XG4gICAgY29uc29sZS5sb2coYPCfk4ogU3VtbWFyeTogJHtyZXBvcnQuc3VtbWFyeS5leGlzdGluZ1RhYmxlc30vJHtyZXBvcnQuc3VtbWFyeS50b3RhbFRhYmxlc30gdGFibGVzIGV4aXN0LCAke3JlcG9ydC5zdW1tYXJ5LnZhbGlkU2NoZW1hc30gdmFsaWQgc2NoZW1hc2ApO1xuICAgIFxuICAgIC8vIERldGVybWluZSBvdmVyYWxsIGhlYWx0aCBzdGF0dXNcbiAgICBjb25zdCBpc0hlYWx0aHkgPSByZXBvcnQuc3VtbWFyeS5taXNzaW5nUmVxdWlyZWQgPT09IDAgJiYgcmVwb3J0LnN1bW1hcnkuaW52YWxpZFNjaGVtYXMgPT09IDA7XG4gICAgXG4gICAgY29uc3QgcmVzcG9uc2VEYXRhID0ge1xuICAgICAgLi4ucmVwb3J0LFxuICAgICAgZHVyYXRpb246IGAke2R1cmF0aW9ufW1zYCxcbiAgICAgIHN0YXR1czogaXNIZWFsdGh5ID8gJ2hlYWx0aHknIDogJ2RlZ3JhZGVkJyxcbiAgICAgIGhlYWx0aHk6IGlzSGVhbHRoeVxuICAgIH07XG4gICAgXG4gICAgaWYgKGlzSGVhbHRoeSkge1xuICAgICAgcmVzLnN1Y2Nlc3MocmVzcG9uc2VEYXRhKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzLnNlcnZpY2VVbmF2YWlsYWJsZSgnRGF0YWJhc2Ugc2NoZW1hJywgcmVzcG9uc2VEYXRhKTtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcign4p2MIFNjaGVtYSB2YWxpZGF0aW9uIGZhaWxlZDonLCBlcnJvcik7XG4gICAgcmVzLnNlcnZlckVycm9yKCdTY2hlbWEgdmFsaWRhdGlvbiBmYWlsZWQnLCBlcnJvci5tZXNzYWdlKTtcbiAgfVxufSk7XG5cbi8vIFRhYmxlIGV4aXN0ZW5jZSBjaGVjayBlbmRwb2ludFxucm91dGVyLmdldCgnL3RhYmxlLWV4aXN0cy86dGFibGVOYW1lJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgdGFibGVOYW1lID0gcmVxLnBhcmFtcy50YWJsZU5hbWU7XG4gICAgY29uc3QgdGhyb3dPbk1pc3NpbmcgPSByZXEucXVlcnkudGhyb3cgPT09ICd0cnVlJztcbiAgICBcbiAgICBjb25zdCBleGlzdHMgPSBhd2FpdCBzY2hlbWFWYWxpZGF0b3IudmFsaWRhdGVUYWJsZUV4aXN0cyh0YWJsZU5hbWUsIHtcbiAgICAgIHRocm93T25NaXNzaW5nLFxuICAgICAgdXNlQ2FjaGU6IHJlcS5xdWVyeS5ub19jYWNoZSAhPT0gJ3RydWUnXG4gICAgfSk7XG4gICAgXG4gICAgY29uc3QgZXhwZWN0ZWRUYWJsZSA9IHNjaGVtYVZhbGlkYXRvci5leHBlY3RlZFRhYmxlc1t0YWJsZU5hbWVdO1xuICAgIFxuICAgIHJlcy5zdWNjZXNzKHtcbiAgICAgIHRhYmxlOiB0YWJsZU5hbWUsXG4gICAgICBleGlzdHMsXG4gICAgICBleHBlY3RlZDogZXhwZWN0ZWRUYWJsZSB8fCBudWxsLFxuICAgICAgbWVzc2FnZTogZXhpc3RzIFxuICAgICAgICA/IGBUYWJsZSAnJHt0YWJsZU5hbWV9JyBleGlzdHNgXG4gICAgICAgIDogYFRhYmxlICcke3RhYmxlTmFtZX0nIGRvZXMgbm90IGV4aXN0YFxuICAgIH0pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoYOKdjCBUYWJsZSBleGlzdGVuY2UgY2hlY2sgZmFpbGVkIGZvciAnJHtyZXEucGFyYW1zLnRhYmxlTmFtZX0nOmAsIGVycm9yKTtcbiAgICByZXMuc2VydmVyRXJyb3IoJ1RhYmxlIGV4aXN0ZW5jZSBjaGVjayBmYWlsZWQnLCBlcnJvci5tZXNzYWdlKTtcbiAgfVxufSk7XG5cbi8vIFNjaGVtYSB2YWxpZGF0aW9uIGNhY2hlIG1hbmFnZW1lbnRcbnJvdXRlci5wb3N0KCcvc2NoZW1hLXZhbGlkYXRpb24vY2xlYXItY2FjaGUnLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBjYWNoZVN0YXR1cyA9IHNjaGVtYVZhbGlkYXRvci5nZXRDYWNoZVN0YXR1cygpO1xuICAgIHNjaGVtYVZhbGlkYXRvci5jbGVhckNhY2hlKCk7XG4gICAgXG4gICAgcmVzLnN1Y2Nlc3Moe1xuICAgICAgbWVzc2FnZTogJ1NjaGVtYSB2YWxpZGF0aW9uIGNhY2hlIGNsZWFyZWQnLFxuICAgICAgcHJldmlvdXNDYWNoZVNpemU6IGNhY2hlU3RhdHVzLnNpemUsXG4gICAgICBjbGVhcmVkRW50cmllczogY2FjaGVTdGF0dXMuZW50cmllcy5sZW5ndGhcbiAgICB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCfinYwgRmFpbGVkIHRvIGNsZWFyIHNjaGVtYSBjYWNoZTonLCBlcnJvcik7XG4gICAgcmVzLnNlcnZlckVycm9yKCdGYWlsZWQgdG8gY2xlYXIgc2NoZW1hIGNhY2hlJywgZXJyb3IubWVzc2FnZSk7XG4gIH1cbn0pO1xuXG4vLyBEZWJ1ZyBlbmRwb2ludCB0byBjaGVjayB0YWJsZSBzdHJ1Y3R1cmVcbnJvdXRlci5nZXQoJy9kZWJ1Zy90YWJsZS1zdHJ1Y3R1cmUnLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IHF1ZXJ5IH0gPSByZXF1aXJlKCcuLi91dGlscy9kYXRhYmFzZScpO1xuICAgIGNvbnN0IHRhYmxlTmFtZSA9IHJlcS5xdWVyeS50YWJsZSB8fCAndXNlcnMnO1xuICAgIFxuICAgIC8vIEdldCB0YWJsZSBjb2x1bW4gaW5mb3JtYXRpb25cbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBxdWVyeShgXG4gICAgICBTRUxFQ1QgXG4gICAgICAgIGNvbHVtbl9uYW1lLFxuICAgICAgICBkYXRhX3R5cGUsXG4gICAgICAgIGlzX251bGxhYmxlLFxuICAgICAgICBjb2x1bW5fZGVmYXVsdCxcbiAgICAgICAgY2hhcmFjdGVyX21heGltdW1fbGVuZ3RoXG4gICAgICBGUk9NIGluZm9ybWF0aW9uX3NjaGVtYS5jb2x1bW5zIFxuICAgICAgV0hFUkUgdGFibGVfc2NoZW1hID0gJ3B1YmxpYycgQU5EIHRhYmxlX25hbWUgPSAkMVxuICAgICAgT1JERVIgQlkgb3JkaW5hbF9wb3NpdGlvblxuICAgIGAsIFt0YWJsZU5hbWVdKTtcbiAgICBcbiAgICByZXMuanNvbih7XG4gICAgICBzdGF0dXM6ICdzdWNjZXNzJyxcbiAgICAgIHRhYmxlOiB0YWJsZU5hbWUsXG4gICAgICBjb2x1bW5fY291bnQ6IHJlc3VsdC5yb3dzLmxlbmd0aCxcbiAgICAgIGNvbHVtbnM6IHJlc3VsdC5yb3dzLFxuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICB9KTtcbiAgICBcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdUYWJsZSBzdHJ1Y3R1cmUgY2hlY2sgZmFpbGVkOicsIGVycm9yKTtcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICBzdGF0dXM6ICdlcnJvcicsXG4gICAgICB0YWJsZTogcmVxLnF1ZXJ5LnRhYmxlIHx8ICd1c2VycycsXG4gICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSxcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gICAgfSk7XG4gIH1cbn0pO1xuXG4vLyBEaWFnbm9zdGljcyBlbmRwb2ludCAtIGNvbXByZWhlbnNpdmUgc3lzdGVtIGluZm9ybWF0aW9uXG5yb3V0ZXIuZ2V0KCcvZGlhZ25vc3RpY3MnLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBzdGFydFRpbWUgPSBEYXRlLm5vdygpO1xuICAgIFxuICAgIC8vIEdhdGhlciBjb21wcmVoZW5zaXZlIHN5c3RlbSBkaWFnbm9zdGljc1xuICAgIGNvbnN0IGRpYWdub3N0aWNzID0ge1xuICAgICAgc2VydmljZTogJ0ZpbmFuY2lhbCBEYXNoYm9hcmQgQVBJJyxcbiAgICAgIHZlcnNpb246ICcxLjAuMCcsXG4gICAgICBzdGF0dXM6ICdvcGVyYXRpb25hbCcsXG4gICAgICBlbnZpcm9ubWVudDogcHJvY2Vzcy5lbnYuRU5WSVJPTk1FTlQgfHwgJ2RldicsXG4gICAgICByZWdpb246IHByb2Nlc3MuZW52LkFXU19SRUdJT04gfHwgcHJvY2Vzcy5lbnYuV0VCQVBQX0FXU19SRUdJT04gfHwgJ3VzLWVhc3QtMScsXG4gICAgICBcbiAgICAgIC8vIFN5c3RlbSBpbmZvXG4gICAgICBzeXN0ZW06IHtcbiAgICAgICAgbWVtb3J5OiBwcm9jZXNzLm1lbW9yeVVzYWdlKCksXG4gICAgICAgIHVwdGltZTogcHJvY2Vzcy51cHRpbWUoKSxcbiAgICAgICAgcGxhdGZvcm06IHByb2Nlc3MucGxhdGZvcm0sXG4gICAgICAgIG5vZGVWZXJzaW9uOiBwcm9jZXNzLnZlcnNpb24sXG4gICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gICAgICB9LFxuICAgICAgXG4gICAgICAvLyBDb25maWd1cmF0aW9uIHN0YXR1c1xuICAgICAgY29uZmlndXJhdGlvbjoge1xuICAgICAgICBkYXRhYmFzZToge1xuICAgICAgICAgIGVuZHBvaW50OiBwcm9jZXNzLmVudi5EQl9FTkRQT0lOVCA/ICdjb25maWd1cmVkJyA6ICdub3RfY29uZmlndXJlZCcsXG4gICAgICAgICAgc2VjcmV0QXJuOiBwcm9jZXNzLmVudi5EQl9TRUNSRVRfQVJOID8gJ2NvbmZpZ3VyZWQnIDogJ25vdF9jb25maWd1cmVkJyxcbiAgICAgICAgICBjb25uZWN0VGltZW91dDogcHJvY2Vzcy5lbnYuREJfQ09OTkVDVF9USU1FT1VUIHx8ICdkZWZhdWx0JyxcbiAgICAgICAgICBwb29sTWF4OiBwcm9jZXNzLmVudi5EQl9QT09MX01BWCB8fCAnZGVmYXVsdCdcbiAgICAgICAgfSxcbiAgICAgICAgYXV0aGVudGljYXRpb246IHtcbiAgICAgICAgICBjb2duaXRvVXNlclBvb2w6IHByb2Nlc3MuZW52LkNPR05JVE9fVVNFUl9QT09MX0lEID8gJ2NvbmZpZ3VyZWQnIDogJ25vdF9jb25maWd1cmVkJyxcbiAgICAgICAgICBjb2duaXRvQ2xpZW50OiBwcm9jZXNzLmVudi5DT0dOSVRPX0NMSUVOVF9JRCA/ICdjb25maWd1cmVkJyA6ICdub3RfY29uZmlndXJlZCdcbiAgICAgICAgfSxcbiAgICAgICAgYXBpS2V5czoge1xuICAgICAgICAgIGVuY3J5cHRpb25TZWNyZXQ6IHByb2Nlc3MuZW52LkFQSV9LRVlfRU5DUllQVElPTl9TRUNSRVRfQVJOID8gJ2NvbmZpZ3VyZWQnIDogJ25vdF9jb25maWd1cmVkJ1xuICAgICAgICB9LFxuICAgICAgICBsYW1iZGE6IHtcbiAgICAgICAgICBmdW5jdGlvbk5hbWU6IHByb2Nlc3MuZW52LkFXU19MQU1CREFfRlVOQ1RJT05fTkFNRSB8fCAndW5rbm93bicsXG4gICAgICAgICAgZnVuY3Rpb25WZXJzaW9uOiBwcm9jZXNzLmVudi5BV1NfTEFNQkRBX0ZVTkNUSU9OX1ZFUlNJT04gfHwgJ3Vua25vd24nLFxuICAgICAgICAgIHJlZ2lvbjogcHJvY2Vzcy5lbnYuQVdTX1JFR0lPTiB8fCAndW5rbm93bidcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIFxuICAgICAgLy8gUXVpY2sgaGVhbHRoIGNoZWNrc1xuICAgICAgaGVhbHRoQ2hlY2tzOiB7XG4gICAgICAgIGRhdGFiYXNlOiAnY2hlY2tpbmcuLi4nLFxuICAgICAgICBhcGlLZXlTZXJ2aWNlOiAnY2hlY2tpbmcuLi4nLFxuICAgICAgICBzZWNyZXRzTWFuYWdlcjogJ2NoZWNraW5nLi4uJ1xuICAgICAgfVxuICAgIH07XG4gICAgXG4gICAgLy8gUGVyZm9ybSBiYXNpYyBoZWFsdGggY2hlY2tzXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGRiSGVhbHRoID0gYXdhaXQgaGVhbHRoQ2hlY2soKTtcbiAgICAgIGRpYWdub3N0aWNzLmhlYWx0aENoZWNrcy5kYXRhYmFzZSA9IGRiSGVhbHRoLnN0YXR1cyA9PT0gJ2hlYWx0aHknID8gJ2hlYWx0aHknIDogJ3VuaGVhbHRoeSc7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGRpYWdub3N0aWNzLmhlYWx0aENoZWNrcy5kYXRhYmFzZSA9ICdmYWlsZWQnO1xuICAgIH1cbiAgICBcbiAgICB0cnkge1xuICAgICAgYXdhaXQgYXBpS2V5U2VydmljZS5lbnN1cmVJbml0aWFsaXplZCgpO1xuICAgICAgZGlhZ25vc3RpY3MuaGVhbHRoQ2hlY2tzLmFwaUtleVNlcnZpY2UgPSAnaGVhbHRoeSc7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGRpYWdub3N0aWNzLmhlYWx0aENoZWNrcy5hcGlLZXlTZXJ2aWNlID0gJ2ZhaWxlZCc7XG4gICAgfVxuICAgIFxuICAgIHRyeSB7XG4gICAgICBjb25zdCBzZWNyZXRBcm4gPSBwcm9jZXNzLmVudi5BUElfS0VZX0VOQ1JZUFRJT05fU0VDUkVUX0FSTjtcbiAgICAgIGlmIChzZWNyZXRBcm4pIHtcbiAgICAgICAgZGlhZ25vc3RpY3MuaGVhbHRoQ2hlY2tzLnNlY3JldHNNYW5hZ2VyID0gJ2hlYWx0aHknO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZGlhZ25vc3RpY3MuaGVhbHRoQ2hlY2tzLnNlY3JldHNNYW5hZ2VyID0gJ25vdF9jb25maWd1cmVkJztcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgZGlhZ25vc3RpY3MuaGVhbHRoQ2hlY2tzLnNlY3JldHNNYW5hZ2VyID0gJ2ZhaWxlZCc7XG4gICAgfVxuICAgIFxuICAgIGNvbnN0IGR1cmF0aW9uID0gRGF0ZS5ub3coKSAtIHN0YXJ0VGltZTtcbiAgICBkaWFnbm9zdGljcy5kaWFnbm9zdGljc0R1cmF0aW9uID0gYCR7ZHVyYXRpb259bXNgO1xuICAgIFxuICAgIHJlcy5zdWNjZXNzKGRpYWdub3N0aWNzKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdEaWFnbm9zdGljcyBlbmRwb2ludCBmYWlsZWQ6JywgZXJyb3IpO1xuICAgIHJlcy5zZXJ2ZXJFcnJvcignRGlhZ25vc3RpY3MgZmFpbGVkJywge1xuICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsXG4gICAgICBzZXJ2aWNlOiAnRmluYW5jaWFsIERhc2hib2FyZCBBUEknLFxuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICB9KTtcbiAgfVxufSk7XG5cbi8vIExhbWJkYSBwZXJmb3JtYW5jZSBtZXRyaWNzIGVuZHBvaW50XG5yb3V0ZXIuZ2V0KCcvbGFtYmRhLW1ldHJpY3MnLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBsYW1iZGFPcHRpbWl6ZXIgPSByZXF1aXJlKCcuLi91dGlscy9sYW1iZGFPcHRpbWl6ZXInKTtcbiAgICBjb25zdCBtZXRyaWNzID0gbGFtYmRhT3B0aW1pemVyLmdldE1ldHJpY3MoKTtcbiAgICBcbiAgICByZXMuc3VjY2Vzcyh7XG4gICAgICBsYW1iZGFNZXRyaWNzOiBtZXRyaWNzLFxuICAgICAgZW5kcG9pbnQ6ICdsYW1iZGEtbWV0cmljcycsXG4gICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxuICAgIH0pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0xhbWJkYSBtZXRyaWNzIGVuZHBvaW50IGZhaWxlZDonLCBlcnJvcik7XG4gICAgcmVzLnNlcnZlckVycm9yKCdMYW1iZGEgbWV0cmljcyBmYWlsZWQnLCB7XG4gICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSxcbiAgICAgIGVuZHBvaW50OiAnbGFtYmRhLW1ldHJpY3MnLFxuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICB9KTtcbiAgfVxufSk7XG5cbi8vIERlYnVnIGVuZHBvaW50IGZvciBlbnZpcm9ubWVudCBhbmQgY29uZmlndXJhdGlvblxucm91dGVyLmdldCgnL2RlYnVnL2VudicsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICB0cnkge1xuICAgIHJlcy5qc29uKHtcbiAgICAgIHN0YXR1czogJ3N1Y2Nlc3MnLFxuICAgICAgZW52aXJvbm1lbnQ6IHtcbiAgICAgICAgTk9ERV9FTlY6IHByb2Nlc3MuZW52Lk5PREVfRU5WLFxuICAgICAgICBFTlZJUk9OTUVOVDogcHJvY2Vzcy5lbnYuRU5WSVJPTk1FTlQsXG4gICAgICAgIEFXU19SRUdJT046IHByb2Nlc3MuZW52LkFXU19SRUdJT04sXG4gICAgICAgIFdFQkFQUF9BV1NfUkVHSU9OOiBwcm9jZXNzLmVudi5XRUJBUFBfQVdTX1JFR0lPTixcbiAgICAgICAgQVdTX0xBTUJEQV9GVU5DVElPTl9OQU1FOiBwcm9jZXNzLmVudi5BV1NfTEFNQkRBX0ZVTkNUSU9OX05BTUUsXG4gICAgICAgIEFXU19MQU1CREFfRlVOQ1RJT05fVkVSU0lPTjogcHJvY2Vzcy5lbnYuQVdTX0xBTUJEQV9GVU5DVElPTl9WRVJTSU9OXG4gICAgICB9LFxuICAgICAgZGF0YWJhc2VfY29uZmlnOiB7XG4gICAgICAgIERCX0VORFBPSU5UOiBwcm9jZXNzLmVudi5EQl9FTkRQT0lOVCxcbiAgICAgICAgREJfU0VDUkVUX0FSTjogcHJvY2Vzcy5lbnYuREJfU0VDUkVUX0FSTiA/ICdTRVQnIDogJ05PVF9TRVQnLFxuICAgICAgICBEQl9DT05ORUNUX1RJTUVPVVQ6IHByb2Nlc3MuZW52LkRCX0NPTk5FQ1RfVElNRU9VVCxcbiAgICAgICAgREJfUE9PTF9NQVg6IHByb2Nlc3MuZW52LkRCX1BPT0xfTUFYXG4gICAgICB9LFxuICAgICAgbGFtYmRhX2luZm86IHtcbiAgICAgICAgbWVtb3J5OiBwcm9jZXNzLm1lbW9yeVVzYWdlKCksXG4gICAgICAgIHVwdGltZTogcHJvY2Vzcy51cHRpbWUoKSxcbiAgICAgICAgcGxhdGZvcm06IHByb2Nlc3MucGxhdGZvcm0sXG4gICAgICAgIG5vZGVfdmVyc2lvbjogcHJvY2Vzcy52ZXJzaW9uXG4gICAgICB9LFxuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICB9KTtcbiAgICBcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICBzdGF0dXM6ICdlcnJvcicsXG4gICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSxcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gICAgfSk7XG4gIH1cbn0pO1xuXG4vLyBEZWJ1ZyBlbmRwb2ludCB0byB0ZXN0IENPUlNcbnJvdXRlci5nZXQoJy9kZWJ1Zy9jb3JzLXRlc3QnLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgcmVzLmhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJywgJyonKTtcbiAgcmVzLmhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctTWV0aG9kcycsICdHRVQsIFBPU1QsIE9QVElPTlMnKTtcbiAgcmVzLmhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVycycsICdDb250ZW50LVR5cGUnKTtcbiAgXG4gIHJlcy5qc29uKHtcbiAgICBzdGF0dXM6ICdzdWNjZXNzJyxcbiAgICBtZXNzYWdlOiAnQ09SUyB0ZXN0IHN1Y2Nlc3NmdWwnLFxuICAgIGhlYWRlcnM6IHJlcS5oZWFkZXJzLFxuICAgIG9yaWdpbjogcmVxLmdldCgnb3JpZ2luJyksXG4gICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgfSk7XG59KTtcblxuLy8gVXBkYXRlIGhlYWx0aCBzdGF0dXMgZW5kcG9pbnQgLSBmb3IgXCJVcGRhdGUgQWxsIFRhYmxlc1wiIGJ1dHRvblxucm91dGVyLnBvc3QoJy91cGRhdGUtc3RhdHVzJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc29sZS5sb2coJ/CflIQgSGVhbHRoIHN0YXR1cyB1cGRhdGUgcmVxdWVzdGVkJyk7XG4gICAgXG4gICAgLy8gR2V0IGNvbXByZWhlbnNpdmUgZGF0YWJhc2UgaGVhbHRoXG4gICAgY29uc3QgaGVhbHRoRGF0YSA9IGF3YWl0IGdldENvbXByZWhlbnNpdmVEYkhlYWx0aCgpO1xuICAgIFxuICAgIC8vIE9wdGlvbmFsbHkgc3RvcmUgaW4gaGVhbHRoX3N0YXR1cyB0YWJsZSBpZiBpdCBleGlzdHNcbiAgICB0cnkge1xuICAgICAgLy8gQ2hlY2sgaWYgaGVhbHRoX3N0YXR1cyB0YWJsZSBleGlzdHNcbiAgICAgIGNvbnN0IHRhYmxlQ2hlY2sgPSBhd2FpdCBxdWVyeShgXG4gICAgICAgIFNFTEVDVCBDT1VOVCgqKSBhcyBleGlzdHMgXG4gICAgICAgIEZST00gaW5mb3JtYXRpb25fc2NoZW1hLnRhYmxlcyBcbiAgICAgICAgV0hFUkUgdGFibGVfc2NoZW1hID0gJ3B1YmxpYycgQU5EIHRhYmxlX25hbWUgPSAnaGVhbHRoX3N0YXR1cydcbiAgICAgIGApO1xuICAgICAgXG4gICAgICBpZiAocGFyc2VJbnQodGFibGVDaGVjay5yb3dzWzBdLmV4aXN0cykgPiAwKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCfwn5K+IFN0b3JpbmcgaGVhbHRoIGRhdGEgaW4gaGVhbHRoX3N0YXR1cyB0YWJsZS4uLicpO1xuICAgICAgICBcbiAgICAgICAgLy8gU3RvcmUgZWFjaCB0YWJsZSdzIGhlYWx0aCBkYXRhXG4gICAgICAgIGZvciAoY29uc3QgW3RhYmxlTmFtZSwgdGFibGVEYXRhXSBvZiBPYmplY3QuZW50cmllcyhoZWFsdGhEYXRhLmRhdGFiYXNlLnRhYmxlcykpIHtcbiAgICAgICAgICBhd2FpdCBxdWVyeShgXG4gICAgICAgICAgICBJTlNFUlQgSU5UTyBoZWFsdGhfc3RhdHVzIChcbiAgICAgICAgICAgICAgdGFibGVfbmFtZSwgcmVjb3JkX2NvdW50LCBzdGF0dXMsIGxhc3RfdXBkYXRlZCwgXG4gICAgICAgICAgICAgIGxhc3RfY2hlY2tlZCwgY3JpdGljYWxfdGFibGUsIHRhYmxlX2NhdGVnb3J5LCBlcnJvcl9tZXNzYWdlXG4gICAgICAgICAgICApIFZBTFVFUyAoJDEsICQyLCAkMywgJDQsICQ1LCAkNiwgJDcsICQ4KVxuICAgICAgICAgICAgT04gQ09ORkxJQ1QgKHRhYmxlX25hbWUpIERPIFVQREFURSBTRVRcbiAgICAgICAgICAgICAgcmVjb3JkX2NvdW50ID0gRVhDTFVERUQucmVjb3JkX2NvdW50LFxuICAgICAgICAgICAgICBzdGF0dXMgPSBFWENMVURFRC5zdGF0dXMsXG4gICAgICAgICAgICAgIGxhc3RfdXBkYXRlZCA9IEVYQ0xVREVELmxhc3RfdXBkYXRlZCxcbiAgICAgICAgICAgICAgbGFzdF9jaGVja2VkID0gRVhDTFVERUQubGFzdF9jaGVja2VkLFxuICAgICAgICAgICAgICBjcml0aWNhbF90YWJsZSA9IEVYQ0xVREVELmNyaXRpY2FsX3RhYmxlLFxuICAgICAgICAgICAgICB0YWJsZV9jYXRlZ29yeSA9IEVYQ0xVREVELnRhYmxlX2NhdGVnb3J5LFxuICAgICAgICAgICAgICBlcnJvcl9tZXNzYWdlID0gRVhDTFVERUQuZXJyb3JfbWVzc2FnZVxuICAgICAgICAgIGAsIFtcbiAgICAgICAgICAgIHRhYmxlTmFtZSxcbiAgICAgICAgICAgIHRhYmxlRGF0YS5yZWNvcmRfY291bnQsXG4gICAgICAgICAgICB0YWJsZURhdGEuc3RhdHVzLFxuICAgICAgICAgICAgdGFibGVEYXRhLmxhc3RfdXBkYXRlZCxcbiAgICAgICAgICAgIHRhYmxlRGF0YS5sYXN0X2NoZWNrZWQsXG4gICAgICAgICAgICB0YWJsZURhdGEuY3JpdGljYWxfdGFibGUsXG4gICAgICAgICAgICB0YWJsZURhdGEudGFibGVfY2F0ZWdvcnksXG4gICAgICAgICAgICB0YWJsZURhdGEuZXJyb3JcbiAgICAgICAgICBdKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgY29uc29sZS5sb2coJ+KchSBIZWFsdGggZGF0YSBzdG9yZWQgaW4gaGVhbHRoX3N0YXR1cyB0YWJsZScpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5sb2coJ+KaoO+4jyBoZWFsdGhfc3RhdHVzIHRhYmxlIGRvZXMgbm90IGV4aXN0IC0gc2tpcHBpbmcgc3RvcmFnZScpO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKHN0b3JlRXJyb3IpIHtcbiAgICAgIGNvbnNvbGUud2Fybign4pqg77iPIEZhaWxlZCB0byBzdG9yZSBoZWFsdGggZGF0YSBpbiBoZWFsdGhfc3RhdHVzIHRhYmxlOicsIHN0b3JlRXJyb3IubWVzc2FnZSk7XG4gICAgICAvLyBEb24ndCBmYWlsIHRoZSB3aG9sZSByZXF1ZXN0IGlmIHN0b3JhZ2UgZmFpbHNcbiAgICB9XG4gICAgXG4gICAgcmVzLmpzb24oe1xuICAgICAgc3RhdHVzOiAnc3VjY2VzcycsXG4gICAgICBtZXNzYWdlOiAnRGF0YWJhc2UgaGVhbHRoIHN0YXR1cyB1cGRhdGVkIHN1Y2Nlc3NmdWxseScsXG4gICAgICBkYXRhOiBoZWFsdGhEYXRhLFxuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICB9KTtcbiAgICBcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCfinYwgRmFpbGVkIHRvIHVwZGF0ZSBoZWFsdGggc3RhdHVzOicsIGVycm9yKTtcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICBzdGF0dXM6ICdlcnJvcicsXG4gICAgICBlcnJvcjogJ0ZhaWxlZCB0byB1cGRhdGUgaGVhbHRoIHN0YXR1cycsXG4gICAgICBkZXRhaWxzOiBlcnJvci5tZXNzYWdlLFxuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICB9KTtcbiAgfVxufSk7XG5cbi8qKlxuICogQ29tcHJlaGVuc2l2ZSBkYXRhYmFzZSBoZWFsdGggY2hlY2sgdGhhdCBhbmFseXplcyBhbGwgdGFibGVzXG4gKiBUaGlzIGlzIHdoYXQgdGhlIGZyb250ZW5kIFNlcnZpY2VIZWFsdGguanN4IGV4cGVjdHMgdG8gcmVjZWl2ZVxuICovXG5hc3luYyBmdW5jdGlvbiBnZXRDb21wcmVoZW5zaXZlRGJIZWFsdGgoKSB7XG4gIHRyeSB7XG4gICAgY29uc29sZS5sb2coJ/CflI0gU3RhcnRpbmcgb3B0aW1pemVkIGRhdGFiYXNlIGhlYWx0aCBjaGVjay4uLicpO1xuICAgIGNvbnN0IHN0YXJ0VGltZSA9IERhdGUubm93KCk7XG4gICAgXG4gICAgLy8gRmlyc3QgdGVzdCBiYXNpYyBjb25uZWN0aXZpdHlcbiAgICBjb25zdCBiYXNpY0hlYWx0aCA9IGF3YWl0IGhlYWx0aENoZWNrKCk7XG4gICAgaWYgKGJhc2ljSGVhbHRoLnN0YXR1cyAhPT0gJ2hlYWx0aHknKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdGF0dXM6ICdkaXNjb25uZWN0ZWQnLFxuICAgICAgICBlcnJvcjogYmFzaWNIZWFsdGguZXJyb3IsXG4gICAgICAgIGRhdGFiYXNlOiB7XG4gICAgICAgICAgc3RhdHVzOiAnZXJyb3InLFxuICAgICAgICAgIHRhYmxlczoge30sXG4gICAgICAgICAgc3VtbWFyeToge1xuICAgICAgICAgICAgdG90YWxfdGFibGVzOiAwLFxuICAgICAgICAgICAgaGVhbHRoeV90YWJsZXM6IDAsXG4gICAgICAgICAgICBzdGFsZV90YWJsZXM6IDAsXG4gICAgICAgICAgICBlcnJvcl90YWJsZXM6IDAsXG4gICAgICAgICAgICBlbXB0eV90YWJsZXM6IDAsXG4gICAgICAgICAgICBtaXNzaW5nX3RhYmxlczogMCxcbiAgICAgICAgICAgIHRvdGFsX3JlY29yZHM6IDAsXG4gICAgICAgICAgICB0b3RhbF9taXNzaW5nX2RhdGE6IDBcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gICAgICB9O1xuICAgIH1cbiAgICBcbiAgICAvLyBEZWZpbmUgdGFibGUgY2F0ZWdvcmllcyBhbmQgY3JpdGljYWwgdGFibGVzXG4gICAgY29uc3QgdGFibGVDYXRlZ29yaXphdGlvbiA9IHtcbiAgICAgICdzeW1ib2xzJzogWydzeW1ib2xzJywgJ3N0b2NrX3N5bWJvbHMnLCAnZXRmX3N5bWJvbHMnXSxcbiAgICAgICdwcmljZXMnOiBbJ3ByaWNlX2RhaWx5JywgJ3ByaWNlX3dlZWtseScsICdwcmljZV9tb250aGx5JywgJ2xhdGVzdF9wcmljZXMnXSxcbiAgICAgICd0ZWNobmljYWxzJzogWyd0ZWNobmljYWxzX2RhaWx5JywgJ3RlY2huaWNhbHNfd2Vla2x5JywgJ3RlY2huaWNhbHNfbW9udGhseScsICdsYXRlc3RfdGVjaG5pY2FscyddLFxuICAgICAgJ2ZpbmFuY2lhbHMnOiBbJ2JhbGFuY2Vfc2hlZXQnLCAnaW5jb21lX3N0YXRlbWVudCcsICdjYXNoX2Zsb3cnLCAna2V5X21ldHJpY3MnXSxcbiAgICAgICdjb21wYW55JzogWydjb21wYW55X3Byb2ZpbGUnLCAnY29tcGFueV9wcm9maWxlcyddLFxuICAgICAgJ2Vhcm5pbmdzJzogWydlYXJuaW5nc19lc3RpbWF0ZXMnLCAnZWFybmluZ3NfaGlzdG9yeScsICdlYXJuaW5nc19tZXRyaWNzJ10sXG4gICAgICAnc2VudGltZW50JzogWydmZWFyX2dyZWVkX2luZGV4JywgJ25hYWltJywgJ2FhaWlfc2VudGltZW50J10sXG4gICAgICAndHJhZGluZyc6IFsnYnV5X3NlbGxfZGFpbHknLCAnYnV5X3NlbGxfd2Vla2x5JywgJ3N3aW5nX3RyYWRlcicsICd0cmFkZV9leGVjdXRpb25zJ10sXG4gICAgICAncG9ydGZvbGlvJzogWydwb3J0Zm9saW9faG9sZGluZ3MnLCAncG9zaXRpb25faGlzdG9yeScsICd1c2VyX2FwaV9rZXlzJ10sXG4gICAgICAnc3lzdGVtJzogWydoZWFsdGhfc3RhdHVzJywgJ2xhc3RfdXBkYXRlZCddXG4gICAgfTtcbiAgICBcbiAgICBjb25zdCBjcml0aWNhbFRhYmxlcyA9IFtcbiAgICAgICdzeW1ib2xzJywgJ3N0b2NrX3N5bWJvbHMnLCAncHJpY2VfZGFpbHknLCAnbGF0ZXN0X3ByaWNlcycsIFxuICAgICAgJ3BvcnRmb2xpb19ob2xkaW5ncycsICd1c2VyX2FwaV9rZXlzJywgJ2hlYWx0aF9zdGF0dXMnLCAnbGFzdF91cGRhdGVkJ1xuICAgIF07XG4gICAgXG4gICAgLy8gRnVuY3Rpb24gdG8gY2F0ZWdvcml6ZSB0YWJsZVxuICAgIGZ1bmN0aW9uIGNhdGVnb3JpemVUYWJsZSh0YWJsZU5hbWUpIHtcbiAgICAgIGZvciAoY29uc3QgW2NhdGVnb3J5LCB0YWJsZXNdIG9mIE9iamVjdC5lbnRyaWVzKHRhYmxlQ2F0ZWdvcml6YXRpb24pKSB7XG4gICAgICAgIGlmICh0YWJsZXMuaW5jbHVkZXModGFibGVOYW1lKSkge1xuICAgICAgICAgIHJldHVybiBjYXRlZ29yeTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuICdvdGhlcic7XG4gICAgfVxuICAgIFxuICAgIC8vIE9QVElNSVpFRDogR2V0IHRhYmxlIGluZm8gYW5kIHJlY29yZCBjb3VudHMgaW4gb25lIGVmZmljaWVudCBxdWVyeVxuICAgIGNvbnNvbGUubG9nKCfwn5OLIEdldHRpbmcgdGFibGUgaW5mbyBhbmQgcmVjb3JkIGNvdW50cyBlZmZpY2llbnRseS4uLicpO1xuICAgIGNvbnN0IGJhdGNoUXVlcnkgPSBgXG4gICAgICBTRUxFQ1QgXG4gICAgICAgIHQudGFibGVfbmFtZSxcbiAgICAgICAgdC50YWJsZV90eXBlLFxuICAgICAgICBDT0FMRVNDRShzLm5fdHVwX2lucyAtIHMubl90dXBfZGVsLCAwKSBhcyBlc3RpbWF0ZWRfcm93cyxcbiAgICAgICAgcy5sYXN0X3ZhY3V1bSxcbiAgICAgICAgcy5sYXN0X2F1dG92YWN1dW0sXG4gICAgICAgIHMubGFzdF9hbmFseXplLFxuICAgICAgICBzLmxhc3RfYXV0b2FuYWx5emVcbiAgICAgIEZST00gaW5mb3JtYXRpb25fc2NoZW1hLnRhYmxlcyB0XG4gICAgICBMRUZUIEpPSU4gcGdfc3RhdF91c2VyX3RhYmxlcyBzIE9OIHMucmVsbmFtZSA9IHQudGFibGVfbmFtZVxuICAgICAgV0hFUkUgdC50YWJsZV9zY2hlbWEgPSAncHVibGljJyBcbiAgICAgIEFORCB0LnRhYmxlX3R5cGUgPSAnQkFTRSBUQUJMRSdcbiAgICAgIE9SREVSIEJZIHQudGFibGVfbmFtZVxuICAgIGA7XG4gICAgXG4gICAgY29uc3QgdGFibGVzUmVzdWx0ID0gYXdhaXQgcXVlcnkoYmF0Y2hRdWVyeSwgW10sIDE1MDAwKTtcbiAgICBjb25zdCBhbGxUYWJsZXMgPSB0YWJsZXNSZXN1bHQucm93cztcbiAgICBjb25zb2xlLmxvZyhg8J+TiyBGb3VuZCAke2FsbFRhYmxlcy5sZW5ndGh9IHRhYmxlcyBpbiBkYXRhYmFzZWApO1xuICAgIFxuICAgIC8vIEJ1aWxkIHRhYmxlIGhlYWx0aCBkYXRhIGVmZmljaWVudGx5XG4gICAgY29uc3QgdGFibGVIZWFsdGggPSB7fTtcbiAgICBsZXQgdG90YWxSZWNvcmRzID0gMDtcbiAgICBsZXQgaGVhbHRoeVRhYmxlcyA9IDA7XG4gICAgbGV0IHN0YWxlVGFibGVzID0gMDtcbiAgICBsZXQgZXJyb3JUYWJsZXMgPSAwO1xuICAgIGxldCBlbXB0eVRhYmxlcyA9IDA7XG4gICAgXG4gICAgY29uc29sZS5sb2coJ/CflI0gUHJvY2Vzc2luZyB0YWJsZSBoZWFsdGggZGF0YS4uLicpO1xuICAgIGZvciAoY29uc3QgdGFibGUgb2YgYWxsVGFibGVzKSB7XG4gICAgICBjb25zdCB0YWJsZU5hbWUgPSB0YWJsZS50YWJsZV9uYW1lO1xuICAgICAgY29uc3QgZXN0aW1hdGVkUm93cyA9IHBhcnNlSW50KHRhYmxlLmVzdGltYXRlZF9yb3dzKSB8fCAwO1xuICAgICAgdG90YWxSZWNvcmRzICs9IGVzdGltYXRlZFJvd3M7XG4gICAgICBcbiAgICAgIC8vIFVzZSBwZ19zdGF0IHRpbWVzdGFtcHMgZm9yIGZyZXNobmVzcyBjaGVja1xuICAgICAgY29uc3QgbGFzdFVwZGF0ZWQgPSB0YWJsZS5sYXN0X2FuYWx5emUgfHwgdGFibGUubGFzdF9hdXRvYW5hbHl6ZSB8fCB0YWJsZS5sYXN0X3ZhY3V1bSB8fCB0YWJsZS5sYXN0X2F1dG92YWN1dW07XG4gICAgICBcbiAgICAgIC8vIERldGVybWluZSB0YWJsZSBzdGF0dXNcbiAgICAgIGxldCBzdGF0dXMgPSAnaGVhbHRoeSc7XG4gICAgICBsZXQgaXNTdGFsZSA9IGZhbHNlO1xuICAgICAgXG4gICAgICBpZiAoZXN0aW1hdGVkUm93cyA9PT0gMCkge1xuICAgICAgICBzdGF0dXMgPSAnZW1wdHknO1xuICAgICAgICBlbXB0eVRhYmxlcysrO1xuICAgICAgfSBlbHNlIGlmIChsYXN0VXBkYXRlZCkge1xuICAgICAgICBjb25zdCBob3Vyc1NpbmNlVXBkYXRlID0gKG5ldyBEYXRlKCkgLSBuZXcgRGF0ZShsYXN0VXBkYXRlZCkpIC8gKDEwMDAgKiA2MCAqIDYwKTtcbiAgICAgICAgaWYgKGhvdXJzU2luY2VVcGRhdGUgPiA3MikgeyAvLyAzIGRheXNcbiAgICAgICAgICBzdGF0dXMgPSAnc3RhbGUnO1xuICAgICAgICAgIGlzU3RhbGUgPSB0cnVlO1xuICAgICAgICAgIHN0YWxlVGFibGVzKys7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaGVhbHRoeVRhYmxlcysrO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBObyB0aW1lc3RhbXAgYXZhaWxhYmxlLCBhc3N1bWUgaGVhbHRoeSBpZiBoYXMgZGF0YVxuICAgICAgICBoZWFsdGh5VGFibGVzKys7XG4gICAgICB9XG4gICAgICBcbiAgICAgIHRhYmxlSGVhbHRoW3RhYmxlTmFtZV0gPSB7XG4gICAgICAgIHN0YXR1czogc3RhdHVzLFxuICAgICAgICByZWNvcmRfY291bnQ6IGVzdGltYXRlZFJvd3MsXG4gICAgICAgIGxhc3RfdXBkYXRlZDogbGFzdFVwZGF0ZWQsXG4gICAgICAgIGxhc3RfY2hlY2tlZDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgICB0YWJsZV9jYXRlZ29yeTogY2F0ZWdvcml6ZVRhYmxlKHRhYmxlTmFtZSksXG4gICAgICAgIGNyaXRpY2FsX3RhYmxlOiBjcml0aWNhbFRhYmxlcy5pbmNsdWRlcyh0YWJsZU5hbWUpLFxuICAgICAgICBpc19zdGFsZTogaXNTdGFsZSxcbiAgICAgICAgbWlzc2luZ19kYXRhX2NvdW50OiAwLFxuICAgICAgICBlcnJvcjogbnVsbCxcbiAgICAgICAgbm90ZTogJ1VzaW5nIHBnX3N0YXQgZXN0aW1hdGVkIGNvdW50cyBmb3IgcGVyZm9ybWFuY2UnXG4gICAgICB9O1xuICAgIH1cbiAgICBcbiAgICAvLyBDYWxjdWxhdGUgc3VtbWFyeSBzdGF0aXN0aWNzXG4gICAgY29uc3Qgc3VtbWFyeSA9IHtcbiAgICAgIHRvdGFsX3RhYmxlczogYWxsVGFibGVzLmxlbmd0aCxcbiAgICAgIGhlYWx0aHlfdGFibGVzOiBoZWFsdGh5VGFibGVzLFxuICAgICAgc3RhbGVfdGFibGVzOiBzdGFsZVRhYmxlcyxcbiAgICAgIGVycm9yX3RhYmxlczogZXJyb3JUYWJsZXMsXG4gICAgICBlbXB0eV90YWJsZXM6IGVtcHR5VGFibGVzLFxuICAgICAgbWlzc2luZ190YWJsZXM6IDAsIC8vIFRhYmxlcyB3ZSBleHBlY3QgYnV0IGRvbid0IGV4aXN0XG4gICAgICB0b3RhbF9yZWNvcmRzOiB0b3RhbFJlY29yZHMsXG4gICAgICB0b3RhbF9taXNzaW5nX2RhdGE6IDAgLy8gQ291bGQgYmUgZW5oYW5jZWRcbiAgICB9O1xuICAgIFxuICAgIGNvbnN0IGR1cmF0aW9uID0gRGF0ZS5ub3coKSAtIHN0YXJ0VGltZTtcbiAgICBjb25zb2xlLmxvZyhg4pyFIENvbXByZWhlbnNpdmUgZGF0YWJhc2UgaGVhbHRoIGNoZWNrIGNvbXBsZXRlZCBpbiAke2R1cmF0aW9ufW1zYCk7XG4gICAgY29uc29sZS5sb2coYPCfk4ogU3VtbWFyeTogJHtzdW1tYXJ5LnRvdGFsX3RhYmxlc30gdGFibGVzLCAke3N1bW1hcnkuaGVhbHRoeV90YWJsZXN9IGhlYWx0aHksICR7c3VtbWFyeS50b3RhbF9yZWNvcmRzfSB0b3RhbCByZWNvcmRzYCk7XG4gICAgXG4gICAgcmV0dXJuIHtcbiAgICAgIHN0YXR1czogJ2Nvbm5lY3RlZCcsXG4gICAgICBkYXRhYmFzZToge1xuICAgICAgICBzdGF0dXM6ICdjb25uZWN0ZWQnLFxuICAgICAgICBjdXJyZW50VGltZTogYmFzaWNIZWFsdGgudGltZXN0YW1wLFxuICAgICAgICBwb3N0Z3Jlc1ZlcnNpb246IGJhc2ljSGVhbHRoLnZlcnNpb24sXG4gICAgICAgIHRhYmxlczogdGFibGVIZWFsdGgsXG4gICAgICAgIHN1bW1hcnk6IHN1bW1hcnlcbiAgICAgIH0sXG4gICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgIG5vdGU6IGBBbmFseXplZCAke2FsbFRhYmxlcy5sZW5ndGh9IGRhdGFiYXNlIHRhYmxlcyBpbiAke2R1cmF0aW9ufW1zYFxuICAgIH07XG4gICAgXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcign4p2MIENvbXByZWhlbnNpdmUgZGF0YWJhc2UgaGVhbHRoIGNoZWNrIGZhaWxlZDonLCBlcnJvcik7XG4gICAgcmV0dXJuIHtcbiAgICAgIHN0YXR1czogJ2Vycm9yJyxcbiAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLFxuICAgICAgZGF0YWJhc2U6IHtcbiAgICAgICAgc3RhdHVzOiAnZXJyb3InLFxuICAgICAgICB0YWJsZXM6IHt9LFxuICAgICAgICBzdW1tYXJ5OiB7XG4gICAgICAgICAgdG90YWxfdGFibGVzOiAwLFxuICAgICAgICAgIGhlYWx0aHlfdGFibGVzOiAwLFxuICAgICAgICAgIHN0YWxlX3RhYmxlczogMCxcbiAgICAgICAgICBlcnJvcl90YWJsZXM6IDAsXG4gICAgICAgICAgZW1wdHlfdGFibGVzOiAwLFxuICAgICAgICAgIG1pc3NpbmdfdGFibGVzOiAwLFxuICAgICAgICAgIHRvdGFsX3JlY29yZHM6IDAsXG4gICAgICAgICAgdG90YWxfbWlzc2luZ19kYXRhOiAwXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxuICAgIH07XG4gIH1cbn1cblxuLy8gQ3JlYXRlIGhlYWx0aF9zdGF0dXMgdGFibGUgaWYgaXQgZG9lc24ndCBleGlzdCAoZm9yIHN0b3JpbmcgaGVhbHRoIGRhdGEpXG4vLyBSRU1PVkVEOiBUYWJsZSBjcmVhdGlvbiBlbmRwb2ludHMgLSB0YWJsZXMgc2hvdWxkIGJlIGNyZWF0ZWQgYnkgZGItaW5pdCBpbmZyYXN0cnVjdHVyZVxuXG4vLyBFeHRlcm5hbCBTZXJ2aWNlIEhlYWx0aCBDaGVjayBGdW5jdGlvbnNcblxuLyoqXG4gKiBEYXRhYmFzZSBoZWFsdGggY2hlY2sgd2l0aCB0aW1lb3V0IGFuZCBjaXJjdWl0IGJyZWFrZXJcbiAqL1xuYXN5bmMgZnVuY3Rpb24gY2hlY2tEYXRhYmFzZUhlYWx0aCgpIHtcbiAgdHJ5IHtcbiAgICBjb25zb2xlLmxvZygn8J+UjSBDaGVja2luZyBkYXRhYmFzZSBoZWFsdGguLi4nKTtcbiAgICBjb25zdCBzdGFydFRpbWUgPSBEYXRlLm5vdygpO1xuICAgIFxuICAgIC8vIFRlc3QgYmFzaWMgY29ubmVjdGl2aXR5IHdpdGggdGltZW91dFxuICAgIGNvbnN0IGRiSGVhbHRoID0gYXdhaXQgUHJvbWlzZS5yYWNlKFtcbiAgICAgIGhlYWx0aENoZWNrKCksXG4gICAgICBuZXcgUHJvbWlzZSgoXywgcmVqZWN0KSA9PiBcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiByZWplY3QobmV3IEVycm9yKCdEYXRhYmFzZSBoZWFsdGggY2hlY2sgdGltZW91dCcpKSwgNTAwMClcbiAgICAgIClcbiAgICBdKTtcbiAgICBcbiAgICBjb25zdCBkdXJhdGlvbiA9IERhdGUubm93KCkgLSBzdGFydFRpbWU7XG4gICAgXG4gICAgaWYgKGRiSGVhbHRoLnN0YXR1cyA9PT0gJ2hlYWx0aHknKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdGF0dXM6ICdoZWFsdGh5JyxcbiAgICAgICAgbWVzc2FnZTogJ0RhdGFiYXNlIGlzIGNvbm5lY3RlZCBhbmQgcmVzcG9uc2l2ZScsXG4gICAgICAgIHJlc3BvbnNlVGltZTogYCR7ZHVyYXRpb259bXNgLFxuICAgICAgICB2ZXJzaW9uOiBkYkhlYWx0aC52ZXJzaW9uIHx8ICd1bmtub3duJyxcbiAgICAgICAgY29ubmVjdGlvbjoge1xuICAgICAgICAgIGhvc3Q6IHByb2Nlc3MuZW52LkRCX0VORFBPSU5UID8gJ2NvbmZpZ3VyZWQnIDogJ25vdF9jb25maWd1cmVkJyxcbiAgICAgICAgICBwb29sOiAnYWN0aXZlJyxcbiAgICAgICAgICBzc2w6ICdlbmFibGVkJ1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdGF0dXM6ICdmYWlsZWQnLFxuICAgICAgICBtZXNzYWdlOiAnRGF0YWJhc2UgY29ubmVjdGlvbiBmYWlsZWQnLFxuICAgICAgICBlcnJvcjogZGJIZWFsdGguZXJyb3IsXG4gICAgICAgIHJlc3BvbnNlVGltZTogYCR7ZHVyYXRpb259bXNgXG4gICAgICB9O1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCfinYwgRGF0YWJhc2UgaGVhbHRoIGNoZWNrIGZhaWxlZDonLCBlcnJvcik7XG4gICAgcmV0dXJuIHtcbiAgICAgIHN0YXR1czogJ2ZhaWxlZCcsXG4gICAgICBtZXNzYWdlOiAnRGF0YWJhc2UgaGVhbHRoIGNoZWNrIGZhaWxlZCcsXG4gICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSxcbiAgICAgIHRpbWVvdXQ6IGVycm9yLm1lc3NhZ2UuaW5jbHVkZXMoJ3RpbWVvdXQnKVxuICAgIH07XG4gIH1cbn1cblxuLyoqXG4gKiBBbHBhY2EgQVBJIGhlYWx0aCBjaGVjayB3aXRoIHNhbXBsZSBjcmVkZW50aWFsc1xuICovXG5hc3luYyBmdW5jdGlvbiBjaGVja0FscGFjYUFwaUhlYWx0aCgpIHtcbiAgdHJ5IHtcbiAgICBjb25zb2xlLmxvZygn8J+UjSBDaGVja2luZyBBbHBhY2EgQVBJIGhlYWx0aC4uLicpO1xuICAgIGNvbnN0IHN0YXJ0VGltZSA9IERhdGUubm93KCk7XG4gICAgXG4gICAgLy8gQ2hlY2sgaWYgd2UgaGF2ZSBhbnkgdmFsaWQgQWxwYWNhIGNyZWRlbnRpYWxzIHRvIHRlc3Qgd2l0aFxuICAgIGxldCB0ZXN0Q3JlZGVudGlhbHMgPSBudWxsO1xuICAgIFxuICAgIHRyeSB7XG4gICAgICAvLyBUcnkgdG8gZ2V0IGFueSB1c2VyJ3MgQVBJIGNyZWRlbnRpYWxzIGZvciB0ZXN0aW5nXG4gICAgICBjb25zdCBjcmVkZW50aWFsc1F1ZXJ5ID0gYXdhaXQgcXVlcnkoYFxuICAgICAgICBTRUxFQ1QgYXBpX2tleV9lbmNyeXB0ZWQsIGFwaV9zZWNyZXRfZW5jcnlwdGVkLCBpc19zYW5kYm94IFxuICAgICAgICBGUk9NIHVzZXJfYXBpX2tleXMgXG4gICAgICAgIFdIRVJFIHByb3ZpZGVyID0gJ2FscGFjYScgQU5EIHN0YXR1cyA9ICdhY3RpdmUnIFxuICAgICAgICBMSU1JVCAxXG4gICAgICBgKTtcbiAgICAgIFxuICAgICAgaWYgKGNyZWRlbnRpYWxzUXVlcnkucm93cy5sZW5ndGggPiAwKSB7XG4gICAgICAgIGNvbnN0IHJvdyA9IGNyZWRlbnRpYWxzUXVlcnkucm93c1swXTtcbiAgICAgICAgXG4gICAgICAgIC8vIERlY3J5cHQgY3JlZGVudGlhbHMgZm9yIHRlc3RpbmdcbiAgICAgICAgY29uc3QgZGVjcnlwdGVkS2V5ID0gYXdhaXQgYXBpS2V5U2VydmljZS5kZWNyeXB0QXBpS2V5KHJvdy5hcGlfa2V5X2VuY3J5cHRlZCk7XG4gICAgICAgIGNvbnN0IGRlY3J5cHRlZFNlY3JldCA9IGF3YWl0IGFwaUtleVNlcnZpY2UuZGVjcnlwdEFwaUtleShyb3cuYXBpX3NlY3JldF9lbmNyeXB0ZWQpO1xuICAgICAgICBcbiAgICAgICAgdGVzdENyZWRlbnRpYWxzID0ge1xuICAgICAgICAgIGFwaUtleTogZGVjcnlwdGVkS2V5LFxuICAgICAgICAgIGFwaVNlY3JldDogZGVjcnlwdGVkU2VjcmV0LFxuICAgICAgICAgIGlzU2FuZGJveDogcm93LmlzX3NhbmRib3hcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChkYkVycm9yKSB7XG4gICAgICBjb25zb2xlLmxvZygn4pqg77iPIENvdWxkIG5vdCBmZXRjaCB0ZXN0IGNyZWRlbnRpYWxzIGZyb20gZGF0YWJhc2U6JywgZGJFcnJvci5tZXNzYWdlKTtcbiAgICB9XG4gICAgXG4gICAgaWYgKHRlc3RDcmVkZW50aWFscykge1xuICAgICAgLy8gVGVzdCB3aXRoIHJlYWwgY3JlZGVudGlhbHNcbiAgICAgIGNvbnN0IGFscGFjYSA9IG5ldyBBbHBhY2FTZXJ2aWNlKFxuICAgICAgICB0ZXN0Q3JlZGVudGlhbHMuYXBpS2V5LFxuICAgICAgICB0ZXN0Q3JlZGVudGlhbHMuYXBpU2VjcmV0LFxuICAgICAgICB0ZXN0Q3JlZGVudGlhbHMuaXNTYW5kYm94XG4gICAgICApO1xuICAgICAgXG4gICAgICAvLyBUZXN0IEFQSSBjb25uZWN0aXZpdHkgd2l0aCBhY2NvdW50IGluZm8gKGxpZ2h0d2VpZ2h0IGNhbGwpXG4gICAgICBjb25zdCBhY2NvdW50SW5mbyA9IGF3YWl0IFByb21pc2UucmFjZShbXG4gICAgICAgIGFscGFjYS5nZXRBY2NvdW50KCksXG4gICAgICAgIG5ldyBQcm9taXNlKChfLCByZWplY3QpID0+IFxuICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gcmVqZWN0KG5ldyBFcnJvcignQWxwYWNhIEFQSSB0aW1lb3V0JykpLCAxMDAwMClcbiAgICAgICAgKVxuICAgICAgXSk7XG4gICAgICBcbiAgICAgIGNvbnN0IGR1cmF0aW9uID0gRGF0ZS5ub3coKSAtIHN0YXJ0VGltZTtcbiAgICAgIFxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3RhdHVzOiAnaGVhbHRoeScsXG4gICAgICAgIG1lc3NhZ2U6ICdBbHBhY2EgQVBJIGlzIGFjY2Vzc2libGUgYW5kIHJlc3BvbnNpdmUnLFxuICAgICAgICByZXNwb25zZVRpbWU6IGAke2R1cmF0aW9ufW1zYCxcbiAgICAgICAgZW52aXJvbm1lbnQ6IHRlc3RDcmVkZW50aWFscy5pc1NhbmRib3ggPyAnc2FuZGJveCcgOiAnbGl2ZScsXG4gICAgICAgIGFjY291bnQ6IHtcbiAgICAgICAgICBzdGF0dXM6IGFjY291bnRJbmZvPy5zdGF0dXMgfHwgJ3Vua25vd24nLFxuICAgICAgICAgIHRyYWRpbmdCbG9ja2VkOiBhY2NvdW50SW5mbz8udHJhZGluZ19ibG9ja2VkIHx8IGZhbHNlXG4gICAgICAgIH0sXG4gICAgICAgIGZlYXR1cmVzOiB7XG4gICAgICAgICAgdHJhZGluZzogdHJ1ZSxcbiAgICAgICAgICBtYXJrZXREYXRhOiB0cnVlLFxuICAgICAgICAgIHBvcnRmb2xpbzogdHJ1ZVxuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBObyBjcmVkZW50aWFscyBhdmFpbGFibGUgLSBjaGVjayBiYXNpYyBBUEkgYXZhaWxhYmlsaXR5XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdGF0dXM6ICdkZWdyYWRlZCcsXG4gICAgICAgIG1lc3NhZ2U6ICdObyBBUEkgY3JlZGVudGlhbHMgYXZhaWxhYmxlIGZvciB0ZXN0aW5nJyxcbiAgICAgICAgcmVzcG9uc2VUaW1lOiAnTi9BJyxcbiAgICAgICAgZW52aXJvbm1lbnQ6ICd1bmtub3duJyxcbiAgICAgICAgZmVhdHVyZXM6IHtcbiAgICAgICAgICB0cmFkaW5nOiBmYWxzZSxcbiAgICAgICAgICBtYXJrZXREYXRhOiBmYWxzZSxcbiAgICAgICAgICBwb3J0Zm9saW86IGZhbHNlXG4gICAgICAgIH0sXG4gICAgICAgIG5vdGU6ICdBZGQgQVBJIGNyZWRlbnRpYWxzIGluIFNldHRpbmdzIHRvIGVuYWJsZSBmdWxsIGZ1bmN0aW9uYWxpdHknXG4gICAgICB9O1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCfinYwgQWxwYWNhIEFQSSBoZWFsdGggY2hlY2sgZmFpbGVkOicsIGVycm9yKTtcbiAgICByZXR1cm4ge1xuICAgICAgc3RhdHVzOiAnZmFpbGVkJyxcbiAgICAgIG1lc3NhZ2U6ICdBbHBhY2EgQVBJIGhlYWx0aCBjaGVjayBmYWlsZWQnLFxuICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsXG4gICAgICB0aW1lb3V0OiBlcnJvci5tZXNzYWdlLmluY2x1ZGVzKCd0aW1lb3V0JyksXG4gICAgICBjaXJjdWl0QnJlYWtlclRyaWdnZXJlZDogZXJyb3IubWVzc2FnZS5pbmNsdWRlcygnY2lyY3VpdCBicmVha2VyJylcbiAgICB9O1xuICB9XG59XG5cbi8qKlxuICogQVdTIFNlY3JldHMgTWFuYWdlciBoZWFsdGggY2hlY2tcbiAqL1xuYXN5bmMgZnVuY3Rpb24gY2hlY2tBd3NTZWNyZXRzTWFuYWdlckhlYWx0aCgpIHtcbiAgdHJ5IHtcbiAgICBjb25zb2xlLmxvZygn8J+UjSBDaGVja2luZyBBV1MgU2VjcmV0cyBNYW5hZ2VyIGhlYWx0aC4uLicpO1xuICAgIGNvbnN0IHN0YXJ0VGltZSA9IERhdGUubm93KCk7XG4gICAgXG4gICAgY29uc3Qgc2VjcmV0c01hbmFnZXIgPSBuZXcgU2VjcmV0c01hbmFnZXJDbGllbnQoe1xuICAgICAgcmVnaW9uOiBwcm9jZXNzLmVudi5XRUJBUFBfQVdTX1JFR0lPTiB8fCBwcm9jZXNzLmVudi5BV1NfUkVHSU9OIHx8ICd1cy1lYXN0LTEnXG4gICAgfSk7XG4gICAgXG4gICAgLy8gVGVzdCBiYXNpYyBTZWNyZXRzIE1hbmFnZXIgY29ubmVjdGl2aXR5XG4gICAgY29uc3QgdGVzdFNlY3JldEFybiA9IHByb2Nlc3MuZW52LkRCX1NFQ1JFVF9BUk4gfHwgcHJvY2Vzcy5lbnYuQVBJX0tFWV9FTkNSWVBUSU9OX1NFQ1JFVF9BUk47XG4gICAgXG4gICAgaWYgKCF0ZXN0U2VjcmV0QXJuKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdGF0dXM6ICdkZWdyYWRlZCcsXG4gICAgICAgIG1lc3NhZ2U6ICdObyBTZWNyZXRzIE1hbmFnZXIgQVJOcyBjb25maWd1cmVkJyxcbiAgICAgICAgY29uZmlndXJlZDogZmFsc2UsXG4gICAgICAgIHJlZ2lvbjogcHJvY2Vzcy5lbnYuV0VCQVBQX0FXU19SRUdJT04gfHwgcHJvY2Vzcy5lbnYuQVdTX1JFR0lPTiB8fCAndXMtZWFzdC0xJ1xuICAgICAgfTtcbiAgICB9XG4gICAgXG4gICAgLy8gVGVzdCBzZWNyZXRzIGFjY2VzcyB3aXRoIHRpbWVvdXRcbiAgICBhd2FpdCBQcm9taXNlLnJhY2UoW1xuICAgICAgc2VjcmV0c01hbmFnZXIuc2VuZChuZXcgR2V0U2VjcmV0VmFsdWVDb21tYW5kKHsgU2VjcmV0SWQ6IHRlc3RTZWNyZXRBcm4gfSkpLFxuICAgICAgbmV3IFByb21pc2UoKF8sIHJlamVjdCkgPT4gXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4gcmVqZWN0KG5ldyBFcnJvcignU2VjcmV0cyBNYW5hZ2VyIHRpbWVvdXQnKSksIDUwMDApXG4gICAgICApXG4gICAgXSk7XG4gICAgXG4gICAgY29uc3QgZHVyYXRpb24gPSBEYXRlLm5vdygpIC0gc3RhcnRUaW1lO1xuICAgIFxuICAgIHJldHVybiB7XG4gICAgICBzdGF0dXM6ICdoZWFsdGh5JyxcbiAgICAgIG1lc3NhZ2U6ICdBV1MgU2VjcmV0cyBNYW5hZ2VyIGlzIGFjY2Vzc2libGUnLFxuICAgICAgcmVzcG9uc2VUaW1lOiBgJHtkdXJhdGlvbn1tc2AsXG4gICAgICBjb25maWd1cmVkOiB0cnVlLFxuICAgICAgcmVnaW9uOiBwcm9jZXNzLmVudi5XRUJBUFBfQVdTX1JFR0lPTiB8fCBwcm9jZXNzLmVudi5BV1NfUkVHSU9OIHx8ICd1cy1lYXN0LTEnLFxuICAgICAgc2VjcmV0czoge1xuICAgICAgICBkYlNlY3JldDogISFwcm9jZXNzLmVudi5EQl9TRUNSRVRfQVJOLFxuICAgICAgICBhcGlLZXlTZWNyZXQ6ICEhcHJvY2Vzcy5lbnYuQVBJX0tFWV9FTkNSWVBUSU9OX1NFQ1JFVF9BUk5cbiAgICAgIH1cbiAgICB9O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBBV1MgU2VjcmV0cyBNYW5hZ2VyIGhlYWx0aCBjaGVjayBmYWlsZWQ6JywgZXJyb3IpO1xuICAgIHJldHVybiB7XG4gICAgICBzdGF0dXM6ICdmYWlsZWQnLFxuICAgICAgbWVzc2FnZTogJ0FXUyBTZWNyZXRzIE1hbmFnZXIgaGVhbHRoIGNoZWNrIGZhaWxlZCcsXG4gICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSxcbiAgICAgIHRpbWVvdXQ6IGVycm9yLm1lc3NhZ2UuaW5jbHVkZXMoJ3RpbWVvdXQnKSxcbiAgICAgIHJlZ2lvbjogcHJvY2Vzcy5lbnYuV0VCQVBQX0FXU19SRUdJT04gfHwgcHJvY2Vzcy5lbnYuQVdTX1JFR0lPTiB8fCAndXMtZWFzdC0xJ1xuICAgIH07XG4gIH1cbn1cblxuLyoqXG4gKiBBV1MgUkRTIGhlYWx0aCBjaGVja1xuICovXG5hc3luYyBmdW5jdGlvbiBjaGVja0F3c1Jkc0hlYWx0aCgpIHtcbiAgdHJ5IHtcbiAgICBjb25zb2xlLmxvZygn8J+UjSBDaGVja2luZyBBV1MgUkRTIGhlYWx0aC4uLicpO1xuICAgIFxuICAgIGlmICghcHJvY2Vzcy5lbnYuREJfRU5EUE9JTlQpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN0YXR1czogJ2RlZ3JhZGVkJyxcbiAgICAgICAgbWVzc2FnZTogJ0RCX0VORFBPSU5UIG5vdCBjb25maWd1cmVkJyxcbiAgICAgICAgY29uZmlndXJlZDogZmFsc2VcbiAgICAgIH07XG4gICAgfVxuICAgIFxuICAgIC8vIFJEUyBoZWFsdGggaXMgcHJpbWFyaWx5IGRldGVybWluZWQgYnkgZGF0YWJhc2UgY29ubmVjdGl2aXR5XG4gICAgLy8gV2UgY2FuIGFsc28gY2hlY2sgUkRTLXNwZWNpZmljIG1ldHJpY3MgaWYgbmVlZGVkXG4gICAgY29uc3QgZGJIZWFsdGggPSBhd2FpdCBjaGVja0RhdGFiYXNlSGVhbHRoKCk7XG4gICAgXG4gICAgcmV0dXJuIHtcbiAgICAgIHN0YXR1czogZGJIZWFsdGguc3RhdHVzLFxuICAgICAgbWVzc2FnZTogZGJIZWFsdGguc3RhdHVzID09PSAnaGVhbHRoeScgPyAnQVdTIFJEUyBpbnN0YW5jZSBpcyBhY2Nlc3NpYmxlJyA6ICdBV1MgUkRTIGNvbm5lY3Rpb24gaXNzdWVzJyxcbiAgICAgIHJlc3BvbnNlVGltZTogZGJIZWFsdGgucmVzcG9uc2VUaW1lLFxuICAgICAgY29uZmlndXJlZDogdHJ1ZSxcbiAgICAgIGVuZHBvaW50OiAnY29uZmlndXJlZCcsXG4gICAgICBzc2w6ICdlbmZvcmNlZCcsXG4gICAgICBtdWx0aUF6OiAndW5rbm93bicsIC8vIFdvdWxkIG5lZWQgUkRTIEFQSSB0byBjaGVja1xuICAgICAgYmFja3VwczogJ3Vua25vd24nICAvLyBXb3VsZCBuZWVkIFJEUyBBUEkgdG8gY2hlY2tcbiAgICB9O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBBV1MgUkRTIGhlYWx0aCBjaGVjayBmYWlsZWQ6JywgZXJyb3IpO1xuICAgIHJldHVybiB7XG4gICAgICBzdGF0dXM6ICdmYWlsZWQnLFxuICAgICAgbWVzc2FnZTogJ0FXUyBSRFMgaGVhbHRoIGNoZWNrIGZhaWxlZCcsXG4gICAgICBlcnJvcjogZXJyb3IubWVzc2FnZVxuICAgIH07XG4gIH1cbn1cblxuLyoqXG4gKiBBV1MgQ29nbml0byBoZWFsdGggY2hlY2tcbiAqL1xuYXN5bmMgZnVuY3Rpb24gY2hlY2tBd3NDb2duaXRvSGVhbHRoKCkge1xuICB0cnkge1xuICAgIGNvbnNvbGUubG9nKCfwn5SNIENoZWNraW5nIEFXUyBDb2duaXRvIGhlYWx0aC4uLicpO1xuICAgIGNvbnN0IHN0YXJ0VGltZSA9IERhdGUubm93KCk7XG4gICAgXG4gICAgY29uc3QgdXNlclBvb2xJZCA9IHByb2Nlc3MuZW52LkNPR05JVE9fVVNFUl9QT09MX0lEO1xuICAgIGNvbnN0IGNsaWVudElkID0gcHJvY2Vzcy5lbnYuQ09HTklUT19DTElFTlRfSUQ7XG4gICAgXG4gICAgaWYgKCF1c2VyUG9vbElkIHx8ICFjbGllbnRJZCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3RhdHVzOiAnZGVncmFkZWQnLFxuICAgICAgICBtZXNzYWdlOiAnQ29nbml0byBjb25maWd1cmF0aW9uIG5vdCBjb21wbGV0ZScsXG4gICAgICAgIGNvbmZpZ3VyZWQ6IGZhbHNlLFxuICAgICAgICByZWdpb246IHByb2Nlc3MuZW52LldFQkFQUF9BV1NfUkVHSU9OIHx8IHByb2Nlc3MuZW52LkFXU19SRUdJT04gfHwgJ3VzLWVhc3QtMScsXG4gICAgICAgIHVzZXJQb29sOiAhIXVzZXJQb29sSWQsXG4gICAgICAgIGNsaWVudElkOiAhIWNsaWVudElkXG4gICAgICB9O1xuICAgIH1cbiAgICBcbiAgICBjb25zdCBjb2duaXRvSWRwID0gbmV3IENvZ25pdG9JZGVudGl0eVByb3ZpZGVyQ2xpZW50KHtcbiAgICAgIHJlZ2lvbjogcHJvY2Vzcy5lbnYuV0VCQVBQX0FXU19SRUdJT04gfHwgcHJvY2Vzcy5lbnYuQVdTX1JFR0lPTiB8fCAndXMtZWFzdC0xJ1xuICAgIH0pO1xuICAgIFxuICAgIC8vIFRlc3QgQ29nbml0byBjb25uZWN0aXZpdHkgYnkgZGVzY3JpYmluZyB0aGUgdXNlciBwb29sXG4gICAgYXdhaXQgUHJvbWlzZS5yYWNlKFtcbiAgICAgIGNvZ25pdG9JZHAuc2VuZChuZXcgRGVzY3JpYmVVc2VyUG9vbENvbW1hbmQoeyBVc2VyUG9vbElkOiB1c2VyUG9vbElkIH0pKSxcbiAgICAgIG5ldyBQcm9taXNlKChfLCByZWplY3QpID0+IFxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHJlamVjdChuZXcgRXJyb3IoJ0NvZ25pdG8gdGltZW91dCcpKSwgNTAwMClcbiAgICAgIClcbiAgICBdKTtcbiAgICBcbiAgICBjb25zdCBkdXJhdGlvbiA9IERhdGUubm93KCkgLSBzdGFydFRpbWU7XG4gICAgXG4gICAgcmV0dXJuIHtcbiAgICAgIHN0YXR1czogJ2hlYWx0aHknLFxuICAgICAgbWVzc2FnZTogJ0FXUyBDb2duaXRvIGlzIGFjY2Vzc2libGUnLFxuICAgICAgcmVzcG9uc2VUaW1lOiBgJHtkdXJhdGlvbn1tc2AsXG4gICAgICBjb25maWd1cmVkOiB0cnVlLFxuICAgICAgcmVnaW9uOiBwcm9jZXNzLmVudi5XRUJBUFBfQVdTX1JFR0lPTiB8fCBwcm9jZXNzLmVudi5BV1NfUkVHSU9OIHx8ICd1cy1lYXN0LTEnLFxuICAgICAgdXNlclBvb2w6ICEhdXNlclBvb2xJZCxcbiAgICAgIGNsaWVudElkOiAhIWNsaWVudElkLFxuICAgICAgZmVhdHVyZXM6IHtcbiAgICAgICAgYXV0aGVudGljYXRpb246IHRydWUsXG4gICAgICAgIHVzZXJNYW5hZ2VtZW50OiB0cnVlLFxuICAgICAgICBtZmE6ICd1bmtub3duJyAvLyBXb3VsZCBuZWVkIHRvIGNoZWNrIHVzZXIgcG9vbCBjb25maWdcbiAgICAgIH1cbiAgICB9O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBBV1MgQ29nbml0byBoZWFsdGggY2hlY2sgZmFpbGVkOicsIGVycm9yKTtcbiAgICByZXR1cm4ge1xuICAgICAgc3RhdHVzOiAnZmFpbGVkJyxcbiAgICAgIG1lc3NhZ2U6ICdBV1MgQ29nbml0byBoZWFsdGggY2hlY2sgZmFpbGVkJyxcbiAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLFxuICAgICAgdGltZW91dDogZXJyb3IubWVzc2FnZS5pbmNsdWRlcygndGltZW91dCcpLFxuICAgICAgcmVnaW9uOiBwcm9jZXNzLmVudi5XRUJBUFBfQVdTX1JFR0lPTiB8fCBwcm9jZXNzLmVudi5BV1NfUkVHSU9OIHx8ICd1cy1lYXN0LTEnXG4gICAgfTtcbiAgfVxufVxuXG4vLyBBUEkgU2VydmljZSBIZWFsdGggQ2hlY2sgRnVuY3Rpb25zXG5hc3luYyBmdW5jdGlvbiBjaGVja0FwaUtleVNlcnZpY2VIZWFsdGgoKSB7XG4gIHRyeSB7XG4gICAgLy8gQ2hlY2sgaWYgQVBJIGtleSBzZXJ2aWNlIGlzIGluaXRpYWxpemVkIGFuZCBlbmFibGVkXG4gICAgYXdhaXQgYXBpS2V5U2VydmljZS5lbnN1cmVJbml0aWFsaXplZCgpO1xuICAgIFxuICAgIC8vIFRlc3QgZW5jcnlwdGlvbi9kZWNyeXB0aW9uIGZ1bmN0aW9uYWxpdHlcbiAgICBjb25zdCB0ZXN0UmVzdWx0ID0gYXdhaXQgdGVzdEVuY3J5cHRpb25GdW5jdGlvbmFsaXR5KCk7XG4gICAgXG4gICAgcmV0dXJuIHtcbiAgICAgIHN0YXR1czogYXBpS2V5U2VydmljZS5pc0VuYWJsZWQgJiYgdGVzdFJlc3VsdC5zdWNjZXNzID8gJ2hlYWx0aHknIDogJ2RlZ3JhZGVkJyxcbiAgICAgIGVuYWJsZWQ6IGFwaUtleVNlcnZpY2UuaXNFbmFibGVkLFxuICAgICAgbWVzc2FnZTogJ0FQSSBrZXkgc2VydmljZSBpcyBpbml0aWFsaXplZCBhbmQgZW5hYmxlZCcsXG4gICAgICBmZWF0dXJlczoge1xuICAgICAgICBlbmNyeXB0aW9uOiBhcGlLZXlTZXJ2aWNlLmlzRW5hYmxlZCxcbiAgICAgICAgc2VjcmV0c01hbmFnZXI6ICEhcHJvY2Vzcy5lbnYuQVBJX0tFWV9FTkNSWVBUSU9OX1NFQ1JFVF9BUk4sXG4gICAgICAgIGVuY3J5cHRpb25UZXN0OiB0ZXN0UmVzdWx0LnN1Y2Nlc3NcbiAgICAgIH0sXG4gICAgICBlbmNyeXB0aW9uVGVzdDogdGVzdFJlc3VsdFxuICAgIH07XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHN0YXR1czogJ2ZhaWxlZCcsXG4gICAgICBlbmFibGVkOiBmYWxzZSxcbiAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLFxuICAgICAgbWVzc2FnZTogJ0FQSSBrZXkgc2VydmljZSBpcyBub3QgYXZhaWxhYmxlJyxcbiAgICAgIGZlYXR1cmVzOiB7XG4gICAgICAgIGVuY3J5cHRpb246IGZhbHNlLFxuICAgICAgICBzZWNyZXRzTWFuYWdlcjogISFwcm9jZXNzLmVudi5BUElfS0VZX0VOQ1JZUFRJT05fU0VDUkVUX0FSTixcbiAgICAgICAgZW5jcnlwdGlvblRlc3Q6IGZhbHNlXG4gICAgICB9XG4gICAgfTtcbiAgfVxufVxuXG5hc3luYyBmdW5jdGlvbiBjaGVja0p3dFNlY3JldFNlcnZpY2VIZWFsdGgoKSB7XG4gIHRyeSB7XG4gICAgY29uc29sZS5sb2coJ/CflI0gQ2hlY2tpbmcgSldUIHNlY3JldCBzZXJ2aWNlIGhlYWx0aC4uLicpO1xuICAgIFxuICAgIC8vIEluaXRpYWxpemUgSldUIHNlY3JldCBtYW5hZ2VyXG4gICAgYXdhaXQgand0U2VjcmV0TWFuYWdlci5pbml0aWFsaXplKCk7XG4gICAgXG4gICAgLy8gR2V0IHNlY3JldCBpbmZvXG4gICAgY29uc3Qgc2VjcmV0SW5mbyA9IGF3YWl0IGp3dFNlY3JldE1hbmFnZXIuZ2V0U2VjcmV0SW5mbygpO1xuICAgIFxuICAgIC8vIFRlc3QgSldUIHRva2VuIGdlbmVyYXRpb24gYW5kIHZhbGlkYXRpb25cbiAgICBjb25zdCBqd3RUZXN0UmVzdWx0ID0gYXdhaXQgdGVzdEp3dEZ1bmN0aW9uYWxpdHkoKTtcbiAgICBcbiAgICByZXR1cm4ge1xuICAgICAgc3RhdHVzOiBzZWNyZXRJbmZvLmF2YWlsYWJsZSAmJiBqd3RUZXN0UmVzdWx0LnN1Y2Nlc3MgPyAnaGVhbHRoeScgOiAnZGVncmFkZWQnLFxuICAgICAgYXZhaWxhYmxlOiBzZWNyZXRJbmZvLmF2YWlsYWJsZSxcbiAgICAgIHNvdXJjZTogc2VjcmV0SW5mby5zb3VyY2UsXG4gICAgICB2YWxpZGF0aW9uOiBzZWNyZXRJbmZvLnZhbGlkYXRpb24sXG4gICAgICBtZXNzYWdlOiBzZWNyZXRJbmZvLmF2YWlsYWJsZSA/ICdKV1Qgc2VjcmV0IHNlcnZpY2UgaXMgYXZhaWxhYmxlJyA6ICdKV1Qgc2VjcmV0IHNlcnZpY2UgaXMgbm90IGF2YWlsYWJsZScsXG4gICAgICBqd3RUZXN0OiBqd3RUZXN0UmVzdWx0LFxuICAgICAgZmVhdHVyZXM6IHtcbiAgICAgICAgdG9rZW5HZW5lcmF0aW9uOiBqd3RUZXN0UmVzdWx0LnRva2VuR2VuZXJhdGVkLFxuICAgICAgICB0b2tlblZhbGlkYXRpb246IGp3dFRlc3RSZXN1bHQudG9rZW5WYWxpZCxcbiAgICAgICAgc2VjcmV0U3RyZW5ndGg6IHNlY3JldEluZm8udmFsaWRhdGlvbj8uc3RyZW5ndGggfHwgJ3Vua25vd24nXG4gICAgICB9XG4gICAgfTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCfinYwgSldUIHNlY3JldCBzZXJ2aWNlIGhlYWx0aCBjaGVjayBmYWlsZWQ6JywgZXJyb3IpO1xuICAgIHJldHVybiB7XG4gICAgICBzdGF0dXM6ICdmYWlsZWQnLFxuICAgICAgYXZhaWxhYmxlOiBmYWxzZSxcbiAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLFxuICAgICAgbWVzc2FnZTogJ0pXVCBzZWNyZXQgc2VydmljZSBoZWFsdGggY2hlY2sgZmFpbGVkJyxcbiAgICAgIGZlYXR1cmVzOiB7XG4gICAgICAgIHRva2VuR2VuZXJhdGlvbjogZmFsc2UsXG4gICAgICAgIHRva2VuVmFsaWRhdGlvbjogZmFsc2UsXG4gICAgICAgIHNlY3JldFN0cmVuZ3RoOiAndW5rbm93bidcbiAgICAgIH1cbiAgICB9O1xuICB9XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGNoZWNrRW5jcnlwdGlvblNlcnZpY2VIZWFsdGgoKSB7XG4gIHRyeSB7XG4gICAgY29uc29sZS5sb2coJ/CflI0gQ2hlY2tpbmcgZW5jcnlwdGlvbiBzZXJ2aWNlIGhlYWx0aC4uLicpO1xuICAgIFxuICAgIC8vIEdldCBvdmVyYWxsIHNlcnZpY2UgaGVhbHRoXG4gICAgY29uc3Qgc2VydmljZUhlYWx0aCA9IGF3YWl0IGFwaUtleVNlcnZpY2UuZ2V0U2VydmljZUhlYWx0aCgpO1xuICAgIFxuICAgIHJldHVybiB7XG4gICAgICBzdGF0dXM6IHNlcnZpY2VIZWFsdGgub3ZlcmFsbCA9PT0gJ2hlYWx0aHknID8gJ2hlYWx0aHknIDogJ2RlZ3JhZGVkJyxcbiAgICAgIGVuY3J5cHRpb246IHNlcnZpY2VIZWFsdGguZW5jcnlwdGlvblNlcnZpY2UsXG4gICAgICBqd3Q6IHNlcnZpY2VIZWFsdGguand0U2VydmljZSxcbiAgICAgIG92ZXJhbGw6IHNlcnZpY2VIZWFsdGgub3ZlcmFsbCxcbiAgICAgIG1lc3NhZ2U6IGBFbmNyeXB0aW9uIHNlcnZpY2UgaXMgJHtzZXJ2aWNlSGVhbHRoLm92ZXJhbGx9YCxcbiAgICAgIGZlYXR1cmVzOiB7XG4gICAgICAgIGhhc0VuY3J5cHRpb25TZWNyZXQ6IHNlcnZpY2VIZWFsdGguZW5jcnlwdGlvblNlcnZpY2UuaGFzU2VjcmV0LFxuICAgICAgICBqd3RBdmFpbGFibGU6IHNlcnZpY2VIZWFsdGguand0U2VydmljZS5hdmFpbGFibGUsXG4gICAgICAgIHNlY3JldExlbmd0aDogc2VydmljZUhlYWx0aC5lbmNyeXB0aW9uU2VydmljZS5zZWNyZXRMZW5ndGhcbiAgICAgIH1cbiAgICB9O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBFbmNyeXB0aW9uIHNlcnZpY2UgaGVhbHRoIGNoZWNrIGZhaWxlZDonLCBlcnJvcik7XG4gICAgcmV0dXJuIHtcbiAgICAgIHN0YXR1czogJ2ZhaWxlZCcsXG4gICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSxcbiAgICAgIG1lc3NhZ2U6ICdFbmNyeXB0aW9uIHNlcnZpY2UgaGVhbHRoIGNoZWNrIGZhaWxlZCcsXG4gICAgICBmZWF0dXJlczoge1xuICAgICAgICBoYXNFbmNyeXB0aW9uU2VjcmV0OiBmYWxzZSxcbiAgICAgICAgand0QXZhaWxhYmxlOiBmYWxzZSxcbiAgICAgICAgc2VjcmV0TGVuZ3RoOiAwXG4gICAgICB9XG4gICAgfTtcbiAgfVxufVxuXG5hc3luYyBmdW5jdGlvbiBjaGVja0RhdGFiYXNlVGFibGVzRm9yQXBpS2V5cygpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXF1aXJlZFRhYmxlcyA9IFtcbiAgICAgICd1c2VyX2FwaV9rZXlzJyxcbiAgICAgICdwb3J0Zm9saW9faG9sZGluZ3MnLCBcbiAgICAgICdwb3J0Zm9saW9fbWV0YWRhdGEnLFxuICAgICAgJ3BvcnRmb2xpb19kYXRhX3JlZnJlc2hfcmVxdWVzdHMnXG4gICAgXTtcbiAgICBcbiAgICBjb25zdCB0YWJsZVN0YXR1cyA9IHt9O1xuICAgIFxuICAgIGZvciAoY29uc3QgdGFibGUgb2YgcmVxdWlyZWRUYWJsZXMpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHF1ZXJ5KGBTRUxFQ1QgQ09VTlQoKikgYXMgY291bnQgRlJPTSAke3RhYmxlfSBMSU1JVCAxYCk7XG4gICAgICAgIHRhYmxlU3RhdHVzW3RhYmxlXSA9IHtcbiAgICAgICAgICBleGlzdHM6IHRydWUsXG4gICAgICAgICAgc3RhdHVzOiAnaGVhbHRoeScsXG4gICAgICAgICAgY291bnQ6IHBhcnNlSW50KHJlc3VsdC5yb3dzWzBdLmNvdW50KVxuICAgICAgICB9O1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgaWYgKGVycm9yLm1lc3NhZ2UuaW5jbHVkZXMoJ2RvZXMgbm90IGV4aXN0JykpIHtcbiAgICAgICAgICB0YWJsZVN0YXR1c1t0YWJsZV0gPSB7XG4gICAgICAgICAgICBleGlzdHM6IGZhbHNlLFxuICAgICAgICAgICAgc3RhdHVzOiAnbWlzc2luZycsXG4gICAgICAgICAgICBlcnJvcjogJ1RhYmxlIGRvZXMgbm90IGV4aXN0J1xuICAgICAgICAgIH07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGFibGVTdGF0dXNbdGFibGVdID0ge1xuICAgICAgICAgICAgZXhpc3RzOiB0cnVlLFxuICAgICAgICAgICAgc3RhdHVzOiAnZXJyb3InLFxuICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2VcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIGNvbnN0IGFsbEhlYWx0aHkgPSBPYmplY3QudmFsdWVzKHRhYmxlU3RhdHVzKS5ldmVyeSh0ID0+IHQuc3RhdHVzID09PSAnaGVhbHRoeScpO1xuICAgIFxuICAgIHJldHVybiB7XG4gICAgICBzdGF0dXM6IGFsbEhlYWx0aHkgPyAnaGVhbHRoeScgOiAnZGVncmFkZWQnLFxuICAgICAgdGFibGVzOiB0YWJsZVN0YXR1cyxcbiAgICAgIHN1bW1hcnk6IHtcbiAgICAgICAgdG90YWxfdGFibGVzOiByZXF1aXJlZFRhYmxlcy5sZW5ndGgsXG4gICAgICAgIGhlYWx0aHlfdGFibGVzOiBPYmplY3QudmFsdWVzKHRhYmxlU3RhdHVzKS5maWx0ZXIodCA9PiB0LnN0YXR1cyA9PT0gJ2hlYWx0aHknKS5sZW5ndGgsXG4gICAgICAgIG1pc3NpbmdfdGFibGVzOiBPYmplY3QudmFsdWVzKHRhYmxlU3RhdHVzKS5maWx0ZXIodCA9PiB0LnN0YXR1cyA9PT0gJ21pc3NpbmcnKS5sZW5ndGgsXG4gICAgICAgIGVycm9yX3RhYmxlczogT2JqZWN0LnZhbHVlcyh0YWJsZVN0YXR1cykuZmlsdGVyKHQgPT4gdC5zdGF0dXMgPT09ICdlcnJvcicpLmxlbmd0aFxuICAgICAgfVxuICAgIH07XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHN0YXR1czogJ2ZhaWxlZCcsXG4gICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSxcbiAgICAgIG1lc3NhZ2U6ICdGYWlsZWQgdG8gY2hlY2sgZGF0YWJhc2UgdGFibGVzJ1xuICAgIH07XG4gIH1cbn1cblxuYXN5bmMgZnVuY3Rpb24gY2hlY2tTZWNyZXRzTWFuYWdlckhlYWx0aCgpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBzZWNyZXRBcm4gPSBwcm9jZXNzLmVudi5BUElfS0VZX0VOQ1JZUFRJT05fU0VDUkVUX0FSTjtcbiAgICBcbiAgICBpZiAoIXNlY3JldEFybikge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3RhdHVzOiAnZGVncmFkZWQnLFxuICAgICAgICBtZXNzYWdlOiAnQVBJX0tFWV9FTkNSWVBUSU9OX1NFQ1JFVF9BUk4gbm90IGNvbmZpZ3VyZWQnLFxuICAgICAgICBjb25maWd1cmVkOiBmYWxzZVxuICAgICAgfTtcbiAgICB9XG4gICAgXG4gICAgLy8gVHJ5IHRvIGxvYWQgdGhlIHNlY3JldCAodGhpcyB3aWxsIHRlc3QgYm90aCBwZXJtaXNzaW9ucyBhbmQgc2VjcmV0IGV4aXN0ZW5jZSlcbiAgICB0cnkge1xuICAgICAgYXdhaXQgYXBpS2V5U2VydmljZS5lbnN1cmVJbml0aWFsaXplZCgpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3RhdHVzOiAnaGVhbHRoeScsXG4gICAgICAgIG1lc3NhZ2U6ICdTZWNyZXRzIE1hbmFnZXIgYWNjZXNzIGlzIHdvcmtpbmcnLFxuICAgICAgICBjb25maWd1cmVkOiB0cnVlLFxuICAgICAgICBzZWNyZXRBcm46IHNlY3JldEFybi5zdWJzdHJpbmcoMCwgNTApICsgJy4uLicgLy8gVHJ1bmNhdGUgZm9yIHNlY3VyaXR5XG4gICAgICB9O1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdGF0dXM6ICdmYWlsZWQnLFxuICAgICAgICBtZXNzYWdlOiAnQ2Fubm90IGFjY2VzcyBlbmNyeXB0aW9uIHNlY3JldCcsXG4gICAgICAgIGNvbmZpZ3VyZWQ6IHRydWUsXG4gICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLFxuICAgICAgICBzZWNyZXRBcm46IHNlY3JldEFybi5zdWJzdHJpbmcoMCwgNTApICsgJy4uLidcbiAgICAgIH07XG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiB7XG4gICAgICBzdGF0dXM6ICdmYWlsZWQnLFxuICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsXG4gICAgICBtZXNzYWdlOiAnU2VjcmV0cyBNYW5hZ2VyIGhlYWx0aCBjaGVjayBmYWlsZWQnXG4gICAgfTtcbiAgfVxufVxuXG4vKipcbiAqIEdlbmVyYXRlIHRpbWVvdXQgcmVjb21tZW5kYXRpb25zIGJhc2VkIG9uIGNpcmN1aXQgYnJlYWtlciBzdGF0dXNcbiAqL1xuZnVuY3Rpb24gZ2VuZXJhdGVUaW1lb3V0UmVjb21tZW5kYXRpb25zKGNpcmN1aXRCcmVha2Vycykge1xuICBjb25zdCByZWNvbW1lbmRhdGlvbnMgPSBbXTtcbiAgXG4gIGZvciAoY29uc3QgW3NlcnZpY2VLZXksIGJyZWFrZXJdIG9mIE9iamVjdC5lbnRyaWVzKGNpcmN1aXRCcmVha2VycykpIHtcbiAgICBpZiAoYnJlYWtlci5zdGF0ZSA9PT0gJ29wZW4nKSB7XG4gICAgICByZWNvbW1lbmRhdGlvbnMucHVzaCh7XG4gICAgICAgIHNlcnZpY2U6IHNlcnZpY2VLZXksXG4gICAgICAgIGlzc3VlOiAnQ2lyY3VpdCBicmVha2VyIGlzIG9wZW4nLFxuICAgICAgICByZWNvbW1lbmRhdGlvbjogJ1NlcnZpY2UgaXMgY3VycmVudGx5IHVuYXZhaWxhYmxlIGR1ZSB0byByZXBlYXRlZCBmYWlsdXJlcy4gQ2hlY2sgc2VydmljZSBoZWFsdGguJyxcbiAgICAgICAgcHJpb3JpdHk6ICdoaWdoJ1xuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChicmVha2VyLnN0YXRlID09PSAnaGFsZi1vcGVuJykge1xuICAgICAgcmVjb21tZW5kYXRpb25zLnB1c2goe1xuICAgICAgICBzZXJ2aWNlOiBzZXJ2aWNlS2V5LFxuICAgICAgICBpc3N1ZTogJ0NpcmN1aXQgYnJlYWtlciBpcyBoYWxmLW9wZW4nLFxuICAgICAgICByZWNvbW1lbmRhdGlvbjogJ1NlcnZpY2UgaXMgcmVjb3ZlcmluZyBmcm9tIGZhaWx1cmVzLiBNb25pdG9yIGNsb3NlbHkuJyxcbiAgICAgICAgcHJpb3JpdHk6ICdtZWRpdW0nXG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKGJyZWFrZXIuZmFpbHVyZXMgPiAyKSB7XG4gICAgICByZWNvbW1lbmRhdGlvbnMucHVzaCh7XG4gICAgICAgIHNlcnZpY2U6IHNlcnZpY2VLZXksXG4gICAgICAgIGlzc3VlOiAnUmVjZW50IGZhaWx1cmVzIGRldGVjdGVkJyxcbiAgICAgICAgcmVjb21tZW5kYXRpb246ICdTZXJ2aWNlIGhhcyByZWNlbnQgZmFpbHVyZXMgYnV0IGlzIHN0aWxsIG9wZXJhdGlvbmFsLiBDb25zaWRlciBpbnZlc3RpZ2F0aW5nLicsXG4gICAgICAgIHByaW9yaXR5OiAnbG93J1xuICAgICAgfSk7XG4gICAgfVxuICB9XG4gIFxuICBpZiAocmVjb21tZW5kYXRpb25zLmxlbmd0aCA9PT0gMCkge1xuICAgIHJlY29tbWVuZGF0aW9ucy5wdXNoKHtcbiAgICAgIHNlcnZpY2U6ICdhbGwnLFxuICAgICAgaXNzdWU6ICdub25lJyxcbiAgICAgIHJlY29tbWVuZGF0aW9uOiAnQWxsIHNlcnZpY2VzIGFyZSBvcGVyYXRpbmcgbm9ybWFsbHkgd2l0aCBwcm9wZXIgdGltZW91dCBoYW5kbGluZy4nLFxuICAgICAgcHJpb3JpdHk6ICdpbmZvJ1xuICAgIH0pO1xuICB9XG4gIFxuICByZXR1cm4gcmVjb21tZW5kYXRpb25zO1xufVxuXG4vLyBDb21wcmVoZW5zaXZlIERhdGFiYXNlIFNjaGVtYSBWYWxpZGF0aW9uIEVuZHBvaW50XG5yb3V0ZXIuZ2V0KCcvZGF0YWJhc2Uvc2NoZW1hJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHJlcXVlc3RJZCA9IGNyeXB0by5yYW5kb21VVUlEKCkuc3BsaXQoJy0nKVswXTtcbiAgY29uc3QgcmVxdWVzdFN0YXJ0ID0gRGF0ZS5ub3coKTtcbiAgXG4gIHRyeSB7XG4gICAgY29uc29sZS5sb2coYPCfmoAgWyR7cmVxdWVzdElkfV0gRGF0YWJhc2Ugc2NoZW1hIHZhbGlkYXRpb24gZW5kcG9pbnQgY2FsbGVkYCwge1xuICAgICAgdXNlckFnZW50OiByZXEuaGVhZGVyc1sndXNlci1hZ2VudCddLFxuICAgICAgaXA6IHJlcS5pcCxcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gICAgfSk7XG5cbiAgICAvLyBQZXJmb3JtIGNvbXByZWhlbnNpdmUgZGF0YWJhc2Ugc2NoZW1hIHZhbGlkYXRpb25cbiAgICBjb25zb2xlLmxvZyhg8J+UjSBbJHtyZXF1ZXN0SWR9XSBTdGFydGluZyBjb21wcmVoZW5zaXZlIGRhdGFiYXNlIHNjaGVtYSB2YWxpZGF0aW9uYCk7XG4gICAgY29uc3Qgc2NoZW1hVmFsaWRhdGlvbiA9IGF3YWl0IHZhbGlkYXRlRGF0YWJhc2VTY2hlbWEocmVxdWVzdElkKTtcbiAgICBcbiAgICBjb25zdCByZXNwb25zZURhdGEgPSB7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgc2NoZW1hX3ZhbGlkYXRpb246IHtcbiAgICAgICAgb3ZlcmFsbDoge1xuICAgICAgICAgIHN0YXR1czogc2NoZW1hVmFsaWRhdGlvbi52YWxpZCA/ICd2YWxpZCcgOiAnaW52YWxpZCcsXG4gICAgICAgICAgaGVhbHRoX3BlcmNlbnRhZ2U6IHNjaGVtYVZhbGlkYXRpb24uaGVhbHRoUGVyY2VudGFnZSxcbiAgICAgICAgICBjcml0aWNhbF9taXNzaW5nOiBzY2hlbWFWYWxpZGF0aW9uLmNyaXRpY2FsTWlzc2luZyB8fCBbXSxcbiAgICAgICAgICB0b3RhbF9yZXF1aXJlZDogc2NoZW1hVmFsaWRhdGlvbi50b3RhbFJlcXVpcmVkLFxuICAgICAgICAgIHRvdGFsX2V4aXN0aW5nOiBzY2hlbWFWYWxpZGF0aW9uLnRvdGFsRXhpc3RpbmdcbiAgICAgICAgfSxcbiAgICAgICAgY2F0ZWdvcmllczogc2NoZW1hVmFsaWRhdGlvbi52YWxpZGF0aW9uID8ge1xuICAgICAgICAgIGNvcmU6IHtcbiAgICAgICAgICAgIHN0YXR1czogc2NoZW1hVmFsaWRhdGlvbi52YWxpZGF0aW9uLmNvcmUubWlzc2luZy5sZW5ndGggPT09IDAgPyAnY29tcGxldGUnIDogJ2luY29tcGxldGUnLFxuICAgICAgICAgICAgcmVxdWlyZWQ6IHNjaGVtYVZhbGlkYXRpb24udmFsaWRhdGlvbi5jb3JlLnJlcXVpcmVkLmxlbmd0aCxcbiAgICAgICAgICAgIGV4aXN0aW5nOiBzY2hlbWFWYWxpZGF0aW9uLnZhbGlkYXRpb24uY29yZS5leGlzdGluZy5sZW5ndGgsXG4gICAgICAgICAgICBtaXNzaW5nOiBzY2hlbWFWYWxpZGF0aW9uLnZhbGlkYXRpb24uY29yZS5taXNzaW5nLFxuICAgICAgICAgICAgZXhpc3RpbmdfdGFibGVzOiBzY2hlbWFWYWxpZGF0aW9uLnZhbGlkYXRpb24uY29yZS5leGlzdGluZ1xuICAgICAgICAgIH0sXG4gICAgICAgICAgcG9ydGZvbGlvOiB7XG4gICAgICAgICAgICBzdGF0dXM6IHNjaGVtYVZhbGlkYXRpb24udmFsaWRhdGlvbi5wb3J0Zm9saW8ubWlzc2luZy5sZW5ndGggPT09IDAgPyAnY29tcGxldGUnIDogJ2luY29tcGxldGUnLFxuICAgICAgICAgICAgcmVxdWlyZWQ6IHNjaGVtYVZhbGlkYXRpb24udmFsaWRhdGlvbi5wb3J0Zm9saW8ucmVxdWlyZWQubGVuZ3RoLFxuICAgICAgICAgICAgZXhpc3Rpbmc6IHNjaGVtYVZhbGlkYXRpb24udmFsaWRhdGlvbi5wb3J0Zm9saW8uZXhpc3RpbmcubGVuZ3RoLFxuICAgICAgICAgICAgbWlzc2luZzogc2NoZW1hVmFsaWRhdGlvbi52YWxpZGF0aW9uLnBvcnRmb2xpby5taXNzaW5nLFxuICAgICAgICAgICAgZXhpc3RpbmdfdGFibGVzOiBzY2hlbWFWYWxpZGF0aW9uLnZhbGlkYXRpb24ucG9ydGZvbGlvLmV4aXN0aW5nXG4gICAgICAgICAgfSxcbiAgICAgICAgICBtYXJrZXRfZGF0YToge1xuICAgICAgICAgICAgc3RhdHVzOiBzY2hlbWFWYWxpZGF0aW9uLnZhbGlkYXRpb24ubWFya2V0X2RhdGEubWlzc2luZy5sZW5ndGggPT09IDAgPyAnY29tcGxldGUnIDogJ2luY29tcGxldGUnLFxuICAgICAgICAgICAgcmVxdWlyZWQ6IHNjaGVtYVZhbGlkYXRpb24udmFsaWRhdGlvbi5tYXJrZXRfZGF0YS5yZXF1aXJlZC5sZW5ndGgsXG4gICAgICAgICAgICBleGlzdGluZzogc2NoZW1hVmFsaWRhdGlvbi52YWxpZGF0aW9uLm1hcmtldF9kYXRhLmV4aXN0aW5nLmxlbmd0aCxcbiAgICAgICAgICAgIG1pc3Npbmc6IHNjaGVtYVZhbGlkYXRpb24udmFsaWRhdGlvbi5tYXJrZXRfZGF0YS5taXNzaW5nLFxuICAgICAgICAgICAgZXhpc3RpbmdfdGFibGVzOiBzY2hlbWFWYWxpZGF0aW9uLnZhbGlkYXRpb24ubWFya2V0X2RhdGEuZXhpc3RpbmdcbiAgICAgICAgICB9LFxuICAgICAgICAgIGFuYWx5dGljczoge1xuICAgICAgICAgICAgc3RhdHVzOiBzY2hlbWFWYWxpZGF0aW9uLnZhbGlkYXRpb24uYW5hbHl0aWNzLm1pc3NpbmcubGVuZ3RoID09PSAwID8gJ2NvbXBsZXRlJyA6ICdpbmNvbXBsZXRlJyxcbiAgICAgICAgICAgIHJlcXVpcmVkOiBzY2hlbWFWYWxpZGF0aW9uLnZhbGlkYXRpb24uYW5hbHl0aWNzLnJlcXVpcmVkLmxlbmd0aCxcbiAgICAgICAgICAgIGV4aXN0aW5nOiBzY2hlbWFWYWxpZGF0aW9uLnZhbGlkYXRpb24uYW5hbHl0aWNzLmV4aXN0aW5nLmxlbmd0aCxcbiAgICAgICAgICAgIG1pc3Npbmc6IHNjaGVtYVZhbGlkYXRpb24udmFsaWRhdGlvbi5hbmFseXRpY3MubWlzc2luZyxcbiAgICAgICAgICAgIGV4aXN0aW5nX3RhYmxlczogc2NoZW1hVmFsaWRhdGlvbi52YWxpZGF0aW9uLmFuYWx5dGljcy5leGlzdGluZ1xuICAgICAgICAgIH0sXG4gICAgICAgICAgb3B0aW9uYWw6IHtcbiAgICAgICAgICAgIHN0YXR1czogJ29wdGlvbmFsJyxcbiAgICAgICAgICAgIHJlcXVpcmVkOiBzY2hlbWFWYWxpZGF0aW9uLnZhbGlkYXRpb24ub3B0aW9uYWwucmVxdWlyZWQubGVuZ3RoLFxuICAgICAgICAgICAgZXhpc3Rpbmc6IHNjaGVtYVZhbGlkYXRpb24udmFsaWRhdGlvbi5vcHRpb25hbC5leGlzdGluZy5sZW5ndGgsXG4gICAgICAgICAgICBtaXNzaW5nOiBzY2hlbWFWYWxpZGF0aW9uLnZhbGlkYXRpb24ub3B0aW9uYWwubWlzc2luZyxcbiAgICAgICAgICAgIGV4aXN0aW5nX3RhYmxlczogc2NoZW1hVmFsaWRhdGlvbi52YWxpZGF0aW9uLm9wdGlvbmFsLmV4aXN0aW5nXG4gICAgICAgICAgfVxuICAgICAgICB9IDogbnVsbCxcbiAgICAgICAgc2NoZW1hX2RlZmluaXRpb246IFJFUVVJUkVEX1NDSEVNQSxcbiAgICAgICAgcmVjb21tZW5kYXRpb25zOiBnZW5lcmF0ZVNjaGVtYVJlY29tbWVuZGF0aW9ucyhzY2hlbWFWYWxpZGF0aW9uKSxcbiAgICAgICAgdmFsaWRhdGlvbl9pbmZvOiB7XG4gICAgICAgICAgZHVyYXRpb25fbXM6IHNjaGVtYVZhbGlkYXRpb24udmFsaWRhdGlvbkR1cmF0aW9uLFxuICAgICAgICAgIHRpbWVzdGFtcDogc2NoZW1hVmFsaWRhdGlvbi50aW1lc3RhbXAsXG4gICAgICAgICAgcmVxdWVzdF9pZDogcmVxdWVzdElkXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICByZXF1ZXN0X2luZm86IHtcbiAgICAgICAgcmVxdWVzdF9pZDogcmVxdWVzdElkLFxuICAgICAgICB0b3RhbF9kdXJhdGlvbl9tczogRGF0ZS5ub3coKSAtIHJlcXVlc3RTdGFydCxcbiAgICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgLy8gU2V0IGFwcHJvcHJpYXRlIEhUVFAgc3RhdHVzIGJhc2VkIG9uIHNjaGVtYSBoZWFsdGhcbiAgICBsZXQgc3RhdHVzQ29kZSA9IDIwMDtcbiAgICBpZiAoc2NoZW1hVmFsaWRhdGlvbi5lcnJvcikge1xuICAgICAgc3RhdHVzQ29kZSA9IDUwMDtcbiAgICB9IGVsc2UgaWYgKHNjaGVtYVZhbGlkYXRpb24uY3JpdGljYWxNaXNzaW5nICYmIHNjaGVtYVZhbGlkYXRpb24uY3JpdGljYWxNaXNzaW5nLmxlbmd0aCA+IDApIHtcbiAgICAgIHN0YXR1c0NvZGUgPSA1MDM7IC8vIFNlcnZpY2UgdW5hdmFpbGFibGUgZHVlIHRvIG1pc3NpbmcgY3JpdGljYWwgdGFibGVzXG4gICAgfSBlbHNlIGlmIChzY2hlbWFWYWxpZGF0aW9uLmhlYWx0aFBlcmNlbnRhZ2UgPCA4MCkge1xuICAgICAgc3RhdHVzQ29kZSA9IDIwNjsgLy8gUGFydGlhbCBjb250ZW50IC0gc29tZSB0YWJsZXMgbWlzc2luZyBidXQgbm90IGNyaXRpY2FsXG4gICAgfVxuXG4gICAgY29uc3QgdG90YWxEdXJhdGlvbiA9IERhdGUubm93KCkgLSByZXF1ZXN0U3RhcnQ7XG4gICAgY29uc29sZS5sb2coYOKchSBbJHtyZXF1ZXN0SWR9XSBEYXRhYmFzZSBzY2hlbWEgdmFsaWRhdGlvbiBjb21wbGV0ZWQgaW4gJHt0b3RhbER1cmF0aW9ufW1zYCwge1xuICAgICAgc3RhdHVzOiBzdGF0dXNDb2RlLFxuICAgICAgc2NoZW1hSGVhbHRoOiBgJHtzY2hlbWFWYWxpZGF0aW9uLmhlYWx0aFBlcmNlbnRhZ2V9JWAsXG4gICAgICBjcml0aWNhbE1pc3Npbmc6IHNjaGVtYVZhbGlkYXRpb24uY3JpdGljYWxNaXNzaW5nPy5sZW5ndGggfHwgMCxcbiAgICAgIHRvdGFsUmVxdWlyZWQ6IHNjaGVtYVZhbGlkYXRpb24udG90YWxSZXF1aXJlZCxcbiAgICAgIHRvdGFsRXhpc3Rpbmc6IHNjaGVtYVZhbGlkYXRpb24udG90YWxFeGlzdGluZ1xuICAgIH0pO1xuXG4gICAgcmVzLnN0YXR1cyhzdGF0dXNDb2RlKS5qc29uKHJlc3BvbnNlRGF0YSk7XG5cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zdCBlcnJvckR1cmF0aW9uID0gRGF0ZS5ub3coKSAtIHJlcXVlc3RTdGFydDtcbiAgICBjb25zb2xlLmVycm9yKGDinYwgWyR7cmVxdWVzdElkfV0gRGF0YWJhc2Ugc2NoZW1hIHZhbGlkYXRpb24gRkFJTEVEIGFmdGVyICR7ZXJyb3JEdXJhdGlvbn1tczpgLCB7XG4gICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSxcbiAgICAgIGVycm9yU3RhY2s6IGVycm9yLnN0YWNrLFxuICAgICAgaW1wYWN0OiAnQ2Fubm90IHZhbGlkYXRlIGRhdGFiYXNlIHNjaGVtYScsXG4gICAgICByZWNvbW1lbmRhdGlvbjogJ0NoZWNrIGRhdGFiYXNlIGNvbm5lY3Rpdml0eSBhbmQgcGVybWlzc2lvbnMnXG4gICAgfSk7XG4gICAgXG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBlcnJvcjogJ0RhdGFiYXNlIHNjaGVtYSB2YWxpZGF0aW9uIGZhaWxlZCcsXG4gICAgICBkZXRhaWxzOiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JyA/IGVycm9yLm1lc3NhZ2UgOiAnSW50ZXJuYWwgc2VydmVyIGVycm9yJyxcbiAgICAgIHJlcXVlc3RfaW5mbzoge1xuICAgICAgICByZXF1ZXN0X2lkOiByZXF1ZXN0SWQsXG4gICAgICAgIGVycm9yX2R1cmF0aW9uX21zOiBlcnJvckR1cmF0aW9uLFxuICAgICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxuICAgICAgfVxuICAgIH0pO1xuICB9XG59KTtcblxuLyoqXG4gKiBHZW5lcmF0ZSBzY2hlbWEtc3BlY2lmaWMgcmVjb21tZW5kYXRpb25zIGJhc2VkIG9uIHZhbGlkYXRpb24gcmVzdWx0c1xuICovXG5mdW5jdGlvbiBnZW5lcmF0ZVNjaGVtYVJlY29tbWVuZGF0aW9ucyhzY2hlbWFWYWxpZGF0aW9uKSB7XG4gIGNvbnN0IHJlY29tbWVuZGF0aW9ucyA9IFtdO1xuICBcbiAgaWYgKHNjaGVtYVZhbGlkYXRpb24uZXJyb3IpIHtcbiAgICByZWNvbW1lbmRhdGlvbnMucHVzaCh7XG4gICAgICB0eXBlOiAnZXJyb3InLFxuICAgICAgcHJpb3JpdHk6ICdjcml0aWNhbCcsXG4gICAgICBtZXNzYWdlOiAnRGF0YWJhc2Ugc2NoZW1hIHZhbGlkYXRpb24gZmFpbGVkJyxcbiAgICAgIGFjdGlvbjogJ0NoZWNrIGRhdGFiYXNlIGNvbm5lY3Rpdml0eSBhbmQgcGVybWlzc2lvbnMnLFxuICAgICAgZGV0YWlsczogc2NoZW1hVmFsaWRhdGlvbi5lcnJvclxuICAgIH0pO1xuICAgIHJldHVybiByZWNvbW1lbmRhdGlvbnM7XG4gIH1cbiAgXG4gIGlmIChzY2hlbWFWYWxpZGF0aW9uLmNyaXRpY2FsTWlzc2luZyAmJiBzY2hlbWFWYWxpZGF0aW9uLmNyaXRpY2FsTWlzc2luZy5sZW5ndGggPiAwKSB7XG4gICAgcmVjb21tZW5kYXRpb25zLnB1c2goe1xuICAgICAgdHlwZTogJ2NyaXRpY2FsX3RhYmxlc19taXNzaW5nJyxcbiAgICAgIHByaW9yaXR5OiAnY3JpdGljYWwnLFxuICAgICAgbWVzc2FnZTogYCR7c2NoZW1hVmFsaWRhdGlvbi5jcml0aWNhbE1pc3NpbmcubGVuZ3RofSBjcml0aWNhbCB0YWJsZXMgbWlzc2luZ2AsXG4gICAgICBhY3Rpb246ICdSdW4gZGF0YWJhc2UgaW5pdGlhbGl6YXRpb24gc2NyaXB0cyBpbW1lZGlhdGVseScsXG4gICAgICBkZXRhaWxzOiBzY2hlbWFWYWxpZGF0aW9uLmNyaXRpY2FsTWlzc2luZyxcbiAgICAgIGltcGFjdDogJ0NvcmUgYXBwbGljYXRpb24gZnVuY3Rpb25hbGl0eSB3aWxsIG5vdCB3b3JrJ1xuICAgIH0pO1xuICB9XG4gIFxuICBpZiAoc2NoZW1hVmFsaWRhdGlvbi52YWxpZGF0aW9uKSB7XG4gICAgY29uc3QgY2F0ZWdvcmllcyA9IFsnY29yZScsICdwb3J0Zm9saW8nLCAnbWFya2V0X2RhdGEnLCAnYW5hbHl0aWNzJ107XG4gICAgXG4gICAgY2F0ZWdvcmllcy5mb3JFYWNoKGNhdGVnb3J5ID0+IHtcbiAgICAgIGNvbnN0IGNhdGVnb3J5RGF0YSA9IHNjaGVtYVZhbGlkYXRpb24udmFsaWRhdGlvbltjYXRlZ29yeV07XG4gICAgICBpZiAoY2F0ZWdvcnlEYXRhICYmIGNhdGVnb3J5RGF0YS5taXNzaW5nLmxlbmd0aCA+IDApIHtcbiAgICAgICAgcmVjb21tZW5kYXRpb25zLnB1c2goe1xuICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeV90YWJsZXNfbWlzc2luZycsXG4gICAgICAgICAgcHJpb3JpdHk6IGNhdGVnb3J5ID09PSAnY29yZScgPyAnaGlnaCcgOiAnbWVkaXVtJyxcbiAgICAgICAgICBtZXNzYWdlOiBgTWlzc2luZyAke2NhdGVnb3J5RGF0YS5taXNzaW5nLmxlbmd0aH0gJHtjYXRlZ29yeX0gdGFibGVzYCxcbiAgICAgICAgICBhY3Rpb246IGBDcmVhdGUgbWlzc2luZyAke2NhdGVnb3J5fSB0YWJsZXM6ICR7Y2F0ZWdvcnlEYXRhLm1pc3Npbmcuam9pbignLCAnKX1gLFxuICAgICAgICAgIGRldGFpbHM6IGNhdGVnb3J5RGF0YS5taXNzaW5nLFxuICAgICAgICAgIGltcGFjdDogZ2V0Q2F0ZWdvcnlJbXBhY3QoY2F0ZWdvcnkpXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIFxuICBpZiAoc2NoZW1hVmFsaWRhdGlvbi5oZWFsdGhQZXJjZW50YWdlIDwgMTAwICYmIHNjaGVtYVZhbGlkYXRpb24uaGVhbHRoUGVyY2VudGFnZSA+PSA4MCkge1xuICAgIHJlY29tbWVuZGF0aW9ucy5wdXNoKHtcbiAgICAgIHR5cGU6ICdwYXJ0aWFsX3NjaGVtYScsXG4gICAgICBwcmlvcml0eTogJ2xvdycsXG4gICAgICBtZXNzYWdlOiBgU2NoZW1hIGlzICR7c2NoZW1hVmFsaWRhdGlvbi5oZWFsdGhQZXJjZW50YWdlfSUgY29tcGxldGVgLFxuICAgICAgYWN0aW9uOiAnQ29uc2lkZXIgY3JlYXRpbmcgbWlzc2luZyBvcHRpb25hbCB0YWJsZXMgZm9yIGZ1bGwgZnVuY3Rpb25hbGl0eScsXG4gICAgICBkZXRhaWxzOiAnU29tZSBhZHZhbmNlZCBmZWF0dXJlcyBtYXkgYmUgbGltaXRlZCdcbiAgICB9KTtcbiAgfVxuICBcbiAgaWYgKHJlY29tbWVuZGF0aW9ucy5sZW5ndGggPT09IDApIHtcbiAgICByZWNvbW1lbmRhdGlvbnMucHVzaCh7XG4gICAgICB0eXBlOiAnc2NoZW1hX2NvbXBsZXRlJyxcbiAgICAgIHByaW9yaXR5OiAnaW5mbycsXG4gICAgICBtZXNzYWdlOiAnRGF0YWJhc2Ugc2NoZW1hIGlzIGNvbXBsZXRlIGFuZCBoZWFsdGh5JyxcbiAgICAgIGFjdGlvbjogJ05vIGFjdGlvbiByZXF1aXJlZCcsXG4gICAgICBkZXRhaWxzOiAnQWxsIHJlcXVpcmVkIHRhYmxlcyBhcmUgcHJlc2VudCBhbmQgYWNjZXNzaWJsZSdcbiAgICB9KTtcbiAgfVxuICBcbiAgcmV0dXJuIHJlY29tbWVuZGF0aW9ucztcbn1cblxuLyoqXG4gKiBHZXQgY2F0ZWdvcnktc3BlY2lmaWMgaW1wYWN0IGRlc2NyaXB0aW9uIGZvciByZWNvbW1lbmRhdGlvbnNcbiAqL1xuZnVuY3Rpb24gZ2V0Q2F0ZWdvcnlJbXBhY3QoY2F0ZWdvcnkpIHtcbiAgY29uc3QgaW1wYWN0cyA9IHtcbiAgICBjb3JlOiAnVXNlciBhdXRoZW50aWNhdGlvbiBhbmQgQVBJIGtleSBtYW5hZ2VtZW50IHdpbGwgZmFpbCcsXG4gICAgcG9ydGZvbGlvOiAnUG9ydGZvbGlvIHRyYWNraW5nIGFuZCBtYW5hZ2VtZW50IGZlYXR1cmVzIHdpbGwgYmUgYnJva2VuJyxcbiAgICBtYXJrZXRfZGF0YTogJ1N0b2NrIGRhdGEgYW5kIG1hcmtldCBpbmZvcm1hdGlvbiB3aWxsIGJlIHVuYXZhaWxhYmxlJyxcbiAgICBhbmFseXRpY3M6ICdUcmFkaW5nIHNpZ25hbHMgYW5kIGFuYWx5c2lzIGZlYXR1cmVzIHdpbGwgbm90IHdvcmsnXG4gIH07XG4gIFxuICByZXR1cm4gaW1wYWN0c1tjYXRlZ29yeV0gfHwgJ1NvbWUgYXBwbGljYXRpb24gZmVhdHVyZXMgbWF5IGJlIGxpbWl0ZWQnO1xufVxuXG4vKipcbiAqIFRlc3QgZW5jcnlwdGlvbiBmdW5jdGlvbmFsaXR5IHdpdGggc2FtcGxlIGRhdGFcbiAqL1xuYXN5bmMgZnVuY3Rpb24gdGVzdEVuY3J5cHRpb25GdW5jdGlvbmFsaXR5KCkge1xuICB0cnkge1xuICAgIGNvbnN0IHRlc3RBcGlLZXkgPSAnVEVTVF9LRVlfJyArIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCAxMCk7XG4gICAgY29uc3QgdGVzdFNhbHQgPSAndGVzdF9zYWx0XycgKyBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwgOCk7XG4gICAgY29uc3QgdGVzdFVzZXJJZCA9ICd0ZXN0X3VzZXInO1xuICAgIGNvbnN0IHRlc3RQcm92aWRlciA9ICd0ZXN0JztcbiAgICBcbiAgICAvLyBUZXN0IGVuY3J5cHRpb25cbiAgICBjb25zdCBlbmNyeXB0ZWQgPSBhd2FpdCBhcGlLZXlTZXJ2aWNlLmVuY3J5cHRBcGlLZXkodGVzdEFwaUtleSwgdGVzdFNhbHQsIHRlc3RVc2VySWQsIHRlc3RQcm92aWRlcik7XG4gICAgXG4gICAgLy8gVGVzdCBkZWNyeXB0aW9uXG4gICAgY29uc3QgZGVjcnlwdGVkID0gYXdhaXQgYXBpS2V5U2VydmljZS5kZWNyeXB0QXBpS2V5KGVuY3J5cHRlZCwgdGVzdFNhbHQsIHRlc3RVc2VySWQsIHRlc3RQcm92aWRlcik7XG4gICAgXG4gICAgY29uc3Qgc3VjY2VzcyA9IHRlc3RBcGlLZXkgPT09IGRlY3J5cHRlZDtcbiAgICBcbiAgICByZXR1cm4ge1xuICAgICAgc3VjY2VzcyxcbiAgICAgIG1lc3NhZ2U6IHN1Y2Nlc3MgPyAnRW5jcnlwdGlvbiB0ZXN0IHBhc3NlZCcgOiAnRW5jcnlwdGlvbiB0ZXN0IGZhaWxlZCcsXG4gICAgICBkZXRhaWxzOiB7XG4gICAgICAgIG9yaWdpbmFsTGVuZ3RoOiB0ZXN0QXBpS2V5Lmxlbmd0aCxcbiAgICAgICAgZW5jcnlwdGVkTGVuZ3RoOiBlbmNyeXB0ZWQuZW5jcnlwdGVkLmxlbmd0aCxcbiAgICAgICAgZGVjcnlwdGVkTGVuZ3RoOiBkZWNyeXB0ZWQubGVuZ3RoLFxuICAgICAgICByb3VuZFRyaXBTdWNjZXNzOiBzdWNjZXNzXG4gICAgICB9XG4gICAgfTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4ge1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBtZXNzYWdlOiAnRW5jcnlwdGlvbiB0ZXN0IGZhaWxlZCcsXG4gICAgICBlcnJvcjogZXJyb3IubWVzc2FnZVxuICAgIH07XG4gIH1cbn1cblxuLyoqXG4gKiBUZXN0IEpXVCBmdW5jdGlvbmFsaXR5IHdpdGggc2FtcGxlIGRhdGFcbiAqL1xuYXN5bmMgZnVuY3Rpb24gdGVzdEp3dEZ1bmN0aW9uYWxpdHkoKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgdGVzdFVzZXJJZCA9ICd0ZXN0X3VzZXJfJyArIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCA2KTtcbiAgICBjb25zdCB0ZXN0UHJvdmlkZXIgPSAndGVzdF9wcm92aWRlcic7XG4gICAgY29uc3QgdGVzdFBlcm1pc3Npb25zID0gWydyZWFkJywgJ3dyaXRlJ107XG4gICAgXG4gICAgLy8gVGVzdCB0b2tlbiBnZW5lcmF0aW9uXG4gICAgY29uc3QgdG9rZW4gPSBhd2FpdCBhcGlLZXlTZXJ2aWNlLmdlbmVyYXRlQXBpS2V5VG9rZW4odGVzdFVzZXJJZCwgdGVzdFByb3ZpZGVyLCB0ZXN0UGVybWlzc2lvbnMsICcxaCcpO1xuICAgIFxuICAgIC8vIFRlc3QgdG9rZW4gdmFsaWRhdGlvblxuICAgIGNvbnN0IHZhbGlkYXRpb24gPSBhd2FpdCBhcGlLZXlTZXJ2aWNlLnZhbGlkYXRlQXBpS2V5VG9rZW4odG9rZW4pO1xuICAgIFxuICAgIGNvbnN0IHN1Y2Nlc3MgPSB2YWxpZGF0aW9uLnZhbGlkICYmIHZhbGlkYXRpb24udXNlcklkID09PSB0ZXN0VXNlcklkICYmIHZhbGlkYXRpb24ucHJvdmlkZXIgPT09IHRlc3RQcm92aWRlcjtcbiAgICBcbiAgICByZXR1cm4ge1xuICAgICAgc3VjY2VzcyxcbiAgICAgIHRva2VuR2VuZXJhdGVkOiAhIXRva2VuLFxuICAgICAgdG9rZW5WYWxpZDogdmFsaWRhdGlvbi52YWxpZCxcbiAgICAgIG1lc3NhZ2U6IHN1Y2Nlc3MgPyAnSldUIHRlc3QgcGFzc2VkJyA6ICdKV1QgdGVzdCBmYWlsZWQnLFxuICAgICAgZGV0YWlsczoge1xuICAgICAgICB0b2tlbkxlbmd0aDogdG9rZW4gPyB0b2tlbi5sZW5ndGggOiAwLFxuICAgICAgICB1c2VySWRNYXRjaDogdmFsaWRhdGlvbi51c2VySWQgPT09IHRlc3RVc2VySWQsXG4gICAgICAgIHByb3ZpZGVyTWF0Y2g6IHZhbGlkYXRpb24ucHJvdmlkZXIgPT09IHRlc3RQcm92aWRlcixcbiAgICAgICAgcGVybWlzc2lvbnNNYXRjaDogSlNPTi5zdHJpbmdpZnkodmFsaWRhdGlvbi5wZXJtaXNzaW9ucykgPT09IEpTT04uc3RyaW5naWZ5KHRlc3RQZXJtaXNzaW9ucylcbiAgICAgIH1cbiAgICB9O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiB7XG4gICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgIHRva2VuR2VuZXJhdGVkOiBmYWxzZSxcbiAgICAgIHRva2VuVmFsaWQ6IGZhbHNlLFxuICAgICAgbWVzc2FnZTogJ0pXVCB0ZXN0IGZhaWxlZCcsXG4gICAgICBlcnJvcjogZXJyb3IubWVzc2FnZVxuICAgIH07XG4gIH1cbn1cblxuLyoqXG4gKiBHZW5lcmF0ZSByZWNvbW1lbmRhdGlvbnMgZm9yIEFQSSBzZXJ2aWNlIGlzc3Vlc1xuICovXG5mdW5jdGlvbiBnZW5lcmF0ZUFwaVNlcnZpY2VSZWNvbW1lbmRhdGlvbnMoc2VydmljZXMpIHtcbiAgY29uc3QgcmVjb21tZW5kYXRpb25zID0gW107XG4gIFxuICBpZiAoc2VydmljZXMuZW5jcnlwdGlvblNlcnZpY2Uuc3RhdHVzID09PSAnZmFpbGVkJykge1xuICAgIHJlY29tbWVuZGF0aW9ucy5wdXNoKHtcbiAgICAgIHByaW9yaXR5OiAnY3JpdGljYWwnLFxuICAgICAgc2VydmljZTogJ2VuY3J5cHRpb24nLFxuICAgICAgaXNzdWU6ICdFbmNyeXB0aW9uIHNlcnZpY2UgaXMgbm90IGF2YWlsYWJsZScsXG4gICAgICBhY3Rpb246ICdDb25maWd1cmUgQVBJX0tFWV9FTkNSWVBUSU9OX1NFQ1JFVCBvciBBUElfS0VZX0VOQ1JZUFRJT05fU0VDUkVUX0FSTicsXG4gICAgICBpbXBhY3Q6ICdDYW5ub3QgZW5jcnlwdC9kZWNyeXB0IHVzZXIgQVBJIGtleXMnXG4gICAgfSk7XG4gIH1cbiAgXG4gIGlmIChzZXJ2aWNlcy5qd3RTZWNyZXRTZXJ2aWNlLnN0YXR1cyA9PT0gJ2ZhaWxlZCcpIHtcbiAgICByZWNvbW1lbmRhdGlvbnMucHVzaCh7XG4gICAgICBwcmlvcml0eTogJ2NyaXRpY2FsJyxcbiAgICAgIHNlcnZpY2U6ICdqd3QnLFxuICAgICAgaXNzdWU6ICdKV1Qgc2VjcmV0IHNlcnZpY2UgaXMgbm90IGF2YWlsYWJsZScsXG4gICAgICBhY3Rpb246ICdDb25maWd1cmUgSldUX1NFQ1JFVCBvciBKV1RfU0VDUkVUX0FSTicsXG4gICAgICBpbXBhY3Q6ICdDYW5ub3QgZ2VuZXJhdGUgYXV0aGVudGljYXRpb24gdG9rZW5zJ1xuICAgIH0pO1xuICB9XG4gIFxuICBpZiAoc2VydmljZXMuand0U2VjcmV0U2VydmljZS52YWxpZGF0aW9uPy5zdHJlbmd0aCA9PT0gJ2xvd19lbnRyb3B5Jykge1xuICAgIHJlY29tbWVuZGF0aW9ucy5wdXNoKHtcbiAgICAgIHByaW9yaXR5OiAnbWVkaXVtJyxcbiAgICAgIHNlcnZpY2U6ICdqd3QnLFxuICAgICAgaXNzdWU6ICdKV1Qgc2VjcmV0IGhhcyBsb3cgZW50cm9weScsXG4gICAgICBhY3Rpb246ICdSb3RhdGUgSldUIHNlY3JldCB3aXRoIGNyeXB0by5yYW5kb21CeXRlcygpJyxcbiAgICAgIGltcGFjdDogJ1JlZHVjZWQgc2VjdXJpdHkgZm9yIHRva2VuIHNpZ25pbmcnXG4gICAgfSk7XG4gIH1cbiAgXG4gIGlmIChzZXJ2aWNlcy5kYXRhYmFzZS5zdGF0dXMgPT09ICdkZWdyYWRlZCcpIHtcbiAgICByZWNvbW1lbmRhdGlvbnMucHVzaCh7XG4gICAgICBwcmlvcml0eTogJ2hpZ2gnLFxuICAgICAgc2VydmljZTogJ2RhdGFiYXNlJyxcbiAgICAgIGlzc3VlOiAnU29tZSBBUEktcmVsYXRlZCBkYXRhYmFzZSB0YWJsZXMgYXJlIG1pc3NpbmcnLFxuICAgICAgYWN0aW9uOiAnUnVuIGRhdGFiYXNlIGluaXRpYWxpemF0aW9uIHNjcmlwdHMnLFxuICAgICAgaW1wYWN0OiAnQVBJIGtleSBzdG9yYWdlIGFuZCBwb3J0Zm9saW8gZmVhdHVyZXMgbWF5IG5vdCB3b3JrJ1xuICAgIH0pO1xuICB9XG4gIFxuICBpZiAoc2VydmljZXMuc2VjcmV0cy5zdGF0dXMgPT09ICdkZWdyYWRlZCcpIHtcbiAgICByZWNvbW1lbmRhdGlvbnMucHVzaCh7XG4gICAgICBwcmlvcml0eTogJ21lZGl1bScsXG4gICAgICBzZXJ2aWNlOiAnc2VjcmV0cycsXG4gICAgICBpc3N1ZTogJ1NlY3JldHMgTWFuYWdlciBub3QgZnVsbHkgY29uZmlndXJlZCcsXG4gICAgICBhY3Rpb246ICdTZXQgdXAgQVBJX0tFWV9FTkNSWVBUSU9OX1NFQ1JFVF9BUk4gYW5kIEpXVF9TRUNSRVRfQVJOJyxcbiAgICAgIGltcGFjdDogJ0ZhbGxiYWNrIHRvIGVudmlyb25tZW50IHZhcmlhYmxlcyBmb3Igc2VjcmV0cydcbiAgICB9KTtcbiAgfVxuICBcbiAgaWYgKHJlY29tbWVuZGF0aW9ucy5sZW5ndGggPT09IDApIHtcbiAgICByZWNvbW1lbmRhdGlvbnMucHVzaCh7XG4gICAgICBwcmlvcml0eTogJ2luZm8nLFxuICAgICAgc2VydmljZTogJ2FsbCcsXG4gICAgICBpc3N1ZTogJ0FsbCBBUEkgc2VydmljZXMgYXJlIGhlYWx0aHknLFxuICAgICAgYWN0aW9uOiAnTm8gYWN0aW9uIHJlcXVpcmVkJyxcbiAgICAgIGltcGFjdDogJ0FQSSBrZXkgc2VydmljZSBmdWxseSBvcGVyYXRpb25hbCdcbiAgICB9KTtcbiAgfVxuICBcbiAgcmV0dXJuIHJlY29tbWVuZGF0aW9ucztcbn1cblxuLy8gQ2lyY3VpdCBCcmVha2VyIEFuYWx5dGljcyBIZWxwZXIgRnVuY3Rpb25zXG5cbi8qKlxuICogQ2FsY3VsYXRlIGhlYWx0aCBzY29yZSBmb3IgYSBjaXJjdWl0IGJyZWFrZXIgKDAtMTAwKVxuICovXG5mdW5jdGlvbiBjYWxjdWxhdGVIZWFsdGhTY29yZShicmVha2VyKSB7XG4gIGlmIChicmVha2VyLnN0YXRlID09PSAnY2xvc2VkJyAmJiBicmVha2VyLmZhaWx1cmVzID09PSAwKSB7XG4gICAgcmV0dXJuIDEwMDtcbiAgfVxuICBcbiAgaWYgKGJyZWFrZXIuc3RhdGUgPT09ICdvcGVuJykge1xuICAgIHJldHVybiAwO1xuICB9XG4gIFxuICBpZiAoYnJlYWtlci5zdGF0ZSA9PT0gJ2hhbGYtb3BlbicpIHtcbiAgICByZXR1cm4gNTA7XG4gIH1cbiAgXG4gIC8vIEZvciBjbG9zZWQgc3RhdGUgd2l0aCBmYWlsdXJlc1xuICBjb25zdCB0aHJlc2hvbGQgPSA1OyAvLyBEZWZhdWx0IHRocmVzaG9sZFxuICBjb25zdCBoZWFsdGhTY29yZSA9IE1hdGgubWF4KDAsIDEwMCAtIChicmVha2VyLmZhaWx1cmVzIC8gdGhyZXNob2xkKSAqIDEwMCk7XG4gIHJldHVybiBNYXRoLnJvdW5kKGhlYWx0aFNjb3JlKTtcbn1cblxuLyoqXG4gKiBDYWxjdWxhdGUgcmlzayBsZXZlbCBmb3IgYSBjaXJjdWl0IGJyZWFrZXJcbiAqL1xuZnVuY3Rpb24gY2FsY3VsYXRlUmlza0xldmVsKGJyZWFrZXIpIHtcbiAgaWYgKGJyZWFrZXIuc3RhdGUgPT09ICdvcGVuJykge1xuICAgIHJldHVybiAnY3JpdGljYWwnO1xuICB9XG4gIFxuICBpZiAoYnJlYWtlci5zdGF0ZSA9PT0gJ2hhbGYtb3BlbicpIHtcbiAgICByZXR1cm4gJ3dhcm5pbmcnO1xuICB9XG4gIFxuICBpZiAoYnJlYWtlci5mYWlsdXJlcyA+PSAzKSB7XG4gICAgcmV0dXJuICd3YXJuaW5nJztcbiAgfVxuICBcbiAgaWYgKGJyZWFrZXIuZmFpbHVyZXMgPj0gMSkge1xuICAgIHJldHVybiAnbWlub3InO1xuICB9XG4gIFxuICByZXR1cm4gJ2xvdyc7XG59XG5cbi8qKlxuICogR2V0IG5leHQgc3RhdGUgdHJhbnNpdGlvbiBpbmZvcm1hdGlvblxuICovXG5mdW5jdGlvbiBnZXROZXh0U3RhdGVUcmFuc2l0aW9uKGJyZWFrZXIpIHtcbiAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcbiAgY29uc3QgdGltZVNpbmNlTGFzdEZhaWx1cmUgPSBub3cgLSBicmVha2VyLmxhc3RGYWlsdXJlVGltZTtcbiAgXG4gIGlmIChicmVha2VyLnN0YXRlID09PSAnb3BlbicpIHtcbiAgICBjb25zdCB0aW1lb3V0TXMgPSA2MDAwMDsgLy8gMSBtaW51dGUgZGVmYXVsdCB0aW1lb3V0XG4gICAgY29uc3QgdGltZVVudGlsSGFsZk9wZW4gPSB0aW1lb3V0TXMgLSB0aW1lU2luY2VMYXN0RmFpbHVyZTtcbiAgICBcbiAgICBpZiAodGltZVVudGlsSGFsZk9wZW4gPD0gMCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbmV4dFN0YXRlOiAnaGFsZi1vcGVuJyxcbiAgICAgICAgdHJhbnNpdGlvblRpbWU6ICdub3cnLFxuICAgICAgICBkZXNjcmlwdGlvbjogJ0NpcmN1aXQgYnJlYWtlciBpcyByZWFkeSB0byB0cmFuc2l0aW9uIHRvIGhhbGYtb3BlbiBzdGF0ZSdcbiAgICAgIH07XG4gICAgfVxuICAgIFxuICAgIHJldHVybiB7XG4gICAgICBuZXh0U3RhdGU6ICdoYWxmLW9wZW4nLFxuICAgICAgdHJhbnNpdGlvblRpbWU6IGAke01hdGguY2VpbCh0aW1lVW50aWxIYWxmT3BlbiAvIDEwMDApfSBzZWNvbmRzYCxcbiAgICAgIGRlc2NyaXB0aW9uOiBgQ2lyY3VpdCBicmVha2VyIHdpbGwgdHJhbnNpdGlvbiB0byBoYWxmLW9wZW4gaW4gJHtNYXRoLmNlaWwodGltZVVudGlsSGFsZk9wZW4gLyAxMDAwKX0gc2Vjb25kc2BcbiAgICB9O1xuICB9XG4gIFxuICBpZiAoYnJlYWtlci5zdGF0ZSA9PT0gJ2hhbGYtb3BlbicpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmV4dFN0YXRlOiAnY2xvc2VkIG9yIG9wZW4nLFxuICAgICAgdHJhbnNpdGlvblRpbWU6ICdvbiBuZXh0IHJlcXVlc3QnLFxuICAgICAgZGVzY3JpcHRpb246ICdDaXJjdWl0IGJyZWFrZXIgd2lsbCB0cmFuc2l0aW9uIGJhc2VkIG9uIG5leHQgcmVxdWVzdCByZXN1bHQnXG4gICAgfTtcbiAgfVxuICBcbiAgcmV0dXJuIHtcbiAgICBuZXh0U3RhdGU6ICdzdGFibGUnLFxuICAgIHRyYW5zaXRpb25UaW1lOiAnb24gZmFpbHVyZScsXG4gICAgZGVzY3JpcHRpb246ICdDaXJjdWl0IGJyZWFrZXIgd2lsbCByZW1haW4gY2xvc2VkIHVudGlsIGZhaWx1cmUgdGhyZXNob2xkIGlzIHJlYWNoZWQnXG4gIH07XG59XG5cbi8qKlxuICogR2V0IHJlY29tbWVuZGVkIGFjdGlvbiBmb3IgY2lyY3VpdCBicmVha2VyXG4gKi9cbmZ1bmN0aW9uIGdldFJlY29tbWVuZGVkQWN0aW9uKGJyZWFrZXIpIHtcbiAgaWYgKGJyZWFrZXIuc3RhdGUgPT09ICdvcGVuJykge1xuICAgIHJldHVybiAnSW52ZXN0aWdhdGUgc2VydmljZSBpc3N1ZXMsIGNoZWNrIGNvbm5lY3Rpdml0eSBhbmQgbG9ncyc7XG4gIH1cbiAgXG4gIGlmIChicmVha2VyLnN0YXRlID09PSAnaGFsZi1vcGVuJykge1xuICAgIHJldHVybiAnTW9uaXRvciBjbG9zZWx5LCBzZXJ2aWNlIGlzIHJlY292ZXJpbmcnO1xuICB9XG4gIFxuICBpZiAoYnJlYWtlci5mYWlsdXJlcyA+PSAzKSB7XG4gICAgcmV0dXJuICdNb25pdG9yIGZvciBwYXR0ZXJucywgY29uc2lkZXIgaW5jcmVhc2luZyB0aW1lb3V0IG9yIGltcHJvdmluZyBzZXJ2aWNlIHJlbGlhYmlsaXR5JztcbiAgfVxuICBcbiAgaWYgKGJyZWFrZXIuZmFpbHVyZXMgPj0gMSkge1xuICAgIHJldHVybiAnTW9uaXRvciBmb3IgYWRkaXRpb25hbCBmYWlsdXJlcyc7XG4gIH1cbiAgXG4gIHJldHVybiAnTm8gYWN0aW9uIHJlcXVpcmVkJztcbn1cblxuLyoqXG4gKiBHZXQgYWxlcnQgbGV2ZWwgZm9yIGNpcmN1aXQgYnJlYWtlclxuICovXG5mdW5jdGlvbiBnZXRBbGVydExldmVsKGJyZWFrZXIpIHtcbiAgaWYgKGJyZWFrZXIuc3RhdGUgPT09ICdvcGVuJykge1xuICAgIHJldHVybiAnY3JpdGljYWwnO1xuICB9XG4gIFxuICBpZiAoYnJlYWtlci5zdGF0ZSA9PT0gJ2hhbGYtb3BlbicpIHtcbiAgICByZXR1cm4gJ3dhcm5pbmcnO1xuICB9XG4gIFxuICBpZiAoYnJlYWtlci5mYWlsdXJlcyA+PSAzKSB7XG4gICAgcmV0dXJuICd3YXJuaW5nJztcbiAgfVxuICBcbiAgaWYgKGJyZWFrZXIuZmFpbHVyZXMgPj0gMSkge1xuICAgIHJldHVybiAnbWlub3InO1xuICB9XG4gIFxuICByZXR1cm4gJ2hlYWx0aHknO1xufVxuXG4vKipcbiAqIENhbGN1bGF0ZSBvdmVyYWxsIGhlYWx0aCBzY29yZSBmcm9tIGFsbCBjaXJjdWl0IGJyZWFrZXJzXG4gKi9cbmZ1bmN0aW9uIGNhbGN1bGF0ZU92ZXJhbGxIZWFsdGhTY29yZShhbmFseXRpY3MpIHtcbiAgY29uc3Qgc2VydmljZXMgPSBPYmplY3QudmFsdWVzKGFuYWx5dGljcyk7XG4gIFxuICBpZiAoc2VydmljZXMubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIDEwMDtcbiAgfVxuICBcbiAgY29uc3QgdG90YWxTY29yZSA9IHNlcnZpY2VzLnJlZHVjZSgoc3VtLCBzZXJ2aWNlKSA9PiBzdW0gKyBzZXJ2aWNlLmFuYWx5c2lzLmhlYWx0aFNjb3JlLCAwKTtcbiAgcmV0dXJuIE1hdGgucm91bmQodG90YWxTY29yZSAvIHNlcnZpY2VzLmxlbmd0aCk7XG59XG5cbi8qKlxuICogR2VuZXJhdGUgc3lzdGVtLXdpZGUgcmVjb21tZW5kYXRpb25zXG4gKi9cbmZ1bmN0aW9uIGdlbmVyYXRlU3lzdGVtUmVjb21tZW5kYXRpb25zKGFuYWx5dGljcykge1xuICBjb25zdCByZWNvbW1lbmRhdGlvbnMgPSBbXTtcbiAgY29uc3Qgc2VydmljZXMgPSBPYmplY3QuZW50cmllcyhhbmFseXRpY3MpO1xuICBcbiAgLy8gQ2hlY2sgZm9yIGNyaXRpY2FsIHNlcnZpY2VzXG4gIGNvbnN0IGNyaXRpY2FsU2VydmljZXMgPSBzZXJ2aWNlcy5maWx0ZXIoKFtfLCBzZXJ2aWNlXSkgPT4gc2VydmljZS5hbmFseXNpcy5hbGVydExldmVsID09PSAnY3JpdGljYWwnKTtcbiAgaWYgKGNyaXRpY2FsU2VydmljZXMubGVuZ3RoID4gMCkge1xuICAgIHJlY29tbWVuZGF0aW9ucy5wdXNoKHtcbiAgICAgIHByaW9yaXR5OiAnY3JpdGljYWwnLFxuICAgICAgdGl0bGU6ICdDcml0aWNhbCBTZXJ2aWNlIEZhaWx1cmVzJyxcbiAgICAgIGRlc2NyaXB0aW9uOiBgJHtjcml0aWNhbFNlcnZpY2VzLmxlbmd0aH0gc2VydmljZShzKSBoYXZlIGNpcmN1aXQgYnJlYWtlcnMgaW4gb3BlbiBzdGF0ZWAsXG4gICAgICBzZXJ2aWNlczogY3JpdGljYWxTZXJ2aWNlcy5tYXAoKFtrZXksIF9dKSA9PiBrZXkpLFxuICAgICAgYWN0aW9uOiAnSW1tZWRpYXRlIGludmVzdGlnYXRpb24gcmVxdWlyZWQnXG4gICAgfSk7XG4gIH1cbiAgXG4gIC8vIENoZWNrIGZvciB3YXJuaW5nIHNlcnZpY2VzXG4gIGNvbnN0IHdhcm5pbmdTZXJ2aWNlcyA9IHNlcnZpY2VzLmZpbHRlcigoW18sIHNlcnZpY2VdKSA9PiBzZXJ2aWNlLmFuYWx5c2lzLmFsZXJ0TGV2ZWwgPT09ICd3YXJuaW5nJyk7XG4gIGlmICh3YXJuaW5nU2VydmljZXMubGVuZ3RoID4gMCkge1xuICAgIHJlY29tbWVuZGF0aW9ucy5wdXNoKHtcbiAgICAgIHByaW9yaXR5OiAnd2FybmluZycsXG4gICAgICB0aXRsZTogJ1NlcnZpY2VzIFVuZGVyIFN0cmVzcycsXG4gICAgICBkZXNjcmlwdGlvbjogYCR7d2FybmluZ1NlcnZpY2VzLmxlbmd0aH0gc2VydmljZShzKSBzaG93aW5nIHNpZ25zIG9mIGluc3RhYmlsaXR5YCxcbiAgICAgIHNlcnZpY2VzOiB3YXJuaW5nU2VydmljZXMubWFwKChba2V5LCBfXSkgPT4ga2V5KSxcbiAgICAgIGFjdGlvbjogJ01vbml0b3IgY2xvc2VseSBhbmQgaW52ZXN0aWdhdGUgcGF0dGVybnMnXG4gICAgfSk7XG4gIH1cbiAgXG4gIC8vIENoZWNrIGZvciByZWNlbnQgZmFpbHVyZXNcbiAgY29uc3QgcmVjZW50RmFpbHVyZXMgPSBzZXJ2aWNlcy5maWx0ZXIoKFtfLCBzZXJ2aWNlXSkgPT4gc2VydmljZS5hbmFseXNpcy5pc1JlY2VudEZhaWx1cmUpO1xuICBpZiAocmVjZW50RmFpbHVyZXMubGVuZ3RoID4gMCkge1xuICAgIHJlY29tbWVuZGF0aW9ucy5wdXNoKHtcbiAgICAgIHByaW9yaXR5OiAnaW5mbycsXG4gICAgICB0aXRsZTogJ1JlY2VudCBGYWlsdXJlcyBEZXRlY3RlZCcsXG4gICAgICBkZXNjcmlwdGlvbjogYCR7cmVjZW50RmFpbHVyZXMubGVuZ3RofSBzZXJ2aWNlKHMpIGhhZCBmYWlsdXJlcyBpbiB0aGUgbGFzdCA1IG1pbnV0ZXNgLFxuICAgICAgc2VydmljZXM6IHJlY2VudEZhaWx1cmVzLm1hcCgoW2tleSwgX10pID0+IGtleSksXG4gICAgICBhY3Rpb246ICdSZXZpZXcgcmVjZW50IGFjdGl2aXR5IGFuZCBlcnJvciBsb2dzJ1xuICAgIH0pO1xuICB9XG4gIFxuICAvLyBDaGVjayBvdmVyYWxsIGhlYWx0aFxuICBjb25zdCBvdmVyYWxsSGVhbHRoID0gY2FsY3VsYXRlT3ZlcmFsbEhlYWx0aFNjb3JlKGFuYWx5dGljcyk7XG4gIGlmIChvdmVyYWxsSGVhbHRoIDwgNzApIHtcbiAgICByZWNvbW1lbmRhdGlvbnMucHVzaCh7XG4gICAgICBwcmlvcml0eTogJ3dhcm5pbmcnLFxuICAgICAgdGl0bGU6ICdPdmVyYWxsIFN5c3RlbSBIZWFsdGggQmVsb3cgVGhyZXNob2xkJyxcbiAgICAgIGRlc2NyaXB0aW9uOiBgU3lzdGVtIGhlYWx0aCBzY29yZSBpcyAke292ZXJhbGxIZWFsdGh9JWAsXG4gICAgICBhY3Rpb246ICdSZXZpZXcgc3lzdGVtIGFyY2hpdGVjdHVyZSBhbmQgc2VydmljZSBkZXBlbmRlbmNpZXMnXG4gICAgfSk7XG4gIH1cbiAgXG4gIGlmIChyZWNvbW1lbmRhdGlvbnMubGVuZ3RoID09PSAwKSB7XG4gICAgcmVjb21tZW5kYXRpb25zLnB1c2goe1xuICAgICAgcHJpb3JpdHk6ICdpbmZvJyxcbiAgICAgIHRpdGxlOiAnQWxsIFNlcnZpY2VzIEhlYWx0aHknLFxuICAgICAgZGVzY3JpcHRpb246ICdBbGwgY2lyY3VpdCBicmVha2VycyBhcmUgaW4gaGVhbHRoeSBzdGF0ZScsXG4gICAgICBhY3Rpb246ICdDb250aW51ZSBtb25pdG9yaW5nJ1xuICAgIH0pO1xuICB9XG4gIFxuICByZXR1cm4gcmVjb21tZW5kYXRpb25zO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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UixjQUFjLENBQUN4RixNQUFNLGdEQUFnRDtNQUNyRk8sUUFBUSxFQUFFaUYsY0FBYyxDQUFDN0csR0FBRyxDQUFDLENBQUMsQ0FBQzJHLEdBQUcsRUFBRTlILENBQUMsQ0FBQyxLQUFLOEg7UUFBQUE7UUFBQUEsdUJBQUE7UUFBQUEsd0JBQUE7UUFBQUEsTUFBQSxDQUFBQSxHQUFHO01BQUQsQ0FBQyxDQUFDO01BQy9DbVAsTUFBTSxFQUFFO0lBQ1YsQ0FBQyxDQUFDO0VBQ0osQ0FBQztFQUFBO0VBQUE7SUFBQTFhLGFBQUEsR0FBQThCLENBQUE7RUFBQTs7RUFFRDtFQUNBLE1BQU11YixhQUFhO0VBQUE7RUFBQSxDQUFBcmQsYUFBQSxHQUFBRyxDQUFBLFNBQUdrTCwyQkFBMkIsQ0FBQ3BCLFNBQVMsQ0FBQztFQUFDO0VBQUFqSyxhQUFBLEdBQUFHLENBQUE7RUFDN0QsSUFBSWtkLGFBQWEsR0FBRyxFQUFFLEVBQUU7SUFBQTtJQUFBcmQsYUFBQSxHQUFBOEIsQ0FBQTtJQUFBOUIsYUFBQSxHQUFBRyxDQUFBO0lBQ3RCcUksZUFBZSxDQUFDcVAsSUFBSSxDQUFDO01BQ25CRyxRQUFRLEVBQUUsU0FBUztNQUNuQm9GLEtBQUssRUFBRSx1Q0FBdUM7TUFDOUNILFdBQVcsRUFBRSwwQkFBMEJJLGFBQWEsR0FBRztNQUN2RDNDLE1BQU0sRUFBRTtJQUNWLENBQUMsQ0FBQztFQUNKLENBQUM7RUFBQTtFQUFBO0lBQUExYSxhQUFBLEdBQUE4QixDQUFBO0VBQUE7RUFBQTlCLGFBQUEsR0FBQUcsQ0FBQTtFQUVELElBQUlxSSxlQUFlLENBQUN2QyxNQUFNLEtBQUssQ0FBQyxFQUFFO0lBQUE7SUFBQWpHLGFBQUEsR0FBQThCLENBQUE7SUFBQTlCLGFBQUEsR0FBQUcsQ0FBQTtJQUNoQ3FJLGVBQWUsQ0FBQ3FQLElBQUksQ0FBQztNQUNuQkcsUUFBUSxFQUFFLE1BQU07TUFDaEJvRixLQUFLLEVBQUUsc0JBQXNCO01BQzdCSCxXQUFXLEVBQUUsMkNBQTJDO01BQ3hEdkMsTUFBTSxFQUFFO0lBQ1YsQ0FBQyxDQUFDO0VBQ0osQ0FBQztFQUFBO0VBQUE7SUFBQTFhLGFBQUEsR0FBQThCLENBQUE7RUFBQTtFQUFBOUIsYUFBQSxHQUFBRyxDQUFBO0VBRUQsT0FBT3FJLGVBQWU7QUFDeEI7QUFBQztBQUFBeEksYUFBQSxHQUFBRyxDQUFBO0FBRURtZCxNQUFNLENBQUNDLE9BQU8sR0FBR3BjLE1BQU0iLCJpZ25vcmVMaXN0IjpbXX0=