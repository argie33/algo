6c55285551ec174b3397adb78054b081
/* istanbul ignore next */
function cov_2f3xveimlt() {
  var path = "/home/stocks/algo/webapp/lambda/utils/database-old.js";
  var hash = "f2b0862a01cae0171f02d1c36f8212765b4a5db2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/utils/database-old.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 56
        },
        end: {
          line: 1,
          column: 98
        }
      },
      "1": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 2,
          column: 30
        }
      },
      "2": {
        start: {
          line: 5,
          column: 23
        },
        end: {
          line: 7,
          column: 2
        }
      },
      "3": {
        start: {
          line: 10,
          column: 11
        },
        end: {
          line: 10,
          column: 15
        }
      },
      "4": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 25
        }
      },
      "5": {
        start: {
          line: 12,
          column: 18
        },
        end: {
          line: 12,
          column: 22
        }
      },
      "6": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 19
        }
      },
      "7": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 24
        }
      },
      "9": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "10": {
        start: {
          line: 29,
          column: 26
        },
        end: {
          line: 29,
          column: 51
        }
      },
      "11": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 40,
          column: 11
        }
      },
      "12": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "13": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 75,
          column: 13
        }
      },
      "14": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 78
        }
      },
      "15": {
        start: {
          line: 46,
          column: 32
        },
        end: {
          line: 46,
          column: 82
        }
      },
      "16": {
        start: {
          line: 47,
          column: 31
        },
        end: {
          line: 47,
          column: 65
        }
      },
      "17": {
        start: {
          line: 48,
          column: 31
        },
        end: {
          line: 48,
          column: 62
        }
      },
      "18": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 63,
          column: 18
        }
      },
      "19": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 78
        }
      },
      "20": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 60
        }
      },
      "21": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 67,
          column: 60
        }
      },
      "22": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 70
        }
      },
      "23": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 60
        }
      },
      "24": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 83
        }
      },
      "25": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 71,
          column: 63
        }
      },
      "26": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 72,
          column: 32
        }
      },
      "27": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 74,
          column: 136
        }
      },
      "28": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "29": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 76
        }
      },
      "30": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 94,
          column: 14
        }
      },
      "31": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 70
        }
      },
      "32": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 56
        }
      },
      "33": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 56
        }
      },
      "34": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 66
        }
      },
      "35": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 56
        }
      },
      "36": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 79
        }
      },
      "37": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 59
        }
      },
      "38": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 28
        }
      },
      "39": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 109
        }
      },
      "40": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 20
        }
      },
      "41": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 57
        }
      },
      "42": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 20
        }
      },
      "43": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "44": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 56
        }
      },
      "45": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 40
        }
      },
      "46": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 54
        }
      },
      "47": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 20
        }
      },
      "48": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 62
        }
      },
      "49": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 21
        }
      },
      "50": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 139,
          column: 5
        }
      },
      "51": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 81
        }
      },
      "52": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 27
        }
      },
      "53": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 143,
          column: 5
        }
      },
      "54": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 55
        }
      },
      "55": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 20
        }
      },
      "56": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 269,
          column: 9
        }
      },
      "57": {
        start: {
          line: 146,
          column: 21
        },
        end: {
          line: 146,
          column: 25
        }
      },
      "58": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 268,
          column: 9
        }
      },
      "59": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 71
        }
      },
      "60": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 41
        }
      },
      "61": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 156,
          column: 13
        }
      },
      "62": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 152,
          column: 119
        }
      },
      "63": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 153,
          column: 38
        }
      },
      "64": {
        start: {
          line: 154,
          column: 16
        },
        end: {
          line: 154,
          column: 28
        }
      },
      "65": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 155,
          column: 28
        }
      },
      "66": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 167,
          column: 15
        }
      },
      "67": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 36
        }
      },
      "68": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 170,
          column: 61
        }
      },
      "69": {
        start: {
          line: 173,
          column: 36
        },
        end: {
          line: 173,
          column: 46
        }
      },
      "70": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 88
        }
      },
      "71": {
        start: {
          line: 179,
          column: 27
        },
        end: {
          line: 184,
          column: 14
        }
      },
      "72": {
        start: {
          line: 182,
          column: 20
        },
        end: {
          line: 182,
          column: 110
        }
      },
      "73": {
        start: {
          line: 182,
          column: 37
        },
        end: {
          line: 182,
          column: 102
        }
      },
      "74": {
        start: {
          line: 185,
          column: 35
        },
        end: {
          line: 185,
          column: 63
        }
      },
      "75": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 75
        }
      },
      "76": {
        start: {
          line: 188,
          column: 31
        },
        end: {
          line: 188,
          column: 41
        }
      },
      "77": {
        start: {
          line: 189,
          column: 27
        },
        end: {
          line: 189,
          column: 158
        }
      },
      "78": {
        start: {
          line: 190,
          column: 30
        },
        end: {
          line: 190,
          column: 53
        }
      },
      "79": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 65
        }
      },
      "80": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 78
        }
      },
      "81": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 76
        }
      },
      "82": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 73
        }
      },
      "83": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 85
        }
      },
      "84": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 59
        }
      },
      "85": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 29
        }
      },
      "86": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 63
        }
      },
      "87": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 37
        }
      },
      "88": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 204,
          column: 58
        }
      },
      "89": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 33
        }
      },
      "90": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 80
        }
      },
      "91": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 211,
          column: 15
        }
      },
      "92": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 209,
          column: 61
        }
      },
      "93": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 210,
          column: 38
        }
      },
      "94": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 24
        }
      },
      "95": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 34
        }
      },
      "96": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 24
        }
      },
      "97": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 70
        }
      },
      "98": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 225,
          column: 15
        }
      },
      "99": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 248,
          column: 13
        }
      },
      "100": {
        start: {
          line: 229,
          column: 16
        },
        end: {
          line: 229,
          column: 99
        }
      },
      "101": {
        start: {
          line: 230,
          column: 16
        },
        end: {
          line: 230,
          column: 59
        }
      },
      "102": {
        start: {
          line: 231,
          column: 16
        },
        end: {
          line: 231,
          column: 75
        }
      },
      "103": {
        start: {
          line: 232,
          column: 16
        },
        end: {
          line: 232,
          column: 72
        }
      },
      "104": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 233,
          column: 88
        }
      },
      "105": {
        start: {
          line: 234,
          column: 16
        },
        end: {
          line: 234,
          column: 79
        }
      },
      "106": {
        start: {
          line: 235,
          column: 19
        },
        end: {
          line: 248,
          column: 13
        }
      },
      "107": {
        start: {
          line: 236,
          column: 16
        },
        end: {
          line: 236,
          column: 84
        }
      },
      "108": {
        start: {
          line: 237,
          column: 16
        },
        end: {
          line: 237,
          column: 59
        }
      },
      "109": {
        start: {
          line: 238,
          column: 16
        },
        end: {
          line: 238,
          column: 62
        }
      },
      "110": {
        start: {
          line: 239,
          column: 16
        },
        end: {
          line: 239,
          column: 86
        }
      },
      "111": {
        start: {
          line: 240,
          column: 16
        },
        end: {
          line: 240,
          column: 66
        }
      },
      "112": {
        start: {
          line: 241,
          column: 16
        },
        end: {
          line: 241,
          column: 85
        }
      },
      "113": {
        start: {
          line: 242,
          column: 19
        },
        end: {
          line: 248,
          column: 13
        }
      },
      "114": {
        start: {
          line: 243,
          column: 16
        },
        end: {
          line: 243,
          column: 79
        }
      },
      "115": {
        start: {
          line: 244,
          column: 16
        },
        end: {
          line: 244,
          column: 59
        }
      },
      "116": {
        start: {
          line: 245,
          column: 16
        },
        end: {
          line: 245,
          column: 74
        }
      },
      "117": {
        start: {
          line: 246,
          column: 16
        },
        end: {
          line: 246,
          column: 62
        }
      },
      "118": {
        start: {
          line: 247,
          column: 16
        },
        end: {
          line: 247,
          column: 89
        }
      },
      "119": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 61
        }
      },
      "120": {
        start: {
          line: 250,
          column: 47
        },
        end: {
          line: 250,
          column: 61
        }
      },
      "121": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 251,
          column: 34
        }
      },
      "122": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 259,
          column: 14
        }
      },
      "123": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 264,
          column: 15
        }
      },
      "124": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 265,
          column: 24
        }
      },
      "125": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 31
        }
      },
      "126": {
        start: {
          line: 271,
          column: 4
        },
        end: {
          line: 271,
          column: 23
        }
      },
      "127": {
        start: {
          line: 278,
          column: 4
        },
        end: {
          line: 280,
          column: 5
        }
      },
      "128": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 86
        }
      },
      "129": {
        start: {
          line: 281,
          column: 4
        },
        end: {
          line: 281,
          column: 16
        }
      },
      "130": {
        start: {
          line: 288,
          column: 4
        },
        end: {
          line: 351,
          column: 5
        }
      },
      "131": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 297,
          column: 9
        }
      },
      "132": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 76
        }
      },
      "133": {
        start: {
          line: 292,
          column: 27
        },
        end: {
          line: 292,
          column: 53
        }
      },
      "134": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 296,
          column: 13
        }
      },
      "135": {
        start: {
          line: 295,
          column: 16
        },
        end: {
          line: 295,
          column: 85
        }
      },
      "136": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 302,
          column: 9
        }
      },
      "137": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 301,
          column: 70
        }
      },
      "138": {
        start: {
          line: 304,
          column: 22
        },
        end: {
          line: 304,
          column: 32
        }
      },
      "139": {
        start: {
          line: 307,
          column: 31
        },
        end: {
          line: 309,
          column: 10
        }
      },
      "140": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 308,
          column: 89
        }
      },
      "141": {
        start: {
          line: 308,
          column: 29
        },
        end: {
          line: 308,
          column: 80
        }
      },
      "142": {
        start: {
          line: 311,
          column: 23
        },
        end: {
          line: 314,
          column: 10
        }
      },
      "143": {
        start: {
          line: 316,
          column: 25
        },
        end: {
          line: 316,
          column: 43
        }
      },
      "144": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 324,
          column: 9
        }
      },
      "145": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 323,
          column: 15
        }
      },
      "146": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 326,
          column: 22
        }
      },
      "147": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 333,
          column: 11
        }
      },
      "148": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 348,
          column: 9
        }
      },
      "149": {
        start: {
          line: 337,
          column: 12
        },
        end: {
          line: 337,
          column: 188
        }
      },
      "150": {
        start: {
          line: 338,
          column: 15
        },
        end: {
          line: 348,
          column: 9
        }
      },
      "151": {
        start: {
          line: 339,
          column: 12
        },
        end: {
          line: 339,
          column: 107
        }
      },
      "152": {
        start: {
          line: 340,
          column: 15
        },
        end: {
          line: 348,
          column: 9
        }
      },
      "153": {
        start: {
          line: 341,
          column: 12
        },
        end: {
          line: 341,
          column: 92
        }
      },
      "154": {
        start: {
          line: 342,
          column: 15
        },
        end: {
          line: 348,
          column: 9
        }
      },
      "155": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 343,
          column: 124
        }
      },
      "156": {
        start: {
          line: 344,
          column: 15
        },
        end: {
          line: 348,
          column: 9
        }
      },
      "157": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 345,
          column: 122
        }
      },
      "158": {
        start: {
          line: 346,
          column: 15
        },
        end: {
          line: 348,
          column: 9
        }
      },
      "159": {
        start: {
          line: 347,
          column: 12
        },
        end: {
          line: 347,
          column: 87
        }
      },
      "160": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 350,
          column: 20
        }
      },
      "161": {
        start: {
          line: 355,
          column: 23
        },
        end: {
          line: 355,
          column: 24
        }
      },
      "162": {
        start: {
          line: 356,
          column: 0
        },
        end: {
          line: 383,
          column: 10
        }
      },
      "163": {
        start: {
          line: 357,
          column: 4
        },
        end: {
          line: 382,
          column: 5
        }
      },
      "164": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 358,
          column: 27
        }
      },
      "165": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 381,
          column: 9
        }
      },
      "166": {
        start: {
          line: 360,
          column: 26
        },
        end: {
          line: 360,
          column: 36
        }
      },
      "167": {
        start: {
          line: 361,
          column: 27
        },
        end: {
          line: 361,
          column: 47
        }
      },
      "168": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 362,
          column: 43
        }
      },
      "169": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 363,
          column: 29
        }
      },
      "170": {
        start: {
          line: 364,
          column: 29
        },
        end: {
          line: 364,
          column: 47
        }
      },
      "171": {
        start: {
          line: 367,
          column: 12
        },
        end: {
          line: 369,
          column: 13
        }
      },
      "172": {
        start: {
          line: 368,
          column: 16
        },
        end: {
          line: 368,
          column: 156
        }
      },
      "173": {
        start: {
          line: 371,
          column: 12
        },
        end: {
          line: 379,
          column: 15
        }
      },
      "174": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 380,
          column: 34
        }
      },
      "175": {
        start: {
          line: 389,
          column: 19
        },
        end: {
          line: 389,
          column: 44
        }
      },
      "176": {
        start: {
          line: 391,
          column: 4
        },
        end: {
          line: 401,
          column: 5
        }
      },
      "177": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 392,
          column: 36
        }
      },
      "178": {
        start: {
          line: 393,
          column: 23
        },
        end: {
          line: 393,
          column: 45
        }
      },
      "179": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 394,
          column: 37
        }
      },
      "180": {
        start: {
          line: 395,
          column: 8
        },
        end: {
          line: 395,
          column: 22
        }
      },
      "181": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 397,
          column: 39
        }
      },
      "182": {
        start: {
          line: 398,
          column: 8
        },
        end: {
          line: 398,
          column: 20
        }
      },
      "183": {
        start: {
          line: 400,
          column: 8
        },
        end: {
          line: 400,
          column: 25
        }
      },
      "184": {
        start: {
          line: 408,
          column: 4
        },
        end: {
          line: 415,
          column: 5
        }
      },
      "185": {
        start: {
          line: 410,
          column: 8
        },
        end: {
          line: 410,
          column: 25
        }
      },
      "186": {
        start: {
          line: 411,
          column: 8
        },
        end: {
          line: 411,
          column: 20
        }
      },
      "187": {
        start: {
          line: 412,
          column: 8
        },
        end: {
          line: 412,
          column: 30
        }
      },
      "188": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 413,
          column: 24
        }
      },
      "189": {
        start: {
          line: 422,
          column: 4
        },
        end: {
          line: 476,
          column: 5
        }
      },
      "190": {
        start: {
          line: 423,
          column: 23
        },
        end: {
          line: 423,
          column: 42
        }
      },
      "191": {
        start: {
          line: 424,
          column: 8
        },
        end: {
          line: 426,
          column: 9
        }
      },
      "192": {
        start: {
          line: 425,
          column: 12
        },
        end: {
          line: 425,
          column: 91
        }
      },
      "193": {
        start: {
          line: 428,
          column: 8
        },
        end: {
          line: 428,
          column: 91
        }
      },
      "194": {
        start: {
          line: 431,
          column: 20
        },
        end: {
          line: 431,
          column: 34
        }
      },
      "195": {
        start: {
          line: 433,
          column: 8
        },
        end: {
          line: 469,
          column: 11
        }
      },
      "196": {
        start: {
          line: 434,
          column: 27
        },
        end: {
          line: 434,
          column: 43
        }
      },
      "197": {
        start: {
          line: 435,
          column: 28
        },
        end: {
          line: 435,
          column: 33
        }
      },
      "198": {
        start: {
          line: 437,
          column: 26
        },
        end: {
          line: 445,
          column: 23
        }
      },
      "199": {
        start: {
          line: 438,
          column: 16
        },
        end: {
          line: 438,
          column: 33
        }
      },
      "200": {
        start: {
          line: 439,
          column: 16
        },
        end: {
          line: 444,
          column: 19
        }
      },
      "201": {
        start: {
          line: 447,
          column: 12
        },
        end: {
          line: 456,
          column: 15
        }
      },
      "202": {
        start: {
          line: 448,
          column: 16
        },
        end: {
          line: 448,
          column: 36
        }
      },
      "203": {
        start: {
          line: 449,
          column: 16
        },
        end: {
          line: 449,
          column: 33
        }
      },
      "204": {
        start: {
          line: 450,
          column: 16
        },
        end: {
          line: 455,
          column: 19
        }
      },
      "205": {
        start: {
          line: 458,
          column: 12
        },
        end: {
          line: 468,
          column: 15
        }
      },
      "206": {
        start: {
          line: 459,
          column: 16
        },
        end: {
          line: 459,
          column: 36
        }
      },
      "207": {
        start: {
          line: 460,
          column: 16
        },
        end: {
          line: 460,
          column: 33
        }
      },
      "208": {
        start: {
          line: 461,
          column: 16
        },
        end: {
          line: 467,
          column: 19
        }
      },
      "209": {
        start: {
          line: 471,
          column: 8
        },
        end: {
          line: 475,
          column: 10
        }
      },
      "210": {
        start: {
          line: 483,
          column: 4
        },
        end: {
          line: 542,
          column: 5
        }
      },
      "211": {
        start: {
          line: 484,
          column: 8
        },
        end: {
          line: 484,
          column: 74
        }
      },
      "212": {
        start: {
          line: 487,
          column: 8
        },
        end: {
          line: 487,
          column: 66
        }
      },
      "213": {
        start: {
          line: 488,
          column: 28
        },
        end: {
          line: 488,
          column: 59
        }
      },
      "214": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 489,
          column: 94
        }
      },
      "215": {
        start: {
          line: 491,
          column: 8
        },
        end: {
          line: 494,
          column: 9
        }
      },
      "216": {
        start: {
          line: 492,
          column: 12
        },
        end: {
          line: 492,
          column: 80
        }
      },
      "217": {
        start: {
          line: 493,
          column: 12
        },
        end: {
          line: 493,
          column: 39
        }
      },
      "218": {
        start: {
          line: 496,
          column: 8
        },
        end: {
          line: 498,
          column: 9
        }
      },
      "219": {
        start: {
          line: 497,
          column: 12
        },
        end: {
          line: 497,
          column: 91
        }
      },
      "220": {
        start: {
          line: 500,
          column: 8
        },
        end: {
          line: 500,
          column: 63
        }
      },
      "221": {
        start: {
          line: 501,
          column: 23
        },
        end: {
          line: 501,
          column: 88
        }
      },
      "222": {
        start: {
          line: 502,
          column: 8
        },
        end: {
          line: 502,
          column: 63
        }
      },
      "223": {
        start: {
          line: 505,
          column: 8
        },
        end: {
          line: 505,
          column: 60
        }
      },
      "224": {
        start: {
          line: 506,
          column: 8
        },
        end: {
          line: 506,
          column: 42
        }
      },
      "225": {
        start: {
          line: 509,
          column: 32
        },
        end: {
          line: 522,
          column: 10
        }
      },
      "226": {
        start: {
          line: 524,
          column: 8
        },
        end: {
          line: 524,
          column: 94
        }
      },
      "227": {
        start: {
          line: 526,
          column: 8
        },
        end: {
          line: 534,
          column: 10
        }
      },
      "228": {
        start: {
          line: 536,
          column: 8
        },
        end: {
          line: 536,
          column: 55
        }
      },
      "229": {
        start: {
          line: 537,
          column: 8
        },
        end: {
          line: 541,
          column: 10
        }
      },
      "230": {
        start: {
          line: 547,
          column: 4
        },
        end: {
          line: 682,
          column: 5
        }
      },
      "231": {
        start: {
          line: 548,
          column: 8
        },
        end: {
          line: 548,
          column: 58
        }
      },
      "232": {
        start: {
          line: 551,
          column: 32
        },
        end: {
          line: 562,
          column: 9
        }
      },
      "233": {
        start: {
          line: 564,
          column: 8
        },
        end: {
          line: 676,
          column: 9
        }
      },
      "234": {
        start: {
          line: 565,
          column: 12
        },
        end: {
          line: 675,
          column: 13
        }
      },
      "235": {
        start: {
          line: 567,
          column: 36
        },
        end: {
          line: 572,
          column: 32
        }
      },
      "236": {
        start: {
          line: 574,
          column: 16
        },
        end: {
          line: 652,
          column: 17
        }
      },
      "237": {
        start: {
          line: 575,
          column: 40
        },
        end: {
          line: 575,
          column: 98
        }
      },
      "238": {
        start: {
          line: 576,
          column: 40
        },
        end: {
          line: 576,
          column: 75
        }
      },
      "239": {
        start: {
          line: 579,
          column: 38
        },
        end: {
          line: 579,
          column: 42
        }
      },
      "240": {
        start: {
          line: 580,
          column: 20
        },
        end: {
          line: 589,
          column: 21
        }
      },
      "241": {
        start: {
          line: 581,
          column: 45
        },
        end: {
          line: 585,
          column: 26
        }
      },
      "242": {
        start: {
          line: 586,
          column: 24
        },
        end: {
          line: 586,
          column: 72
        }
      },
      "243": {
        start: {
          line: 592,
          column: 33
        },
        end: {
          line: 592,
          column: 42
        }
      },
      "244": {
        start: {
          line: 593,
          column: 32
        },
        end: {
          line: 593,
          column: 36
        }
      },
      "245": {
        start: {
          line: 595,
          column: 20
        },
        end: {
          line: 601,
          column: 21
        }
      },
      "246": {
        start: {
          line: 596,
          column: 24
        },
        end: {
          line: 596,
          column: 44
        }
      },
      "247": {
        start: {
          line: 597,
          column: 24
        },
        end: {
          line: 597,
          column: 61
        }
      },
      "248": {
        start: {
          line: 598,
          column: 27
        },
        end: {
          line: 601,
          column: 21
        }
      },
      "249": {
        start: {
          line: 599,
          column: 24
        },
        end: {
          line: 599,
          column: 43
        }
      },
      "250": {
        start: {
          line: 600,
          column: 24
        },
        end: {
          line: 600,
          column: 52
        }
      },
      "251": {
        start: {
          line: 604,
          column: 20
        },
        end: {
          line: 626,
          column: 23
        }
      },
      "252": {
        start: {
          line: 628,
          column: 20
        },
        end: {
          line: 628,
          column: 87
        }
      },
      "253": {
        start: {
          line: 631,
          column: 20
        },
        end: {
          line: 649,
          column: 23
        }
      },
      "254": {
        start: {
          line: 651,
          column: 20
        },
        end: {
          line: 651,
          column: 60
        }
      },
      "255": {
        start: {
          line: 654,
          column: 16
        },
        end: {
          line: 654,
          column: 78
        }
      },
      "256": {
        start: {
          line: 657,
          column: 16
        },
        end: {
          line: 674,
          column: 19
        }
      },
      "257": {
        start: {
          line: 678,
          column: 8
        },
        end: {
          line: 678,
          column: 68
        }
      },
      "258": {
        start: {
          line: 680,
          column: 8
        },
        end: {
          line: 680,
          column: 72
        }
      },
      "259": {
        start: {
          line: 681,
          column: 8
        },
        end: {
          line: 681,
          column: 20
        }
      },
      "260": {
        start: {
          line: 685,
          column: 0
        },
        end: {
          line: 694,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "getDbConfig",
        decl: {
          start: {
            line: 23,
            column: 15
          },
          end: {
            line: 23,
            column: 26
          }
        },
        loc: {
          start: {
            line: 23,
            column: 29
          },
          end: {
            line: 114,
            column: 1
          }
        },
        line: 23
      },
      "1": {
        name: "verifyConnection",
        decl: {
          start: {
            line: 120,
            column: 15
          },
          end: {
            line: 120,
            column: 31
          }
        },
        loc: {
          start: {
            line: 120,
            column: 34
          },
          end: {
            line: 130,
            column: 1
          }
        },
        line: 120
      },
      "2": {
        name: "initializeDatabase",
        decl: {
          start: {
            line: 135,
            column: 15
          },
          end: {
            line: 135,
            column: 33
          }
        },
        loc: {
          start: {
            line: 135,
            column: 36
          },
          end: {
            line: 272,
            column: 1
          }
        },
        line: 135
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 145,
            column: 19
          },
          end: {
            line: 145,
            column: 20
          }
        },
        loc: {
          start: {
            line: 145,
            column: 31
          },
          end: {
            line: 269,
            column: 5
          }
        },
        line: 145
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 181,
            column: 28
          },
          end: {
            line: 181,
            column: 29
          }
        },
        loc: {
          start: {
            line: 182,
            column: 20
          },
          end: {
            line: 182,
            column: 110
          }
        },
        line: 182
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 182,
            column: 31
          },
          end: {
            line: 182,
            column: 32
          }
        },
        loc: {
          start: {
            line: 182,
            column: 37
          },
          end: {
            line: 182,
            column: 102
          }
        },
        line: 182
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 208,
            column: 29
          },
          end: {
            line: 208,
            column: 30
          }
        },
        loc: {
          start: {
            line: 208,
            column: 38
          },
          end: {
            line: 211,
            column: 13
          }
        },
        line: 208
      },
      "7": {
        name: "getPool",
        decl: {
          start: {
            line: 277,
            column: 9
          },
          end: {
            line: 277,
            column: 16
          }
        },
        loc: {
          start: {
            line: 277,
            column: 19
          },
          end: {
            line: 282,
            column: 1
          }
        },
        line: 277
      },
      "8": {
        name: "query",
        decl: {
          start: {
            line: 287,
            column: 15
          },
          end: {
            line: 287,
            column: 20
          }
        },
        loc: {
          start: {
            line: 287,
            column: 40
          },
          end: {
            line: 352,
            column: 1
          }
        },
        line: 287
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 307,
            column: 43
          },
          end: {
            line: 307,
            column: 44
          }
        },
        loc: {
          start: {
            line: 307,
            column: 58
          },
          end: {
            line: 309,
            column: 9
          }
        },
        line: 307
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 308,
            column: 23
          },
          end: {
            line: 308,
            column: 24
          }
        },
        loc: {
          start: {
            line: 308,
            column: 29
          },
          end: {
            line: 308,
            column: 80
          }
        },
        line: 308
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 356,
            column: 12
          },
          end: {
            line: 356,
            column: 13
          }
        },
        loc: {
          start: {
            line: 356,
            column: 24
          },
          end: {
            line: 383,
            column: 1
          }
        },
        line: 356
      },
      "12": {
        name: "transaction",
        decl: {
          start: {
            line: 388,
            column: 15
          },
          end: {
            line: 388,
            column: 26
          }
        },
        loc: {
          start: {
            line: 388,
            column: 37
          },
          end: {
            line: 402,
            column: 1
          }
        },
        line: 388
      },
      "13": {
        name: "closeDatabase",
        decl: {
          start: {
            line: 407,
            column: 15
          },
          end: {
            line: 407,
            column: 28
          }
        },
        loc: {
          start: {
            line: 407,
            column: 31
          },
          end: {
            line: 416,
            column: 1
          }
        },
        line: 407
      },
      "14": {
        name: "testNetworkConnectivity",
        decl: {
          start: {
            line: 421,
            column: 15
          },
          end: {
            line: 421,
            column: 38
          }
        },
        loc: {
          start: {
            line: 421,
            column: 41
          },
          end: {
            line: 477,
            column: 1
          }
        },
        line: 421
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 433,
            column: 27
          },
          end: {
            line: 433,
            column: 28
          }
        },
        loc: {
          start: {
            line: 433,
            column: 40
          },
          end: {
            line: 469,
            column: 9
          }
        },
        line: 433
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 437,
            column: 37
          },
          end: {
            line: 437,
            column: 38
          }
        },
        loc: {
          start: {
            line: 437,
            column: 43
          },
          end: {
            line: 445,
            column: 13
          }
        },
        line: 437
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 447,
            column: 53
          },
          end: {
            line: 447,
            column: 54
          }
        },
        loc: {
          start: {
            line: 447,
            column: 59
          },
          end: {
            line: 456,
            column: 13
          }
        },
        line: 447
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 458,
            column: 31
          },
          end: {
            line: 458,
            column: 32
          }
        },
        loc: {
          start: {
            line: 458,
            column: 42
          },
          end: {
            line: 468,
            column: 13
          }
        },
        line: 458
      },
      "19": {
        name: "healthCheck",
        decl: {
          start: {
            line: 482,
            column: 15
          },
          end: {
            line: 482,
            column: 26
          }
        },
        loc: {
          start: {
            line: 482,
            column: 29
          },
          end: {
            line: 543,
            column: 1
          }
        },
        line: 482
      },
      "20": {
        name: "populateHealthStatusTable",
        decl: {
          start: {
            line: 546,
            column: 15
          },
          end: {
            line: 546,
            column: 40
          }
        },
        loc: {
          start: {
            line: 546,
            column: 43
          },
          end: {
            line: 683,
            column: 1
          }
        },
        line: 546
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 6,
            column: 12
          },
          end: {
            line: 6,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 12
          },
          end: {
            line: 6,
            column: 41
          }
        }, {
          start: {
            line: 6,
            column: 45
          },
          end: {
            line: 6,
            column: 67
          }
        }, {
          start: {
            line: 6,
            column: 71
          },
          end: {
            line: 6,
            column: 82
          }
        }],
        line: 6
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 27
          },
          end: {
            line: 32,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 39
          },
          end: {
            line: 32,
            column: 79
          }
        }, {
          start: {
            line: 32,
            column: 82
          },
          end: {
            line: 32,
            column: 91
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 33,
            column: 25
          },
          end: {
            line: 33,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 33,
            column: 51
          },
          end: {
            line: 33,
            column: 85
          }
        }, {
          start: {
            line: 33,
            column: 88
          },
          end: {
            line: 33,
            column: 97
          }
        }],
        line: 33
      },
      "4": {
        loc: {
          start: {
            line: 34,
            column: 24
          },
          end: {
            line: 34,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 24
          },
          end: {
            line: 34,
            column: 46
          }
        }, {
          start: {
            line: 34,
            column: 50
          },
          end: {
            line: 34,
            column: 59
          }
        }],
        line: 34
      },
      "5": {
        loc: {
          start: {
            line: 35,
            column: 22
          },
          end: {
            line: 35,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 22
          },
          end: {
            line: 35,
            column: 42
          }
        }, {
          start: {
            line: 35,
            column: 46
          },
          end: {
            line: 35,
            column: 55
          }
        }],
        line: 35
      },
      "6": {
        loc: {
          start: {
            line: 37,
            column: 36
          },
          end: {
            line: 37,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 37,
            column: 73
          },
          end: {
            line: 37,
            column: 84
          }
        }, {
          start: {
            line: 37,
            column: 87
          },
          end: {
            line: 37,
            column: 94
          }
        }],
        line: 37
      },
      "7": {
        loc: {
          start: {
            line: 38,
            column: 26
          },
          end: {
            line: 38,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 60
          },
          end: {
            line: 38,
            column: 73
          }
        }, {
          start: {
            line: 38,
            column: 76
          },
          end: {
            line: 38,
            column: 84
          }
        }],
        line: 38
      },
      "8": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "9": {
        loc: {
          start: {
            line: 51,
            column: 26
          },
          end: {
            line: 51,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 26
          },
          end: {
            line: 51,
            column: 37
          }
        }, {
          start: {
            line: 51,
            column: 41
          },
          end: {
            line: 51,
            column: 64
          }
        }],
        line: 51
      },
      "10": {
        loc: {
          start: {
            line: 52,
            column: 26
          },
          end: {
            line: 52,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 26
          },
          end: {
            line: 52,
            column: 47
          }
        }, {
          start: {
            line: 52,
            column: 51
          },
          end: {
            line: 52,
            column: 55
          }
        }],
        line: 52
      },
      "11": {
        loc: {
          start: {
            line: 56,
            column: 25
          },
          end: {
            line: 56,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 25
          },
          end: {
            line: 56,
            column: 58
          }
        }, {
          start: {
            line: 56,
            column: 62
          },
          end: {
            line: 56,
            column: 63
          }
        }],
        line: 56
      },
      "12": {
        loc: {
          start: {
            line: 57,
            column: 39
          },
          end: {
            line: 57,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 39
          },
          end: {
            line: 57,
            column: 81
          }
        }, {
          start: {
            line: 57,
            column: 85
          },
          end: {
            line: 57,
            column: 90
          }
        }],
        line: 57
      },
      "13": {
        loc: {
          start: {
            line: 58,
            column: 45
          },
          end: {
            line: 58,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 45
          },
          end: {
            line: 58,
            column: 85
          }
        }, {
          start: {
            line: 58,
            column: 89
          },
          end: {
            line: 58,
            column: 94
          }
        }],
        line: 58
      },
      "14": {
        loc: {
          start: {
            line: 70,
            column: 42
          },
          end: {
            line: 70,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 70,
            column: 57
          },
          end: {
            line: 70,
            column: 66
          }
        }, {
          start: {
            line: 70,
            column: 69
          },
          end: {
            line: 70,
            column: 79
          }
        }],
        line: 70
      },
      "15": {
        loc: {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "16": {
        loc: {
          start: {
            line: 79,
            column: 12
          },
          end: {
            line: 79,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 12
          },
          end: {
            line: 79,
            column: 31
          }
        }, {
          start: {
            line: 79,
            column: 35
          },
          end: {
            line: 79,
            column: 58
          }
        }],
        line: 79
      },
      "17": {
        loc: {
          start: {
            line: 82,
            column: 22
          },
          end: {
            line: 82,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 22
          },
          end: {
            line: 82,
            column: 41
          }
        }, {
          start: {
            line: 82,
            column: 45
          },
          end: {
            line: 82,
            column: 68
          }
        }],
        line: 82
      },
      "18": {
        loc: {
          start: {
            line: 83,
            column: 22
          },
          end: {
            line: 83,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 22
          },
          end: {
            line: 83,
            column: 51
          }
        }, {
          start: {
            line: 83,
            column: 55
          },
          end: {
            line: 83,
            column: 59
          }
        }],
        line: 83
      },
      "19": {
        loc: {
          start: {
            line: 84,
            column: 22
          },
          end: {
            line: 84,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 22
          },
          end: {
            line: 84,
            column: 41
          }
        }, {
          start: {
            line: 84,
            column: 45
          },
          end: {
            line: 84,
            column: 68
          }
        }],
        line: 84
      },
      "20": {
        loc: {
          start: {
            line: 86,
            column: 26
          },
          end: {
            line: 86,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 26
          },
          end: {
            line: 86,
            column: 45
          }
        }, {
          start: {
            line: 86,
            column: 49
          },
          end: {
            line: 86,
            column: 72
          }
        }],
        line: 86
      },
      "21": {
        loc: {
          start: {
            line: 87,
            column: 21
          },
          end: {
            line: 87,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 21
          },
          end: {
            line: 87,
            column: 54
          }
        }, {
          start: {
            line: 87,
            column: 58
          },
          end: {
            line: 87,
            column: 59
          }
        }],
        line: 87
      },
      "22": {
        loc: {
          start: {
            line: 88,
            column: 35
          },
          end: {
            line: 88,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 35
          },
          end: {
            line: 88,
            column: 77
          }
        }, {
          start: {
            line: 88,
            column: 81
          },
          end: {
            line: 88,
            column: 86
          }
        }],
        line: 88
      },
      "23": {
        loc: {
          start: {
            line: 89,
            column: 41
          },
          end: {
            line: 89,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 41
          },
          end: {
            line: 89,
            column: 81
          }
        }, {
          start: {
            line: 89,
            column: 85
          },
          end: {
            line: 89,
            column: 90
          }
        }],
        line: 89
      },
      "24": {
        loc: {
          start: {
            line: 101,
            column: 38
          },
          end: {
            line: 101,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 101,
            column: 53
          },
          end: {
            line: 101,
            column: 62
          }
        }, {
          start: {
            line: 101,
            column: 65
          },
          end: {
            line: 101,
            column: 75
          }
        }],
        line: 101
      },
      "25": {
        loc: {
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "26": {
        loc: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 143,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 143,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "27": {
        loc: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 140,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 140,
            column: 21
          }
        }, {
          start: {
            line: 140,
            column: 25
          },
          end: {
            line: 140,
            column: 29
          }
        }],
        line: 140
      },
      "28": {
        loc: {
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 156,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 156,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "29": {
        loc: {
          start: {
            line: 163,
            column: 21
          },
          end: {
            line: 163,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 163,
            column: 34
          },
          end: {
            line: 163,
            column: 43
          }
        }, {
          start: {
            line: 163,
            column: 46
          },
          end: {
            line: 163,
            column: 56
          }
        }],
        line: 163
      },
      "30": {
        loc: {
          start: {
            line: 228,
            column: 12
          },
          end: {
            line: 248,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 12
          },
          end: {
            line: 248,
            column: 13
          }
        }, {
          start: {
            line: 235,
            column: 19
          },
          end: {
            line: 248,
            column: 13
          }
        }],
        line: 228
      },
      "31": {
        loc: {
          start: {
            line: 235,
            column: 19
          },
          end: {
            line: 248,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 19
          },
          end: {
            line: 248,
            column: 13
          }
        }, {
          start: {
            line: 242,
            column: 19
          },
          end: {
            line: 248,
            column: 13
          }
        }],
        line: 235
      },
      "32": {
        loc: {
          start: {
            line: 242,
            column: 19
          },
          end: {
            line: 248,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 19
          },
          end: {
            line: 248,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 242
      },
      "33": {
        loc: {
          start: {
            line: 250,
            column: 12
          },
          end: {
            line: 250,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 250,
            column: 12
          },
          end: {
            line: 250,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 250
      },
      "34": {
        loc: {
          start: {
            line: 278,
            column: 4
          },
          end: {
            line: 280,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 278,
            column: 4
          },
          end: {
            line: 280,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 278
      },
      "35": {
        loc: {
          start: {
            line: 278,
            column: 8
          },
          end: {
            line: 278,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 278,
            column: 8
          },
          end: {
            line: 278,
            column: 13
          }
        }, {
          start: {
            line: 278,
            column: 17
          },
          end: {
            line: 278,
            column: 31
          }
        }],
        line: 278
      },
      "36": {
        loc: {
          start: {
            line: 287,
            column: 27
          },
          end: {
            line: 287,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 287,
            column: 36
          },
          end: {
            line: 287,
            column: 38
          }
        }],
        line: 287
      },
      "37": {
        loc: {
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 297,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 297,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 290
      },
      "38": {
        loc: {
          start: {
            line: 290,
            column: 12
          },
          end: {
            line: 290,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 290,
            column: 12
          },
          end: {
            line: 290,
            column: 26
          }
        }, {
          start: {
            line: 290,
            column: 30
          },
          end: {
            line: 290,
            column: 35
          }
        }],
        line: 290
      },
      "39": {
        loc: {
          start: {
            line: 293,
            column: 12
          },
          end: {
            line: 296,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 12
          },
          end: {
            line: 296,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 293
      },
      "40": {
        loc: {
          start: {
            line: 293,
            column: 16
          },
          end: {
            line: 293,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 293,
            column: 16
          },
          end: {
            line: 293,
            column: 23
          }
        }, {
          start: {
            line: 293,
            column: 27
          },
          end: {
            line: 293,
            column: 32
          }
        }],
        line: 293
      },
      "41": {
        loc: {
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 300
      },
      "42": {
        loc: {
          start: {
            line: 319,
            column: 8
          },
          end: {
            line: 324,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 319,
            column: 8
          },
          end: {
            line: 324,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 319
      },
      "43": {
        loc: {
          start: {
            line: 321,
            column: 49
          },
          end: {
            line: 321,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 321,
            column: 69
          },
          end: {
            line: 321,
            column: 74
          }
        }, {
          start: {
            line: 321,
            column: 77
          },
          end: {
            line: 321,
            column: 79
          }
        }],
        line: 321
      },
      "44": {
        loc: {
          start: {
            line: 322,
            column: 24
          },
          end: {
            line: 322,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 322,
            column: 33
          },
          end: {
            line: 322,
            column: 51
          }
        }, {
          start: {
            line: 322,
            column: 54
          },
          end: {
            line: 322,
            column: 56
          }
        }],
        line: 322
      },
      "45": {
        loc: {
          start: {
            line: 331,
            column: 45
          },
          end: {
            line: 331,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 331,
            column: 65
          },
          end: {
            line: 331,
            column: 70
          }
        }, {
          start: {
            line: 331,
            column: 73
          },
          end: {
            line: 331,
            column: 75
          }
        }],
        line: 331
      },
      "46": {
        loc: {
          start: {
            line: 332,
            column: 20
          },
          end: {
            line: 332,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 332,
            column: 29
          },
          end: {
            line: 332,
            column: 47
          }
        }, {
          start: {
            line: 332,
            column: 50
          },
          end: {
            line: 332,
            column: 52
          }
        }],
        line: 332
      },
      "47": {
        loc: {
          start: {
            line: 336,
            column: 8
          },
          end: {
            line: 348,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 336,
            column: 8
          },
          end: {
            line: 348,
            column: 9
          }
        }, {
          start: {
            line: 338,
            column: 15
          },
          end: {
            line: 348,
            column: 9
          }
        }],
        line: 336
      },
      "48": {
        loc: {
          start: {
            line: 337,
            column: 62
          },
          end: {
            line: 337,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 337,
            column: 62
          },
          end: {
            line: 337,
            column: 76
          }
        }, {
          start: {
            line: 337,
            column: 80
          },
          end: {
            line: 337,
            column: 89
          }
        }],
        line: 337
      },
      "49": {
        loc: {
          start: {
            line: 337,
            column: 93
          },
          end: {
            line: 337,
            column: 120
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 337,
            column: 93
          },
          end: {
            line: 337,
            column: 107
          }
        }, {
          start: {
            line: 337,
            column: 111
          },
          end: {
            line: 337,
            column: 120
          }
        }],
        line: 337
      },
      "50": {
        loc: {
          start: {
            line: 338,
            column: 15
          },
          end: {
            line: 348,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 338,
            column: 15
          },
          end: {
            line: 348,
            column: 9
          }
        }, {
          start: {
            line: 340,
            column: 15
          },
          end: {
            line: 348,
            column: 9
          }
        }],
        line: 338
      },
      "51": {
        loc: {
          start: {
            line: 340,
            column: 15
          },
          end: {
            line: 348,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 340,
            column: 15
          },
          end: {
            line: 348,
            column: 9
          }
        }, {
          start: {
            line: 342,
            column: 15
          },
          end: {
            line: 348,
            column: 9
          }
        }],
        line: 340
      },
      "52": {
        loc: {
          start: {
            line: 341,
            column: 41
          },
          end: {
            line: 341,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 341,
            column: 41
          },
          end: {
            line: 341,
            column: 59
          }
        }, {
          start: {
            line: 341,
            column: 63
          },
          end: {
            line: 341,
            column: 72
          }
        }],
        line: 341
      },
      "53": {
        loc: {
          start: {
            line: 342,
            column: 15
          },
          end: {
            line: 348,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 342,
            column: 15
          },
          end: {
            line: 348,
            column: 9
          }
        }, {
          start: {
            line: 344,
            column: 15
          },
          end: {
            line: 348,
            column: 9
          }
        }],
        line: 342
      },
      "54": {
        loc: {
          start: {
            line: 343,
            column: 53
          },
          end: {
            line: 343,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 343,
            column: 53
          },
          end: {
            line: 343,
            column: 67
          }
        }, {
          start: {
            line: 343,
            column: 71
          },
          end: {
            line: 343,
            column: 80
          }
        }],
        line: 343
      },
      "55": {
        loc: {
          start: {
            line: 344,
            column: 15
          },
          end: {
            line: 348,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 15
          },
          end: {
            line: 348,
            column: 9
          }
        }, {
          start: {
            line: 346,
            column: 15
          },
          end: {
            line: 348,
            column: 9
          }
        }],
        line: 344
      },
      "56": {
        loc: {
          start: {
            line: 345,
            column: 53
          },
          end: {
            line: 345,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 345,
            column: 53
          },
          end: {
            line: 345,
            column: 67
          }
        }, {
          start: {
            line: 345,
            column: 71
          },
          end: {
            line: 345,
            column: 80
          }
        }],
        line: 345
      },
      "57": {
        loc: {
          start: {
            line: 346,
            column: 15
          },
          end: {
            line: 348,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 346,
            column: 15
          },
          end: {
            line: 348,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 346
      },
      "58": {
        loc: {
          start: {
            line: 357,
            column: 4
          },
          end: {
            line: 382,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 357,
            column: 4
          },
          end: {
            line: 382,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 357
      },
      "59": {
        loc: {
          start: {
            line: 357,
            column: 8
          },
          end: {
            line: 357,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 357,
            column: 8
          },
          end: {
            line: 357,
            column: 12
          }
        }, {
          start: {
            line: 357,
            column: 16
          },
          end: {
            line: 357,
            column: 29
          }
        }],
        line: 357
      },
      "60": {
        loc: {
          start: {
            line: 367,
            column: 12
          },
          end: {
            line: 369,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 12
          },
          end: {
            line: 369,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "61": {
        loc: {
          start: {
            line: 374,
            column: 28
          },
          end: {
            line: 378,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 374,
            column: 35
          },
          end: {
            line: 378,
            column: 17
          }
        }, {
          start: {
            line: 378,
            column: 20
          },
          end: {
            line: 378,
            column: 38
          }
        }],
        line: 374
      },
      "62": {
        loc: {
          start: {
            line: 408,
            column: 4
          },
          end: {
            line: 415,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 408,
            column: 4
          },
          end: {
            line: 415,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 408
      },
      "63": {
        loc: {
          start: {
            line: 424,
            column: 8
          },
          end: {
            line: 426,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 424,
            column: 8
          },
          end: {
            line: 426,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 424
      },
      "64": {
        loc: {
          start: {
            line: 491,
            column: 8
          },
          end: {
            line: 494,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 491,
            column: 8
          },
          end: {
            line: 494,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 491
      },
      "65": {
        loc: {
          start: {
            line: 491,
            column: 12
          },
          end: {
            line: 491,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 491,
            column: 12
          },
          end: {
            line: 491,
            column: 26
          }
        }, {
          start: {
            line: 491,
            column: 30
          },
          end: {
            line: 491,
            column: 35
          }
        }],
        line: 491
      },
      "66": {
        loc: {
          start: {
            line: 496,
            column: 8
          },
          end: {
            line: 498,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 496,
            column: 8
          },
          end: {
            line: 498,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 496
      },
      "67": {
        loc: {
          start: {
            line: 574,
            column: 16
          },
          end: {
            line: 652,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 574,
            column: 16
          },
          end: {
            line: 652,
            column: 17
          }
        }, {
          start: {
            line: 629,
            column: 23
          },
          end: {
            line: 652,
            column: 17
          }
        }],
        line: 574
      },
      "68": {
        loc: {
          start: {
            line: 595,
            column: 20
          },
          end: {
            line: 601,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 595,
            column: 20
          },
          end: {
            line: 601,
            column: 21
          }
        }, {
          start: {
            line: 598,
            column: 27
          },
          end: {
            line: 601,
            column: 21
          }
        }],
        line: 595
      },
      "69": {
        loc: {
          start: {
            line: 595,
            column: 24
          },
          end: {
            line: 595,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 595,
            column: 24
          },
          end: {
            line: 595,
            column: 38
          }
        }, {
          start: {
            line: 595,
            column: 42
          },
          end: {
            line: 595,
            column: 59
          }
        }],
        line: 595
      },
      "70": {
        loc: {
          start: {
            line: 598,
            column: 27
          },
          end: {
            line: 601,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 598,
            column: 27
          },
          end: {
            line: 601,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 598
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f2b0862a01cae0171f02d1c36f8212765b4a5db2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2f3xveimlt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2f3xveimlt();
const {
  SecretsManagerClient,
  GetSecretValueCommand
} =
/* istanbul ignore next */
(cov_2f3xveimlt().s[0]++, require('@aws-sdk/client-secrets-manager'));
const {
  Pool
} =
/* istanbul ignore next */
(cov_2f3xveimlt().s[1]++, require('pg'));

// Configure AWS SDK v3 - Updated to trigger deployment for database connection fix v2
const secretsManager =
/* istanbul ignore next */
(cov_2f3xveimlt().s[2]++, new SecretsManagerClient({
  region:
  /* istanbul ignore next */
  (cov_2f3xveimlt().b[0][0]++, process.env.WEBAPP_AWS_REGION) ||
  /* istanbul ignore next */
  (cov_2f3xveimlt().b[0][1]++, process.env.AWS_REGION) ||
  /* istanbul ignore next */
  (cov_2f3xveimlt().b[0][2]++, 'us-east-1')
}));

// Connection pool instance
let pool =
/* istanbul ignore next */
(cov_2f3xveimlt().s[3]++, null);
let dbInitialized =
/* istanbul ignore next */
(cov_2f3xveimlt().s[4]++, false);
let initPromise =
/* istanbul ignore next */
(cov_2f3xveimlt().s[5]++, null);

// Database configuration cache
let dbConfig =
/* istanbul ignore next */
(cov_2f3xveimlt().s[6]++, null);

// console.log('*** DATABASE.JS PATCHED VERSION RUNNING - v2.1.0 ***');
// console.log('*** CONFIG SCOPE FIX APPLIED - ' + new Date().toISOString() + ' ***');

/**
 * Get database configuration from AWS Secrets Manager or environment variables
 */
async function getDbConfig() {
  /* istanbul ignore next */
  cov_2f3xveimlt().f[0]++;
  cov_2f3xveimlt().s[7]++;
  if (dbConfig) {
    /* istanbul ignore next */
    cov_2f3xveimlt().b[1][0]++;
    cov_2f3xveimlt().s[8]++;
    return dbConfig;
  } else
  /* istanbul ignore next */
  {
    cov_2f3xveimlt().b[1][1]++;
  }
  cov_2f3xveimlt().s[9]++;
  try {
    const secretArn =
    /* istanbul ignore next */
    (cov_2f3xveimlt().s[10]++, process.env.DB_SECRET_ARN);
    /* istanbul ignore next */
    cov_2f3xveimlt().s[11]++;
    console.log('🔍 Environment check:', {
      DB_SECRET_ARN: secretArn ?
      /* istanbul ignore next */
      (cov_2f3xveimlt().b[2][0]++, `SET (${secretArn.substring(0, 20)}...)`) :
      /* istanbul ignore next */
      (cov_2f3xveimlt().b[2][1]++, 'MISSING'),
      DB_ENDPOINT: process.env.DB_ENDPOINT ?
      /* istanbul ignore next */
      (cov_2f3xveimlt().b[3][0]++, `SET (${process.env.DB_ENDPOINT})`) :
      /* istanbul ignore next */
      (cov_2f3xveimlt().b[3][1]++, 'MISSING'),
      AWS_REGION:
      /* istanbul ignore next */
      (cov_2f3xveimlt().b[4][0]++, process.env.AWS_REGION) ||
      /* istanbul ignore next */
      (cov_2f3xveimlt().b[4][1]++, 'MISSING'),
      NODE_ENV:
      /* istanbul ignore next */
      (cov_2f3xveimlt().b[5][0]++, process.env.NODE_ENV) ||
      /* istanbul ignore next */
      (cov_2f3xveimlt().b[5][1]++, 'MISSING'),
      VPC_INFO: {
        LAMBDA_RUNTIME_API: process.env.AWS_LAMBDA_RUNTIME_API ?
        /* istanbul ignore next */
        (cov_2f3xveimlt().b[6][0]++, 'IN_LAMBDA') :
        /* istanbul ignore next */
        (cov_2f3xveimlt().b[6][1]++, 'LOCAL'),
        ENI_INFO: process.env._LAMBDA_SERVER_PORT ?
        /* istanbul ignore next */
        (cov_2f3xveimlt().b[7][0]++, 'VPC_ENABLED') :
        /* istanbul ignore next */
        (cov_2f3xveimlt().b[7][1]++, 'NO_VPC')
      }
    });

    // If we have a secret ARN, use Secrets Manager
    /* istanbul ignore next */
    cov_2f3xveimlt().s[12]++;
    if (secretArn) {
      /* istanbul ignore next */
      cov_2f3xveimlt().b[8][0]++;
      cov_2f3xveimlt().s[13]++;
      try {
        /* istanbul ignore next */
        cov_2f3xveimlt().s[14]++;
        console.log('Getting DB credentials from Secrets Manager...');
        const command =
        /* istanbul ignore next */
        (cov_2f3xveimlt().s[15]++, new GetSecretValueCommand({
          SecretId: secretArn
        }));
        const result =
        /* istanbul ignore next */
        (cov_2f3xveimlt().s[16]++, await secretsManager.send(command));
        const secret =
        /* istanbul ignore next */
        (cov_2f3xveimlt().s[17]++, JSON.parse(result.SecretString));
        /* istanbul ignore next */
        cov_2f3xveimlt().s[18]++;
        dbConfig = {
          host:
          /* istanbul ignore next */
          (cov_2f3xveimlt().b[9][0]++, secret.host) ||
          /* istanbul ignore next */
          (cov_2f3xveimlt().b[9][1]++, process.env.DB_ENDPOINT),
          port:
          /* istanbul ignore next */
          (cov_2f3xveimlt().b[10][0]++, parseInt(secret.port)) ||
          /* istanbul ignore next */
          (cov_2f3xveimlt().b[10][1]++, 5432),
          user: secret.username,
          password: secret.password,
          database: secret.dbname,
          max:
          /* istanbul ignore next */
          (cov_2f3xveimlt().b[11][0]++, parseInt(process.env.DB_POOL_MAX)) ||
          /* istanbul ignore next */
          (cov_2f3xveimlt().b[11][1]++, 5),
          idleTimeoutMillis:
          /* istanbul ignore next */
          (cov_2f3xveimlt().b[12][0]++, parseInt(process.env.DB_POOL_IDLE_TIMEOUT)) ||
          /* istanbul ignore next */
          (cov_2f3xveimlt().b[12][1]++, 30000),
          connectionTimeoutMillis:
          /* istanbul ignore next */
          (cov_2f3xveimlt().b[13][0]++, parseInt(process.env.DB_CONNECT_TIMEOUT)) ||
          /* istanbul ignore next */
          (cov_2f3xveimlt().b[13][1]++, 20000),
          ssl: {
            require: true,
            rejectUnauthorized: false
          }
        };
        /* istanbul ignore next */
        cov_2f3xveimlt().s[19]++;
        console.log(`✅ Database config loaded from Secrets Manager:`);
        /* istanbul ignore next */
        cov_2f3xveimlt().s[20]++;
        console.log(`   🏠 Host: ${dbConfig.host}`);
        /* istanbul ignore next */
        cov_2f3xveimlt().s[21]++;
        console.log(`   🔌 Port: ${dbConfig.port}`);
        /* istanbul ignore next */
        cov_2f3xveimlt().s[22]++;
        console.log(`   🗄️  Database: ${dbConfig.database}`);
        /* istanbul ignore next */
        cov_2f3xveimlt().s[23]++;
        console.log(`   👤 User: ${dbConfig.user}`);
        /* istanbul ignore next */
        cov_2f3xveimlt().s[24]++;
        console.log(`   🔒 SSL: ${dbConfig.ssl ?
        /* istanbul ignore next */
        (cov_2f3xveimlt().b[14][0]++, 'enabled') :
        /* istanbul ignore next */
        (cov_2f3xveimlt().b[14][1]++, 'disabled')}`);
        /* istanbul ignore next */
        cov_2f3xveimlt().s[25]++;
        console.log(`   🏊 Pool Max: ${dbConfig.max}`);
        /* istanbul ignore next */
        cov_2f3xveimlt().s[26]++;
        return dbConfig;
      } catch (secretError) {
        /* istanbul ignore next */
        cov_2f3xveimlt().s[27]++;
        console.warn('Failed to get secrets from Secrets Manager, falling back to environment variables:', secretError.message);
      }
    } else
    /* istanbul ignore next */
    {
      cov_2f3xveimlt().b[8][1]++;
    }

    // Fallback to environment variables if available
    cov_2f3xveimlt().s[28]++;
    if (
    /* istanbul ignore next */
    (cov_2f3xveimlt().b[16][0]++, process.env.DB_HOST) ||
    /* istanbul ignore next */
    (cov_2f3xveimlt().b[16][1]++, process.env.DB_ENDPOINT)) {
      /* istanbul ignore next */
      cov_2f3xveimlt().b[15][0]++;
      cov_2f3xveimlt().s[29]++;
      console.log('Using database config from environment variables');
      /* istanbul ignore next */
      cov_2f3xveimlt().s[30]++;
      dbConfig = {
        host:
        /* istanbul ignore next */
        (cov_2f3xveimlt().b[17][0]++, process.env.DB_HOST) ||
        /* istanbul ignore next */
        (cov_2f3xveimlt().b[17][1]++, process.env.DB_ENDPOINT),
        port:
        /* istanbul ignore next */
        (cov_2f3xveimlt().b[18][0]++, parseInt(process.env.DB_PORT)) ||
        /* istanbul ignore next */
        (cov_2f3xveimlt().b[18][1]++, 5432),
        user:
        /* istanbul ignore next */
        (cov_2f3xveimlt().b[19][0]++, process.env.DB_USER) ||
        /* istanbul ignore next */
        (cov_2f3xveimlt().b[19][1]++, process.env.DB_USERNAME),
        password: process.env.DB_PASSWORD,
        database:
        /* istanbul ignore next */
        (cov_2f3xveimlt().b[20][0]++, process.env.DB_NAME) ||
        /* istanbul ignore next */
        (cov_2f3xveimlt().b[20][1]++, process.env.DB_DATABASE),
        max:
        /* istanbul ignore next */
        (cov_2f3xveimlt().b[21][0]++, parseInt(process.env.DB_POOL_MAX)) ||
        /* istanbul ignore next */
        (cov_2f3xveimlt().b[21][1]++, 5),
        idleTimeoutMillis:
        /* istanbul ignore next */
        (cov_2f3xveimlt().b[22][0]++, parseInt(process.env.DB_POOL_IDLE_TIMEOUT)) ||
        /* istanbul ignore next */
        (cov_2f3xveimlt().b[22][1]++, 30000),
        connectionTimeoutMillis:
        /* istanbul ignore next */
        (cov_2f3xveimlt().b[23][0]++, parseInt(process.env.DB_CONNECT_TIMEOUT)) ||
        /* istanbul ignore next */
        (cov_2f3xveimlt().b[23][1]++, 20000),
        ssl: {
          require: true,
          rejectUnauthorized: false
        }
      };
      /* istanbul ignore next */
      cov_2f3xveimlt().s[31]++;
      console.log(`✅ Database config loaded from environment:`);
      /* istanbul ignore next */
      cov_2f3xveimlt().s[32]++;
      console.log(`   🏠 Host: ${dbConfig.host}`);
      /* istanbul ignore next */
      cov_2f3xveimlt().s[33]++;
      console.log(`   🔌 Port: ${dbConfig.port}`);
      /* istanbul ignore next */
      cov_2f3xveimlt().s[34]++;
      console.log(`   🗄️  Database: ${dbConfig.database}`);
      /* istanbul ignore next */
      cov_2f3xveimlt().s[35]++;
      console.log(`   👤 User: ${dbConfig.user}`);
      /* istanbul ignore next */
      cov_2f3xveimlt().s[36]++;
      console.log(`   🔒 SSL: ${dbConfig.ssl ?
      /* istanbul ignore next */
      (cov_2f3xveimlt().b[24][0]++, 'enabled') :
      /* istanbul ignore next */
      (cov_2f3xveimlt().b[24][1]++, 'disabled')}`);
      /* istanbul ignore next */
      cov_2f3xveimlt().s[37]++;
      console.log(`   🏊 Pool Max: ${dbConfig.max}`);
      /* istanbul ignore next */
      cov_2f3xveimlt().s[38]++;
      return dbConfig;
    } else
    /* istanbul ignore next */
    {
      cov_2f3xveimlt().b[15][1]++;
    }

    // If no configuration is available, return null to indicate no database
    cov_2f3xveimlt().s[39]++;
    console.warn('No database configuration found. Set DB_SECRET_ARN or DB_HOST environment variables.');
    /* istanbul ignore next */
    cov_2f3xveimlt().s[40]++;
    return null;
  } catch (error) {
    /* istanbul ignore next */
    cov_2f3xveimlt().s[41]++;
    console.error('Error getting DB config:', error);
    /* istanbul ignore next */
    cov_2f3xveimlt().s[42]++;
    return null;
  }
}

/**
 * Tables should be created via deployment-time Lambda (initDatabase.js)
 * This function now just verifies connection
 */
async function verifyConnection() {
  /* istanbul ignore next */
  cov_2f3xveimlt().f[1]++;
  cov_2f3xveimlt().s[43]++;
  try {
    /* istanbul ignore next */
    cov_2f3xveimlt().s[44]++;
    console.log('Verifying database connection...');
    /* istanbul ignore next */
    cov_2f3xveimlt().s[45]++;
    await query('SELECT 1 as test');
    /* istanbul ignore next */
    cov_2f3xveimlt().s[46]++;
    console.log('✅ Database connection verified');
    /* istanbul ignore next */
    cov_2f3xveimlt().s[47]++;
    return true;
  } catch (error) {
    /* istanbul ignore next */
    cov_2f3xveimlt().s[48]++;
    console.error('❌ Database connection failed:', error);
    /* istanbul ignore next */
    cov_2f3xveimlt().s[49]++;
    return false;
  }
}

/**
 * Initialize database connection pool
 */
async function initializeDatabase() {
  /* istanbul ignore next */
  cov_2f3xveimlt().f[2]++;
  cov_2f3xveimlt().s[50]++;
  if (initPromise) {
    /* istanbul ignore next */
    cov_2f3xveimlt().b[25][0]++;
    cov_2f3xveimlt().s[51]++;
    console.log('⏳ Database initialization already in progress, waiting...');
    /* istanbul ignore next */
    cov_2f3xveimlt().s[52]++;
    return initPromise;
  } else
  /* istanbul ignore next */
  {
    cov_2f3xveimlt().b[25][1]++;
  }
  cov_2f3xveimlt().s[53]++;
  if (
  /* istanbul ignore next */
  (cov_2f3xveimlt().b[27][0]++, dbInitialized) &&
  /* istanbul ignore next */
  (cov_2f3xveimlt().b[27][1]++, pool)) {
    /* istanbul ignore next */
    cov_2f3xveimlt().b[26][0]++;
    cov_2f3xveimlt().s[54]++;
    console.log('📊 Database already initialized');
    /* istanbul ignore next */
    cov_2f3xveimlt().s[55]++;
    return pool;
  } else
  /* istanbul ignore next */
  {
    cov_2f3xveimlt().b[26][1]++;
  }
  cov_2f3xveimlt().s[56]++;
  initPromise = (async () => {
    /* istanbul ignore next */
    cov_2f3xveimlt().f[3]++;
    let config =
    /* istanbul ignore next */
    (cov_2f3xveimlt().s[57]++, null);
    /* istanbul ignore next */
    cov_2f3xveimlt().s[58]++;
    try {
      /* istanbul ignore next */
      cov_2f3xveimlt().s[59]++;
      console.log('🔄 Initializing database connection pool...');
      /* istanbul ignore next */
      cov_2f3xveimlt().s[60]++;
      config = await getDbConfig();
      /* istanbul ignore next */
      cov_2f3xveimlt().s[61]++;
      if (!config) {
        /* istanbul ignore next */
        cov_2f3xveimlt().b[28][0]++;
        cov_2f3xveimlt().s[62]++;
        console.warn('⚠️  No database configuration available. API will run in fallback mode with mock data.');
        /* istanbul ignore next */
        cov_2f3xveimlt().s[63]++;
        dbInitialized = false;
        /* istanbul ignore next */
        cov_2f3xveimlt().s[64]++;
        pool = null;
        /* istanbul ignore next */
        cov_2f3xveimlt().s[65]++;
        return null; // Return null instead of throwing error
      } else
      /* istanbul ignore next */
      {
        cov_2f3xveimlt().b[28][1]++;
      }
      cov_2f3xveimlt().s[66]++;
      console.log('🔗 Database config summary:', {
        host: config.host,
        port: config.port,
        database: config.database,
        user: config.user,
        ssl: config.ssl ?
        /* istanbul ignore next */
        (cov_2f3xveimlt().b[29][0]++, 'enabled') :
        /* istanbul ignore next */
        (cov_2f3xveimlt().b[29][1]++, 'disabled'),
        max_connections: config.max,
        connect_timeout: config.connectionTimeoutMillis + 'ms',
        idle_timeout: config.idleTimeoutMillis + 'ms'
      });
      /* istanbul ignore next */
      cov_2f3xveimlt().s[67]++;
      pool = new Pool(config);
      /* istanbul ignore next */
      cov_2f3xveimlt().s[68]++;
      console.log('🧪 Testing database connection...');

      // Add detailed connection logging
      const connectionStart =
      /* istanbul ignore next */
      (cov_2f3xveimlt().s[69]++, Date.now());
      /* istanbul ignore next */
      cov_2f3xveimlt().s[70]++;
      console.log(`🔌 Attempting to connect to ${config.host}:${config.port}...`);

      // Skip network test to reduce initialization time - Lambda should have network access

      // Add timeout to pool.connect() to prevent hanging
      const client =
      /* istanbul ignore next */
      (cov_2f3xveimlt().s[71]++, await Promise.race([pool.connect(), new Promise((_, reject) => {
        /* istanbul ignore next */
        cov_2f3xveimlt().f[4]++;
        cov_2f3xveimlt().s[72]++;
        return setTimeout(() => {
          /* istanbul ignore next */
          cov_2f3xveimlt().f[5]++;
          cov_2f3xveimlt().s[73]++;
          return reject(new Error('Database connection timeout after 15 seconds'));
        }, 15000);
      })]));
      const connectionTime =
      /* istanbul ignore next */
      (cov_2f3xveimlt().s[74]++, Date.now() - connectionStart);
      /* istanbul ignore next */
      cov_2f3xveimlt().s[75]++;
      console.log(`⚡ Connection established in ${connectionTime}ms`);
      const queryStart =
      /* istanbul ignore next */
      (cov_2f3xveimlt().s[76]++, Date.now());
      const result =
      /* istanbul ignore next */
      (cov_2f3xveimlt().s[77]++, await client.query('SELECT NOW() as current_time, version() as db_version, current_database() as db_name, current_user as db_user'));
      const queryTime =
      /* istanbul ignore next */
      (cov_2f3xveimlt().s[78]++, Date.now() - queryStart);
      /* istanbul ignore next */
      cov_2f3xveimlt().s[79]++;
      console.log('✅ Database connection test successful');
      /* istanbul ignore next */
      cov_2f3xveimlt().s[80]++;
      console.log(`   ⏰ Database time: ${result.rows[0].current_time}`);
      /* istanbul ignore next */
      cov_2f3xveimlt().s[81]++;
      console.log(`   🗄️  Database name: ${result.rows[0].db_name}`);
      /* istanbul ignore next */
      cov_2f3xveimlt().s[82]++;
      console.log(`   👤 Connected as: ${result.rows[0].db_user}`);
      /* istanbul ignore next */
      cov_2f3xveimlt().s[83]++;
      console.log(`   📊 Version: ${result.rows[0].db_version.split(' ')[0]}`);
      /* istanbul ignore next */
      cov_2f3xveimlt().s[84]++;
      console.log(`   ⚡ Query time: ${queryTime}ms`);
      /* istanbul ignore next */
      cov_2f3xveimlt().s[85]++;
      client.release();

      // Verify database connection
      /* istanbul ignore next */
      cov_2f3xveimlt().s[86]++;
      console.log('🔍 Verifying database connection...');
      /* istanbul ignore next */
      cov_2f3xveimlt().s[87]++;
      await verifyConnection();
      /* istanbul ignore next */
      cov_2f3xveimlt().s[88]++;
      console.log('✅ Database connection verified');
      /* istanbul ignore next */
      cov_2f3xveimlt().s[89]++;
      dbInitialized = true;
      /* istanbul ignore next */
      cov_2f3xveimlt().s[90]++;
      console.log('🎉 Database connection pool initialized successfully');
      /* istanbul ignore next */
      cov_2f3xveimlt().s[91]++;
      pool.on('error', err => {
        /* istanbul ignore next */
        cov_2f3xveimlt().f[6]++;
        cov_2f3xveimlt().s[92]++;
        console.error('❌ Database pool error:', err);
        /* istanbul ignore next */
        cov_2f3xveimlt().s[93]++;
        dbInitialized = false;
      });
      /* istanbul ignore next */
      cov_2f3xveimlt().s[94]++;
      return pool;
    } catch (error) {
      /* istanbul ignore next */
      cov_2f3xveimlt().s[95]++;
      dbInitialized = false;
      /* istanbul ignore next */
      cov_2f3xveimlt().s[96]++;
      pool = null;
      /* istanbul ignore next */
      cov_2f3xveimlt().s[97]++;
      console.error('❌ Database initialization failed:', error);
      /* istanbul ignore next */
      cov_2f3xveimlt().s[98]++;
      console.error('🔍 Detailed error analysis:', {
        message: error.message,
        code: error.code,
        syscall: error.syscall,
        hostname: error.hostname,
        port: error.port,
        errno: error.errno,
        stack: error.stack?.split('\n')[0]
      });

      // Network connectivity debugging
      /* istanbul ignore next */
      cov_2f3xveimlt().s[99]++;
      if (error.code === 'ECONNREFUSED') {
        /* istanbul ignore next */
        cov_2f3xveimlt().b[30][0]++;
        cov_2f3xveimlt().s[100]++;
        console.error('❌ Connection refused - database server may be down or unreachable');
        /* istanbul ignore next */
        cov_2f3xveimlt().s[101]++;
        console.error('🔍 Troubleshooting steps:');
        /* istanbul ignore next */
        cov_2f3xveimlt().s[102]++;
        console.error('   1. Check if database server is running');
        /* istanbul ignore next */
        cov_2f3xveimlt().s[103]++;
        console.error('   2. Verify host and port are correct');
        /* istanbul ignore next */
        cov_2f3xveimlt().s[104]++;
        console.error('   3. Check security group allows inbound on port 5432');
        /* istanbul ignore next */
        cov_2f3xveimlt().s[105]++;
        console.error('   4. Verify Lambda is in correct VPC/subnets');
      } else {
        /* istanbul ignore next */
        cov_2f3xveimlt().b[30][1]++;
        cov_2f3xveimlt().s[106]++;
        if (error.code === 'ETIMEDOUT') {
          /* istanbul ignore next */
          cov_2f3xveimlt().b[31][0]++;
          cov_2f3xveimlt().s[107]++;
          console.error('⏱️  Connection timeout - network or firewall issue');
          /* istanbul ignore next */
          cov_2f3xveimlt().s[108]++;
          console.error('🔍 Troubleshooting steps:');
          /* istanbul ignore next */
          cov_2f3xveimlt().s[109]++;
          console.error('   1. Check VPC route tables');
          /* istanbul ignore next */
          cov_2f3xveimlt().s[110]++;
          console.error('   2. Verify Lambda and DB are in compatible subnets');
          /* istanbul ignore next */
          cov_2f3xveimlt().s[111]++;
          console.error('   3. Check security group rules');
          /* istanbul ignore next */
          cov_2f3xveimlt().s[112]++;
          console.error('   4. Verify NAT Gateway/Internet Gateway if needed');
        } else {
          /* istanbul ignore next */
          cov_2f3xveimlt().b[31][1]++;
          cov_2f3xveimlt().s[113]++;
          if (error.code === 'ENOTFOUND') {
            /* istanbul ignore next */
            cov_2f3xveimlt().b[32][0]++;
            cov_2f3xveimlt().s[114]++;
            console.error('🌐 DNS resolution failed - hostname not found');
            /* istanbul ignore next */
            cov_2f3xveimlt().s[115]++;
            console.error('🔍 Troubleshooting steps:');
            /* istanbul ignore next */
            cov_2f3xveimlt().s[116]++;
            console.error('   1. Verify DB_ENDPOINT/host is correct');
            /* istanbul ignore next */
            cov_2f3xveimlt().s[117]++;
            console.error('   2. Check VPC DNS settings');
            /* istanbul ignore next */
            cov_2f3xveimlt().s[118]++;
            console.error('   3. Ensure RDS endpoint is accessible from Lambda VPC');
          } else
          /* istanbul ignore next */
          {
            cov_2f3xveimlt().b[32][1]++;
          }
        }
      }
      // Attach config and env info to the error for debugging
      /* istanbul ignore next */
      cov_2f3xveimlt().s[119]++;
      if (typeof config === 'undefined') {
        /* istanbul ignore next */
        cov_2f3xveimlt().b[33][0]++;
        cov_2f3xveimlt().s[120]++;
        config = null;
      } else
      /* istanbul ignore next */
      {
        cov_2f3xveimlt().b[33][1]++;
      }
      cov_2f3xveimlt().s[121]++;
      error.config = config;
      /* istanbul ignore next */
      cov_2f3xveimlt().s[122]++;
      error.env = {
        DB_SECRET_ARN: process.env.DB_SECRET_ARN,
        DB_ENDPOINT: process.env.DB_ENDPOINT,
        DB_HOST: process.env.DB_HOST,
        DB_PORT: process.env.DB_PORT,
        DB_NAME: process.env.DB_NAME,
        DB_USER: process.env.DB_USER
      };
      /* istanbul ignore next */
      cov_2f3xveimlt().s[123]++;
      console.warn('Database initialization failed. API will run in fallback mode:', {
        error: error.message,
        config: config,
        env: error.env
      });
      /* istanbul ignore next */
      cov_2f3xveimlt().s[124]++;
      return null; // Return null instead of throwing error
    } finally {
      /* istanbul ignore next */
      cov_2f3xveimlt().s[125]++;
      initPromise = null;
    }
  })();
  /* istanbul ignore next */
  cov_2f3xveimlt().s[126]++;
  return initPromise;
}

/**
 * Get the connection pool instance
 */
function getPool() {
  /* istanbul ignore next */
  cov_2f3xveimlt().f[7]++;
  cov_2f3xveimlt().s[127]++;
  if (
  /* istanbul ignore next */
  (cov_2f3xveimlt().b[35][0]++, !pool) ||
  /* istanbul ignore next */
  (cov_2f3xveimlt().b[35][1]++, !dbInitialized)) {
    /* istanbul ignore next */
    cov_2f3xveimlt().b[34][0]++;
    cov_2f3xveimlt().s[128]++;
    throw new Error('Database not initialized. Call initializeDatabase() first.');
  } else
  /* istanbul ignore next */
  {
    cov_2f3xveimlt().b[34][1]++;
  }
  cov_2f3xveimlt().s[129]++;
  return pool;
}

/**
 * Execute a database query
 */
async function query(text, params =
/* istanbul ignore next */
(cov_2f3xveimlt().b[36][0]++, [])) {
  /* istanbul ignore next */
  cov_2f3xveimlt().f[8]++;
  cov_2f3xveimlt().s[130]++;
  try {
    /* istanbul ignore next */
    cov_2f3xveimlt().s[131]++;
    // Ensure database is initialized
    if (
    /* istanbul ignore next */
    (cov_2f3xveimlt().b[38][0]++, !dbInitialized) ||
    /* istanbul ignore next */
    (cov_2f3xveimlt().b[38][1]++, !pool)) {
      /* istanbul ignore next */
      cov_2f3xveimlt().b[37][0]++;
      cov_2f3xveimlt().s[132]++;
      console.log('🔄 Database not initialized, initializing now...');
      const result =
      /* istanbul ignore next */
      (cov_2f3xveimlt().s[133]++, await initializeDatabase());
      /* istanbul ignore next */
      cov_2f3xveimlt().s[134]++;
      if (
      /* istanbul ignore next */
      (cov_2f3xveimlt().b[40][0]++, !result) ||
      /* istanbul ignore next */
      (cov_2f3xveimlt().b[40][1]++, !pool)) {
        /* istanbul ignore next */
        cov_2f3xveimlt().b[39][0]++;
        cov_2f3xveimlt().s[135]++;
        // Database is not available, throw error with specific message
        throw new Error('Database not available - running in fallback mode');
      } else
      /* istanbul ignore next */
      {
        cov_2f3xveimlt().b[39][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2f3xveimlt().b[37][1]++;
    }

    // Check if pool is still valid
    cov_2f3xveimlt().s[136]++;
    if (!pool) {
      /* istanbul ignore next */
      cov_2f3xveimlt().b[41][0]++;
      cov_2f3xveimlt().s[137]++;
      throw new Error('Database connection pool not available');
    } else
    /* istanbul ignore next */
    {
      cov_2f3xveimlt().b[41][1]++;
    }
    const start =
    /* istanbul ignore next */
    (cov_2f3xveimlt().s[138]++, Date.now());

    // Add timeout to prevent hanging queries
    const timeoutPromise =
    /* istanbul ignore next */
    (cov_2f3xveimlt().s[139]++, new Promise((_, reject) => {
      /* istanbul ignore next */
      cov_2f3xveimlt().f[9]++;
      cov_2f3xveimlt().s[140]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_2f3xveimlt().f[10]++;
        cov_2f3xveimlt().s[141]++;
        return reject(new Error('Query timeout after 30 seconds'));
      }, 30000);
    }));
    const result =
    /* istanbul ignore next */
    (cov_2f3xveimlt().s[142]++, await Promise.race([pool.query(text, params), timeoutPromise]));
    const duration =
    /* istanbul ignore next */
    (cov_2f3xveimlt().s[143]++, Date.now() - start);

    // Only log slow queries (> 1000ms) or errors
    /* istanbul ignore next */
    cov_2f3xveimlt().s[144]++;
    if (duration > 1000) {
      /* istanbul ignore next */
      cov_2f3xveimlt().b[42][0]++;
      cov_2f3xveimlt().s[145]++;
      console.log(`⚠️  Slow query executed in ${duration}ms`, {
        query: text.substring(0, 200) + (text.length > 200 ?
        /* istanbul ignore next */
        (cov_2f3xveimlt().b[43][0]++, '...') :
        /* istanbul ignore next */
        (cov_2f3xveimlt().b[43][1]++, '')),
        params: params ?
        /* istanbul ignore next */
        (cov_2f3xveimlt().b[44][0]++, params.slice(0, 5)) :
        /* istanbul ignore next */
        (cov_2f3xveimlt().b[44][1]++, [])
      });
    } else
    /* istanbul ignore next */
    {
      cov_2f3xveimlt().b[42][1]++;
    }
    cov_2f3xveimlt().s[146]++;
    return result;
  } catch (error) {
    /* istanbul ignore next */
    cov_2f3xveimlt().s[147]++;
    console.error('❌ Database query error:', {
      error: error.message,
      code: error.code,
      query: text.substring(0, 200) + (text.length > 200 ?
      /* istanbul ignore next */
      (cov_2f3xveimlt().b[45][0]++, '...') :
      /* istanbul ignore next */
      (cov_2f3xveimlt().b[45][1]++, '')),
      params: params ?
      /* istanbul ignore next */
      (cov_2f3xveimlt().b[46][0]++, params.slice(0, 5)) :
      /* istanbul ignore next */
      (cov_2f3xveimlt().b[46][1]++, [])
    });

    // Handle specific database errors with detailed troubleshooting
    /* istanbul ignore next */
    cov_2f3xveimlt().s[148]++;
    if (error.code === 'ECONNREFUSED') {
      /* istanbul ignore next */
      cov_2f3xveimlt().b[47][0]++;
      cov_2f3xveimlt().s[149]++;
      throw new Error(`Database connection refused to ${
      /* istanbul ignore next */
      (cov_2f3xveimlt().b[48][0]++, dbConfig?.host) ||
      /* istanbul ignore next */
      (cov_2f3xveimlt().b[48][1]++, 'unknown')}:${
      /* istanbul ignore next */
      (cov_2f3xveimlt().b[49][0]++, dbConfig?.port) ||
      /* istanbul ignore next */
      (cov_2f3xveimlt().b[49][1]++, 'unknown')} - check if database is running and security groups allow access`);
    } else {
      /* istanbul ignore next */
      cov_2f3xveimlt().b[47][1]++;
      cov_2f3xveimlt().s[150]++;
      if (error.code === '28000') {
        /* istanbul ignore next */
        cov_2f3xveimlt().b[50][0]++;
        cov_2f3xveimlt().s[151]++;
        throw new Error('Database authentication failed - check username/password in Secrets Manager');
      } else {
        /* istanbul ignore next */
        cov_2f3xveimlt().b[50][1]++;
        cov_2f3xveimlt().s[152]++;
        if (error.code === '3D000') {
          /* istanbul ignore next */
          cov_2f3xveimlt().b[51][0]++;
          cov_2f3xveimlt().s[153]++;
          throw new Error(`Database '${
          /* istanbul ignore next */
          (cov_2f3xveimlt().b[52][0]++, dbConfig?.database) ||
          /* istanbul ignore next */
          (cov_2f3xveimlt().b[52][1]++, 'unknown')}' does not exist`);
        } else {
          /* istanbul ignore next */
          cov_2f3xveimlt().b[51][1]++;
          cov_2f3xveimlt().s[154]++;
          if (error.code === 'ETIMEDOUT') {
            /* istanbul ignore next */
            cov_2f3xveimlt().b[53][0]++;
            cov_2f3xveimlt().s[155]++;
            throw new Error(`Connection timeout to ${
            /* istanbul ignore next */
            (cov_2f3xveimlt().b[54][0]++, dbConfig?.host) ||
            /* istanbul ignore next */
            (cov_2f3xveimlt().b[54][1]++, 'unknown')} - check VPC routing and security groups`);
          } else {
            /* istanbul ignore next */
            cov_2f3xveimlt().b[53][1]++;
            cov_2f3xveimlt().s[156]++;
            if (error.code === 'ENOTFOUND') {
              /* istanbul ignore next */
              cov_2f3xveimlt().b[55][0]++;
              cov_2f3xveimlt().s[157]++;
              throw new Error(`DNS lookup failed for ${
              /* istanbul ignore next */
              (cov_2f3xveimlt().b[56][0]++, dbConfig?.host) ||
              /* istanbul ignore next */
              (cov_2f3xveimlt().b[56][1]++, 'unknown')} - check hostname and VPC DNS settings`);
            } else {
              /* istanbul ignore next */
              cov_2f3xveimlt().b[55][1]++;
              cov_2f3xveimlt().s[158]++;
              if (error.message.includes('timeout')) {
                /* istanbul ignore next */
                cov_2f3xveimlt().b[57][0]++;
                cov_2f3xveimlt().s[159]++;
                throw new Error('Database query timeout - query took too long to execute');
              } else
              /* istanbul ignore next */
              {
                cov_2f3xveimlt().b[57][1]++;
              }
            }
          }
        }
      }
    }
    /* istanbul ignore next */
    cov_2f3xveimlt().s[160]++;
    throw error;
  }
}

// Add connection health monitoring with detailed logging
let healthCheckCount =
/* istanbul ignore next */
(cov_2f3xveimlt().s[161]++, 0);
/* istanbul ignore next */
cov_2f3xveimlt().s[162]++;
setInterval(async () => {
  /* istanbul ignore next */
  cov_2f3xveimlt().f[11]++;
  cov_2f3xveimlt().s[163]++;
  if (
  /* istanbul ignore next */
  (cov_2f3xveimlt().b[59][0]++, pool) &&
  /* istanbul ignore next */
  (cov_2f3xveimlt().b[59][1]++, dbInitialized)) {
    /* istanbul ignore next */
    cov_2f3xveimlt().b[58][0]++;
    cov_2f3xveimlt().s[164]++;
    healthCheckCount++;
    /* istanbul ignore next */
    cov_2f3xveimlt().s[165]++;
    try {
      const start =
      /* istanbul ignore next */
      (cov_2f3xveimlt().s[166]++, Date.now());
      const client =
      /* istanbul ignore next */
      (cov_2f3xveimlt().s[167]++, await pool.connect());
      /* istanbul ignore next */
      cov_2f3xveimlt().s[168]++;
      await client.query('SELECT 1');
      /* istanbul ignore next */
      cov_2f3xveimlt().s[169]++;
      client.release();
      const duration =
      /* istanbul ignore next */
      (cov_2f3xveimlt().s[170]++, Date.now() - start);

      // Only log every 10th health check to reduce noise
      /* istanbul ignore next */
      cov_2f3xveimlt().s[171]++;
      if (healthCheckCount % 10 === 0) {
        /* istanbul ignore next */
        cov_2f3xveimlt().b[60][0]++;
        cov_2f3xveimlt().s[172]++;
        console.log(`✅ Database health check #${healthCheckCount} passed (${duration}ms) - Pool: ${pool.totalCount} total, ${pool.idleCount} idle`);
      } else
      /* istanbul ignore next */
      {
        cov_2f3xveimlt().b[60][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2f3xveimlt().s[173]++;
      console.error(`❌ Database connection health check #${healthCheckCount} failed:`, {
        error: error.message,
        code: error.code,
        pool_stats: pool ?
        /* istanbul ignore next */
        (cov_2f3xveimlt().b[61][0]++, {
          total: pool.totalCount,
          idle: pool.idleCount,
          waiting: pool.waitingCount
        }) :
        /* istanbul ignore next */
        (cov_2f3xveimlt().b[61][1]++, 'pool_unavailable')
      });
      /* istanbul ignore next */
      cov_2f3xveimlt().s[174]++;
      dbInitialized = false;
    }
  } else
  /* istanbul ignore next */
  {
    cov_2f3xveimlt().b[58][1]++;
  }
}, 60000); // Check every minute

/**
 * Execute a transaction
 */
async function transaction(callback) {
  /* istanbul ignore next */
  cov_2f3xveimlt().f[12]++;
  const client =
  /* istanbul ignore next */
  (cov_2f3xveimlt().s[175]++, await getPool().connect());
  /* istanbul ignore next */
  cov_2f3xveimlt().s[176]++;
  try {
    /* istanbul ignore next */
    cov_2f3xveimlt().s[177]++;
    await client.query('BEGIN');
    const result =
    /* istanbul ignore next */
    (cov_2f3xveimlt().s[178]++, await callback(client));
    /* istanbul ignore next */
    cov_2f3xveimlt().s[179]++;
    await client.query('COMMIT');
    /* istanbul ignore next */
    cov_2f3xveimlt().s[180]++;
    return result;
  } catch (error) {
    /* istanbul ignore next */
    cov_2f3xveimlt().s[181]++;
    await client.query('ROLLBACK');
    /* istanbul ignore next */
    cov_2f3xveimlt().s[182]++;
    throw error;
  } finally {
    /* istanbul ignore next */
    cov_2f3xveimlt().s[183]++;
    client.release();
  }
}

/**
 * Close database connections (for cleanup)
 */
async function closeDatabase() {
  /* istanbul ignore next */
  cov_2f3xveimlt().f[13]++;
  cov_2f3xveimlt().s[184]++;
  if (pool) {
    /* istanbul ignore next */
    cov_2f3xveimlt().b[62][0]++;
    cov_2f3xveimlt().s[185]++;
    // console.log('Closing database connections...');
    await pool.end();
    /* istanbul ignore next */
    cov_2f3xveimlt().s[186]++;
    pool = null;
    /* istanbul ignore next */
    cov_2f3xveimlt().s[187]++;
    dbInitialized = false;
    /* istanbul ignore next */
    cov_2f3xveimlt().s[188]++;
    dbConfig = null;
    // console.log('Database connections closed');
  } else
  /* istanbul ignore next */
  {
    cov_2f3xveimlt().b[62][1]++;
  }
}

/**
 * Test network connectivity to database host
 */
async function testNetworkConnectivity() {
  /* istanbul ignore next */
  cov_2f3xveimlt().f[14]++;
  cov_2f3xveimlt().s[189]++;
  try {
    const config =
    /* istanbul ignore next */
    (cov_2f3xveimlt().s[190]++, await getDbConfig());
    /* istanbul ignore next */
    cov_2f3xveimlt().s[191]++;
    if (!config) {
      /* istanbul ignore next */
      cov_2f3xveimlt().b[63][0]++;
      cov_2f3xveimlt().s[192]++;
      return {
        status: 'no_config',
        message: 'No database configuration available'
      };
    } else
    /* istanbul ignore next */
    {
      cov_2f3xveimlt().b[63][1]++;
    }
    cov_2f3xveimlt().s[193]++;
    console.log(`🌐 Testing network connectivity to ${config.host}:${config.port}...`);

    // Use a simple TCP connection test with timeout
    const net =
    /* istanbul ignore next */
    (cov_2f3xveimlt().s[194]++, require('net'));
    /* istanbul ignore next */
    cov_2f3xveimlt().s[195]++;
    return new Promise(resolve => {
      /* istanbul ignore next */
      cov_2f3xveimlt().f[15]++;
      const socket =
      /* istanbul ignore next */
      (cov_2f3xveimlt().s[196]++, new net.Socket());
      const timeout =
      /* istanbul ignore next */
      (cov_2f3xveimlt().s[197]++, 10000); // 10 seconds

      const timer =
      /* istanbul ignore next */
      (cov_2f3xveimlt().s[198]++, setTimeout(() => {
        /* istanbul ignore next */
        cov_2f3xveimlt().f[16]++;
        cov_2f3xveimlt().s[199]++;
        socket.destroy();
        /* istanbul ignore next */
        cov_2f3xveimlt().s[200]++;
        resolve({
          status: 'timeout',
          message: `Connection timeout after ${timeout}ms`,
          host: config.host,
          port: config.port
        });
      }, timeout));
      /* istanbul ignore next */
      cov_2f3xveimlt().s[201]++;
      socket.connect(config.port, config.host, () => {
        /* istanbul ignore next */
        cov_2f3xveimlt().f[17]++;
        cov_2f3xveimlt().s[202]++;
        clearTimeout(timer);
        /* istanbul ignore next */
        cov_2f3xveimlt().s[203]++;
        socket.destroy();
        /* istanbul ignore next */
        cov_2f3xveimlt().s[204]++;
        resolve({
          status: 'success',
          message: 'TCP connection successful',
          host: config.host,
          port: config.port
        });
      });
      /* istanbul ignore next */
      cov_2f3xveimlt().s[205]++;
      socket.on('error', error => {
        /* istanbul ignore next */
        cov_2f3xveimlt().f[18]++;
        cov_2f3xveimlt().s[206]++;
        clearTimeout(timer);
        /* istanbul ignore next */
        cov_2f3xveimlt().s[207]++;
        socket.destroy();
        /* istanbul ignore next */
        cov_2f3xveimlt().s[208]++;
        resolve({
          status: 'error',
          message: error.message,
          code: error.code,
          host: config.host,
          port: config.port
        });
      });
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2f3xveimlt().s[209]++;
    return {
      status: 'error',
      message: error.message,
      error: error
    };
  }
}

/**
 * Health check for database
 */
async function healthCheck() {
  /* istanbul ignore next */
  cov_2f3xveimlt().f[19]++;
  cov_2f3xveimlt().s[210]++;
  try {
    /* istanbul ignore next */
    cov_2f3xveimlt().s[211]++;
    console.log('🔄 Starting comprehensive database health check...');

    // First test network connectivity
    /* istanbul ignore next */
    cov_2f3xveimlt().s[212]++;
    console.log('🌐 Step 1: Testing network connectivity...');
    const networkTest =
    /* istanbul ignore next */
    (cov_2f3xveimlt().s[213]++, await testNetworkConnectivity());
    /* istanbul ignore next */
    cov_2f3xveimlt().s[214]++;
    console.log(`🌐 Network test result: ${networkTest.status} - ${networkTest.message}`);
    /* istanbul ignore next */
    cov_2f3xveimlt().s[215]++;
    if (
    /* istanbul ignore next */
    (cov_2f3xveimlt().b[65][0]++, !dbInitialized) ||
    /* istanbul ignore next */
    (cov_2f3xveimlt().b[65][1]++, !pool)) {
      /* istanbul ignore next */
      cov_2f3xveimlt().b[64][0]++;
      cov_2f3xveimlt().s[216]++;
      console.log('🔄 Step 2: Database not initialized, initializing...');
      /* istanbul ignore next */
      cov_2f3xveimlt().s[217]++;
      await initializeDatabase();
    } else
    /* istanbul ignore next */
    {
      cov_2f3xveimlt().b[64][1]++;
    }
    cov_2f3xveimlt().s[218]++;
    if (!pool) {
      /* istanbul ignore next */
      cov_2f3xveimlt().b[66][0]++;
      cov_2f3xveimlt().s[219]++;
      throw new Error('Database connection pool not available after initialization');
    } else
    /* istanbul ignore next */
    {
      cov_2f3xveimlt().b[66][1]++;
    }
    cov_2f3xveimlt().s[220]++;
    console.log('🧪 Testing basic database connection...');
    const result =
    /* istanbul ignore next */
    (cov_2f3xveimlt().s[221]++, await query('SELECT NOW() as timestamp, version() as db_version'));
    /* istanbul ignore next */
    cov_2f3xveimlt().s[222]++;
    console.log('✅ Basic database connection test passed');

    // Populate health_status table with current status
    /* istanbul ignore next */
    cov_2f3xveimlt().s[223]++;
    console.log('📊 Populating health_status table...');
    /* istanbul ignore next */
    cov_2f3xveimlt().s[224]++;
    await populateHealthStatusTable();

    // Get table health data
    const tableHealthData =
    /* istanbul ignore next */
    (cov_2f3xveimlt().s[225]++, await query(`
            SELECT 
                table_name,
                status,
                record_count,
                last_updated,
                last_checked,
                is_stale,
                error,
                table_category,
                critical_table
            FROM health_status 
            ORDER BY critical_table DESC, table_name ASC
        `));
    /* istanbul ignore next */
    cov_2f3xveimlt().s[226]++;
    console.log(`✅ Health check completed - found ${tableHealthData.rows.length} tables`);
    /* istanbul ignore next */
    cov_2f3xveimlt().s[227]++;
    return {
      status: 'healthy',
      timestamp: result.rows[0].timestamp,
      version: result.rows[0].db_version,
      connections: pool.totalCount,
      idle: pool.idleCount,
      waiting: pool.waitingCount,
      tables: tableHealthData.rows
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_2f3xveimlt().s[228]++;
    console.error('❌ Health check failed:', error);
    /* istanbul ignore next */
    cov_2f3xveimlt().s[229]++;
    return {
      status: 'unhealthy',
      error: error.message,
      timestamp: new Date().toISOString()
    };
  }
}

// Function to populate health_status table with actual table data
async function populateHealthStatusTable() {
  /* istanbul ignore next */
  cov_2f3xveimlt().f[20]++;
  cov_2f3xveimlt().s[230]++;
  try {
    /* istanbul ignore next */
    cov_2f3xveimlt().s[231]++;
    console.log('🔄 Checking table health status...');

    // Define important tables to monitor
    const tablesToMonitor =
    /* istanbul ignore next */
    (cov_2f3xveimlt().s[232]++, [{
      name: 'users',
      category: 'core',
      critical: true
    }, {
      name: 'user_api_keys',
      category: 'core',
      critical: true
    }, {
      name: 'portfolio_holdings',
      category: 'portfolio',
      critical: true
    }, {
      name: 'portfolio_metadata',
      category: 'portfolio',
      critical: true
    }, {
      name: 'stock_symbols',
      category: 'data',
      critical: true
    }, {
      name: 'stock_symbols_enhanced',
      category: 'data',
      critical: false
    }, {
      name: 'watchlists',
      category: 'features',
      critical: false
    }, {
      name: 'watchlist_items',
      category: 'features',
      critical: false
    }, {
      name: 'user_notifications',
      category: 'features',
      critical: false
    }, {
      name: 'user_preferences',
      category: 'features',
      critical: false
    }]);
    /* istanbul ignore next */
    cov_2f3xveimlt().s[233]++;
    for (const table of tablesToMonitor) {
      /* istanbul ignore next */
      cov_2f3xveimlt().s[234]++;
      try {
        // Check if table exists and get row count
        const tableExists =
        /* istanbul ignore next */
        (cov_2f3xveimlt().s[235]++, await query(`
                    SELECT EXISTS (
                        SELECT FROM information_schema.tables 
                        WHERE table_name = $1
                    ) as exists
                `, [table.name]));
        /* istanbul ignore next */
        cov_2f3xveimlt().s[236]++;
        if (tableExists.rows[0].exists) {
          /* istanbul ignore next */
          cov_2f3xveimlt().b[67][0]++;
          const countResult =
          /* istanbul ignore next */
          (cov_2f3xveimlt().s[237]++, await query(`SELECT COUNT(*) as count FROM ${table.name}`));
          const recordCount =
          /* istanbul ignore next */
          (cov_2f3xveimlt().s[238]++, parseInt(countResult.rows[0].count));

          // Get last updated info if the table has updated_at column
          let lastUpdated =
          /* istanbul ignore next */
          (cov_2f3xveimlt().s[239]++, null);
          /* istanbul ignore next */
          cov_2f3xveimlt().s[240]++;
          try {
            const updateResult =
            /* istanbul ignore next */
            (cov_2f3xveimlt().s[241]++, await query(`
                            SELECT MAX(updated_at) as last_updated 
                            FROM ${table.name} 
                            WHERE updated_at IS NOT NULL
                        `));
            /* istanbul ignore next */
            cov_2f3xveimlt().s[242]++;
            lastUpdated = updateResult.rows[0].last_updated;
          } catch (e) {
            // Column might not exist, that's okay
          }

          // Determine status based on record count and criticality
          let status =
          /* istanbul ignore next */
          (cov_2f3xveimlt().s[243]++, 'healthy');
          let error =
          /* istanbul ignore next */
          (cov_2f3xveimlt().s[244]++, null);
          /* istanbul ignore next */
          cov_2f3xveimlt().s[245]++;
          if (
          /* istanbul ignore next */
          (cov_2f3xveimlt().b[69][0]++, table.critical) &&
          /* istanbul ignore next */
          (cov_2f3xveimlt().b[69][1]++, recordCount === 0)) {
            /* istanbul ignore next */
            cov_2f3xveimlt().b[68][0]++;
            cov_2f3xveimlt().s[246]++;
            status = 'critical';
            /* istanbul ignore next */
            cov_2f3xveimlt().s[247]++;
            error = 'Critical table has no data';
          } else {
            /* istanbul ignore next */
            cov_2f3xveimlt().b[68][1]++;
            cov_2f3xveimlt().s[248]++;
            if (recordCount === 0) {
              /* istanbul ignore next */
              cov_2f3xveimlt().b[70][0]++;
              cov_2f3xveimlt().s[249]++;
              status = 'warning';
              /* istanbul ignore next */
              cov_2f3xveimlt().s[250]++;
              error = 'Table has no data';
            } else
            /* istanbul ignore next */
            {
              cov_2f3xveimlt().b[70][1]++;
            }
          }

          // Update health_status table
          /* istanbul ignore next */
          cov_2f3xveimlt().s[251]++;
          await query(`
                        INSERT INTO health_status (
                            table_name, status, record_count, last_updated, 
                            last_checked, error, table_category, critical_table
                        ) VALUES ($1, $2, $3, $4, NOW(), $5, $6, $7)
                        ON CONFLICT (table_name) DO UPDATE SET
                            status = EXCLUDED.status,
                            record_count = EXCLUDED.record_count,
                            last_updated = EXCLUDED.last_updated,
                            last_checked = NOW(),
                            error = EXCLUDED.error,
                            table_category = EXCLUDED.table_category,
                            critical_table = EXCLUDED.critical_table,
                            updated_at = NOW()
                    `, [table.name, status, recordCount, lastUpdated, error, table.category, table.critical]);
          /* istanbul ignore next */
          cov_2f3xveimlt().s[252]++;
          console.log(`✅ ${table.name}: ${status} (${recordCount} records)`);
        } else {
          /* istanbul ignore next */
          cov_2f3xveimlt().b[67][1]++;
          cov_2f3xveimlt().s[253]++;
          // Table doesn't exist
          await query(`
                        INSERT INTO health_status (
                            table_name, status, record_count, last_checked, 
                            error, table_category, critical_table
                        ) VALUES ($1, $2, $3, NOW(), $4, $5, $6)
                        ON CONFLICT (table_name) DO UPDATE SET
                            status = EXCLUDED.status,
                            record_count = EXCLUDED.record_count,
                            last_checked = NOW(),
                            error = EXCLUDED.error,
                            updated_at = NOW()
                    `, [table.name, 'missing', 0, 'Table does not exist', table.category, table.critical]);
          /* istanbul ignore next */
          cov_2f3xveimlt().s[254]++;
          console.log(`❌ ${table.name}: missing`);
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_2f3xveimlt().s[255]++;
        console.error(`❌ Error checking table ${table.name}:`, error);

        // Record the error in health_status
        /* istanbul ignore next */
        cov_2f3xveimlt().s[256]++;
        await query(`
                    INSERT INTO health_status (
                        table_name, status, record_count, last_checked, 
                        error, table_category, critical_table
                    ) VALUES ($1, $2, $3, NOW(), $4, $5, $6)
                    ON CONFLICT (table_name) DO UPDATE SET
                        status = EXCLUDED.status,
                        last_checked = NOW(),
                        error = EXCLUDED.error,
                        updated_at = NOW()
                `, [table.name, 'error', 0, error.message, table.category, table.critical]);
      }
    }
    /* istanbul ignore next */
    cov_2f3xveimlt().s[257]++;
    console.log('✅ Health status table populated successfully');
  } catch (error) {
    /* istanbul ignore next */
    cov_2f3xveimlt().s[258]++;
    console.error('❌ Error populating health_status table:', error);
    /* istanbul ignore next */
    cov_2f3xveimlt().s[259]++;
    throw error;
  }
}
/* istanbul ignore next */
cov_2f3xveimlt().s[260]++;
module.exports = {
  initializeDatabase,
  getPool,
  query,
  transaction,
  closeDatabase,
  healthCheck,
  testNetworkConnectivity,
  verifyConnection
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,