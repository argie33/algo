2fc3621b1186a1fc19311e8453d6e441
/* istanbul ignore next */
function cov_2eti81vrag() {
  var path = "/home/stocks/algo/webapp/lambda/routes/compliance.js";
  var hash = "7991b2a05f0a66a3f683016d1dad037eea8138bf";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/routes/compliance.js",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 34
        }
      },
      "1": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 31
        }
      },
      "2": {
        start: {
          line: 6,
          column: 26
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "3": {
        start: {
          line: 9,
          column: 26
        },
        end: {
          line: 9,
          column: 49
        }
      },
      "4": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 53,
          column: 3
        }
      },
      "5": {
        start: {
          line: 13,
          column: 2
        },
        end: {
          line: 52,
          column: 3
        }
      },
      "6": {
        start: {
          line: 14,
          column: 26
        },
        end: {
          line: 14,
          column: 36
        }
      },
      "7": {
        start: {
          line: 15,
          column: 59
        },
        end: {
          line: 15,
          column: 68
        }
      },
      "8": {
        start: {
          line: 17,
          column: 32
        },
        end: {
          line: 17,
          column: 74
        }
      },
      "9": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "10": {
        start: {
          line: 20,
          column: 6
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "11": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "12": {
        start: {
          line: 33,
          column: 19
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "13": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 42,
          column: 7
        }
      },
      "14": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 65
        }
      },
      "15": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 51,
          column: 7
        }
      },
      "16": {
        start: {
          line: 56,
          column: 0
        },
        end: {
          line: 102,
          column: 3
        }
      },
      "17": {
        start: {
          line: 57,
          column: 2
        },
        end: {
          line: 101,
          column: 3
        }
      },
      "18": {
        start: {
          line: 58,
          column: 53
        },
        end: {
          line: 58,
          column: 61
        }
      },
      "19": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 66,
          column: 5
        }
      },
      "20": {
        start: {
          line: 61,
          column: 6
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "21": {
        start: {
          line: 68,
          column: 32
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "22": {
        start: {
          line: 76,
          column: 19
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "23": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 91,
          column: 7
        }
      },
      "24": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 94,
          column: 56
        }
      },
      "25": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 100,
          column: 7
        }
      },
      "26": {
        start: {
          line: 105,
          column: 0
        },
        end: {
          line: 153,
          column: 3
        }
      },
      "27": {
        start: {
          line: 106,
          column: 2
        },
        end: {
          line: 152,
          column: 3
        }
      },
      "28": {
        start: {
          line: 107,
          column: 49
        },
        end: {
          line: 107,
          column: 57
        }
      },
      "29": {
        start: {
          line: 109,
          column: 4
        },
        end: {
          line: 115,
          column: 5
        }
      },
      "30": {
        start: {
          line: 110,
          column: 6
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "31": {
        start: {
          line: 117,
          column: 32
        },
        end: {
          line: 123,
          column: 5
        }
      },
      "32": {
        start: {
          line: 125,
          column: 19
        },
        end: {
          line: 128,
          column: 5
        }
      },
      "33": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 142,
          column: 7
        }
      },
      "34": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 145,
          column: 58
        }
      },
      "35": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 151,
          column: 7
        }
      },
      "36": {
        start: {
          line: 156,
          column: 0
        },
        end: {
          line: 212,
          column: 3
        }
      },
      "37": {
        start: {
          line: 157,
          column: 2
        },
        end: {
          line: 211,
          column: 3
        }
      },
      "38": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 16
        }
      },
      "39": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 173,
          column: 5
        }
      },
      "40": {
        start: {
          line: 168,
          column: 6
        },
        end: {
          line: 172,
          column: 9
        }
      },
      "41": {
        start: {
          line: 175,
          column: 24
        },
        end: {
          line: 185,
          column: 5
        }
      },
      "42": {
        start: {
          line: 187,
          column: 26
        },
        end: {
          line: 187,
          column: 70
        }
      },
      "43": {
        start: {
          line: 189,
          column: 4
        },
        end: {
          line: 201,
          column: 7
        }
      },
      "44": {
        start: {
          line: 204,
          column: 4
        },
        end: {
          line: 204,
          column: 54
        }
      },
      "45": {
        start: {
          line: 205,
          column: 4
        },
        end: {
          line: 210,
          column: 7
        }
      },
      "46": {
        start: {
          line: 215,
          column: 0
        },
        end: {
          line: 251,
          column: 3
        }
      },
      "47": {
        start: {
          line: 216,
          column: 2
        },
        end: {
          line: 250,
          column: 3
        }
      },
      "48": {
        start: {
          line: 217,
          column: 26
        },
        end: {
          line: 217,
          column: 36
        }
      },
      "49": {
        start: {
          line: 218,
          column: 48
        },
        end: {
          line: 218,
          column: 56
        }
      },
      "50": {
        start: {
          line: 220,
          column: 27
        },
        end: {
          line: 226,
          column: 5
        }
      },
      "51": {
        start: {
          line: 228,
          column: 27
        },
        end: {
          line: 228,
          column: 87
        }
      },
      "52": {
        start: {
          line: 230,
          column: 4
        },
        end: {
          line: 240,
          column: 7
        }
      },
      "53": {
        start: {
          line: 243,
          column: 4
        },
        end: {
          line: 243,
          column: 55
        }
      },
      "54": {
        start: {
          line: 244,
          column: 4
        },
        end: {
          line: 249,
          column: 7
        }
      },
      "55": {
        start: {
          line: 254,
          column: 0
        },
        end: {
          line: 314,
          column: 3
        }
      },
      "56": {
        start: {
          line: 255,
          column: 2
        },
        end: {
          line: 313,
          column: 3
        }
      },
      "57": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 267,
          column: 16
        }
      },
      "58": {
        start: {
          line: 269,
          column: 4
        },
        end: {
          line: 275,
          column: 5
        }
      },
      "59": {
        start: {
          line: 270,
          column: 6
        },
        end: {
          line: 274,
          column: 9
        }
      },
      "60": {
        start: {
          line: 277,
          column: 21
        },
        end: {
          line: 288,
          column: 5
        }
      },
      "61": {
        start: {
          line: 290,
          column: 29
        },
        end: {
          line: 290,
          column: 77
        }
      },
      "62": {
        start: {
          line: 292,
          column: 4
        },
        end: {
          line: 303,
          column: 7
        }
      },
      "63": {
        start: {
          line: 306,
          column: 4
        },
        end: {
          line: 306,
          column: 62
        }
      },
      "64": {
        start: {
          line: 307,
          column: 4
        },
        end: {
          line: 312,
          column: 7
        }
      },
      "65": {
        start: {
          line: 317,
          column: 0
        },
        end: {
          line: 372,
          column: 3
        }
      },
      "66": {
        start: {
          line: 318,
          column: 2
        },
        end: {
          line: 371,
          column: 3
        }
      },
      "67": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 327,
          column: 16
        }
      },
      "68": {
        start: {
          line: 329,
          column: 4
        },
        end: {
          line: 335,
          column: 5
        }
      },
      "69": {
        start: {
          line: 330,
          column: 6
        },
        end: {
          line: 334,
          column: 9
        }
      },
      "70": {
        start: {
          line: 337,
          column: 23
        },
        end: {
          line: 345,
          column: 5
        }
      },
      "71": {
        start: {
          line: 347,
          column: 19
        },
        end: {
          line: 347,
          column: 65
        }
      },
      "72": {
        start: {
          line: 349,
          column: 4
        },
        end: {
          line: 361,
          column: 7
        }
      },
      "73": {
        start: {
          line: 364,
          column: 4
        },
        end: {
          line: 364,
          column: 58
        }
      },
      "74": {
        start: {
          line: 365,
          column: 4
        },
        end: {
          line: 370,
          column: 7
        }
      },
      "75": {
        start: {
          line: 375,
          column: 0
        },
        end: {
          line: 402,
          column: 3
        }
      },
      "76": {
        start: {
          line: 376,
          column: 2
        },
        end: {
          line: 401,
          column: 3
        }
      },
      "77": {
        start: {
          line: 377,
          column: 25
        },
        end: {
          line: 377,
          column: 35
        }
      },
      "78": {
        start: {
          line: 379,
          column: 19
        },
        end: {
          line: 379,
          column: 67
        }
      },
      "79": {
        start: {
          line: 381,
          column: 4
        },
        end: {
          line: 391,
          column: 7
        }
      },
      "80": {
        start: {
          line: 394,
          column: 4
        },
        end: {
          line: 394,
          column: 65
        }
      },
      "81": {
        start: {
          line: 395,
          column: 4
        },
        end: {
          line: 400,
          column: 7
        }
      },
      "82": {
        start: {
          line: 405,
          column: 0
        },
        end: {
          line: 424,
          column: 3
        }
      },
      "83": {
        start: {
          line: 406,
          column: 2
        },
        end: {
          line: 423,
          column: 3
        }
      },
      "84": {
        start: {
          line: 407,
          column: 22
        },
        end: {
          line: 407,
          column: 64
        }
      },
      "85": {
        start: {
          line: 409,
          column: 4
        },
        end: {
          line: 413,
          column: 7
        }
      },
      "86": {
        start: {
          line: 416,
          column: 4
        },
        end: {
          line: 416,
          column: 57
        }
      },
      "87": {
        start: {
          line: 417,
          column: 4
        },
        end: {
          line: 422,
          column: 7
        }
      },
      "88": {
        start: {
          line: 427,
          column: 0
        },
        end: {
          line: 489,
          column: 3
        }
      },
      "89": {
        start: {
          line: 428,
          column: 2
        },
        end: {
          line: 488,
          column: 3
        }
      },
      "90": {
        start: {
          line: 429,
          column: 63
        },
        end: {
          line: 429,
          column: 72
        }
      },
      "91": {
        start: {
          line: 431,
          column: 15
        },
        end: {
          line: 431,
          column: 47
        }
      },
      "92": {
        start: {
          line: 434,
          column: 4
        },
        end: {
          line: 436,
          column: 5
        }
      },
      "93": {
        start: {
          line: 435,
          column: 6
        },
        end: {
          line: 435,
          column: 55
        }
      },
      "94": {
        start: {
          line: 435,
          column: 32
        },
        end: {
          line: 435,
          column: 53
        }
      },
      "95": {
        start: {
          line: 439,
          column: 4
        },
        end: {
          line: 441,
          column: 5
        }
      },
      "96": {
        start: {
          line: 440,
          column: 6
        },
        end: {
          line: 440,
          column: 75
        }
      },
      "97": {
        start: {
          line: 440,
          column: 32
        },
        end: {
          line: 440,
          column: 73
        }
      },
      "98": {
        start: {
          line: 444,
          column: 4
        },
        end: {
          line: 447,
          column: 5
        }
      },
      "99": {
        start: {
          line: 445,
          column: 20
        },
        end: {
          line: 445,
          column: 39
        }
      },
      "100": {
        start: {
          line: 446,
          column: 6
        },
        end: {
          line: 446,
          column: 66
        }
      },
      "101": {
        start: {
          line: 446,
          column: 32
        },
        end: {
          line: 446,
          column: 64
        }
      },
      "102": {
        start: {
          line: 449,
          column: 4
        },
        end: {
          line: 452,
          column: 5
        }
      },
      "103": {
        start: {
          line: 450,
          column: 18
        },
        end: {
          line: 450,
          column: 35
        }
      },
      "104": {
        start: {
          line: 451,
          column: 6
        },
        end: {
          line: 451,
          column: 64
        }
      },
      "105": {
        start: {
          line: 451,
          column: 32
        },
        end: {
          line: 451,
          column: 62
        }
      },
      "106": {
        start: {
          line: 455,
          column: 4
        },
        end: {
          line: 457,
          column: 33
        }
      },
      "107": {
        start: {
          line: 456,
          column: 22
        },
        end: {
          line: 456,
          column: 67
        }
      },
      "108": {
        start: {
          line: 460,
          column: 26
        },
        end: {
          line: 467,
          column: 7
        }
      },
      "109": {
        start: {
          line: 460,
          column: 43
        },
        end: {
          line: 467,
          column: 5
        }
      },
      "110": {
        start: {
          line: 469,
          column: 4
        },
        end: {
          line: 478,
          column: 7
        }
      },
      "111": {
        start: {
          line: 481,
          column: 4
        },
        end: {
          line: 481,
          column: 57
        }
      },
      "112": {
        start: {
          line: 482,
          column: 4
        },
        end: {
          line: 487,
          column: 7
        }
      },
      "113": {
        start: {
          line: 492,
          column: 0
        },
        end: {
          line: 514,
          column: 3
        }
      },
      "114": {
        start: {
          line: 493,
          column: 2
        },
        end: {
          line: 513,
          column: 3
        }
      },
      "115": {
        start: {
          line: 494,
          column: 23
        },
        end: {
          line: 496,
          column: 5
        }
      },
      "116": {
        start: {
          line: 495,
          column: 25
        },
        end: {
          line: 495,
          column: 39
        }
      },
      "117": {
        start: {
          line: 498,
          column: 4
        },
        end: {
          line: 503,
          column: 7
        }
      },
      "118": {
        start: {
          line: 506,
          column: 4
        },
        end: {
          line: 506,
          column: 57
        }
      },
      "119": {
        start: {
          line: 507,
          column: 4
        },
        end: {
          line: 512,
          column: 7
        }
      },
      "120": {
        start: {
          line: 517,
          column: 0
        },
        end: {
          line: 578,
          column: 3
        }
      },
      "121": {
        start: {
          line: 518,
          column: 2
        },
        end: {
          line: 577,
          column: 3
        }
      },
      "122": {
        start: {
          line: 520,
          column: 25
        },
        end: {
          line: 525,
          column: 6
        }
      },
      "123": {
        start: {
          line: 527,
          column: 23
        },
        end: {
          line: 530,
          column: 6
        }
      },
      "124": {
        start: {
          line: 532,
          column: 22
        },
        end: {
          line: 532,
          column: 64
        }
      },
      "125": {
        start: {
          line: 534,
          column: 4
        },
        end: {
          line: 567,
          column: 7
        }
      },
      "126": {
        start: {
          line: 570,
          column: 4
        },
        end: {
          line: 570,
          column: 60
        }
      },
      "127": {
        start: {
          line: 571,
          column: 4
        },
        end: {
          line: 576,
          column: 7
        }
      },
      "128": {
        start: {
          line: 580,
          column: 0
        },
        end: {
          line: 580,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 34
          },
          end: {
            line: 12,
            column: 35
          }
        },
        loc: {
          start: {
            line: 12,
            column: 54
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 56,
            column: 44
          },
          end: {
            line: 56,
            column: 45
          }
        },
        loc: {
          start: {
            line: 56,
            column: 64
          },
          end: {
            line: 102,
            column: 1
          }
        },
        line: 56
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 105,
            column: 46
          },
          end: {
            line: 105,
            column: 47
          }
        },
        loc: {
          start: {
            line: 105,
            column: 66
          },
          end: {
            line: 153,
            column: 1
          }
        },
        line: 105
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 156,
            column: 24
          },
          end: {
            line: 156,
            column: 25
          }
        },
        loc: {
          start: {
            line: 156,
            column: 44
          },
          end: {
            line: 212,
            column: 1
          }
        },
        line: 156
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 215,
            column: 44
          },
          end: {
            line: 215,
            column: 45
          }
        },
        loc: {
          start: {
            line: 215,
            column: 64
          },
          end: {
            line: 251,
            column: 1
          }
        },
        line: 215
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 254,
            column: 32
          },
          end: {
            line: 254,
            column: 33
          }
        },
        loc: {
          start: {
            line: 254,
            column: 52
          },
          end: {
            line: 314,
            column: 1
          }
        },
        line: 254
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 317,
            column: 28
          },
          end: {
            line: 317,
            column: 29
          }
        },
        loc: {
          start: {
            line: 317,
            column: 48
          },
          end: {
            line: 372,
            column: 1
          }
        },
        line: 317
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 375,
            column: 42
          },
          end: {
            line: 375,
            column: 43
          }
        },
        loc: {
          start: {
            line: 375,
            column: 62
          },
          end: {
            line: 402,
            column: 1
          }
        },
        line: 375
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 405,
            column: 25
          },
          end: {
            line: 405,
            column: 26
          }
        },
        loc: {
          start: {
            line: 405,
            column: 45
          },
          end: {
            line: 424,
            column: 1
          }
        },
        line: 405
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 427,
            column: 26
          },
          end: {
            line: 427,
            column: 27
          }
        },
        loc: {
          start: {
            line: 427,
            column: 46
          },
          end: {
            line: 489,
            column: 1
          }
        },
        line: 427
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 435,
            column: 25
          },
          end: {
            line: 435,
            column: 26
          }
        },
        loc: {
          start: {
            line: 435,
            column: 32
          },
          end: {
            line: 435,
            column: 53
          }
        },
        line: 435
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 440,
            column: 25
          },
          end: {
            line: 440,
            column: 26
          }
        },
        loc: {
          start: {
            line: 440,
            column: 32
          },
          end: {
            line: 440,
            column: 73
          }
        },
        line: 440
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 446,
            column: 25
          },
          end: {
            line: 446,
            column: 26
          }
        },
        loc: {
          start: {
            line: 446,
            column: 32
          },
          end: {
            line: 446,
            column: 64
          }
        },
        line: 446
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 451,
            column: 25
          },
          end: {
            line: 451,
            column: 26
          }
        },
        loc: {
          start: {
            line: 451,
            column: 32
          },
          end: {
            line: 451,
            column: 62
          }
        },
        line: 451
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 456,
            column: 12
          },
          end: {
            line: 456,
            column: 13
          }
        },
        loc: {
          start: {
            line: 456,
            column: 22
          },
          end: {
            line: 456,
            column: 67
          }
        },
        line: 456
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 460,
            column: 35
          },
          end: {
            line: 460,
            column: 36
          }
        },
        loc: {
          start: {
            line: 460,
            column: 43
          },
          end: {
            line: 467,
            column: 5
          }
        },
        line: 460
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 492,
            column: 26
          },
          end: {
            line: 492,
            column: 27
          }
        },
        loc: {
          start: {
            line: 492,
            column: 46
          },
          end: {
            line: 514,
            column: 1
          }
        },
        line: 492
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 495,
            column: 6
          },
          end: {
            line: 495,
            column: 7
          }
        },
        loc: {
          start: {
            line: 495,
            column: 25
          },
          end: {
            line: 495,
            column: 39
          }
        },
        line: 495
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 517,
            column: 22
          },
          end: {
            line: 517,
            column: 23
          }
        },
        loc: {
          start: {
            line: 517,
            column: 42
          },
          end: {
            line: 578,
            column: 1
          }
        },
        line: 517
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 32
          },
          end: {
            line: 15,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 15,
            column: 49
          },
          end: {
            line: 15,
            column: 54
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "2": {
        loc: {
          start: {
            line: 58,
            column: 32
          },
          end: {
            line: 58,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 58,
            column: 46
          },
          end: {
            line: 58,
            column: 48
          }
        }],
        line: 58
      },
      "3": {
        loc: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "4": {
        loc: {
          start: {
            line: 107,
            column: 28
          },
          end: {
            line: 107,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 107,
            column: 42
          },
          end: {
            line: 107,
            column: 44
          }
        }],
        line: 107
      },
      "5": {
        loc: {
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 115,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 115,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "6": {
        loc: {
          start: {
            line: 137,
            column: 17
          },
          end: {
            line: 139,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 138,
            column: 58
          }
        }, {
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 139,
            column: 70
          }
        }],
        line: 137
      },
      "7": {
        loc: {
          start: {
            line: 163,
            column: 6
          },
          end: {
            line: 163,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 163,
            column: 22
          },
          end: {
            line: 163,
            column: 32
          }
        }],
        line: 163
      },
      "8": {
        loc: {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 173,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 173,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "9": {
        loc: {
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 167,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 167,
            column: 15
          }
        }, {
          start: {
            line: 167,
            column: 19
          },
          end: {
            line: 167,
            column: 31
          }
        }, {
          start: {
            line: 167,
            column: 35
          },
          end: {
            line: 167,
            column: 44
          }
        }, {
          start: {
            line: 167,
            column: 48
          },
          end: {
            line: 167,
            column: 74
          }
        }],
        line: 167
      },
      "10": {
        loc: {
          start: {
            line: 178,
            column: 16
          },
          end: {
            line: 178,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 178,
            column: 42
          },
          end: {
            line: 178,
            column: 50
          }
        }, {
          start: {
            line: 178,
            column: 53
          },
          end: {
            line: 178,
            column: 63
          }
        }],
        line: 178
      },
      "11": {
        loc: {
          start: {
            line: 218,
            column: 20
          },
          end: {
            line: 218,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 218,
            column: 29
          },
          end: {
            line: 218,
            column: 43
          }
        }],
        line: 218
      },
      "12": {
        loc: {
          start: {
            line: 262,
            column: 6
          },
          end: {
            line: 262,
            column: 21
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 262,
            column: 19
          },
          end: {
            line: 262,
            column: 21
          }
        }],
        line: 262
      },
      "13": {
        loc: {
          start: {
            line: 264,
            column: 6
          },
          end: {
            line: 264,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 264,
            column: 25
          },
          end: {
            line: 264,
            column: 27
          }
        }],
        line: 264
      },
      "14": {
        loc: {
          start: {
            line: 265,
            column: 6
          },
          end: {
            line: 265,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 265,
            column: 24
          },
          end: {
            line: 265,
            column: 28
          }
        }],
        line: 265
      },
      "15": {
        loc: {
          start: {
            line: 266,
            column: 6
          },
          end: {
            line: 266,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 266,
            column: 32
          },
          end: {
            line: 266,
            column: 37
          }
        }],
        line: 266
      },
      "16": {
        loc: {
          start: {
            line: 269,
            column: 4
          },
          end: {
            line: 275,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 269,
            column: 4
          },
          end: {
            line: 275,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 269
      },
      "17": {
        loc: {
          start: {
            line: 269,
            column: 8
          },
          end: {
            line: 269,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 269,
            column: 8
          },
          end: {
            line: 269,
            column: 17
          }
        }, {
          start: {
            line: 269,
            column: 21
          },
          end: {
            line: 269,
            column: 29
          }
        }, {
          start: {
            line: 269,
            column: 33
          },
          end: {
            line: 269,
            column: 44
          }
        }, {
          start: {
            line: 269,
            column: 48
          },
          end: {
            line: 269,
            column: 61
          }
        }],
        line: 269
      },
      "18": {
        loc: {
          start: {
            line: 281,
            column: 20
          },
          end: {
            line: 281,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 281,
            column: 50
          },
          end: {
            line: 281,
            column: 62
          }
        }, {
          start: {
            line: 281,
            column: 65
          },
          end: {
            line: 281,
            column: 79
          }
        }],
        line: 281
      },
      "19": {
        loc: {
          start: {
            line: 282,
            column: 18
          },
          end: {
            line: 282,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 282,
            column: 46
          },
          end: {
            line: 282,
            column: 56
          }
        }, {
          start: {
            line: 282,
            column: 59
          },
          end: {
            line: 282,
            column: 71
          }
        }],
        line: 282
      },
      "20": {
        loc: {
          start: {
            line: 329,
            column: 4
          },
          end: {
            line: 335,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 329,
            column: 4
          },
          end: {
            line: 335,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 329
      },
      "21": {
        loc: {
          start: {
            line: 329,
            column: 8
          },
          end: {
            line: 329,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 329,
            column: 8
          },
          end: {
            line: 329,
            column: 13
          }
        }, {
          start: {
            line: 329,
            column: 17
          },
          end: {
            line: 329,
            column: 26
          }
        }, {
          start: {
            line: 329,
            column: 30
          },
          end: {
            line: 329,
            column: 48
          }
        }, {
          start: {
            line: 329,
            column: 52
          },
          end: {
            line: 329,
            column: 73
          }
        }],
        line: 329
      },
      "22": {
        loc: {
          start: {
            line: 340,
            column: 25
          },
          end: {
            line: 340,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 340,
            column: 60
          },
          end: {
            line: 340,
            column: 77
          }
        }, {
          start: {
            line: 340,
            column: 80
          },
          end: {
            line: 340,
            column: 99
          }
        }],
        line: 340
      },
      "23": {
        loc: {
          start: {
            line: 343,
            column: 27
          },
          end: {
            line: 343,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 343,
            column: 64
          },
          end: {
            line: 343,
            column: 83
          }
        }, {
          start: {
            line: 343,
            column: 86
          },
          end: {
            line: 343,
            column: 107
          }
        }],
        line: 343
      },
      "24": {
        loc: {
          start: {
            line: 429,
            column: 12
          },
          end: {
            line: 429,
            column: 22
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 429,
            column: 20
          },
          end: {
            line: 429,
            column: 22
          }
        }],
        line: 429
      },
      "25": {
        loc: {
          start: {
            line: 434,
            column: 4
          },
          end: {
            line: 436,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 434,
            column: 4
          },
          end: {
            line: 436,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 434
      },
      "26": {
        loc: {
          start: {
            line: 439,
            column: 4
          },
          end: {
            line: 441,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 439,
            column: 4
          },
          end: {
            line: 441,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 439
      },
      "27": {
        loc: {
          start: {
            line: 444,
            column: 4
          },
          end: {
            line: 447,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 444,
            column: 4
          },
          end: {
            line: 447,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 444
      },
      "28": {
        loc: {
          start: {
            line: 449,
            column: 4
          },
          end: {
            line: 452,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 449,
            column: 4
          },
          end: {
            line: 452,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 449
      },
      "29": {
        loc: {
          start: {
            line: 462,
            column: 14
          },
          end: {
            line: 462,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 462,
            column: 40
          },
          end: {
            line: 462,
            column: 48
          }
        }, {
          start: {
            line: 462,
            column: 51
          },
          end: {
            line: 462,
            column: 63
          }
        }],
        line: 462
      },
      "30": {
        loc: {
          start: {
            line: 465,
            column: 16
          },
          end: {
            line: 465,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 465,
            column: 37
          },
          end: {
            line: 465,
            column: 49
          }
        }, {
          start: {
            line: 465,
            column: 52
          },
          end: {
            line: 465,
            column: 61
          }
        }],
        line: 465
      },
      "31": {
        loc: {
          start: {
            line: 475,
            column: 34
          },
          end: {
            line: 475,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 475,
            column: 43
          },
          end: {
            line: 475,
            column: 55
          }
        }, {
          start: {
            line: 475,
            column: 58
          },
          end: {
            line: 475,
            column: 67
          }
        }],
        line: 475
      },
      "32": {
        loc: {
          start: {
            line: 539,
            column: 18
          },
          end: {
            line: 539,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 539,
            column: 33
          },
          end: {
            line: 539,
            column: 46
          }
        }, {
          start: {
            line: 539,
            column: 49
          },
          end: {
            line: 539,
            column: 56
          }
        }],
        line: 539
      },
      "33": {
        loc: {
          start: {
            line: 543,
            column: 18
          },
          end: {
            line: 543,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 543,
            column: 31
          },
          end: {
            line: 543,
            column: 44
          }
        }, {
          start: {
            line: 543,
            column: 47
          },
          end: {
            line: 543,
            column: 54
          }
        }],
        line: 543
      },
      "34": {
        loc: {
          start: {
            line: 555,
            column: 18
          },
          end: {
            line: 555,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 555,
            column: 30
          },
          end: {
            line: 555,
            column: 43
          }
        }, {
          start: {
            line: 555,
            column: 46
          },
          end: {
            line: 555,
            column: 53
          }
        }],
        line: 555
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0],
      "3": [0, 0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0],
      "8": [0, 0],
      "9": [0, 0, 0, 0],
      "10": [0, 0],
      "11": [0],
      "12": [0],
      "13": [0],
      "14": [0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0, 0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7991b2a05f0a66a3f683016d1dad037eea8138bf"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2eti81vrag = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2eti81vrag();
// Compliance Routes
// API endpoints for compliance monitoring, GDPR requests, and audit logging

const express =
/* istanbul ignore next */
(cov_2eti81vrag().s[0]++, require('express'));
const router =
/* istanbul ignore next */
(cov_2eti81vrag().s[1]++, express.Router());
const ComplianceService =
/* istanbul ignore next */
(cov_2eti81vrag().s[2]++, require('../services/complianceService'));

// Initialize compliance service
const complianceService =
/* istanbul ignore next */
(cov_2eti81vrag().s[3]++, new ComplianceService());

// Generate compliance report
/* istanbul ignore next */
cov_2eti81vrag().s[4]++;
router.get('/reports/:framework', async (req, res) => {
  /* istanbul ignore next */
  cov_2eti81vrag().f[0]++;
  cov_2eti81vrag().s[5]++;
  try {
    const {
      framework
    } =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[6]++, req.params);
    const {
      startDate,
      endDate,
      includeDetails =
      /* istanbul ignore next */
      (cov_2eti81vrag().b[0][0]++, false)
    } =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[7]++, req.query);
    const supportedFrameworks =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[8]++, ['GDPR', 'SOX', 'PCI_DSS', 'FINRA', 'SEC']);
    /* istanbul ignore next */
    cov_2eti81vrag().s[9]++;
    if (!supportedFrameworks.includes(framework.toUpperCase())) {
      /* istanbul ignore next */
      cov_2eti81vrag().b[1][0]++;
      cov_2eti81vrag().s[10]++;
      return res.status(400).json({
        success: false,
        error: 'Unsupported compliance framework',
        message: `Supported frameworks: ${supportedFrameworks.join(', ')}`
      });
    } else
    /* istanbul ignore next */
    {
      cov_2eti81vrag().b[1][1]++;
    }
    const options =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[11]++, {
      startDate,
      endDate,
      includeDetails: includeDetails === 'true'
    });
    const report =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[12]++, complianceService.generateComplianceReport(framework.toUpperCase(), options));
    /* istanbul ignore next */
    cov_2eti81vrag().s[13]++;
    res.json({
      success: true,
      data: report,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2eti81vrag().s[14]++;
    console.error('Compliance report generation failed:', error);
    /* istanbul ignore next */
    cov_2eti81vrag().s[15]++;
    res.status(500).json({
      success: false,
      error: 'Failed to generate compliance report',
      message: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Data subject access request (GDPR Article 15)
/* istanbul ignore next */
cov_2eti81vrag().s[16]++;
router.post('/data-subject/access-request', async (req, res) => {
  /* istanbul ignore next */
  cov_2eti81vrag().f[1]++;
  cov_2eti81vrag().s[17]++;
  try {
    const {
      userId,
      categories,
      requestData =
      /* istanbul ignore next */
      (cov_2eti81vrag().b[2][0]++, {})
    } =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[18]++, req.body);
    /* istanbul ignore next */
    cov_2eti81vrag().s[19]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2eti81vrag().b[3][0]++;
      cov_2eti81vrag().s[20]++;
      return res.status(400).json({
        success: false,
        error: 'Missing required field',
        message: 'userId is required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2eti81vrag().b[3][1]++;
    }
    const enhancedRequestData =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[21]++, {
      ...requestData,
      categories,
      ipAddress: req.ip,
      userAgent: req.get('User-Agent'),
      timestamp: new Date().toISOString()
    });
    const result =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[22]++, await complianceService.handleDataSubjectAccessRequest(userId, enhancedRequestData));
    /* istanbul ignore next */
    cov_2eti81vrag().s[23]++;
    res.json({
      success: true,
      data: {
        requestId: result.requestId,
        status: result.status,
        deliveryMethod: result.deliveryMethod,
        expiresAt: result.expiresAt,
        message: 'Data access request processed successfully'
      },
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2eti81vrag().s[24]++;
    console.error('Data access request failed:', error);
    /* istanbul ignore next */
    cov_2eti81vrag().s[25]++;
    res.status(500).json({
      success: false,
      error: 'Failed to process data access request',
      message: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Data subject deletion request (GDPR Article 17)
/* istanbul ignore next */
cov_2eti81vrag().s[26]++;
router.post('/data-subject/deletion-request', async (req, res) => {
  /* istanbul ignore next */
  cov_2eti81vrag().f[2]++;
  cov_2eti81vrag().s[27]++;
  try {
    const {
      userId,
      reason,
      requestData =
      /* istanbul ignore next */
      (cov_2eti81vrag().b[4][0]++, {})
    } =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[28]++, req.body);
    /* istanbul ignore next */
    cov_2eti81vrag().s[29]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2eti81vrag().b[5][0]++;
      cov_2eti81vrag().s[30]++;
      return res.status(400).json({
        success: false,
        error: 'Missing required field',
        message: 'userId is required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2eti81vrag().b[5][1]++;
    }
    const enhancedRequestData =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[31]++, {
      ...requestData,
      reason,
      ipAddress: req.ip,
      userAgent: req.get('User-Agent'),
      timestamp: new Date().toISOString()
    });
    const result =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[32]++, await complianceService.handleDataDeletionRequest(userId, enhancedRequestData));
    /* istanbul ignore next */
    cov_2eti81vrag().s[33]++;
    res.json({
      success: true,
      data: {
        requestId: result.requestId,
        status: result.status,
        deletionPlan: result.deletionPlan,
        retainedData: result.retainedData,
        message: result.status === 'processed' ?
        /* istanbul ignore next */
        (cov_2eti81vrag().b[6][0]++, 'Data deletion request processed successfully') :
        /* istanbul ignore next */
        (cov_2eti81vrag().b[6][1]++, `Data deletion request ${result.status}: ${result.reason}`)
      },
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2eti81vrag().s[34]++;
    console.error('Data deletion request failed:', error);
    /* istanbul ignore next */
    cov_2eti81vrag().s[35]++;
    res.status(500).json({
      success: false,
      error: 'Failed to process data deletion request',
      message: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Record user consent
/* istanbul ignore next */
cov_2eti81vrag().s[36]++;
router.post('/consent', async (req, res) => {
  /* istanbul ignore next */
  cov_2eti81vrag().f[3]++;
  cov_2eti81vrag().s[37]++;
  try {
    const {
      userId,
      consentType,
      purposes,
      consentGiven,
      consentMethod =
      /* istanbul ignore next */
      (cov_2eti81vrag().b[7][0]++, 'explicit'),
      expiresAt
    } =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[38]++, req.body);
    /* istanbul ignore next */
    cov_2eti81vrag().s[39]++;
    if (
    /* istanbul ignore next */
    (cov_2eti81vrag().b[9][0]++, !userId) ||
    /* istanbul ignore next */
    (cov_2eti81vrag().b[9][1]++, !consentType) ||
    /* istanbul ignore next */
    (cov_2eti81vrag().b[9][2]++, !purposes) ||
    /* istanbul ignore next */
    (cov_2eti81vrag().b[9][3]++, consentGiven === undefined)) {
      /* istanbul ignore next */
      cov_2eti81vrag().b[8][0]++;
      cov_2eti81vrag().s[40]++;
      return res.status(400).json({
        success: false,
        error: 'Missing required fields',
        message: 'userId, consentType, purposes, and consentGiven are required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2eti81vrag().b[8][1]++;
    }
    const consentData =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[41]++, {
      userId,
      consentType,
      purposes: Array.isArray(purposes) ?
      /* istanbul ignore next */
      (cov_2eti81vrag().b[10][0]++, purposes) :
      /* istanbul ignore next */
      (cov_2eti81vrag().b[10][1]++, [purposes]),
      lawfulBasis: 'Consent',
      consentGiven,
      consentMethod,
      ipAddress: req.ip,
      userAgent: req.get('User-Agent'),
      expiresAt
    });
    const consentRecord =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[42]++, complianceService.recordConsent(consentData));
    /* istanbul ignore next */
    cov_2eti81vrag().s[43]++;
    res.json({
      success: true,
      data: {
        consentId: consentRecord.id,
        userId: '[REDACTED]',
        consentType: consentRecord.consentType,
        consentGiven: consentRecord.consentGiven,
        purposes: consentRecord.purposes,
        timestamp: consentRecord.timestamp
      },
      message: 'Consent recorded successfully',
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2eti81vrag().s[44]++;
    console.error('Consent recording failed:', error);
    /* istanbul ignore next */
    cov_2eti81vrag().s[45]++;
    res.status(500).json({
      success: false,
      error: 'Failed to record consent',
      message: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Withdraw consent
/* istanbul ignore next */
cov_2eti81vrag().s[46]++;
router.post('/consent/:consentId/withdraw', async (req, res) => {
  /* istanbul ignore next */
  cov_2eti81vrag().f[4]++;
  cov_2eti81vrag().s[47]++;
  try {
    const {
      consentId
    } =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[48]++, req.params);
    const {
      reason,
      method =
      /* istanbul ignore next */
      (cov_2eti81vrag().b[11][0]++, 'user_request')
    } =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[49]++, req.body);
    const withdrawalData =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[50]++, {
      reason,
      method,
      ipAddress: req.ip,
      userAgent: req.get('User-Agent'),
      timestamp: new Date().toISOString()
    });
    const updatedConsent =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[51]++, complianceService.withdrawConsent(consentId, withdrawalData));
    /* istanbul ignore next */
    cov_2eti81vrag().s[52]++;
    res.json({
      success: true,
      data: {
        consentId,
        withdrawnAt: updatedConsent.withdrawnAt,
        withdrawalMethod: updatedConsent.withdrawalMethod,
        withdrawalReason: updatedConsent.withdrawalReason
      },
      message: 'Consent withdrawn successfully',
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2eti81vrag().s[53]++;
    console.error('Consent withdrawal failed:', error);
    /* istanbul ignore next */
    cov_2eti81vrag().s[54]++;
    res.status(500).json({
      success: false,
      error: 'Failed to withdraw consent',
      message: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Record data processing activity
/* istanbul ignore next */
cov_2eti81vrag().s[55]++;
router.post('/data-processing', async (req, res) => {
  /* istanbul ignore next */
  cov_2eti81vrag().f[5]++;
  cov_2eti81vrag().s[56]++;
  try {
    const {
      dataType,
      purpose,
      legalBasis,
      dataSubjects,
      categories,
      recipients =
      /* istanbul ignore next */
      (cov_2eti81vrag().b[12][0]++, []),
      retentionPeriod,
      securityMeasures =
      /* istanbul ignore next */
      (cov_2eti81vrag().b[13][0]++, []),
      transferDetails =
      /* istanbul ignore next */
      (cov_2eti81vrag().b[14][0]++, null),
      automatedDecisionMaking =
      /* istanbul ignore next */
      (cov_2eti81vrag().b[15][0]++, false)
    } =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[57]++, req.body);
    /* istanbul ignore next */
    cov_2eti81vrag().s[58]++;
    if (
    /* istanbul ignore next */
    (cov_2eti81vrag().b[17][0]++, !dataType) ||
    /* istanbul ignore next */
    (cov_2eti81vrag().b[17][1]++, !purpose) ||
    /* istanbul ignore next */
    (cov_2eti81vrag().b[17][2]++, !legalBasis) ||
    /* istanbul ignore next */
    (cov_2eti81vrag().b[17][3]++, !dataSubjects)) {
      /* istanbul ignore next */
      cov_2eti81vrag().b[16][0]++;
      cov_2eti81vrag().s[59]++;
      return res.status(400).json({
        success: false,
        error: 'Missing required fields',
        message: 'dataType, purpose, legalBasis, and dataSubjects are required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2eti81vrag().b[16][1]++;
    }
    const activity =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[60]++, {
      dataType,
      purpose,
      legalBasis,
      dataSubjects: Array.isArray(dataSubjects) ?
      /* istanbul ignore next */
      (cov_2eti81vrag().b[18][0]++, dataSubjects) :
      /* istanbul ignore next */
      (cov_2eti81vrag().b[18][1]++, [dataSubjects]),
      categories: Array.isArray(categories) ?
      /* istanbul ignore next */
      (cov_2eti81vrag().b[19][0]++, categories) :
      /* istanbul ignore next */
      (cov_2eti81vrag().b[19][1]++, [categories]),
      recipients,
      retentionPeriod,
      securityMeasures,
      transferDetails,
      automatedDecisionMaking
    });
    const processingRecord =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[61]++, complianceService.recordDataProcessing(activity));
    /* istanbul ignore next */
    cov_2eti81vrag().s[62]++;
    res.json({
      success: true,
      data: {
        activityId: processingRecord.id,
        dataType: processingRecord.dataType,
        purpose: processingRecord.purpose,
        legalBasis: processingRecord.legalBasis,
        timestamp: processingRecord.timestamp
      },
      message: 'Data processing activity recorded successfully',
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2eti81vrag().s[63]++;
    console.error('Data processing recording failed:', error);
    /* istanbul ignore next */
    cov_2eti81vrag().s[64]++;
    res.status(500).json({
      success: false,
      error: 'Failed to record data processing activity',
      message: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Report data breach (GDPR Article 33)
/* istanbul ignore next */
cov_2eti81vrag().s[65]++;
router.post('/data-breach', async (req, res) => {
  /* istanbul ignore next */
  cov_2eti81vrag().f[6]++;
  cov_2eti81vrag().s[66]++;
  try {
    const {
      type,
      severity,
      affectedDataTypes,
      affectedDataSubjects,
      cause,
      containmentMeasures,
      riskAssessment
    } =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[67]++, req.body);
    /* istanbul ignore next */
    cov_2eti81vrag().s[68]++;
    if (
    /* istanbul ignore next */
    (cov_2eti81vrag().b[21][0]++, !type) ||
    /* istanbul ignore next */
    (cov_2eti81vrag().b[21][1]++, !severity) ||
    /* istanbul ignore next */
    (cov_2eti81vrag().b[21][2]++, !affectedDataTypes) ||
    /* istanbul ignore next */
    (cov_2eti81vrag().b[21][3]++, !affectedDataSubjects)) {
      /* istanbul ignore next */
      cov_2eti81vrag().b[20][0]++;
      cov_2eti81vrag().s[69]++;
      return res.status(400).json({
        success: false,
        error: 'Missing required fields',
        message: 'type, severity, affectedDataTypes, and affectedDataSubjects are required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2eti81vrag().b[20][1]++;
    }
    const breachData =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[70]++, {
      type,
      severity,
      affectedDataTypes: Array.isArray(affectedDataTypes) ?
      /* istanbul ignore next */
      (cov_2eti81vrag().b[22][0]++, affectedDataTypes) :
      /* istanbul ignore next */
      (cov_2eti81vrag().b[22][1]++, [affectedDataTypes]),
      affectedDataSubjects: parseInt(affectedDataSubjects),
      cause,
      containmentMeasures: Array.isArray(containmentMeasures) ?
      /* istanbul ignore next */
      (cov_2eti81vrag().b[23][0]++, containmentMeasures) :
      /* istanbul ignore next */
      (cov_2eti81vrag().b[23][1]++, [containmentMeasures]),
      riskAssessment
    });
    const breach =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[71]++, complianceService.reportDataBreach(breachData));
    /* istanbul ignore next */
    cov_2eti81vrag().s[72]++;
    res.json({
      success: true,
      data: {
        breachId: breach.id,
        detectedAt: breach.detectedAt,
        severity: breach.severity,
        notificationRequired: breach.notificationRequired,
        affectedDataSubjects: breach.affectedDataSubjects
      },
      message: 'Data breach reported successfully',
      urgent: breach.notificationRequired,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2eti81vrag().s[73]++;
    console.error('Data breach reporting failed:', error);
    /* istanbul ignore next */
    cov_2eti81vrag().s[74]++;
    res.status(500).json({
      success: false,
      error: 'Failed to report data breach',
      message: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Apply data retention policy
/* istanbul ignore next */
cov_2eti81vrag().s[75]++;
router.post('/retention/:dataType/apply', async (req, res) => {
  /* istanbul ignore next */
  cov_2eti81vrag().f[7]++;
  cov_2eti81vrag().s[76]++;
  try {
    const {
      dataType
    } =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[77]++, req.params);
    const result =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[78]++, complianceService.applyRetentionPolicy(dataType));
    /* istanbul ignore next */
    cov_2eti81vrag().s[79]++;
    res.json({
      success: true,
      data: {
        dataType,
        policyApplied: result.policyApplied.name,
        cutoffDate: result.cutoffDate,
        dataMarkedForDeletion: result.dataMarkedForDeletion
      },
      message: 'Data retention policy applied successfully',
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2eti81vrag().s[80]++;
    console.error('Retention policy application failed:', error);
    /* istanbul ignore next */
    cov_2eti81vrag().s[81]++;
    res.status(500).json({
      success: false,
      error: 'Failed to apply retention policy',
      message: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Get compliance dashboard
/* istanbul ignore next */
cov_2eti81vrag().s[82]++;
router.get('/dashboard', async (req, res) => {
  /* istanbul ignore next */
  cov_2eti81vrag().f[8]++;
  cov_2eti81vrag().s[83]++;
  try {
    const dashboard =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[84]++, complianceService.getComplianceDashboard());
    /* istanbul ignore next */
    cov_2eti81vrag().s[85]++;
    res.json({
      success: true,
      data: dashboard,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2eti81vrag().s[86]++;
    console.error('Compliance dashboard failed:', error);
    /* istanbul ignore next */
    cov_2eti81vrag().s[87]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get compliance dashboard',
      message: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Get audit logs (admin only)
/* istanbul ignore next */
cov_2eti81vrag().s[88]++;
router.get('/audit-logs', async (req, res) => {
  /* istanbul ignore next */
  cov_2eti81vrag().f[9]++;
  cov_2eti81vrag().s[89]++;
  try {
    const {
      limit =
      /* istanbul ignore next */
      (cov_2eti81vrag().b[24][0]++, 50),
      userId,
      action,
      startDate,
      endDate
    } =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[90]++, req.query);
    let logs =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[91]++, [...complianceService.auditLogs]);

    // Filter by user
    /* istanbul ignore next */
    cov_2eti81vrag().s[92]++;
    if (userId) {
      /* istanbul ignore next */
      cov_2eti81vrag().b[25][0]++;
      cov_2eti81vrag().s[93]++;
      logs = logs.filter(log => {
        /* istanbul ignore next */
        cov_2eti81vrag().f[10]++;
        cov_2eti81vrag().s[94]++;
        return log.userId === userId;
      });
    } else
    /* istanbul ignore next */
    {
      cov_2eti81vrag().b[25][1]++;
    }

    // Filter by action
    cov_2eti81vrag().s[95]++;
    if (action) {
      /* istanbul ignore next */
      cov_2eti81vrag().b[26][0]++;
      cov_2eti81vrag().s[96]++;
      logs = logs.filter(log => {
        /* istanbul ignore next */
        cov_2eti81vrag().f[11]++;
        cov_2eti81vrag().s[97]++;
        return log.action.includes(action.toUpperCase());
      });
    } else
    /* istanbul ignore next */
    {
      cov_2eti81vrag().b[26][1]++;
    }

    // Filter by date range
    cov_2eti81vrag().s[98]++;
    if (startDate) {
      /* istanbul ignore next */
      cov_2eti81vrag().b[27][0]++;
      const start =
      /* istanbul ignore next */
      (cov_2eti81vrag().s[99]++, new Date(startDate));
      /* istanbul ignore next */
      cov_2eti81vrag().s[100]++;
      logs = logs.filter(log => {
        /* istanbul ignore next */
        cov_2eti81vrag().f[12]++;
        cov_2eti81vrag().s[101]++;
        return new Date(log.timestamp) >= start;
      });
    } else
    /* istanbul ignore next */
    {
      cov_2eti81vrag().b[27][1]++;
    }
    cov_2eti81vrag().s[102]++;
    if (endDate) {
      /* istanbul ignore next */
      cov_2eti81vrag().b[28][0]++;
      const end =
      /* istanbul ignore next */
      (cov_2eti81vrag().s[103]++, new Date(endDate));
      /* istanbul ignore next */
      cov_2eti81vrag().s[104]++;
      logs = logs.filter(log => {
        /* istanbul ignore next */
        cov_2eti81vrag().f[13]++;
        cov_2eti81vrag().s[105]++;
        return new Date(log.timestamp) <= end;
      });
    } else
    /* istanbul ignore next */
    {
      cov_2eti81vrag().b[28][1]++;
    }

    // Sort by most recent and limit
    cov_2eti81vrag().s[106]++;
    logs = logs.sort((a, b) => {
      /* istanbul ignore next */
      cov_2eti81vrag().f[14]++;
      cov_2eti81vrag().s[107]++;
      return new Date(b.timestamp) - new Date(a.timestamp);
    }).slice(0, parseInt(limit));

    // Redact sensitive information
    const sanitizedLogs =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[108]++, logs.map(log => {
      /* istanbul ignore next */
      cov_2eti81vrag().f[15]++;
      cov_2eti81vrag().s[109]++;
      return {
        ...log,
        userId: log.userId === 'system' ?
        /* istanbul ignore next */
        (cov_2eti81vrag().b[29][0]++, 'system') :
        /* istanbul ignore next */
        (cov_2eti81vrag().b[29][1]++, '[REDACTED]'),
        details: {
          ...log.details,
          userId: log.details.userId ?
          /* istanbul ignore next */
          (cov_2eti81vrag().b[30][0]++, '[REDACTED]') :
          /* istanbul ignore next */
          (cov_2eti81vrag().b[30][1]++, undefined)
        }
      };
    }));
    /* istanbul ignore next */
    cov_2eti81vrag().s[110]++;
    res.json({
      success: true,
      data: {
        logs: sanitizedLogs,
        count: sanitizedLogs.length,
        totalLogs: complianceService.auditLogs.length,
        filters: {
          limit,
          userId: userId ?
          /* istanbul ignore next */
          (cov_2eti81vrag().b[31][0]++, '[REDACTED]') :
          /* istanbul ignore next */
          (cov_2eti81vrag().b[31][1]++, undefined),
          action,
          startDate,
          endDate
        }
      },
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2eti81vrag().s[111]++;
    console.error('Audit logs retrieval failed:', error);
    /* istanbul ignore next */
    cov_2eti81vrag().s[112]++;
    res.status(500).json({
      success: false,
      error: 'Failed to retrieve audit logs',
      message: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Get supported compliance frameworks
/* istanbul ignore next */
cov_2eti81vrag().s[113]++;
router.get('/frameworks', async (req, res) => {
  /* istanbul ignore next */
  cov_2eti81vrag().f[16]++;
  cov_2eti81vrag().s[114]++;
  try {
    const frameworks =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[115]++, Object.entries(complianceService.complianceFrameworks).map(([code, name]) => {
      /* istanbul ignore next */
      cov_2eti81vrag().f[17]++;
      cov_2eti81vrag().s[116]++;
      return {
        code,
        name
      };
    }));
    /* istanbul ignore next */
    cov_2eti81vrag().s[117]++;
    res.json({
      success: true,
      data: frameworks,
      count: frameworks.length,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2eti81vrag().s[118]++;
    console.error('Frameworks retrieval failed:', error);
    /* istanbul ignore next */
    cov_2eti81vrag().s[119]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get compliance frameworks',
      message: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Health check
/* istanbul ignore next */
cov_2eti81vrag().s[120]++;
router.get('/health', async (req, res) => {
  /* istanbul ignore next */
  cov_2eti81vrag().f[18]++;
  cov_2eti81vrag().s[121]++;
  try {
    // Test core compliance functions
    const testAuditLog =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[122]++, complianceService.logAuditEvent({
      action: 'HEALTH_CHECK',
      resource: 'compliance_service',
      details: {
        test: true
      },
      userId: 'system'
    }));
    const testReport =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[123]++, complianceService.generateComplianceReport('GDPR', {
      startDate: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),
      endDate: new Date().toISOString()
    }));
    const dashboard =
    /* istanbul ignore next */
    (cov_2eti81vrag().s[124]++, complianceService.getComplianceDashboard());
    /* istanbul ignore next */
    cov_2eti81vrag().s[125]++;
    res.json({
      success: true,
      message: 'Compliance services operational',
      services: {
        auditLogging: {
          status: testAuditLog ?
          /* istanbul ignore next */
          (cov_2eti81vrag().b[32][0]++, 'operational') :
          /* istanbul ignore next */
          (cov_2eti81vrag().b[32][1]++, 'error'),
          eventCount: complianceService.auditLogs.length
        },
        complianceReporting: {
          status: testReport ?
          /* istanbul ignore next */
          (cov_2eti81vrag().b[33][0]++, 'operational') :
          /* istanbul ignore next */
          (cov_2eti81vrag().b[33][1]++, 'error'),
          frameworks: Object.keys(complianceService.complianceFrameworks).length
        },
        gdprCompliance: {
          status: 'operational',
          features: ['data access requests', 'data deletion', 'consent management', 'breach reporting']
        },
        dataRetention: {
          status: 'operational',
          policies: complianceService.dataRetentionPolicies.size
        },
        dashboard: {
          status: dashboard ?
          /* istanbul ignore next */
          (cov_2eti81vrag().b[34][0]++, 'operational') :
          /* istanbul ignore next */
          (cov_2eti81vrag().b[34][1]++, 'error'),
          complianceScore: dashboard.summary.complianceScore
        }
      },
      statistics: {
        auditEvents: complianceService.auditLogs.length,
        consentRecords: complianceService.consentRecords.size,
        retentionPolicies: complianceService.dataRetentionPolicies.size,
        dataProcessingActivities: complianceService.dataProcessingActivities.length,
        breachNotifications: complianceService.breachNotifications.length
      },
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2eti81vrag().s[126]++;
    console.error('Compliance health check failed:', error);
    /* istanbul ignore next */
    cov_2eti81vrag().s[127]++;
    res.status(503).json({
      success: false,
      error: 'Compliance services unhealthy',
      message: error.message,
      timestamp: new Date().toISOString()
    });
  }
});
/* istanbul ignore next */
cov_2eti81vrag().s[128]++;
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,