6e3b314f02b304193411d251a5599cfc
/* istanbul ignore next */
function cov_335swckei() {
  var path = "/home/stocks/algo/webapp/lambda/routes/trading_enhanced.js";
  var hash = "6d76c7ae1f6ad1ab4a79253a282d0e214d3de5a2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/routes/trading_enhanced.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 17
        },
        end: {
          line: 1,
          column: 30
        }
      },
      "1": {
        start: {
          line: 2,
          column: 29
        },
        end: {
          line: 2,
          column: 56
        }
      },
      "2": {
        start: {
          line: 7,
          column: 2
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "3": {
        start: {
          line: 8,
          column: 18
        },
        end: {
          line: 8,
          column: 42
        }
      },
      "4": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 18,
          column: 7
        }
      },
      "5": {
        start: {
          line: 20,
          column: 2
        },
        end: {
          line: 20,
          column: 14
        }
      },
      "6": {
        start: {
          line: 25,
          column: 84
        },
        end: {
          line: 25,
          column: 117
        }
      },
      "7": {
        start: {
          line: 27,
          column: 2
        },
        end: {
          line: 178,
          column: 3
        }
      },
      "8": {
        start: {
          line: 28,
          column: 17
        },
        end: {
          line: 28,
          column: 32
        }
      },
      "9": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 78,
          column: 5
        }
      },
      "10": {
        start: {
          line: 80,
          column: 19
        },
        end: {
          line: 82,
          column: 28
        }
      },
      "11": {
        start: {
          line: 84,
          column: 19
        },
        end: {
          line: 84,
          column: 50
        }
      },
      "12": {
        start: {
          line: 87,
          column: 20
        },
        end: {
          line: 151,
          column: 7
        }
      },
      "13": {
        start: {
          line: 87,
          column: 44
        },
        end: {
          line: 151,
          column: 5
        }
      },
      "14": {
        start: {
          line: 153,
          column: 4
        },
        end: {
          line: 166,
          column: 6
        }
      },
      "15": {
        start: {
          line: 169,
          column: 4
        },
        end: {
          line: 169,
          column: 61
        }
      },
      "16": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 177,
          column: 6
        }
      },
      "17": {
        start: {
          line: 183,
          column: 2
        },
        end: {
          line: 259,
          column: 3
        }
      },
      "18": {
        start: {
          line: 184,
          column: 17
        },
        end: {
          line: 184,
          column: 32
        }
      },
      "19": {
        start: {
          line: 186,
          column: 18
        },
        end: {
          line: 225,
          column: 5
        }
      },
      "20": {
        start: {
          line: 227,
          column: 19
        },
        end: {
          line: 227,
          column: 42
        }
      },
      "21": {
        start: {
          line: 230,
          column: 22
        },
        end: {
          line: 230,
          column: 33
        }
      },
      "22": {
        start: {
          line: 231,
          column: 20
        },
        end: {
          line: 238,
          column: 5
        }
      },
      "23": {
        start: {
          line: 233,
          column: 47
        },
        end: {
          line: 233,
          column: 69
        }
      },
      "24": {
        start: {
          line: 234,
          column: 46
        },
        end: {
          line: 234,
          column: 68
        }
      },
      "25": {
        start: {
          line: 235,
          column: 44
        },
        end: {
          line: 235,
          column: 68
        }
      },
      "26": {
        start: {
          line: 236,
          column: 44
        },
        end: {
          line: 236,
          column: 68
        }
      },
      "27": {
        start: {
          line: 237,
          column: 48
        },
        end: {
          line: 237,
          column: 72
        }
      },
      "28": {
        start: {
          line: 240,
          column: 4
        },
        end: {
          line: 247,
          column: 6
        }
      },
      "29": {
        start: {
          line: 250,
          column: 4
        },
        end: {
          line: 250,
          column: 61
        }
      },
      "30": {
        start: {
          line: 251,
          column: 4
        },
        end: {
          line: 258,
          column: 6
        }
      },
      "31": {
        start: {
          line: 264,
          column: 2
        },
        end: {
          line: 304,
          column: 3
        }
      },
      "32": {
        start: {
          line: 265,
          column: 17
        },
        end: {
          line: 265,
          column: 32
        }
      },
      "33": {
        start: {
          line: 268,
          column: 25
        },
        end: {
          line: 284,
          column: 5
        }
      },
      "34": {
        start: {
          line: 286,
          column: 4
        },
        end: {
          line: 292,
          column: 6
        }
      },
      "35": {
        start: {
          line: 295,
          column: 4
        },
        end: {
          line: 295,
          column: 58
        }
      },
      "36": {
        start: {
          line: 296,
          column: 4
        },
        end: {
          line: 303,
          column: 6
        }
      },
      "37": {
        start: {
          line: 307,
          column: 0
        },
        end: {
          line: 311,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "getPool",
        decl: {
          start: {
            line: 6,
            column: 15
          },
          end: {
            line: 6,
            column: 22
          }
        },
        loc: {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "getEnhancedSignals",
        decl: {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 24,
            column: 33
          }
        },
        loc: {
          start: {
            line: 24,
            column: 41
          },
          end: {
            line: 179,
            column: 1
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 87,
            column: 36
          },
          end: {
            line: 87,
            column: 37
          }
        },
        loc: {
          start: {
            line: 87,
            column: 44
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 87
      },
      "3": {
        name: "getActivePositions",
        decl: {
          start: {
            line: 182,
            column: 15
          },
          end: {
            line: 182,
            column: 33
          }
        },
        loc: {
          start: {
            line: 182,
            column: 41
          },
          end: {
            line: 260,
            column: 1
          }
        },
        line: 182
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 233,
            column: 42
          },
          end: {
            line: 233,
            column: 43
          }
        },
        loc: {
          start: {
            line: 233,
            column: 47
          },
          end: {
            line: 233,
            column: 69
          }
        },
        line: 233
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 234,
            column: 41
          },
          end: {
            line: 234,
            column: 42
          }
        },
        loc: {
          start: {
            line: 234,
            column: 46
          },
          end: {
            line: 234,
            column: 68
          }
        },
        line: 234
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 235,
            column: 39
          },
          end: {
            line: 235,
            column: 40
          }
        },
        loc: {
          start: {
            line: 235,
            column: 44
          },
          end: {
            line: 235,
            column: 68
          }
        },
        line: 235
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 236,
            column: 39
          },
          end: {
            line: 236,
            column: 40
          }
        },
        loc: {
          start: {
            line: 236,
            column: 44
          },
          end: {
            line: 236,
            column: 68
          }
        },
        line: 236
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 237,
            column: 43
          },
          end: {
            line: 237,
            column: 44
          }
        },
        loc: {
          start: {
            line: 237,
            column: 48
          },
          end: {
            line: 237,
            column: 72
          }
        },
        line: 237
      },
      "9": {
        name: "getMarketTiming",
        decl: {
          start: {
            line: 263,
            column: 15
          },
          end: {
            line: 263,
            column: 30
          }
        },
        loc: {
          start: {
            line: 263,
            column: 38
          },
          end: {
            line: 305,
            column: 1
          }
        },
        line: 263
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 7,
            column: 2
          },
          end: {
            line: 19,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 7,
            column: 2
          },
          end: {
            line: 19,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 7
      },
      "1": {
        loc: {
          start: {
            line: 11,
            column: 12
          },
          end: {
            line: 11,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 12
          },
          end: {
            line: 11,
            column: 22
          }
        }, {
          start: {
            line: 11,
            column: 26
          },
          end: {
            line: 11,
            column: 30
          }
        }],
        line: 11
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 10
          },
          end: {
            line: 25,
            column: 29
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 22
          },
          end: {
            line: 25,
            column: 29
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 25,
            column: 31
          },
          end: {
            line: 25,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 44
          },
          end: {
            line: 25,
            column: 49
          }
        }],
        line: 25
      },
      "4": {
        loc: {
          start: {
            line: 25,
            column: 51
          },
          end: {
            line: 25,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 65
          },
          end: {
            line: 25,
            column: 66
          }
        }],
        line: 25
      },
      "5": {
        loc: {
          start: {
            line: 25,
            column: 68
          },
          end: {
            line: 25,
            column: 79
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 76
          },
          end: {
            line: 25,
            column: 79
          }
        }],
        line: 25
      },
      "6": {
        loc: {
          start: {
            line: 25,
            column: 84
          },
          end: {
            line: 25,
            column: 117
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 84
          },
          end: {
            line: 25,
            column: 111
          }
        }, {
          start: {
            line: 25,
            column: 115
          },
          end: {
            line: 25,
            column: 117
          }
        }],
        line: 25
      },
      "7": {
        loc: {
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 63,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 63,
            column: 35
          },
          end: {
            line: 63,
            column: 55
          }
        }, {
          start: {
            line: 63,
            column: 58
          },
          end: {
            line: 63,
            column: 60
          }
        }],
        line: 63
      },
      "8": {
        loc: {
          start: {
            line: 77,
            column: 15
          },
          end: {
            line: 77,
            column: 47
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 77,
            column: 38
          },
          end: {
            line: 77,
            column: 41
          }
        }, {
          start: {
            line: 77,
            column: 44
          },
          end: {
            line: 77,
            column: 47
          }
        }],
        line: 77
      },
      "9": {
        loc: {
          start: {
            line: 80,
            column: 19
          },
          end: {
            line: 82,
            column: 28
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 81,
            column: 40
          }
        }, {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 82,
            column: 28
          }
        }],
        line: 80
      },
      "10": {
        loc: {
          start: {
            line: 96,
            column: 19
          },
          end: {
            line: 96,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 19
          },
          end: {
            line: 96,
            column: 34
          }
        }, {
          start: {
            line: 96,
            column: 38
          },
          end: {
            line: 96,
            column: 48
          }
        }],
        line: 96
      },
      "11": {
        loc: {
          start: {
            line: 101,
            column: 30
          },
          end: {
            line: 101,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 30
          },
          end: {
            line: 101,
            column: 45
          }
        }, {
          start: {
            line: 101,
            column: 49
          },
          end: {
            line: 101,
            column: 61
          }
        }],
        line: 101
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6d76c7ae1f6ad1ab4a79253a282d0e214d3de5a2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_335swckei = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_335swckei();
const {
  Pool
} =
/* istanbul ignore next */
(cov_335swckei().s[0]++, require('pg'));
const {
  getDbCredentials
} =
/* istanbul ignore next */
(cov_335swckei().s[1]++, require('../utils/secrets'));
let pool;
async function getPool() {
  /* istanbul ignore next */
  cov_335swckei().f[0]++;
  cov_335swckei().s[2]++;
  if (!pool) {
    /* istanbul ignore next */
    cov_335swckei().b[0][0]++;
    const creds =
    /* istanbul ignore next */
    (cov_335swckei().s[3]++, await getDbCredentials());
    /* istanbul ignore next */
    cov_335swckei().s[4]++;
    pool = new Pool({
      host: creds.host,
      port:
      /* istanbul ignore next */
      (cov_335swckei().b[1][0]++, creds.port) ||
      /* istanbul ignore next */
      (cov_335swckei().b[1][1]++, 5432),
      user: creds.username,
      password: creds.password,
      database: creds.dbname,
      max: 20,
      idleTimeoutMillis: 30000,
      connectionTimeoutMillis: 2000
    });
  } else
  /* istanbul ignore next */
  {
    cov_335swckei().b[0][1]++;
  }
  cov_335swckei().s[5]++;
  return pool;
}

// Get enhanced trading signals with O'Neill methodology
async function getEnhancedSignals(event) {
  /* istanbul ignore next */
  cov_335swckei().f[1]++;
  const {
    timeframe =
    /* istanbul ignore next */
    (cov_335swckei().b[2][0]++, 'daily'),
    signalType =
    /* istanbul ignore next */
    (cov_335swckei().b[3][0]++, 'all'),
    minStrength =
    /* istanbul ignore next */
    (cov_335swckei().b[4][0]++, 0),
    limit =
    /* istanbul ignore next */
    (cov_335swckei().b[5][0]++, 100)
  } =
  /* istanbul ignore next */
  (cov_335swckei().s[6]++,
  /* istanbul ignore next */
  (cov_335swckei().b[6][0]++, event.queryStringParameters) ||
  /* istanbul ignore next */
  (cov_335swckei().b[6][1]++, {}));
  /* istanbul ignore next */
  cov_335swckei().s[7]++;
  try {
    const pool =
    /* istanbul ignore next */
    (cov_335swckei().s[8]++, await getPool());
    let query =
    /* istanbul ignore next */
    (cov_335swckei().s[9]++, `
      WITH latest_signals AS (
        SELECT DISTINCT ON (bs.symbol) 
          bs.*,
          ss.company_name,
          ss.sector,
          ss.exchange,
          ss.market_cap,
          -- Calculate if currently in buy zone
          CASE 
            WHEN bs.buy_zone_start IS NOT NULL AND bs.buy_zone_end IS NOT NULL 
                 AND bs.close >= bs.buy_zone_start AND bs.close <= bs.buy_zone_end 
            THEN true 
            ELSE false 
          END as in_buy_zone,
          -- Calculate position status if in position
          CASE
            WHEN bs.inposition AND bs.current_gain_pct >= 20 THEN 'TARGET_1_REACHED'
            WHEN bs.inposition AND bs.current_gain_pct >= 25 THEN 'TARGET_2_REACHED'
            WHEN bs.inposition AND bs.current_gain_pct <= -7 THEN 'STOP_LOSS_WARNING'
            WHEN bs.inposition THEN 'ACTIVE'
            ELSE 'NO_POSITION'
          END as position_status,
          -- Additional metrics
          s.trailing_pe,
          s.forward_pe,
          s.peg_ratio,
          s.price_to_book,
          s.beta
        FROM buy_sell_${timeframe} bs
        JOIN stock_symbols ss ON bs.symbol = ss.symbol
        LEFT JOIN symbols s ON bs.symbol = s.ticker
        WHERE bs.strength >= $1
          ${signalType !== 'all' ?
    /* istanbul ignore next */
    (cov_335swckei().b[7][0]++, "AND bs.signal = $2") :
    /* istanbul ignore next */
    (cov_335swckei().b[7][1]++, '')}
        ORDER BY bs.symbol, bs.date DESC
      )
      SELECT * FROM latest_signals
      WHERE signal != 'None'
      ORDER BY 
        CASE 
          WHEN signal = 'Buy' AND in_buy_zone THEN 0
          WHEN signal = 'Buy' THEN 1
          WHEN signal = 'Sell' THEN 2
          ELSE 3
        END,
        strength DESC,
        volume_surge_pct DESC
      LIMIT $${signalType !== 'all' ?
    /* istanbul ignore next */
    (cov_335swckei().b[8][0]++, '3') :
    /* istanbul ignore next */
    (cov_335swckei().b[8][1]++, '2')}
    `);
    const params =
    /* istanbul ignore next */
    (cov_335swckei().s[10]++, signalType !== 'all' ?
    /* istanbul ignore next */
    (cov_335swckei().b[9][0]++, [minStrength, signalType, limit]) :
    /* istanbul ignore next */
    (cov_335swckei().b[9][1]++, [minStrength, limit]));
    const result =
    /* istanbul ignore next */
    (cov_335swckei().s[11]++, await pool.query(query, params));

    // Process and enhance the signals
    const signals =
    /* istanbul ignore next */
    (cov_335swckei().s[12]++, result.rows.map(row => {
      /* istanbul ignore next */
      cov_335swckei().f[2]++;
      cov_335swckei().s[13]++;
      return {
        // Basic info
        symbol: row.symbol,
        company_name: row.company_name,
        sector: row.sector,
        date: row.date,
        // Signal info
        signal: row.signal,
        signal_type:
        /* istanbul ignore next */
        (cov_335swckei().b[10][0]++, row.signal_type) ||
        /* istanbul ignore next */
        (cov_335swckei().b[10][1]++, 'Standard'),
        signal_strength: row.strength,
        // Price data
        current_price: parseFloat(row.close),
        entry_price: parseFloat(
        /* istanbul ignore next */
        (cov_335swckei().b[11][0]++, row.entry_price) ||
        /* istanbul ignore next */
        (cov_335swckei().b[11][1]++, row.buylevel)),
        // O'Neill specific fields
        pivot_price: parseFloat(row.pivot_price),
        buy_zone_start: parseFloat(row.buy_zone_start),
        buy_zone_end: parseFloat(row.buy_zone_end),
        in_buy_zone: row.in_buy_zone,
        // Exit triggers
        exit_trigger_1_price: parseFloat(row.exit_trigger_1_price),
        exit_trigger_2_price: parseFloat(row.exit_trigger_2_price),
        exit_trigger_3_condition: row.exit_trigger_3_condition,
        exit_trigger_3_price: parseFloat(row.exit_trigger_3_price),
        exit_trigger_4_condition: row.exit_trigger_4_condition,
        exit_trigger_4_price: parseFloat(row.exit_trigger_4_price),
        // Stop loss
        initial_stop: parseFloat(row.initial_stop),
        trailing_stop: parseFloat(row.trailing_stop),
        stop_loss: parseFloat(row.stoplevel),
        // Base pattern info
        base_type: row.base_type,
        base_length_days: row.base_length_days,
        // Volume analysis
        volume: row.volume,
        avg_volume_50d: row.avg_volume_50d,
        volume_surge_pct: parseFloat(row.volume_surge_pct),
        // Relative strength
        rs_rating: row.rs_rating,
        breakout_quality: row.breakout_quality,
        // Risk/Reward
        risk_reward_ratio: parseFloat(row.risk_reward_ratio),
        // Position tracking
        in_position: row.inposition,
        position_status: row.position_status,
        current_gain_pct: parseFloat(row.current_gain_pct),
        days_in_position: row.days_in_position,
        // Fundamentals
        market_cap: parseFloat(row.market_cap),
        trailing_pe: parseFloat(row.trailing_pe),
        forward_pe: parseFloat(row.forward_pe),
        peg_ratio: parseFloat(row.peg_ratio),
        price_to_book: parseFloat(row.price_to_book),
        beta: parseFloat(row.beta)
      };
    }));
    /* istanbul ignore next */
    cov_335swckei().s[14]++;
    return {
      statusCode: 200,
      body: JSON.stringify({
        success: true,
        signals: signals,
        count: signals.length,
        timeframe: timeframe,
        filters: {
          signalType,
          minStrength,
          limit
        }
      })
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_335swckei().s[15]++;
    console.error('Error fetching enhanced signals:', error);
    /* istanbul ignore next */
    cov_335swckei().s[16]++;
    return {
      statusCode: 500,
      body: JSON.stringify({
        success: false,
        error: 'Failed to fetch enhanced trading signals',
        message: error.message
      })
    };
  }
}

// Get active positions with exit zone tracking
async function getActivePositions(event) {
  /* istanbul ignore next */
  cov_335swckei().f[3]++;
  cov_335swckei().s[17]++;
  try {
    const pool =
    /* istanbul ignore next */
    (cov_335swckei().s[18]++, await getPool());
    const query =
    /* istanbul ignore next */
    (cov_335swckei().s[19]++, `
      SELECT 
        bs.symbol,
        ss.company_name,
        bs.date as signal_date,
        bs.buylevel as entry_price,
        bs.close as current_price,
        bs.exit_trigger_1_price,
        bs.exit_trigger_2_price,
        bs.exit_trigger_3_condition,
        bs.exit_trigger_3_price,
        bs.exit_trigger_4_condition,
        bs.exit_trigger_4_price,
        bs.initial_stop,
        bs.trailing_stop,
        bs.current_gain_pct,
        bs.days_in_position,
        bs.volume_surge_pct,
        bs.rs_rating,
        bs.breakout_quality,
        -- Calculate which exit zones have been reached
        CASE
          WHEN bs.current_gain_pct >= 25 THEN 'ZONE_2_REACHED'
          WHEN bs.current_gain_pct >= 20 THEN 'ZONE_1_REACHED'
          WHEN bs.close < bs.initial_stop THEN 'STOP_LOSS_WARNING'
          ELSE 'ACTIVE'
        END as position_status,
        -- Calculate shares based on $10k position size
        FLOOR(10000 / bs.buylevel) as shares,
        FLOOR(10000 / bs.buylevel) * bs.close as current_value
      FROM buy_sell_daily bs
      JOIN stock_symbols ss ON bs.symbol = ss.symbol
      WHERE bs.inposition = true
        AND bs.date = (
          SELECT MAX(date) 
          FROM buy_sell_daily 
          WHERE symbol = bs.symbol
        )
      ORDER BY bs.current_gain_pct DESC
    `);
    const result =
    /* istanbul ignore next */
    (cov_335swckei().s[20]++, await pool.query(query));

    // Group positions by status
    const positions =
    /* istanbul ignore next */
    (cov_335swckei().s[21]++, result.rows);
    const summary =
    /* istanbul ignore next */
    (cov_335swckei().s[22]++, {
      total_positions: positions.length,
      winning_positions: positions.filter(p => {
        /* istanbul ignore next */
        cov_335swckei().f[4]++;
        cov_335swckei().s[23]++;
        return p.current_gain_pct > 0;
      }).length,
      losing_positions: positions.filter(p => {
        /* istanbul ignore next */
        cov_335swckei().f[5]++;
        cov_335swckei().s[24]++;
        return p.current_gain_pct < 0;
      }).length,
      zone_1_reached: positions.filter(p => {
        /* istanbul ignore next */
        cov_335swckei().f[6]++;
        cov_335swckei().s[25]++;
        return p.current_gain_pct >= 20;
      }).length,
      zone_2_reached: positions.filter(p => {
        /* istanbul ignore next */
        cov_335swckei().f[7]++;
        cov_335swckei().s[26]++;
        return p.current_gain_pct >= 25;
      }).length,
      stop_loss_warnings: positions.filter(p => {
        /* istanbul ignore next */
        cov_335swckei().f[8]++;
        cov_335swckei().s[27]++;
        return p.current_gain_pct <= -5;
      }).length
    });
    /* istanbul ignore next */
    cov_335swckei().s[28]++;
    return {
      statusCode: 200,
      body: JSON.stringify({
        success: true,
        positions: positions,
        summary: summary
      })
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_335swckei().s[29]++;
    console.error('Error fetching active positions:', error);
    /* istanbul ignore next */
    cov_335swckei().s[30]++;
    return {
      statusCode: 500,
      body: JSON.stringify({
        success: false,
        error: 'Failed to fetch active positions',
        message: error.message
      })
    };
  }
}

// Get market timing indicators
async function getMarketTiming(event) {
  /* istanbul ignore next */
  cov_335swckei().f[9]++;
  cov_335swckei().s[31]++;
  try {
    const pool =
    /* istanbul ignore next */
    (cov_335swckei().s[32]++, await getPool());

    // For now, return mock data - would calculate from actual market data
    const marketTiming =
    /* istanbul ignore next */
    (cov_335swckei().s[33]++, {
      market_status: 'Confirmed Uptrend',
      distribution_days: 2,
      follow_through_day: '2024-01-15',
      sp500_above_50ma: 68,
      sp500_above_200ma: 75,
      nasdaq_above_50ma: 62,
      nasdaq_above_200ma: 71,
      growth_leaders_up: 42,
      growth_leaders_down: 8,
      put_call_ratio: 0.85,
      vix_level: 15.2,
      advance_decline: 1.8,
      new_highs: 145,
      new_lows: 32,
      last_updated: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_335swckei().s[34]++;
    return {
      statusCode: 200,
      body: JSON.stringify({
        success: true,
        data: marketTiming
      })
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_335swckei().s[35]++;
    console.error('Error fetching market timing:', error);
    /* istanbul ignore next */
    cov_335swckei().s[36]++;
    return {
      statusCode: 500,
      body: JSON.stringify({
        success: false,
        error: 'Failed to fetch market timing data',
        message: error.message
      })
    };
  }
}
/* istanbul ignore next */
cov_335swckei().s[37]++;
module.exports = {
  getEnhancedSignals,
  getActivePositions,
  getMarketTiming
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,