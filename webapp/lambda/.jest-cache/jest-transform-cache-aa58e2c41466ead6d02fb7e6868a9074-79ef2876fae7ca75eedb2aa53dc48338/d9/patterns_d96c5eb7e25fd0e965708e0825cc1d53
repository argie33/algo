1ab0784761eaabb3f67888f871841140
/* istanbul ignore next */
function cov_1x5m1ahaly() {
  var path = "/home/stocks/algo/webapp/lambda/routes/patterns.js";
  var hash = "ccfc081210e9e0c84b262e33d5d9465014344a41";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/routes/patterns.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 34
        }
      },
      "1": {
        start: {
          line: 2,
          column: 42
        },
        end: {
          line: 2,
          column: 70
        }
      },
      "2": {
        start: {
          line: 3,
          column: 30
        },
        end: {
          line: 3,
          column: 59
        }
      },
      "3": {
        start: {
          line: 4,
          column: 24
        },
        end: {
          line: 4,
          column: 59
        }
      },
      "4": {
        start: {
          line: 5,
          column: 24
        },
        end: {
          line: 5,
          column: 59
        }
      },
      "5": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 39
        }
      },
      "6": {
        start: {
          line: 13,
          column: 18
        },
        end: {
          line: 13,
          column: 38
        }
      },
      "7": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 31
        }
      },
      "8": {
        start: {
          line: 18,
          column: 33
        },
        end: {
          line: 100,
          column: 1
        }
      },
      "9": {
        start: {
          line: 23,
          column: 28
        },
        end: {
          line: 23,
          column: 65
        }
      },
      "10": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 28,
          column: 92
        }
      },
      "11": {
        start: {
          line: 29,
          column: 28
        },
        end: {
          line: 29,
          column: 110
        }
      },
      "12": {
        start: {
          line: 34,
          column: 28
        },
        end: {
          line: 34,
          column: 92
        }
      },
      "13": {
        start: {
          line: 35,
          column: 28
        },
        end: {
          line: 35,
          column: 116
        }
      },
      "14": {
        start: {
          line: 40,
          column: 28
        },
        end: {
          line: 40,
          column: 92
        }
      },
      "15": {
        start: {
          line: 41,
          column: 28
        },
        end: {
          line: 41,
          column: 64
        }
      },
      "16": {
        start: {
          line: 46,
          column: 28
        },
        end: {
          line: 46,
          column: 93
        }
      },
      "17": {
        start: {
          line: 47,
          column: 28
        },
        end: {
          line: 47,
          column: 66
        }
      },
      "18": {
        start: {
          line: 57,
          column: 28
        },
        end: {
          line: 57,
          column: 55
        }
      },
      "19": {
        start: {
          line: 62,
          column: 28
        },
        end: {
          line: 62,
          column: 92
        }
      },
      "20": {
        start: {
          line: 63,
          column: 28
        },
        end: {
          line: 63,
          column: 136
        }
      },
      "21": {
        start: {
          line: 68,
          column: 28
        },
        end: {
          line: 68,
          column: 71
        }
      },
      "22": {
        start: {
          line: 69,
          column: 28
        },
        end: {
          line: 69,
          column: 87
        }
      },
      "23": {
        start: {
          line: 74,
          column: 28
        },
        end: {
          line: 74,
          column: 71
        }
      },
      "24": {
        start: {
          line: 75,
          column: 28
        },
        end: {
          line: 75,
          column: 87
        }
      },
      "25": {
        start: {
          line: 83,
          column: 28
        },
        end: {
          line: 83,
          column: 92
        }
      },
      "26": {
        start: {
          line: 84,
          column: 28
        },
        end: {
          line: 84,
          column: 136
        }
      },
      "27": {
        start: {
          line: 89,
          column: 28
        },
        end: {
          line: 89,
          column: 92
        }
      },
      "28": {
        start: {
          line: 90,
          column: 28
        },
        end: {
          line: 90,
          column: 110
        }
      },
      "29": {
        start: {
          line: 95,
          column: 28
        },
        end: {
          line: 95,
          column: 96
        }
      },
      "30": {
        start: {
          line: 96,
          column: 28
        },
        end: {
          line: 96,
          column: 69
        }
      },
      "31": {
        start: {
          line: 103,
          column: 0
        },
        end: {
          line: 103,
          column: 30
        }
      },
      "32": {
        start: {
          line: 104,
          column: 0
        },
        end: {
          line: 104,
          column: 35
        }
      },
      "33": {
        start: {
          line: 105,
          column: 0
        },
        end: {
          line: 105,
          column: 26
        }
      },
      "34": {
        start: {
          line: 106,
          column: 0
        },
        end: {
          line: 106,
          column: 33
        }
      },
      "35": {
        start: {
          line: 109,
          column: 0
        },
        end: {
          line: 127,
          column: 3
        }
      },
      "36": {
        start: {
          line: 110,
          column: 2
        },
        end: {
          line: 126,
          column: 5
        }
      },
      "37": {
        start: {
          line: 130,
          column: 0
        },
        end: {
          line: 130,
          column: 30
        }
      },
      "38": {
        start: {
          line: 133,
          column: 24
        },
        end: {
          line: 133,
          column: 45
        }
      },
      "39": {
        start: {
          line: 134,
          column: 24
        },
        end: {
          line: 134,
          column: 45
        }
      },
      "40": {
        start: {
          line: 137,
          column: 0
        },
        end: {
          line: 137,
          column: 42
        }
      },
      "41": {
        start: {
          line: 143,
          column: 0
        },
        end: {
          line: 267,
          column: 3
        }
      },
      "42": {
        start: {
          line: 144,
          column: 2
        },
        end: {
          line: 266,
          column: 3
        }
      },
      "43": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 151,
          column: 21
        }
      },
      "44": {
        start: {
          line: 153,
          column: 4
        },
        end: {
          line: 153,
          column: 116
        }
      },
      "45": {
        start: {
          line: 155,
          column: 22
        },
        end: {
          line: 155,
          column: 44
        }
      },
      "46": {
        start: {
          line: 156,
          column: 17
        },
        end: {
          line: 156,
          column: 27
        }
      },
      "47": {
        start: {
          line: 157,
          column: 21
        },
        end: {
          line: 157,
          column: 22
        }
      },
      "48": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 164,
          column: 5
        }
      },
      "49": {
        start: {
          line: 161,
          column: 6
        },
        end: {
          line: 161,
          column: 55
        }
      },
      "50": {
        start: {
          line: 162,
          column: 6
        },
        end: {
          line: 162,
          column: 26
        }
      },
      "51": {
        start: {
          line: 163,
          column: 6
        },
        end: {
          line: 163,
          column: 19
        }
      },
      "52": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 171,
          column: 5
        }
      },
      "53": {
        start: {
          line: 168,
          column: 6
        },
        end: {
          line: 168,
          column: 58
        }
      },
      "54": {
        start: {
          line: 169,
          column: 6
        },
        end: {
          line: 169,
          column: 29
        }
      },
      "55": {
        start: {
          line: 170,
          column: 6
        },
        end: {
          line: 170,
          column: 19
        }
      },
      "56": {
        start: {
          line: 174,
          column: 4
        },
        end: {
          line: 178,
          column: 5
        }
      },
      "57": {
        start: {
          line: 175,
          column: 6
        },
        end: {
          line: 175,
          column: 57
        }
      },
      "58": {
        start: {
          line: 176,
          column: 6
        },
        end: {
          line: 176,
          column: 28
        }
      },
      "59": {
        start: {
          line: 177,
          column: 6
        },
        end: {
          line: 177,
          column: 19
        }
      },
      "60": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 181,
          column: 64
        }
      },
      "61": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 182,
          column: 32
        }
      },
      "62": {
        start: {
          line: 183,
          column: 4
        },
        end: {
          line: 183,
          column: 17
        }
      },
      "63": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 186,
          column: 72
        }
      },
      "64": {
        start: {
          line: 187,
          column: 4
        },
        end: {
          line: 187,
          column: 23
        }
      },
      "65": {
        start: {
          line: 189,
          column: 19
        },
        end: {
          line: 219,
          column: 36
        }
      },
      "66": {
        start: {
          line: 221,
          column: 21
        },
        end: {
          line: 245,
          column: 7
        }
      },
      "67": {
        start: {
          line: 221,
          column: 45
        },
        end: {
          line: 245,
          column: 5
        }
      },
      "68": {
        start: {
          line: 247,
          column: 4
        },
        end: {
          line: 257,
          column: 7
        }
      },
      "69": {
        start: {
          line: 260,
          column: 4
        },
        end: {
          line: 260,
          column: 53
        }
      },
      "70": {
        start: {
          line: 261,
          column: 4
        },
        end: {
          line: 265,
          column: 7
        }
      },
      "71": {
        start: {
          line: 273,
          column: 0
        },
        end: {
          line: 382,
          column: 3
        }
      },
      "72": {
        start: {
          line: 274,
          column: 2
        },
        end: {
          line: 381,
          column: 3
        }
      },
      "73": {
        start: {
          line: 275,
          column: 53
        },
        end: {
          line: 275,
          column: 61
        }
      },
      "74": {
        start: {
          line: 277,
          column: 4
        },
        end: {
          line: 282,
          column: 5
        }
      },
      "75": {
        start: {
          line: 278,
          column: 6
        },
        end: {
          line: 281,
          column: 9
        }
      },
      "76": {
        start: {
          line: 287,
          column: 22
        },
        end: {
          line: 287,
          column: 66
        }
      },
      "77": {
        start: {
          line: 288,
          column: 17
        },
        end: {
          line: 288,
          column: 50
        }
      },
      "78": {
        start: {
          line: 289,
          column: 21
        },
        end: {
          line: 289,
          column: 22
        }
      },
      "79": {
        start: {
          line: 291,
          column: 4
        },
        end: {
          line: 295,
          column: 5
        }
      },
      "80": {
        start: {
          line: 292,
          column: 35
        },
        end: {
          line: 292,
          column: 85
        }
      },
      "81": {
        start: {
          line: 292,
          column: 56
        },
        end: {
          line: 292,
          column: 74
        }
      },
      "82": {
        start: {
          line: 293,
          column: 6
        },
        end: {
          line: 293,
          column: 69
        }
      },
      "83": {
        start: {
          line: 294,
          column: 6
        },
        end: {
          line: 294,
          column: 33
        }
      },
      "84": {
        start: {
          line: 297,
          column: 19
        },
        end: {
          line: 309,
          column: 14
        }
      },
      "85": {
        start: {
          line: 311,
          column: 21
        },
        end: {
          line: 335,
          column: 7
        }
      },
      "86": {
        start: {
          line: 311,
          column: 45
        },
        end: {
          line: 335,
          column: 5
        }
      },
      "87": {
        start: {
          line: 338,
          column: 26
        },
        end: {
          line: 350,
          column: 41
        }
      },
      "88": {
        start: {
          line: 352,
          column: 20
        },
        end: {
          line: 363,
          column: 5
        }
      },
      "89": {
        start: {
          line: 354,
          column: 49
        },
        end: {
          line: 360,
          column: 7
        }
      },
      "90": {
        start: {
          line: 365,
          column: 4
        },
        end: {
          line: 372,
          column: 7
        }
      },
      "91": {
        start: {
          line: 375,
          column: 4
        },
        end: {
          line: 375,
          column: 54
        }
      },
      "92": {
        start: {
          line: 376,
          column: 4
        },
        end: {
          line: 380,
          column: 7
        }
      },
      "93": {
        start: {
          line: 388,
          column: 0
        },
        end: {
          line: 455,
          column: 3
        }
      },
      "94": {
        start: {
          line: 389,
          column: 2
        },
        end: {
          line: 454,
          column: 3
        }
      },
      "95": {
        start: {
          line: 390,
          column: 43
        },
        end: {
          line: 390,
          column: 52
        }
      },
      "96": {
        start: {
          line: 392,
          column: 22
        },
        end: {
          line: 392,
          column: 44
        }
      },
      "97": {
        start: {
          line: 393,
          column: 17
        },
        end: {
          line: 393,
          column: 39
        }
      },
      "98": {
        start: {
          line: 394,
          column: 21
        },
        end: {
          line: 394,
          column: 22
        }
      },
      "99": {
        start: {
          line: 396,
          column: 4
        },
        end: {
          line: 400,
          column: 5
        }
      },
      "100": {
        start: {
          line: 397,
          column: 6
        },
        end: {
          line: 397,
          column: 54
        }
      },
      "101": {
        start: {
          line: 398,
          column: 6
        },
        end: {
          line: 398,
          column: 28
        }
      },
      "102": {
        start: {
          line: 399,
          column: 6
        },
        end: {
          line: 399,
          column: 19
        }
      },
      "103": {
        start: {
          line: 402,
          column: 19
        },
        end: {
          line: 416,
          column: 14
        }
      },
      "104": {
        start: {
          line: 418,
          column: 25
        },
        end: {
          line: 428,
          column: 7
        }
      },
      "105": {
        start: {
          line: 418,
          column: 49
        },
        end: {
          line: 428,
          column: 5
        }
      },
      "106": {
        start: {
          line: 431,
          column: 25
        },
        end: {
          line: 437,
          column: 10
        }
      },
      "107": {
        start: {
          line: 432,
          column: 6
        },
        end: {
          line: 434,
          column: 7
        }
      },
      "108": {
        start: {
          line: 433,
          column: 8
        },
        end: {
          line: 433,
          column: 35
        }
      },
      "109": {
        start: {
          line: 435,
          column: 6
        },
        end: {
          line: 435,
          column: 42
        }
      },
      "110": {
        start: {
          line: 436,
          column: 6
        },
        end: {
          line: 436,
          column: 17
        }
      },
      "111": {
        start: {
          line: 439,
          column: 4
        },
        end: {
          line: 445,
          column: 7
        }
      },
      "112": {
        start: {
          line: 448,
          column: 4
        },
        end: {
          line: 448,
          column: 58
        }
      },
      "113": {
        start: {
          line: 449,
          column: 4
        },
        end: {
          line: 453,
          column: 7
        }
      },
      "114": {
        start: {
          line: 461,
          column: 0
        },
        end: {
          line: 570,
          column: 3
        }
      },
      "115": {
        start: {
          line: 462,
          column: 2
        },
        end: {
          line: 569,
          column: 3
        }
      },
      "116": {
        start: {
          line: 468,
          column: 8
        },
        end: {
          line: 468,
          column: 17
        }
      },
      "117": {
        start: {
          line: 470,
          column: 22
        },
        end: {
          line: 470,
          column: 75
        }
      },
      "118": {
        start: {
          line: 471,
          column: 17
        },
        end: {
          line: 471,
          column: 33
        }
      },
      "119": {
        start: {
          line: 472,
          column: 21
        },
        end: {
          line: 472,
          column: 22
        }
      },
      "120": {
        start: {
          line: 474,
          column: 4
        },
        end: {
          line: 478,
          column: 5
        }
      },
      "121": {
        start: {
          line: 475,
          column: 6
        },
        end: {
          line: 475,
          column: 55
        }
      },
      "122": {
        start: {
          line: 476,
          column: 6
        },
        end: {
          line: 476,
          column: 40
        }
      },
      "123": {
        start: {
          line: 477,
          column: 6
        },
        end: {
          line: 477,
          column: 19
        }
      },
      "124": {
        start: {
          line: 480,
          column: 4
        },
        end: {
          line: 484,
          column: 5
        }
      },
      "125": {
        start: {
          line: 481,
          column: 6
        },
        end: {
          line: 481,
          column: 53
        }
      },
      "126": {
        start: {
          line: 482,
          column: 6
        },
        end: {
          line: 482,
          column: 32
        }
      },
      "127": {
        start: {
          line: 483,
          column: 6
        },
        end: {
          line: 483,
          column: 19
        }
      },
      "128": {
        start: {
          line: 486,
          column: 4
        },
        end: {
          line: 490,
          column: 5
        }
      },
      "129": {
        start: {
          line: 487,
          column: 6
        },
        end: {
          line: 487,
          column: 58
        }
      },
      "130": {
        start: {
          line: 488,
          column: 6
        },
        end: {
          line: 488,
          column: 29
        }
      },
      "131": {
        start: {
          line: 489,
          column: 6
        },
        end: {
          line: 489,
          column: 19
        }
      },
      "132": {
        start: {
          line: 492,
          column: 19
        },
        end: {
          line: 510,
          column: 14
        }
      },
      "133": {
        start: {
          line: 512,
          column: 24
        },
        end: {
          line: 525,
          column: 7
        }
      },
      "134": {
        start: {
          line: 512,
          column: 48
        },
        end: {
          line: 525,
          column: 5
        }
      },
      "135": {
        start: {
          line: 528,
          column: 25
        },
        end: {
          line: 537,
          column: 24
        }
      },
      "136": {
        start: {
          line: 539,
          column: 24
        },
        end: {
          line: 539,
          column: 44
        }
      },
      "137": {
        start: {
          line: 540,
          column: 20
        },
        end: {
          line: 547,
          column: 5
        }
      },
      "138": {
        start: {
          line: 549,
          column: 4
        },
        end: {
          line: 560,
          column: 7
        }
      },
      "139": {
        start: {
          line: 563,
          column: 4
        },
        end: {
          line: 563,
          column: 64
        }
      },
      "140": {
        start: {
          line: 564,
          column: 4
        },
        end: {
          line: 568,
          column: 7
        }
      },
      "141": {
        start: {
          line: 576,
          column: 0
        },
        end: {
          line: 656,
          column: 3
        }
      },
      "142": {
        start: {
          line: 577,
          column: 2
        },
        end: {
          line: 655,
          column: 3
        }
      },
      "143": {
        start: {
          line: 578,
          column: 19
        },
        end: {
          line: 578,
          column: 31
        }
      },
      "144": {
        start: {
          line: 579,
          column: 54
        },
        end: {
          line: 579,
          column: 63
        }
      },
      "145": {
        start: {
          line: 581,
          column: 22
        },
        end: {
          line: 581,
          column: 33
        }
      },
      "146": {
        start: {
          line: 582,
          column: 17
        },
        end: {
          line: 582,
          column: 19
        }
      },
      "147": {
        start: {
          line: 583,
          column: 21
        },
        end: {
          line: 583,
          column: 22
        }
      },
      "148": {
        start: {
          line: 586,
          column: 4
        },
        end: {
          line: 590,
          column: 5
        }
      },
      "149": {
        start: {
          line: 587,
          column: 6
        },
        end: {
          line: 587,
          column: 56
        }
      },
      "150": {
        start: {
          line: 588,
          column: 6
        },
        end: {
          line: 588,
          column: 38
        }
      },
      "151": {
        start: {
          line: 589,
          column: 6
        },
        end: {
          line: 589,
          column: 19
        }
      },
      "152": {
        start: {
          line: 593,
          column: 4
        },
        end: {
          line: 597,
          column: 5
        }
      },
      "153": {
        start: {
          line: 594,
          column: 6
        },
        end: {
          line: 594,
          column: 57
        }
      },
      "154": {
        start: {
          line: 595,
          column: 6
        },
        end: {
          line: 595,
          column: 28
        }
      },
      "155": {
        start: {
          line: 596,
          column: 6
        },
        end: {
          line: 596,
          column: 19
        }
      },
      "156": {
        start: {
          line: 599,
          column: 19
        },
        end: {
          line: 620,
          column: 36
        }
      },
      "157": {
        start: {
          line: 622,
          column: 19
        },
        end: {
          line: 636,
          column: 7
        }
      },
      "158": {
        start: {
          line: 622,
          column: 43
        },
        end: {
          line: 636,
          column: 5
        }
      },
      "159": {
        start: {
          line: 638,
          column: 4
        },
        end: {
          line: 646,
          column: 7
        }
      },
      "160": {
        start: {
          line: 649,
          column: 4
        },
        end: {
          line: 649,
          column: 59
        }
      },
      "161": {
        start: {
          line: 650,
          column: 4
        },
        end: {
          line: 654,
          column: 7
        }
      },
      "162": {
        start: {
          line: 662,
          column: 0
        },
        end: {
          line: 701,
          column: 3
        }
      },
      "163": {
        start: {
          line: 663,
          column: 2
        },
        end: {
          line: 700,
          column: 3
        }
      },
      "164": {
        start: {
          line: 664,
          column: 20
        },
        end: {
          line: 664,
          column: 43
        }
      },
      "165": {
        start: {
          line: 666,
          column: 4
        },
        end: {
          line: 671,
          column: 5
        }
      },
      "166": {
        start: {
          line: 667,
          column: 6
        },
        end: {
          line: 670,
          column: 9
        }
      },
      "167": {
        start: {
          line: 673,
          column: 19
        },
        end: {
          line: 678,
          column: 17
        }
      },
      "168": {
        start: {
          line: 680,
          column: 4
        },
        end: {
          line: 685,
          column: 5
        }
      },
      "169": {
        start: {
          line: 681,
          column: 6
        },
        end: {
          line: 684,
          column: 9
        }
      },
      "170": {
        start: {
          line: 687,
          column: 4
        },
        end: {
          line: 691,
          column: 7
        }
      },
      "171": {
        start: {
          line: 694,
          column: 4
        },
        end: {
          line: 694,
          column: 57
        }
      },
      "172": {
        start: {
          line: 695,
          column: 4
        },
        end: {
          line: 699,
          column: 7
        }
      },
      "173": {
        start: {
          line: 707,
          column: 0
        },
        end: {
          line: 844,
          column: 3
        }
      },
      "174": {
        start: {
          line: 708,
          column: 2
        },
        end: {
          line: 843,
          column: 3
        }
      },
      "175": {
        start: {
          line: 709,
          column: 43
        },
        end: {
          line: 709,
          column: 52
        }
      },
      "176": {
        start: {
          line: 712,
          column: 27
        },
        end: {
          line: 728,
          column: 35
        }
      },
      "177": {
        start: {
          line: 731,
          column: 26
        },
        end: {
          line: 743,
          column: 35
        }
      },
      "178": {
        start: {
          line: 746,
          column: 24
        },
        end: {
          line: 762,
          column: 35
        }
      },
      "179": {
        start: {
          line: 765,
          column: 27
        },
        end: {
          line: 775,
          column: 35
        }
      },
      "180": {
        start: {
          line: 778,
          column: 23
        },
        end: {
          line: 793,
          column: 35
        }
      },
      "181": {
        start: {
          line: 795,
          column: 4
        },
        end: {
          line: 834,
          column: 7
        }
      },
      "182": {
        start: {
          line: 798,
          column: 56
        },
        end: {
          line: 806,
          column: 9
        }
      },
      "183": {
        start: {
          line: 807,
          column: 54
        },
        end: {
          line: 811,
          column: 9
        }
      },
      "184": {
        start: {
          line: 812,
          column: 50
        },
        end: {
          line: 815,
          column: 9
        }
      },
      "185": {
        start: {
          line: 816,
          column: 56
        },
        end: {
          line: 820,
          column: 9
        }
      },
      "186": {
        start: {
          line: 821,
          column: 48
        },
        end: {
          line: 827,
          column: 9
        }
      },
      "187": {
        start: {
          line: 837,
          column: 4
        },
        end: {
          line: 837,
          column: 62
        }
      },
      "188": {
        start: {
          line: 838,
          column: 4
        },
        end: {
          line: 842,
          column: 7
        }
      },
      "189": {
        start: {
          line: 848,
          column: 2
        },
        end: {
          line: 848,
          column: 46
        }
      },
      "190": {
        start: {
          line: 848,
          column: 29
        },
        end: {
          line: 848,
          column: 46
        }
      },
      "191": {
        start: {
          line: 850,
          column: 21
        },
        end: {
          line: 850,
          column: 22
        }
      },
      "192": {
        start: {
          line: 851,
          column: 21
        },
        end: {
          line: 851,
          column: 22
        }
      },
      "193": {
        start: {
          line: 853,
          column: 2
        },
        end: {
          line: 860,
          column: 5
        }
      },
      "194": {
        start: {
          line: 854,
          column: 19
        },
        end: {
          line: 854,
          column: 37
        }
      },
      "195": {
        start: {
          line: 855,
          column: 4
        },
        end: {
          line: 859,
          column: 5
        }
      },
      "196": {
        start: {
          line: 856,
          column: 6
        },
        end: {
          line: 856,
          column: 29
        }
      },
      "197": {
        start: {
          line: 857,
          column: 11
        },
        end: {
          line: 859,
          column: 5
        }
      },
      "198": {
        start: {
          line: 858,
          column: 6
        },
        end: {
          line: 858,
          column: 29
        }
      },
      "199": {
        start: {
          line: 862,
          column: 16
        },
        end: {
          line: 862,
          column: 43
        }
      },
      "200": {
        start: {
          line: 863,
          column: 2
        },
        end: {
          line: 863,
          column: 36
        }
      },
      "201": {
        start: {
          line: 863,
          column: 19
        },
        end: {
          line: 863,
          column: 36
        }
      },
      "202": {
        start: {
          line: 865,
          column: 23
        },
        end: {
          line: 865,
          column: 43
        }
      },
      "203": {
        start: {
          line: 866,
          column: 2
        },
        end: {
          line: 866,
          column: 43
        }
      },
      "204": {
        start: {
          line: 866,
          column: 26
        },
        end: {
          line: 866,
          column: 43
        }
      },
      "205": {
        start: {
          line: 867,
          column: 2
        },
        end: {
          line: 867,
          column: 43
        }
      },
      "206": {
        start: {
          line: 867,
          column: 26
        },
        end: {
          line: 867,
          column: 43
        }
      },
      "207": {
        start: {
          line: 868,
          column: 2
        },
        end: {
          line: 868,
          column: 19
        }
      },
      "208": {
        start: {
          line: 872,
          column: 0
        },
        end: {
          line: 916,
          column: 3
        }
      },
      "209": {
        start: {
          line: 873,
          column: 2
        },
        end: {
          line: 915,
          column: 3
        }
      },
      "210": {
        start: {
          line: 874,
          column: 55
        },
        end: {
          line: 874,
          column: 63
        }
      },
      "211": {
        start: {
          line: 875,
          column: 19
        },
        end: {
          line: 875,
          column: 31
        }
      },
      "212": {
        start: {
          line: 877,
          column: 4
        },
        end: {
          line: 882,
          column: 5
        }
      },
      "213": {
        start: {
          line: 878,
          column: 6
        },
        end: {
          line: 881,
          column: 9
        }
      },
      "214": {
        start: {
          line: 885,
          column: 23
        },
        end: {
          line: 885,
          column: 25
        }
      },
      "215": {
        start: {
          line: 886,
          column: 4
        },
        end: {
          line: 891,
          column: 5
        }
      },
      "216": {
        start: {
          line: 887,
          column: 6
        },
        end: {
          line: 890,
          column: 7
        }
      },
      "217": {
        start: {
          line: 888,
          column: 24
        },
        end: {
          line: 888,
          column: 89
        }
      },
      "218": {
        start: {
          line: 889,
          column: 8
        },
        end: {
          line: 889,
          column: 36
        }
      },
      "219": {
        start: {
          line: 894,
          column: 4
        },
        end: {
          line: 894,
          column: 53
        }
      },
      "220": {
        start: {
          line: 897,
          column: 19
        },
        end: {
          line: 897,
          column: 64
        }
      },
      "221": {
        start: {
          line: 899,
          column: 4
        },
        end: {
          line: 907,
          column: 7
        }
      },
      "222": {
        start: {
          line: 909,
          column: 4
        },
        end: {
          line: 909,
          column: 66
        }
      },
      "223": {
        start: {
          line: 910,
          column: 4
        },
        end: {
          line: 914,
          column: 7
        }
      },
      "224": {
        start: {
          line: 919,
          column: 0
        },
        end: {
          line: 938,
          column: 3
        }
      },
      "225": {
        start: {
          line: 920,
          column: 2
        },
        end: {
          line: 937,
          column: 3
        }
      },
      "226": {
        start: {
          line: 921,
          column: 41
        },
        end: {
          line: 921,
          column: 50
        }
      },
      "227": {
        start: {
          line: 924,
          column: 18
        },
        end: {
          line: 924,
          column: 62
        }
      },
      "228": {
        start: {
          line: 926,
          column: 4
        },
        end: {
          line: 929,
          column: 7
        }
      },
      "229": {
        start: {
          line: 931,
          column: 4
        },
        end: {
          line: 931,
          column: 63
        }
      },
      "230": {
        start: {
          line: 932,
          column: 4
        },
        end: {
          line: 936,
          column: 7
        }
      },
      "231": {
        start: {
          line: 941,
          column: 0
        },
        end: {
          line: 959,
          column: 3
        }
      },
      "232": {
        start: {
          line: 942,
          column: 2
        },
        end: {
          line: 958,
          column: 3
        }
      },
      "233": {
        start: {
          line: 943,
          column: 58
        },
        end: {
          line: 943,
          column: 67
        }
      },
      "234": {
        start: {
          line: 945,
          column: 24
        },
        end: {
          line: 945,
          column: 82
        }
      },
      "235": {
        start: {
          line: 947,
          column: 4
        },
        end: {
          line: 950,
          column: 7
        }
      },
      "236": {
        start: {
          line: 952,
          column: 4
        },
        end: {
          line: 952,
          column: 64
        }
      },
      "237": {
        start: {
          line: 953,
          column: 4
        },
        end: {
          line: 957,
          column: 7
        }
      },
      "238": {
        start: {
          line: 962,
          column: 0
        },
        end: {
          line: 1007,
          column: 3
        }
      },
      "239": {
        start: {
          line: 963,
          column: 2
        },
        end: {
          line: 1006,
          column: 3
        }
      },
      "240": {
        start: {
          line: 964,
          column: 19
        },
        end: {
          line: 964,
          column: 31
        }
      },
      "241": {
        start: {
          line: 965,
          column: 81
        },
        end: {
          line: 965,
          column: 89
        }
      },
      "242": {
        start: {
          line: 967,
          column: 4
        },
        end: {
          line: 972,
          column: 5
        }
      },
      "243": {
        start: {
          line: 968,
          column: 6
        },
        end: {
          line: 971,
          column: 9
        }
      },
      "244": {
        start: {
          line: 975,
          column: 19
        },
        end: {
          line: 975,
          column: 21
        }
      },
      "245": {
        start: {
          line: 976,
          column: 4
        },
        end: {
          line: 992,
          column: 5
        }
      },
      "246": {
        start: {
          line: 977,
          column: 26
        },
        end: {
          line: 988,
          column: 7
        }
      },
      "247": {
        start: {
          line: 990,
          column: 20
        },
        end: {
          line: 990,
          column: 74
        }
      },
      "248": {
        start: {
          line: 991,
          column: 6
        },
        end: {
          line: 991,
          column: 25
        }
      },
      "249": {
        start: {
          line: 994,
          column: 4
        },
        end: {
          line: 998,
          column: 7
        }
      },
      "250": {
        start: {
          line: 1000,
          column: 4
        },
        end: {
          line: 1000,
          column: 58
        }
      },
      "251": {
        start: {
          line: 1001,
          column: 4
        },
        end: {
          line: 1005,
          column: 7
        }
      },
      "252": {
        start: {
          line: 1010,
          column: 0
        },
        end: {
          line: 1122,
          column: 3
        }
      },
      "253": {
        start: {
          line: 1011,
          column: 2
        },
        end: {
          line: 1121,
          column: 3
        }
      },
      "254": {
        start: {
          line: 1012,
          column: 25
        },
        end: {
          line: 1109,
          column: 5
        }
      },
      "255": {
        start: {
          line: 1111,
          column: 4
        },
        end: {
          line: 1114,
          column: 7
        }
      },
      "256": {
        start: {
          line: 1116,
          column: 4
        },
        end: {
          line: 1116,
          column: 58
        }
      },
      "257": {
        start: {
          line: 1117,
          column: 4
        },
        end: {
          line: 1120,
          column: 7
        }
      },
      "258": {
        start: {
          line: 1126,
          column: 2
        },
        end: {
          line: 1126,
          column: 53
        }
      },
      "259": {
        start: {
          line: 1126,
          column: 46
        },
        end: {
          line: 1126,
          column: 53
        }
      },
      "260": {
        start: {
          line: 1128,
          column: 2
        },
        end: {
          line: 1155,
          column: 3
        }
      },
      "261": {
        start: {
          line: 1129,
          column: 4
        },
        end: {
          line: 1152,
          column: 5
        }
      },
      "262": {
        start: {
          line: 1130,
          column: 6
        },
        end: {
          line: 1151,
          column: 9
        }
      },
      "263": {
        start: {
          line: 1154,
          column: 4
        },
        end: {
          line: 1154,
          column: 62
        }
      },
      "264": {
        start: {
          line: 1159,
          column: 17
        },
        end: {
          line: 1159,
          column: 19
        }
      },
      "265": {
        start: {
          line: 1161,
          column: 2
        },
        end: {
          line: 1183,
          column: 3
        }
      },
      "266": {
        start: {
          line: 1162,
          column: 4
        },
        end: {
          line: 1180,
          column: 5
        }
      },
      "267": {
        start: {
          line: 1163,
          column: 6
        },
        end: {
          line: 1179,
          column: 7
        }
      },
      "268": {
        start: {
          line: 1164,
          column: 28
        },
        end: {
          line: 1175,
          column: 9
        }
      },
      "269": {
        start: {
          line: 1177,
          column: 22
        },
        end: {
          line: 1177,
          column: 76
        }
      },
      "270": {
        start: {
          line: 1178,
          column: 8
        },
        end: {
          line: 1178,
          column: 27
        }
      },
      "271": {
        start: {
          line: 1182,
          column: 4
        },
        end: {
          line: 1182,
          column: 59
        }
      },
      "272": {
        start: {
          line: 1185,
          column: 2
        },
        end: {
          line: 1185,
          column: 16
        }
      },
      "273": {
        start: {
          line: 1189,
          column: 2
        },
        end: {
          line: 1227,
          column: 3
        }
      },
      "274": {
        start: {
          line: 1190,
          column: 25
        },
        end: {
          line: 1195,
          column: 60
        }
      },
      "275": {
        start: {
          line: 1197,
          column: 25
        },
        end: {
          line: 1197,
          column: 27
        }
      },
      "276": {
        start: {
          line: 1198,
          column: 4
        },
        end: {
          line: 1200,
          column: 5
        }
      },
      "277": {
        start: {
          line: 1199,
          column: 6
        },
        end: {
          line: 1199,
          column: 57
        }
      },
      "278": {
        start: {
          line: 1202,
          column: 19
        },
        end: {
          line: 1216,
          column: 6
        }
      },
      "279": {
        start: {
          line: 1218,
          column: 4
        },
        end: {
          line: 1223,
          column: 6
        }
      },
      "280": {
        start: {
          line: 1222,
          column: 57
        },
        end: {
          line: 1222,
          column: 92
        }
      },
      "281": {
        start: {
          line: 1225,
          column: 4
        },
        end: {
          line: 1225,
          column: 62
        }
      },
      "282": {
        start: {
          line: 1226,
          column: 4
        },
        end: {
          line: 1226,
          column: 69
        }
      },
      "283": {
        start: {
          line: 1231,
          column: 2
        },
        end: {
          line: 1270,
          column: 3
        }
      },
      "284": {
        start: {
          line: 1232,
          column: 19
        },
        end: {
          line: 1252,
          column: 38
        }
      },
      "285": {
        start: {
          line: 1254,
          column: 4
        },
        end: {
          line: 1260,
          column: 6
        }
      },
      "286": {
        start: {
          line: 1262,
          column: 4
        },
        end: {
          line: 1262,
          column: 63
        }
      },
      "287": {
        start: {
          line: 1263,
          column: 4
        },
        end: {
          line: 1269,
          column: 6
        }
      },
      "288": {
        start: {
          line: 1273,
          column: 0
        },
        end: {
          line: 1273,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 23,
            column: 17
          },
          end: {
            line: 23,
            column: 18
          }
        },
        loc: {
          start: {
            line: 23,
            column: 28
          },
          end: {
            line: 23,
            column: 65
          }
        },
        line: 23
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 28,
            column: 17
          },
          end: {
            line: 28,
            column: 18
          }
        },
        loc: {
          start: {
            line: 28,
            column: 28
          },
          end: {
            line: 28,
            column: 92
          }
        },
        line: 28
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 29,
            column: 17
          },
          end: {
            line: 29,
            column: 18
          }
        },
        loc: {
          start: {
            line: 29,
            column: 28
          },
          end: {
            line: 29,
            column: 110
          }
        },
        line: 29
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 34,
            column: 17
          },
          end: {
            line: 34,
            column: 18
          }
        },
        loc: {
          start: {
            line: 34,
            column: 28
          },
          end: {
            line: 34,
            column: 92
          }
        },
        line: 34
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 35,
            column: 17
          },
          end: {
            line: 35,
            column: 18
          }
        },
        loc: {
          start: {
            line: 35,
            column: 28
          },
          end: {
            line: 35,
            column: 116
          }
        },
        line: 35
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 40,
            column: 17
          },
          end: {
            line: 40,
            column: 18
          }
        },
        loc: {
          start: {
            line: 40,
            column: 28
          },
          end: {
            line: 40,
            column: 92
          }
        },
        line: 40
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 41,
            column: 17
          },
          end: {
            line: 41,
            column: 18
          }
        },
        loc: {
          start: {
            line: 41,
            column: 28
          },
          end: {
            line: 41,
            column: 64
          }
        },
        line: 41
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 46,
            column: 17
          },
          end: {
            line: 46,
            column: 18
          }
        },
        loc: {
          start: {
            line: 46,
            column: 28
          },
          end: {
            line: 46,
            column: 93
          }
        },
        line: 46
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 47,
            column: 17
          },
          end: {
            line: 47,
            column: 18
          }
        },
        loc: {
          start: {
            line: 47,
            column: 28
          },
          end: {
            line: 47,
            column: 66
          }
        },
        line: 47
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 57,
            column: 17
          },
          end: {
            line: 57,
            column: 18
          }
        },
        loc: {
          start: {
            line: 57,
            column: 28
          },
          end: {
            line: 57,
            column: 55
          }
        },
        line: 57
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 62,
            column: 17
          },
          end: {
            line: 62,
            column: 18
          }
        },
        loc: {
          start: {
            line: 62,
            column: 28
          },
          end: {
            line: 62,
            column: 92
          }
        },
        line: 62
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 63,
            column: 17
          },
          end: {
            line: 63,
            column: 18
          }
        },
        loc: {
          start: {
            line: 63,
            column: 28
          },
          end: {
            line: 63,
            column: 136
          }
        },
        line: 63
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 68,
            column: 17
          },
          end: {
            line: 68,
            column: 18
          }
        },
        loc: {
          start: {
            line: 68,
            column: 28
          },
          end: {
            line: 68,
            column: 71
          }
        },
        line: 68
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 69,
            column: 17
          },
          end: {
            line: 69,
            column: 18
          }
        },
        loc: {
          start: {
            line: 69,
            column: 28
          },
          end: {
            line: 69,
            column: 87
          }
        },
        line: 69
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 74,
            column: 17
          },
          end: {
            line: 74,
            column: 18
          }
        },
        loc: {
          start: {
            line: 74,
            column: 28
          },
          end: {
            line: 74,
            column: 71
          }
        },
        line: 74
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 75,
            column: 17
          },
          end: {
            line: 75,
            column: 18
          }
        },
        loc: {
          start: {
            line: 75,
            column: 28
          },
          end: {
            line: 75,
            column: 87
          }
        },
        line: 75
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 83,
            column: 17
          },
          end: {
            line: 83,
            column: 18
          }
        },
        loc: {
          start: {
            line: 83,
            column: 28
          },
          end: {
            line: 83,
            column: 92
          }
        },
        line: 83
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 84,
            column: 17
          },
          end: {
            line: 84,
            column: 18
          }
        },
        loc: {
          start: {
            line: 84,
            column: 28
          },
          end: {
            line: 84,
            column: 136
          }
        },
        line: 84
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 89,
            column: 17
          },
          end: {
            line: 89,
            column: 18
          }
        },
        loc: {
          start: {
            line: 89,
            column: 28
          },
          end: {
            line: 89,
            column: 92
          }
        },
        line: 89
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 90,
            column: 17
          },
          end: {
            line: 90,
            column: 18
          }
        },
        loc: {
          start: {
            line: 90,
            column: 28
          },
          end: {
            line: 90,
            column: 110
          }
        },
        line: 90
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 95,
            column: 17
          },
          end: {
            line: 95,
            column: 18
          }
        },
        loc: {
          start: {
            line: 95,
            column: 28
          },
          end: {
            line: 95,
            column: 96
          }
        },
        line: 95
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 96,
            column: 17
          },
          end: {
            line: 96,
            column: 18
          }
        },
        loc: {
          start: {
            line: 96,
            column: 28
          },
          end: {
            line: 96,
            column: 69
          }
        },
        line: 96
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 109,
            column: 16
          },
          end: {
            line: 109,
            column: 17
          }
        },
        loc: {
          start: {
            line: 109,
            column: 30
          },
          end: {
            line: 127,
            column: 1
          }
        },
        line: 109
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 143,
            column: 86
          },
          end: {
            line: 143,
            column: 87
          }
        },
        loc: {
          start: {
            line: 143,
            column: 106
          },
          end: {
            line: 267,
            column: 1
          }
        },
        line: 143
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 221,
            column: 37
          },
          end: {
            line: 221,
            column: 38
          }
        },
        loc: {
          start: {
            line: 221,
            column: 45
          },
          end: {
            line: 245,
            column: 5
          }
        },
        line: 221
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 273,
            column: 24
          },
          end: {
            line: 273,
            column: 25
          }
        },
        loc: {
          start: {
            line: 273,
            column: 44
          },
          end: {
            line: 382,
            column: 1
          }
        },
        line: 273
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 292,
            column: 50
          },
          end: {
            line: 292,
            column: 51
          }
        },
        loc: {
          start: {
            line: 292,
            column: 56
          },
          end: {
            line: 292,
            column: 74
          }
        },
        line: 292
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 311,
            column: 37
          },
          end: {
            line: 311,
            column: 38
          }
        },
        loc: {
          start: {
            line: 311,
            column: 45
          },
          end: {
            line: 335,
            column: 5
          }
        },
        line: 311
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 354,
            column: 41
          },
          end: {
            line: 354,
            column: 42
          }
        },
        loc: {
          start: {
            line: 354,
            column: 49
          },
          end: {
            line: 360,
            column: 7
          }
        },
        line: 354
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 388,
            column: 21
          },
          end: {
            line: 388,
            column: 22
          }
        },
        loc: {
          start: {
            line: 388,
            column: 41
          },
          end: {
            line: 455,
            column: 1
          }
        },
        line: 388
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 418,
            column: 41
          },
          end: {
            line: 418,
            column: 42
          }
        },
        loc: {
          start: {
            line: 418,
            column: 49
          },
          end: {
            line: 428,
            column: 5
          }
        },
        line: 418
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 431,
            column: 45
          },
          end: {
            line: 431,
            column: 46
          }
        },
        loc: {
          start: {
            line: 431,
            column: 63
          },
          end: {
            line: 437,
            column: 5
          }
        },
        line: 431
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 461,
            column: 27
          },
          end: {
            line: 461,
            column: 28
          }
        },
        loc: {
          start: {
            line: 461,
            column: 47
          },
          end: {
            line: 570,
            column: 1
          }
        },
        line: 461
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 512,
            column: 40
          },
          end: {
            line: 512,
            column: 41
          }
        },
        loc: {
          start: {
            line: 512,
            column: 48
          },
          end: {
            line: 525,
            column: 5
          }
        },
        line: 512
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 576,
            column: 22
          },
          end: {
            line: 576,
            column: 23
          }
        },
        loc: {
          start: {
            line: 576,
            column: 42
          },
          end: {
            line: 656,
            column: 1
          }
        },
        line: 576
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 622,
            column: 35
          },
          end: {
            line: 622,
            column: 36
          }
        },
        loc: {
          start: {
            line: 622,
            column: 43
          },
          end: {
            line: 636,
            column: 5
          }
        },
        line: 622
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 662,
            column: 37
          },
          end: {
            line: 662,
            column: 38
          }
        },
        loc: {
          start: {
            line: 662,
            column: 57
          },
          end: {
            line: 701,
            column: 1
          }
        },
        line: 662
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 707,
            column: 25
          },
          end: {
            line: 707,
            column: 26
          }
        },
        loc: {
          start: {
            line: 707,
            column: 45
          },
          end: {
            line: 844,
            column: 1
          }
        },
        line: 707
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 798,
            column: 48
          },
          end: {
            line: 798,
            column: 49
          }
        },
        loc: {
          start: {
            line: 798,
            column: 56
          },
          end: {
            line: 806,
            column: 9
          }
        },
        line: 798
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 807,
            column: 46
          },
          end: {
            line: 807,
            column: 47
          }
        },
        loc: {
          start: {
            line: 807,
            column: 54
          },
          end: {
            line: 811,
            column: 9
          }
        },
        line: 807
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 812,
            column: 42
          },
          end: {
            line: 812,
            column: 43
          }
        },
        loc: {
          start: {
            line: 812,
            column: 50
          },
          end: {
            line: 815,
            column: 9
          }
        },
        line: 812
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 816,
            column: 48
          },
          end: {
            line: 816,
            column: 49
          }
        },
        loc: {
          start: {
            line: 816,
            column: 56
          },
          end: {
            line: 820,
            column: 9
          }
        },
        line: 816
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 821,
            column: 40
          },
          end: {
            line: 821,
            column: 41
          }
        },
        loc: {
          start: {
            line: 821,
            column: 48
          },
          end: {
            line: 827,
            column: 9
          }
        },
        line: 821
      },
      "43": {
        name: "calculateOverallSentiment",
        decl: {
          start: {
            line: 847,
            column: 9
          },
          end: {
            line: 847,
            column: 34
          }
        },
        loc: {
          start: {
            line: 847,
            column: 45
          },
          end: {
            line: 869,
            column: 1
          }
        },
        line: 847
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 853,
            column: 19
          },
          end: {
            line: 853,
            column: 20
          }
        },
        loc: {
          start: {
            line: 853,
            column: 30
          },
          end: {
            line: 860,
            column: 3
          }
        },
        line: 853
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 872,
            column: 32
          },
          end: {
            line: 872,
            column: 33
          }
        },
        loc: {
          start: {
            line: 872,
            column: 52
          },
          end: {
            line: 916,
            column: 1
          }
        },
        line: 872
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 919,
            column: 26
          },
          end: {
            line: 919,
            column: 27
          }
        },
        loc: {
          start: {
            line: 919,
            column: 46
          },
          end: {
            line: 938,
            column: 1
          }
        },
        line: 919
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 941,
            column: 27
          },
          end: {
            line: 941,
            column: 28
          }
        },
        loc: {
          start: {
            line: 941,
            column: 47
          },
          end: {
            line: 959,
            column: 1
          }
        },
        line: 941
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 962,
            column: 23
          },
          end: {
            line: 962,
            column: 24
          }
        },
        loc: {
          start: {
            line: 962,
            column: 43
          },
          end: {
            line: 1007,
            column: 1
          }
        },
        line: 962
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 1010,
            column: 21
          },
          end: {
            line: 1010,
            column: 22
          }
        },
        loc: {
          start: {
            line: 1010,
            column: 35
          },
          end: {
            line: 1122,
            column: 1
          }
        },
        line: 1010
      },
      "50": {
        name: "storePatternDetections",
        decl: {
          start: {
            line: 1125,
            column: 15
          },
          end: {
            line: 1125,
            column: 37
          }
        },
        loc: {
          start: {
            line: 1125,
            column: 58
          },
          end: {
            line: 1156,
            column: 1
          }
        },
        line: 1125
      },
      "51": {
        name: "createPatternAlerts",
        decl: {
          start: {
            line: 1158,
            column: 15
          },
          end: {
            line: 1158,
            column: 34
          }
        },
        loc: {
          start: {
            line: 1158,
            column: 55
          },
          end: {
            line: 1186,
            column: 1
          }
        },
        line: 1158
      },
      "52": {
        name: "getPatternStatistics",
        decl: {
          start: {
            line: 1188,
            column: 15
          },
          end: {
            line: 1188,
            column: 35
          }
        },
        loc: {
          start: {
            line: 1188,
            column: 54
          },
          end: {
            line: 1228,
            column: 1
          }
        },
        line: 1188
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 1222,
            column: 43
          },
          end: {
            line: 1222,
            column: 44
          }
        },
        loc: {
          start: {
            line: 1222,
            column: 57
          },
          end: {
            line: 1222,
            column: 92
          }
        },
        line: 1222
      },
      "54": {
        name: "getPatternPerformance",
        decl: {
          start: {
            line: 1230,
            column: 15
          },
          end: {
            line: 1230,
            column: 36
          }
        },
        loc: {
          start: {
            line: 1230,
            column: 67
          },
          end: {
            line: 1271,
            column: 1
          }
        },
        line: 1230
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 28
          },
          end: {
            line: 23,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 28
          },
          end: {
            line: 23,
            column: 34
          }
        }, {
          start: {
            line: 23,
            column: 38
          },
          end: {
            line: 23,
            column: 65
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 28
          },
          end: {
            line: 29,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 28
          },
          end: {
            line: 29,
            column: 34
          }
        }, {
          start: {
            line: 29,
            column: 38
          },
          end: {
            line: 29,
            column: 110
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 35,
            column: 28
          },
          end: {
            line: 35,
            column: 116
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 28
          },
          end: {
            line: 35,
            column: 34
          }
        }, {
          start: {
            line: 35,
            column: 38
          },
          end: {
            line: 35,
            column: 116
          }
        }],
        line: 35
      },
      "3": {
        loc: {
          start: {
            line: 41,
            column: 28
          },
          end: {
            line: 41,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 28
          },
          end: {
            line: 41,
            column: 34
          }
        }, {
          start: {
            line: 41,
            column: 39
          },
          end: {
            line: 41,
            column: 49
          }
        }, {
          start: {
            line: 41,
            column: 53
          },
          end: {
            line: 41,
            column: 63
          }
        }],
        line: 41
      },
      "4": {
        loc: {
          start: {
            line: 47,
            column: 28
          },
          end: {
            line: 47,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 28
          },
          end: {
            line: 47,
            column: 34
          }
        }, {
          start: {
            line: 47,
            column: 39
          },
          end: {
            line: 47,
            column: 49
          }
        }, {
          start: {
            line: 47,
            column: 53
          },
          end: {
            line: 47,
            column: 65
          }
        }],
        line: 47
      },
      "5": {
        loc: {
          start: {
            line: 63,
            column: 28
          },
          end: {
            line: 63,
            column: 136
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 28
          },
          end: {
            line: 63,
            column: 34
          }
        }, {
          start: {
            line: 63,
            column: 38
          },
          end: {
            line: 63,
            column: 136
          }
        }],
        line: 63
      },
      "6": {
        loc: {
          start: {
            line: 69,
            column: 28
          },
          end: {
            line: 69,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 28
          },
          end: {
            line: 69,
            column: 34
          }
        }, {
          start: {
            line: 69,
            column: 38
          },
          end: {
            line: 69,
            column: 87
          }
        }],
        line: 69
      },
      "7": {
        loc: {
          start: {
            line: 75,
            column: 28
          },
          end: {
            line: 75,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 28
          },
          end: {
            line: 75,
            column: 34
          }
        }, {
          start: {
            line: 75,
            column: 38
          },
          end: {
            line: 75,
            column: 87
          }
        }],
        line: 75
      },
      "8": {
        loc: {
          start: {
            line: 84,
            column: 28
          },
          end: {
            line: 84,
            column: 136
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 28
          },
          end: {
            line: 84,
            column: 34
          }
        }, {
          start: {
            line: 84,
            column: 38
          },
          end: {
            line: 84,
            column: 136
          }
        }],
        line: 84
      },
      "9": {
        loc: {
          start: {
            line: 90,
            column: 28
          },
          end: {
            line: 90,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 28
          },
          end: {
            line: 90,
            column: 34
          }
        }, {
          start: {
            line: 90,
            column: 38
          },
          end: {
            line: 90,
            column: 110
          }
        }],
        line: 90
      },
      "10": {
        loc: {
          start: {
            line: 96,
            column: 28
          },
          end: {
            line: 96,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 28
          },
          end: {
            line: 96,
            column: 34
          }
        }, {
          start: {
            line: 96,
            column: 39
          },
          end: {
            line: 96,
            column: 50
          }
        }, {
          start: {
            line: 96,
            column: 54
          },
          end: {
            line: 96,
            column: 68
          }
        }],
        line: 96
      },
      "11": {
        loc: {
          start: {
            line: 160,
            column: 4
          },
          end: {
            line: 164,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 4
          },
          end: {
            line: 164,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "12": {
        loc: {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "13": {
        loc: {
          start: {
            line: 174,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "14": {
        loc: {
          start: {
            line: 232,
            column: 20
          },
          end: {
            line: 232,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 232,
            column: 40
          },
          end: {
            line: 232,
            column: 69
          }
        }, {
          start: {
            line: 232,
            column: 72
          },
          end: {
            line: 232,
            column: 76
          }
        }],
        line: 232
      },
      "15": {
        loc: {
          start: {
            line: 236,
            column: 19
          },
          end: {
            line: 236,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 236,
            column: 38
          },
          end: {
            line: 236,
            column: 66
          }
        }, {
          start: {
            line: 236,
            column: 69
          },
          end: {
            line: 236,
            column: 73
          }
        }],
        line: 236
      },
      "16": {
        loc: {
          start: {
            line: 237,
            column: 16
          },
          end: {
            line: 237,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 237,
            column: 32
          },
          end: {
            line: 237,
            column: 57
          }
        }, {
          start: {
            line: 237,
            column: 60
          },
          end: {
            line: 237,
            column: 64
          }
        }],
        line: 237
      },
      "17": {
        loc: {
          start: {
            line: 238,
            column: 23
          },
          end: {
            line: 238,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 238,
            column: 47
          },
          end: {
            line: 238,
            column: 80
          }
        }, {
          start: {
            line: 238,
            column: 83
          },
          end: {
            line: 238,
            column: 87
          }
        }],
        line: 238
      },
      "18": {
        loc: {
          start: {
            line: 275,
            column: 20
          },
          end: {
            line: 275,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 275,
            column: 32
          },
          end: {
            line: 275,
            column: 36
          }
        }],
        line: 275
      },
      "19": {
        loc: {
          start: {
            line: 277,
            column: 4
          },
          end: {
            line: 282,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 4
          },
          end: {
            line: 282,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "20": {
        loc: {
          start: {
            line: 291,
            column: 4
          },
          end: {
            line: 295,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 291,
            column: 4
          },
          end: {
            line: 295,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 291
      },
      "21": {
        loc: {
          start: {
            line: 291,
            column: 8
          },
          end: {
            line: 291,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 291,
            column: 8
          },
          end: {
            line: 291,
            column: 18
          }
        }, {
          start: {
            line: 291,
            column: 22
          },
          end: {
            line: 291,
            column: 43
          }
        }],
        line: 291
      },
      "22": {
        loc: {
          start: {
            line: 322,
            column: 20
          },
          end: {
            line: 322,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 322,
            column: 40
          },
          end: {
            line: 322,
            column: 69
          }
        }, {
          start: {
            line: 322,
            column: 72
          },
          end: {
            line: 322,
            column: 76
          }
        }],
        line: 322
      },
      "23": {
        loc: {
          start: {
            line: 326,
            column: 19
          },
          end: {
            line: 326,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 326,
            column: 38
          },
          end: {
            line: 326,
            column: 66
          }
        }, {
          start: {
            line: 326,
            column: 69
          },
          end: {
            line: 326,
            column: 73
          }
        }],
        line: 326
      },
      "24": {
        loc: {
          start: {
            line: 327,
            column: 16
          },
          end: {
            line: 327,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 327,
            column: 32
          },
          end: {
            line: 327,
            column: 57
          }
        }, {
          start: {
            line: 327,
            column: 60
          },
          end: {
            line: 327,
            column: 64
          }
        }],
        line: 327
      },
      "25": {
        loc: {
          start: {
            line: 328,
            column: 23
          },
          end: {
            line: 328,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 328,
            column: 47
          },
          end: {
            line: 328,
            column: 80
          }
        }, {
          start: {
            line: 328,
            column: 83
          },
          end: {
            line: 328,
            column: 87
          }
        }],
        line: 328
      },
      "26": {
        loc: {
          start: {
            line: 362,
            column: 32
          },
          end: {
            line: 362,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 362,
            column: 54
          },
          end: {
            line: 362,
            column: 65
          }
        }, {
          start: {
            line: 362,
            column: 68
          },
          end: {
            line: 362,
            column: 72
          }
        }],
        line: 362
      },
      "27": {
        loc: {
          start: {
            line: 390,
            column: 22
          },
          end: {
            line: 390,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 390,
            column: 34
          },
          end: {
            line: 390,
            column: 38
          }
        }],
        line: 390
      },
      "28": {
        loc: {
          start: {
            line: 396,
            column: 4
          },
          end: {
            line: 400,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 396,
            column: 4
          },
          end: {
            line: 400,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 396
      },
      "29": {
        loc: {
          start: {
            line: 432,
            column: 6
          },
          end: {
            line: 434,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 432,
            column: 6
          },
          end: {
            line: 434,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 432
      },
      "30": {
        loc: {
          start: {
            line: 466,
            column: 6
          },
          end: {
            line: 466,
            column: 22
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 466,
            column: 18
          },
          end: {
            line: 466,
            column: 22
          }
        }],
        line: 466
      },
      "31": {
        loc: {
          start: {
            line: 467,
            column: 6
          },
          end: {
            line: 467,
            column: 15
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 467,
            column: 13
          },
          end: {
            line: 467,
            column: 15
          }
        }],
        line: 467
      },
      "32": {
        loc: {
          start: {
            line: 474,
            column: 4
          },
          end: {
            line: 478,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 474,
            column: 4
          },
          end: {
            line: 478,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 474
      },
      "33": {
        loc: {
          start: {
            line: 480,
            column: 4
          },
          end: {
            line: 484,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 480,
            column: 4
          },
          end: {
            line: 484,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 480
      },
      "34": {
        loc: {
          start: {
            line: 486,
            column: 4
          },
          end: {
            line: 490,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 486,
            column: 4
          },
          end: {
            line: 490,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 486
      },
      "35": {
        loc: {
          start: {
            line: 517,
            column: 19
          },
          end: {
            line: 518,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 518,
            column: 8
          },
          end: {
            line: 518,
            column: 91
          }
        }, {
          start: {
            line: 518,
            column: 94
          },
          end: {
            line: 518,
            column: 100
          }
        }],
        line: 517
      },
      "36": {
        loc: {
          start: {
            line: 519,
            column: 28
          },
          end: {
            line: 519,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 519,
            column: 28
          },
          end: {
            line: 519,
            column: 42
          }
        }, {
          start: {
            line: 519,
            column: 46
          },
          end: {
            line: 519,
            column: 47
          }
        }],
        line: 519
      },
      "37": {
        loc: {
          start: {
            line: 520,
            column: 30
          },
          end: {
            line: 520,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 520,
            column: 30
          },
          end: {
            line: 520,
            column: 46
          }
        }, {
          start: {
            line: 520,
            column: 50
          },
          end: {
            line: 520,
            column: 51
          }
        }],
        line: 520
      },
      "38": {
        loc: {
          start: {
            line: 521,
            column: 34
          },
          end: {
            line: 521,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 521,
            column: 34
          },
          end: {
            line: 521,
            column: 56
          }
        }, {
          start: {
            line: 521,
            column: 60
          },
          end: {
            line: 521,
            column: 61
          }
        }],
        line: 521
      },
      "39": {
        loc: {
          start: {
            line: 522,
            column: 32
          },
          end: {
            line: 522,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 522,
            column: 32
          },
          end: {
            line: 522,
            column: 50
          }
        }, {
          start: {
            line: 522,
            column: 54
          },
          end: {
            line: 522,
            column: 55
          }
        }],
        line: 522
      },
      "40": {
        loc: {
          start: {
            line: 523,
            column: 28
          },
          end: {
            line: 523,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 523,
            column: 28
          },
          end: {
            line: 523,
            column: 42
          }
        }, {
          start: {
            line: 523,
            column: 46
          },
          end: {
            line: 523,
            column: 47
          }
        }],
        line: 523
      },
      "41": {
        loc: {
          start: {
            line: 524,
            column: 28
          },
          end: {
            line: 524,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 524,
            column: 28
          },
          end: {
            line: 524,
            column: 42
          }
        }, {
          start: {
            line: 524,
            column: 46
          },
          end: {
            line: 524,
            column: 47
          }
        }],
        line: 524
      },
      "42": {
        loc: {
          start: {
            line: 541,
            column: 39
          },
          end: {
            line: 541,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 541,
            column: 39
          },
          end: {
            line: 541,
            column: 75
          }
        }, {
          start: {
            line: 541,
            column: 79
          },
          end: {
            line: 541,
            column: 80
          }
        }],
        line: 541
      },
      "43": {
        loc: {
          start: {
            line: 542,
            column: 32
          },
          end: {
            line: 542,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 542,
            column: 32
          },
          end: {
            line: 542,
            column: 60
          }
        }, {
          start: {
            line: 542,
            column: 64
          },
          end: {
            line: 542,
            column: 65
          }
        }],
        line: 542
      },
      "44": {
        loc: {
          start: {
            line: 543,
            column: 26
          },
          end: {
            line: 544,
            column: 123
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 544,
            column: 8
          },
          end: {
            line: 544,
            column: 114
          }
        }, {
          start: {
            line: 544,
            column: 117
          },
          end: {
            line: 544,
            column: 123
          }
        }],
        line: 543
      },
      "45": {
        loc: {
          start: {
            line: 545,
            column: 35
          },
          end: {
            line: 545,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 545,
            column: 35
          },
          end: {
            line: 545,
            column: 65
          }
        }, {
          start: {
            line: 545,
            column: 69
          },
          end: {
            line: 545,
            column: 70
          }
        }],
        line: 545
      },
      "46": {
        loc: {
          start: {
            line: 546,
            column: 37
          },
          end: {
            line: 546,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 546,
            column: 37
          },
          end: {
            line: 546,
            column: 69
          }
        }, {
          start: {
            line: 546,
            column: 73
          },
          end: {
            line: 546,
            column: 74
          }
        }],
        line: 546
      },
      "47": {
        loc: {
          start: {
            line: 579,
            column: 12
          },
          end: {
            line: 579,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 579,
            column: 22
          },
          end: {
            line: 579,
            column: 27
          }
        }],
        line: 579
      },
      "48": {
        loc: {
          start: {
            line: 579,
            column: 39
          },
          end: {
            line: 579,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 579,
            column: 47
          },
          end: {
            line: 579,
            column: 49
          }
        }],
        line: 579
      },
      "49": {
        loc: {
          start: {
            line: 586,
            column: 4
          },
          end: {
            line: 590,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 586,
            column: 4
          },
          end: {
            line: 590,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 586
      },
      "50": {
        loc: {
          start: {
            line: 593,
            column: 4
          },
          end: {
            line: 597,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 593,
            column: 4
          },
          end: {
            line: 597,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 593
      },
      "51": {
        loc: {
          start: {
            line: 666,
            column: 4
          },
          end: {
            line: 671,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 666,
            column: 4
          },
          end: {
            line: 671,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 666
      },
      "52": {
        loc: {
          start: {
            line: 680,
            column: 4
          },
          end: {
            line: 685,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 680,
            column: 4
          },
          end: {
            line: 685,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 680
      },
      "53": {
        loc: {
          start: {
            line: 709,
            column: 12
          },
          end: {
            line: 709,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 709,
            column: 24
          },
          end: {
            line: 709,
            column: 28
          }
        }],
        line: 709
      },
      "54": {
        loc: {
          start: {
            line: 709,
            column: 30
          },
          end: {
            line: 709,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 709,
            column: 37
          },
          end: {
            line: 709,
            column: 38
          }
        }],
        line: 709
      },
      "55": {
        loc: {
          start: {
            line: 848,
            column: 2
          },
          end: {
            line: 848,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 848,
            column: 2
          },
          end: {
            line: 848,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 848
      },
      "56": {
        loc: {
          start: {
            line: 855,
            column: 4
          },
          end: {
            line: 859,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 855,
            column: 4
          },
          end: {
            line: 859,
            column: 5
          }
        }, {
          start: {
            line: 857,
            column: 11
          },
          end: {
            line: 859,
            column: 5
          }
        }],
        line: 855
      },
      "57": {
        loc: {
          start: {
            line: 857,
            column: 11
          },
          end: {
            line: 859,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 857,
            column: 11
          },
          end: {
            line: 859,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 857
      },
      "58": {
        loc: {
          start: {
            line: 863,
            column: 2
          },
          end: {
            line: 863,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 863,
            column: 2
          },
          end: {
            line: 863,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 863
      },
      "59": {
        loc: {
          start: {
            line: 866,
            column: 2
          },
          end: {
            line: 866,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 866,
            column: 2
          },
          end: {
            line: 866,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 866
      },
      "60": {
        loc: {
          start: {
            line: 867,
            column: 2
          },
          end: {
            line: 867,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 867,
            column: 2
          },
          end: {
            line: 867,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 867
      },
      "61": {
        loc: {
          start: {
            line: 874,
            column: 21
          },
          end: {
            line: 874,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 874,
            column: 34
          },
          end: {
            line: 874,
            column: 40
          }
        }],
        line: 874
      },
      "62": {
        loc: {
          start: {
            line: 877,
            column: 4
          },
          end: {
            line: 882,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 877,
            column: 4
          },
          end: {
            line: 882,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 877
      },
      "63": {
        loc: {
          start: {
            line: 877,
            column: 8
          },
          end: {
            line: 877,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 877,
            column: 8
          },
          end: {
            line: 877,
            column: 16
          }
        }, {
          start: {
            line: 877,
            column: 20
          },
          end: {
            line: 877,
            column: 40
          }
        }],
        line: 877
      },
      "64": {
        loc: {
          start: {
            line: 921,
            column: 12
          },
          end: {
            line: 921,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 921,
            column: 21
          },
          end: {
            line: 921,
            column: 26
          }
        }],
        line: 921
      },
      "65": {
        loc: {
          start: {
            line: 943,
            column: 26
          },
          end: {
            line: 943,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 943,
            column: 38
          },
          end: {
            line: 943,
            column: 42
          }
        }],
        line: 943
      },
      "66": {
        loc: {
          start: {
            line: 943,
            column: 44
          },
          end: {
            line: 943,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 943,
            column: 51
          },
          end: {
            line: 943,
            column: 53
          }
        }],
        line: 943
      },
      "67": {
        loc: {
          start: {
            line: 965,
            column: 35
          },
          end: {
            line: 965,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 965,
            column: 52
          },
          end: {
            line: 965,
            column: 55
          }
        }],
        line: 965
      },
      "68": {
        loc: {
          start: {
            line: 965,
            column: 57
          },
          end: {
            line: 965,
            column: 76
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 965,
            column: 72
          },
          end: {
            line: 965,
            column: 76
          }
        }],
        line: 965
      },
      "69": {
        loc: {
          start: {
            line: 967,
            column: 4
          },
          end: {
            line: 972,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 967,
            column: 4
          },
          end: {
            line: 972,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 967
      },
      "70": {
        loc: {
          start: {
            line: 967,
            column: 8
          },
          end: {
            line: 967,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 967,
            column: 8
          },
          end: {
            line: 967,
            column: 15
          }
        }, {
          start: {
            line: 967,
            column: 19
          },
          end: {
            line: 967,
            column: 33
          }
        }, {
          start: {
            line: 967,
            column: 37
          },
          end: {
            line: 967,
            column: 63
          }
        }],
        line: 967
      },
      "71": {
        loc: {
          start: {
            line: 1126,
            column: 2
          },
          end: {
            line: 1126,
            column: 53
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1126,
            column: 2
          },
          end: {
            line: 1126,
            column: 53
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1126
      },
      "72": {
        loc: {
          start: {
            line: 1126,
            column: 6
          },
          end: {
            line: 1126,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1126,
            column: 6
          },
          end: {
            line: 1126,
            column: 17
          }
        }, {
          start: {
            line: 1126,
            column: 21
          },
          end: {
            line: 1126,
            column: 44
          }
        }],
        line: 1126
      },
      "73": {
        loc: {
          start: {
            line: 1163,
            column: 6
          },
          end: {
            line: 1179,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1163,
            column: 6
          },
          end: {
            line: 1179,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1163
      },
      "74": {
        loc: {
          start: {
            line: 1190,
            column: 25
          },
          end: {
            line: 1195,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1190,
            column: 25
          },
          end: {
            line: 1195,
            column: 13
          }
        }, {
          start: {
            line: 1195,
            column: 17
          },
          end: {
            line: 1195,
            column: 60
          }
        }],
        line: 1190
      },
      "75": {
        loc: {
          start: {
            line: 1198,
            column: 4
          },
          end: {
            line: 1200,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1198,
            column: 4
          },
          end: {
            line: 1200,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1198
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0],
      "31": [0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0],
      "48": [0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0],
      "54": [0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0],
      "65": [0],
      "66": [0],
      "67": [0],
      "68": [0],
      "69": [0, 0],
      "70": [0, 0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ccfc081210e9e0c84b262e33d5d9465014344a41"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1x5m1ahaly = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1x5m1ahaly();
const express =
/* istanbul ignore next */
(cov_1x5m1ahaly().s[0]++, require('express'));
const {
  query,
  safeQuery,
  tablesExist
} =
/* istanbul ignore next */
(cov_1x5m1ahaly().s[1]++, require('../utils/database'));
const {
  authenticateToken
} =
/* istanbul ignore next */
(cov_1x5m1ahaly().s[2]++, require('../middleware/auth'));
const PatternDetector =
/* istanbul ignore next */
(cov_1x5m1ahaly().s[3]++, require('../utils/patternDetector'));
const WatchlistAlerts =
/* istanbul ignore next */
(cov_1x5m1ahaly().s[4]++, require('../utils/watchlistAlerts'));
const {
  createValidationMiddleware,
  rateLimitConfigs,
  sqlInjectionPrevention,
  xssPrevention,
  sanitizers
} =
/* istanbul ignore next */
(cov_1x5m1ahaly().s[5]++, require('../middleware/validation'));
const validator =
/* istanbul ignore next */
(cov_1x5m1ahaly().s[6]++, require('validator'));
const router =
/* istanbul ignore next */
(cov_1x5m1ahaly().s[7]++, express.Router());

// Pattern recognition validation schemas
const patternValidationSchemas =
/* istanbul ignore next */
(cov_1x5m1ahaly().s[8]++, {
  patternScan: {
    symbol: {
      type: 'string',
      sanitizer: sanitizers.symbol,
      validator: value => {
        /* istanbul ignore next */
        cov_1x5m1ahaly().f[0]++;
        cov_1x5m1ahaly().s[9]++;
        return /* istanbul ignore next */(cov_1x5m1ahaly().b[0][0]++, !value) ||
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[0][1]++, /^[A-Z]{1,10}$/.test(value));
      },
      errorMessage: 'Symbol must be 1-10 uppercase letters'
    },
    timeframe: {
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_1x5m1ahaly().f[1]++;
        cov_1x5m1ahaly().s[10]++;
        return sanitizers.string(value, {
          maxLength: 10,
          alphaNumOnly: false
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_1x5m1ahaly().f[2]++;
        cov_1x5m1ahaly().s[11]++;
        return /* istanbul ignore next */(cov_1x5m1ahaly().b[1][0]++, !value) ||
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[1][1]++, ['1m', '5m', '15m', '30m', '1h', '4h', '1d', '1w', '1M'].includes(value));
      },
      errorMessage: 'Timeframe must be one of: 1m, 5m, 15m, 30m, 1h, 4h, 1d, 1w, 1M'
    },
    category: {
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_1x5m1ahaly().f[3]++;
        cov_1x5m1ahaly().s[12]++;
        return sanitizers.string(value, {
          maxLength: 50,
          alphaNumOnly: false
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_1x5m1ahaly().f[4]++;
        cov_1x5m1ahaly().s[13]++;
        return /* istanbul ignore next */(cov_1x5m1ahaly().b[2][0]++, !value) ||
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[2][1]++, ['reversal', 'continuation', 'breakout', 'momentum', 'volume'].includes(value));
      },
      errorMessage: 'Category must be one of: reversal, continuation, breakout, momentum, volume'
    },
    min_confidence: {
      type: 'number',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_1x5m1ahaly().f[5]++;
        cov_1x5m1ahaly().s[14]++;
        return sanitizers.number(value, {
          min: 0,
          max: 1,
          defaultValue: 0.60
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_1x5m1ahaly().f[6]++;
        cov_1x5m1ahaly().s[15]++;
        return /* istanbul ignore next */(cov_1x5m1ahaly().b[3][0]++, !value) ||
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[3][1]++, value >= 0) &&
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[3][2]++, value <= 1);
      },
      errorMessage: 'Minimum confidence must be between 0 and 1'
    },
    limit: {
      type: 'integer',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_1x5m1ahaly().f[7]++;
        cov_1x5m1ahaly().s[16]++;
        return sanitizers.integer(value, {
          min: 1,
          max: 200,
          defaultValue: 50
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_1x5m1ahaly().f[8]++;
        cov_1x5m1ahaly().s[17]++;
        return /* istanbul ignore next */(cov_1x5m1ahaly().b[4][0]++, !value) ||
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[4][1]++, value >= 1) &&
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[4][2]++, value <= 200);
      },
      errorMessage: 'Limit must be between 1 and 200'
    }
  },
  patternAnalysis: {
    symbol: {
      required: true,
      type: 'string',
      sanitizer: sanitizers.symbol,
      validator: value => {
        /* istanbul ignore next */
        cov_1x5m1ahaly().f[9]++;
        cov_1x5m1ahaly().s[18]++;
        return /^[A-Z]{1,10}$/.test(value);
      },
      errorMessage: 'Symbol must be 1-10 uppercase letters'
    },
    pattern_type: {
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_1x5m1ahaly().f[10]++;
        cov_1x5m1ahaly().s[19]++;
        return sanitizers.string(value, {
          maxLength: 50,
          alphaNumOnly: false
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_1x5m1ahaly().f[11]++;
        cov_1x5m1ahaly().s[20]++;
        return /* istanbul ignore next */(cov_1x5m1ahaly().b[5][0]++, !value) ||
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[5][1]++, ['head_and_shoulders', 'double_top', 'double_bottom', 'triangle', 'flag', 'wedge'].includes(value));
      },
      errorMessage: 'Pattern type must be a valid technical pattern'
    },
    start_date: {
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_1x5m1ahaly().f[12]++;
        cov_1x5m1ahaly().s[21]++;
        return sanitizers.string(value, {
          maxLength: 10
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_1x5m1ahaly().f[13]++;
        cov_1x5m1ahaly().s[22]++;
        return /* istanbul ignore next */(cov_1x5m1ahaly().b[6][0]++, !value) ||
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[6][1]++, validator.isDate(value, {
          format: 'YYYY-MM-DD'
        }));
      },
      errorMessage: 'Start date must be in YYYY-MM-DD format'
    },
    end_date: {
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_1x5m1ahaly().f[14]++;
        cov_1x5m1ahaly().s[23]++;
        return sanitizers.string(value, {
          maxLength: 10
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_1x5m1ahaly().f[15]++;
        cov_1x5m1ahaly().s[24]++;
        return /* istanbul ignore next */(cov_1x5m1ahaly().b[7][0]++, !value) ||
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[7][1]++, validator.isDate(value, {
          format: 'YYYY-MM-DD'
        }));
      },
      errorMessage: 'End date must be in YYYY-MM-DD format'
    }
  },
  performanceAnalysis: {
    pattern_type: {
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_1x5m1ahaly().f[16]++;
        cov_1x5m1ahaly().s[25]++;
        return sanitizers.string(value, {
          maxLength: 50,
          alphaNumOnly: false
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_1x5m1ahaly().f[17]++;
        cov_1x5m1ahaly().s[26]++;
        return /* istanbul ignore next */(cov_1x5m1ahaly().b[8][0]++, !value) ||
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[8][1]++, ['head_and_shoulders', 'double_top', 'double_bottom', 'triangle', 'flag', 'wedge'].includes(value));
      },
      errorMessage: 'Pattern type must be a valid technical pattern'
    },
    timeframe: {
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_1x5m1ahaly().f[18]++;
        cov_1x5m1ahaly().s[27]++;
        return sanitizers.string(value, {
          maxLength: 10,
          alphaNumOnly: false
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_1x5m1ahaly().f[19]++;
        cov_1x5m1ahaly().s[28]++;
        return /* istanbul ignore next */(cov_1x5m1ahaly().b[9][0]++, !value) ||
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[9][1]++, ['1m', '5m', '15m', '30m', '1h', '4h', '1d', '1w', '1M'].includes(value));
      },
      errorMessage: 'Timeframe must be valid'
    },
    min_samples: {
      type: 'integer',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_1x5m1ahaly().f[20]++;
        cov_1x5m1ahaly().s[29]++;
        return sanitizers.integer(value, {
          min: 10,
          max: 10000,
          defaultValue: 50
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_1x5m1ahaly().f[21]++;
        cov_1x5m1ahaly().s[30]++;
        return /* istanbul ignore next */(cov_1x5m1ahaly().b[10][0]++, !value) ||
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[10][1]++, value >= 10) &&
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[10][2]++, value <= 10000);
      },
      errorMessage: 'Minimum samples must be between 10 and 10,000'
    }
  }
});

// Apply authentication and security middleware to pattern routes
/* istanbul ignore next */
cov_1x5m1ahaly().s[31]++;
router.use(authenticateToken);
/* istanbul ignore next */
cov_1x5m1ahaly().s[32]++;
router.use(sqlInjectionPrevention);
/* istanbul ignore next */
cov_1x5m1ahaly().s[33]++;
router.use(xssPrevention);
/* istanbul ignore next */
cov_1x5m1ahaly().s[34]++;
router.use(rateLimitConfigs.api);

// Root patterns endpoint for health checks
/* istanbul ignore next */
cov_1x5m1ahaly().s[35]++;
router.get('/', (req, res) => {
  /* istanbul ignore next */
  cov_1x5m1ahaly().f[22]++;
  cov_1x5m1ahaly().s[36]++;
  res.json({
    success: true,
    data: {
      system: 'Pattern Recognition API',
      version: '1.0.0',
      status: 'operational',
      available_endpoints: ['GET /patterns/scan - Scan for patterns in real-time', 'GET /patterns/types - Get available pattern types', 'GET /patterns/performance - Get pattern performance analytics', 'GET /patterns/alerts - Get pattern-based alerts', 'GET /patterns/dashboard - Get pattern recognition dashboard', 'GET /patterns/statistics - Get pattern statistics'],
      timestamp: new Date().toISOString()
    }
  });
});

// Apply authentication middleware to all other pattern routes
/* istanbul ignore next */
cov_1x5m1ahaly().s[37]++;
router.use(authenticateToken);

// Initialize pattern detector and alerts system
const patternDetector =
/* istanbul ignore next */
(cov_1x5m1ahaly().s[38]++, new PatternDetector());
const watchlistAlerts =
/* istanbul ignore next */
(cov_1x5m1ahaly().s[39]++, new WatchlistAlerts());

// Start real-time pattern monitoring
/* istanbul ignore next */
cov_1x5m1ahaly().s[40]++;
patternDetector.startRealTimeMonitoring();

/**
 * GET /api/patterns/scan
 * Scan for patterns in real-time
 */
/* istanbul ignore next */
cov_1x5m1ahaly().s[41]++;
router.get('/scan', createValidationMiddleware(patternValidationSchemas.patternScan), async (req, res) => {
  /* istanbul ignore next */
  cov_1x5m1ahaly().f[23]++;
  cov_1x5m1ahaly().s[42]++;
  try {
    const {
      symbol,
      timeframe,
      category,
      min_confidence,
      limit
    } =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[43]++, req.validated);
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[44]++;
    console.log(`🔍 Pattern scan request: symbol=${symbol}, timeframe=${timeframe}, confidence>=${min_confidence}`);
    let whereClause =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[45]++, 'WHERE dp.status = $1');
    let params =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[46]++, ['active']);
    let paramIndex =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[47]++, 2);

    // Add validated symbol filter
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[48]++;
    if (symbol) {
      /* istanbul ignore next */
      cov_1x5m1ahaly().b[11][0]++;
      cov_1x5m1ahaly().s[49]++;
      whereClause += ` AND dp.symbol = $${paramIndex}`;
      /* istanbul ignore next */
      cov_1x5m1ahaly().s[50]++;
      params.push(symbol);
      /* istanbul ignore next */
      cov_1x5m1ahaly().s[51]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_1x5m1ahaly().b[11][1]++;
    }

    // Add validated timeframe filter
    cov_1x5m1ahaly().s[52]++;
    if (timeframe) {
      /* istanbul ignore next */
      cov_1x5m1ahaly().b[12][0]++;
      cov_1x5m1ahaly().s[53]++;
      whereClause += ` AND dp.timeframe = $${paramIndex}`;
      /* istanbul ignore next */
      cov_1x5m1ahaly().s[54]++;
      params.push(timeframe);
      /* istanbul ignore next */
      cov_1x5m1ahaly().s[55]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_1x5m1ahaly().b[12][1]++;
    }

    // Add validated category filter
    cov_1x5m1ahaly().s[56]++;
    if (category) {
      /* istanbul ignore next */
      cov_1x5m1ahaly().b[13][0]++;
      cov_1x5m1ahaly().s[57]++;
      whereClause += ` AND pt.category = $${paramIndex}`;
      /* istanbul ignore next */
      cov_1x5m1ahaly().s[58]++;
      params.push(category);
      /* istanbul ignore next */
      cov_1x5m1ahaly().s[59]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_1x5m1ahaly().b[13][1]++;
    }

    // Add validated confidence filter
    cov_1x5m1ahaly().s[60]++;
    whereClause += ` AND dp.confidence_score >= $${paramIndex}`;
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[61]++;
    params.push(min_confidence);
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[62]++;
    paramIndex++;

    // Add limit with validated value
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[63]++;
    whereClause += ` ORDER BY dp.detected_at DESC LIMIT $${paramIndex}`;
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[64]++;
    params.push(limit);
    const result =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[65]++, await query(`
      SELECT 
        dp.id,
        dp.symbol,
        dp.timeframe,
        dp.detection_date,
        dp.start_date,
        dp.end_date,
        dp.confidence_score,
        dp.ml_confidence,
        dp.traditional_confidence,
        dp.signal_strength,
        dp.direction,
        dp.target_price,
        dp.stop_loss,
        dp.risk_reward_ratio,
        dp.pattern_data,
        dp.key_levels,
        dp.volume_confirmation,
        dp.momentum_confirmation,
        dp.status,
        pt.name as pattern_name,
        pt.category,
        pt.description,
        pt.reliability_score
      FROM detected_patterns dp
      JOIN pattern_types pt ON dp.pattern_type_id = pt.id
      ${whereClause}
      ORDER BY dp.detection_date DESC, dp.confidence_score DESC
      LIMIT $${paramIndex}
    `, [...params, parseInt(limit)]));
    const patterns =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[66]++, result.rows.map(row => {
      /* istanbul ignore next */
      cov_1x5m1ahaly().f[24]++;
      cov_1x5m1ahaly().s[67]++;
      return {
        id: row.id,
        symbol: row.symbol,
        patternName: row.pattern_name,
        category: row.category,
        description: row.description,
        timeframe: row.timeframe,
        detectionDate: row.detection_date,
        startDate: row.start_date,
        endDate: row.end_date,
        confidence: parseFloat(row.confidence_score),
        mlConfidence: row.ml_confidence ?
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[14][0]++, parseFloat(row.ml_confidence)) :
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[14][1]++, null),
        traditionalConfidence: parseFloat(row.traditional_confidence),
        signalStrength: row.signal_strength,
        direction: row.direction,
        targetPrice: row.target_price ?
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[15][0]++, parseFloat(row.target_price)) :
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[15][1]++, null),
        stopLoss: row.stop_loss ?
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[16][0]++, parseFloat(row.stop_loss)) :
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[16][1]++, null),
        riskRewardRatio: row.risk_reward_ratio ?
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[17][0]++, parseFloat(row.risk_reward_ratio)) :
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[17][1]++, null),
        patternData: row.pattern_data,
        keyLevels: row.key_levels,
        volumeConfirmation: row.volume_confirmation,
        momentumConfirmation: row.momentum_confirmation,
        status: row.status,
        reliabilityScore: parseFloat(row.reliability_score)
      };
    }));
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[68]++;
    res.json({
      success: true,
      patterns,
      total: patterns.length,
      filters: {
        symbol,
        timeframe,
        category,
        minConfidence: min_confidence
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[69]++;
    console.error('Error scanning patterns:', error);
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[70]++;
    res.status(500).json({
      success: false,
      error: 'Failed to scan patterns',
      details: error.message
    });
  }
});

/**
 * POST /api/patterns/analyze
 * Analyze a specific symbol for patterns
 */
/* istanbul ignore next */
cov_1x5m1ahaly().s[71]++;
router.post('/analyze', async (req, res) => {
  /* istanbul ignore next */
  cov_1x5m1ahaly().f[25]++;
  cov_1x5m1ahaly().s[72]++;
  try {
    const {
      symbol,
      timeframe =
      /* istanbul ignore next */
      (cov_1x5m1ahaly().b[18][0]++, '1d'),
      categories
    } =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[73]++, req.body);
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[74]++;
    if (!symbol) {
      /* istanbul ignore next */
      cov_1x5m1ahaly().b[19][0]++;
      cov_1x5m1ahaly().s[75]++;
      return res.status(400).json({
        success: false,
        error: 'Symbol is required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1x5m1ahaly().b[19][1]++;
    }

    // This would trigger the pattern recognition service
    // For now, we'll return existing patterns and simulate analysis

    let whereClause =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[76]++, 'WHERE dp.symbol = $1 AND dp.timeframe = $2');
    let params =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[77]++, [symbol.toUpperCase(), timeframe]);
    let paramIndex =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[78]++, 3);
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[79]++;
    if (
    /* istanbul ignore next */
    (cov_1x5m1ahaly().b[21][0]++, categories) &&
    /* istanbul ignore next */
    (cov_1x5m1ahaly().b[21][1]++, categories.length > 0)) {
      /* istanbul ignore next */
      cov_1x5m1ahaly().b[20][0]++;
      const categoryPlaceholders =
      /* istanbul ignore next */
      (cov_1x5m1ahaly().s[80]++, categories.map(() => {
        /* istanbul ignore next */
        cov_1x5m1ahaly().f[26]++;
        cov_1x5m1ahaly().s[81]++;
        return `$${paramIndex++}`;
      }).join(','));
      /* istanbul ignore next */
      cov_1x5m1ahaly().s[82]++;
      whereClause += ` AND pt.category IN (${categoryPlaceholders})`;
      /* istanbul ignore next */
      cov_1x5m1ahaly().s[83]++;
      params.push(...categories);
    } else
    /* istanbul ignore next */
    {
      cov_1x5m1ahaly().b[20][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[84]++, await query(`
      SELECT 
        dp.*,
        pt.name as pattern_name,
        pt.category,
        pt.description,
        pt.reliability_score
      FROM detected_patterns dp
      JOIN pattern_types pt ON dp.pattern_type_id = pt.id
      ${whereClause}
      ORDER BY dp.detection_date DESC
      LIMIT 20
    `, params));
    const patterns =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[85]++, result.rows.map(row => {
      /* istanbul ignore next */
      cov_1x5m1ahaly().f[27]++;
      cov_1x5m1ahaly().s[86]++;
      return {
        id: row.id,
        symbol: row.symbol,
        patternName: row.pattern_name,
        category: row.category,
        description: row.description,
        timeframe: row.timeframe,
        detectionDate: row.detection_date,
        startDate: row.start_date,
        endDate: row.end_date,
        confidence: parseFloat(row.confidence_score),
        mlConfidence: row.ml_confidence ?
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[22][0]++, parseFloat(row.ml_confidence)) :
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[22][1]++, null),
        traditionalConfidence: parseFloat(row.traditional_confidence),
        signalStrength: row.signal_strength,
        direction: row.direction,
        targetPrice: row.target_price ?
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[23][0]++, parseFloat(row.target_price)) :
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[23][1]++, null),
        stopLoss: row.stop_loss ?
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[24][0]++, parseFloat(row.stop_loss)) :
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[24][1]++, null),
        riskRewardRatio: row.risk_reward_ratio ?
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[25][0]++, parseFloat(row.risk_reward_ratio)) :
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[25][1]++, null),
        patternData: row.pattern_data,
        keyLevels: row.key_levels,
        volumeConfirmation: row.volume_confirmation,
        momentumConfirmation: row.momentum_confirmation,
        status: row.status,
        reliabilityScore: parseFloat(row.reliability_score)
      };
    }));

    // Get pattern summary statistics
    const summaryResult =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[87]++, await query(`
      SELECT 
        pt.category,
        COUNT(*) as count,
        AVG(dp.confidence_score) as avg_confidence,
        COUNT(CASE WHEN dp.direction = 'bullish' THEN 1 END) as bullish_count,
        COUNT(CASE WHEN dp.direction = 'bearish' THEN 1 END) as bearish_count
      FROM detected_patterns dp
      JOIN pattern_types pt ON dp.pattern_type_id = pt.id
      WHERE dp.symbol = $1 AND dp.timeframe = $2 
        AND dp.detection_date >= NOW() - INTERVAL '30 days'
      GROUP BY pt.category
    `, [symbol.toUpperCase(), timeframe]));
    const summary =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[88]++, {
      totalPatterns: patterns.length,
      categories: summaryResult.rows.map(row => {
        /* istanbul ignore next */
        cov_1x5m1ahaly().f[28]++;
        cov_1x5m1ahaly().s[89]++;
        return {
          category: row.category,
          count: parseInt(row.count),
          avgConfidence: parseFloat(row.avg_confidence),
          bullishCount: parseInt(row.bullish_count),
          bearishCount: parseInt(row.bearish_count)
        };
      }),
      overallSentiment: calculateOverallSentiment(patterns),
      highestConfidencePattern: patterns.length > 0 ?
      /* istanbul ignore next */
      (cov_1x5m1ahaly().b[26][0]++, patterns[0]) :
      /* istanbul ignore next */
      (cov_1x5m1ahaly().b[26][1]++, null)
    });
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[90]++;
    res.json({
      success: true,
      symbol: symbol.toUpperCase(),
      timeframe,
      patterns,
      summary,
      analysisDate: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[91]++;
    console.error('Error analyzing patterns:', error);
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[92]++;
    res.status(500).json({
      success: false,
      error: 'Failed to analyze patterns',
      details: error.message
    });
  }
});

/**
 * GET /api/patterns/types
 * Get all available pattern types
 */
/* istanbul ignore next */
cov_1x5m1ahaly().s[93]++;
router.get('/types', async (req, res) => {
  /* istanbul ignore next */
  cov_1x5m1ahaly().f[29]++;
  cov_1x5m1ahaly().s[94]++;
  try {
    const {
      category,
      is_active =
      /* istanbul ignore next */
      (cov_1x5m1ahaly().b[27][0]++, true)
    } =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[95]++, req.query);
    let whereClause =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[96]++, 'WHERE is_active = $1');
    let params =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[97]++, [is_active === 'true']);
    let paramIndex =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[98]++, 2);
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[99]++;
    if (category) {
      /* istanbul ignore next */
      cov_1x5m1ahaly().b[28][0]++;
      cov_1x5m1ahaly().s[100]++;
      whereClause += ` AND category = $${paramIndex}`;
      /* istanbul ignore next */
      cov_1x5m1ahaly().s[101]++;
      params.push(category);
      /* istanbul ignore next */
      cov_1x5m1ahaly().s[102]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_1x5m1ahaly().b[28][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[103]++, await query(`
      SELECT 
        id,
        name,
        category,
        description,
        min_bars,
        max_bars,
        reliability_score,
        is_active,
        created_at
      FROM pattern_types
      ${whereClause}
      ORDER BY category, reliability_score DESC, name
    `, params));
    const patternTypes =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[104]++, result.rows.map(row => {
      /* istanbul ignore next */
      cov_1x5m1ahaly().f[30]++;
      cov_1x5m1ahaly().s[105]++;
      return {
        id: row.id,
        name: row.name,
        category: row.category,
        description: row.description,
        minBars: row.min_bars,
        maxBars: row.max_bars,
        reliabilityScore: parseFloat(row.reliability_score),
        isActive: row.is_active,
        createdAt: row.created_at
      };
    }));

    // Group by category
    const groupedTypes =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[106]++, patternTypes.reduce((acc, pattern) => {
      /* istanbul ignore next */
      cov_1x5m1ahaly().f[31]++;
      cov_1x5m1ahaly().s[107]++;
      if (!acc[pattern.category]) {
        /* istanbul ignore next */
        cov_1x5m1ahaly().b[29][0]++;
        cov_1x5m1ahaly().s[108]++;
        acc[pattern.category] = [];
      } else
      /* istanbul ignore next */
      {
        cov_1x5m1ahaly().b[29][1]++;
      }
      cov_1x5m1ahaly().s[109]++;
      acc[pattern.category].push(pattern);
      /* istanbul ignore next */
      cov_1x5m1ahaly().s[110]++;
      return acc;
    }, {}));
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[111]++;
    res.json({
      success: true,
      patternTypes,
      groupedTypes,
      total: patternTypes.length,
      categories: Object.keys(groupedTypes)
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[112]++;
    console.error('Error fetching pattern types:', error);
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[113]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch pattern types',
      details: error.message
    });
  }
});

/**
 * GET /api/patterns/performance
 * Get pattern performance analytics
 */
/* istanbul ignore next */
cov_1x5m1ahaly().s[114]++;
router.get('/performance', async (req, res) => {
  /* istanbul ignore next */
  cov_1x5m1ahaly().f[32]++;
  cov_1x5m1ahaly().s[115]++;
  try {
    const {
      symbol,
      pattern_type,
      timeframe =
      /* istanbul ignore next */
      (cov_1x5m1ahaly().b[30][0]++, '1d'),
      days =
      /* istanbul ignore next */
      (cov_1x5m1ahaly().b[31][0]++, 30)
    } =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[116]++, req.query);
    let whereClause =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[117]++, 'WHERE pp.evaluation_date >= NOW() - INTERVAL $1 DAY');
    let params =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[118]++, [parseInt(days)]);
    let paramIndex =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[119]++, 2);
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[120]++;
    if (symbol) {
      /* istanbul ignore next */
      cov_1x5m1ahaly().b[32][0]++;
      cov_1x5m1ahaly().s[121]++;
      whereClause += ` AND dp.symbol = $${paramIndex}`;
      /* istanbul ignore next */
      cov_1x5m1ahaly().s[122]++;
      params.push(symbol.toUpperCase());
      /* istanbul ignore next */
      cov_1x5m1ahaly().s[123]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_1x5m1ahaly().b[32][1]++;
    }
    cov_1x5m1ahaly().s[124]++;
    if (pattern_type) {
      /* istanbul ignore next */
      cov_1x5m1ahaly().b[33][0]++;
      cov_1x5m1ahaly().s[125]++;
      whereClause += ` AND pt.name = $${paramIndex}`;
      /* istanbul ignore next */
      cov_1x5m1ahaly().s[126]++;
      params.push(pattern_type);
      /* istanbul ignore next */
      cov_1x5m1ahaly().s[127]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_1x5m1ahaly().b[33][1]++;
    }
    cov_1x5m1ahaly().s[128]++;
    if (timeframe) {
      /* istanbul ignore next */
      cov_1x5m1ahaly().b[34][0]++;
      cov_1x5m1ahaly().s[129]++;
      whereClause += ` AND dp.timeframe = $${paramIndex}`;
      /* istanbul ignore next */
      cov_1x5m1ahaly().s[130]++;
      params.push(timeframe);
      /* istanbul ignore next */
      cov_1x5m1ahaly().s[131]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_1x5m1ahaly().b[34][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[132]++, await query(`
      SELECT 
        pt.name as pattern_name,
        pt.category,
        COUNT(*) as total_patterns,
        COUNT(CASE WHEN pp.target_hit = true THEN 1 END) as successful_patterns,
        AVG(pp.percentage_change) as avg_return,
        AVG(pp.accuracy_score) as avg_accuracy,
        AVG(pp.time_to_target) as avg_time_to_target,
        AVG(dp.confidence_score) as avg_confidence,
        MAX(pp.percentage_change) as max_return,
        MIN(pp.percentage_change) as min_return
      FROM pattern_performance pp
      JOIN detected_patterns dp ON pp.detected_pattern_id = dp.id
      JOIN pattern_types pt ON dp.pattern_type_id = pt.id
      ${whereClause}
      GROUP BY pt.name, pt.category
      ORDER BY avg_accuracy DESC, avg_return DESC
    `, params));
    const performance =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[133]++, result.rows.map(row => {
      /* istanbul ignore next */
      cov_1x5m1ahaly().f[33]++;
      cov_1x5m1ahaly().s[134]++;
      return {
        patternName: row.pattern_name,
        category: row.category,
        totalPatterns: parseInt(row.total_patterns),
        successfulPatterns: parseInt(row.successful_patterns),
        successRate: row.total_patterns > 0 ?
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[35][0]++, (parseInt(row.successful_patterns) / parseInt(row.total_patterns) * 100).toFixed(2)) :
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[35][1]++, '0.00'),
        avgReturn: parseFloat(
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[36][0]++, row.avg_return) ||
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[36][1]++, 0)).toFixed(2),
        avgAccuracy: parseFloat(
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[37][0]++, row.avg_accuracy) ||
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[37][1]++, 0)).toFixed(4),
        avgTimeToTarget: parseFloat(
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[38][0]++, row.avg_time_to_target) ||
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[38][1]++, 0)).toFixed(1),
        avgConfidence: parseFloat(
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[39][0]++, row.avg_confidence) ||
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[39][1]++, 0)).toFixed(4),
        maxReturn: parseFloat(
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[40][0]++, row.max_return) ||
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[40][1]++, 0)).toFixed(2),
        minReturn: parseFloat(
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[41][0]++, row.min_return) ||
        /* istanbul ignore next */
        (cov_1x5m1ahaly().b[41][1]++, 0)).toFixed(2)
      };
    }));

    // Overall statistics
    const overallStats =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[135]++, await query(`
      SELECT 
        COUNT(DISTINCT dp.id) as total_patterns_evaluated,
        COUNT(CASE WHEN pp.target_hit = true THEN 1 END) as total_successful,
        AVG(pp.percentage_change) as overall_avg_return,
        AVG(pp.accuracy_score) as overall_avg_accuracy
      FROM pattern_performance pp
      JOIN detected_patterns dp ON pp.detected_pattern_id = dp.id
      WHERE pp.evaluation_date >= NOW() - INTERVAL $1 DAY
    `, [parseInt(days)]));
    const overallData =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[136]++, overallStats.rows[0]);
    const overall =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[137]++, {
      totalPatternsEvaluated: parseInt(
      /* istanbul ignore next */
      (cov_1x5m1ahaly().b[42][0]++, overallData.total_patterns_evaluated) ||
      /* istanbul ignore next */
      (cov_1x5m1ahaly().b[42][1]++, 0)),
      totalSuccessful: parseInt(
      /* istanbul ignore next */
      (cov_1x5m1ahaly().b[43][0]++, overallData.total_successful) ||
      /* istanbul ignore next */
      (cov_1x5m1ahaly().b[43][1]++, 0)),
      overallSuccessRate: overallData.total_patterns_evaluated > 0 ?
      /* istanbul ignore next */
      (cov_1x5m1ahaly().b[44][0]++, (parseInt(overallData.total_successful) / parseInt(overallData.total_patterns_evaluated) * 100).toFixed(2)) :
      /* istanbul ignore next */
      (cov_1x5m1ahaly().b[44][1]++, '0.00'),
      overallAvgReturn: parseFloat(
      /* istanbul ignore next */
      (cov_1x5m1ahaly().b[45][0]++, overallData.overall_avg_return) ||
      /* istanbul ignore next */
      (cov_1x5m1ahaly().b[45][1]++, 0)).toFixed(2),
      overallAvgAccuracy: parseFloat(
      /* istanbul ignore next */
      (cov_1x5m1ahaly().b[46][0]++, overallData.overall_avg_accuracy) ||
      /* istanbul ignore next */
      (cov_1x5m1ahaly().b[46][1]++, 0)).toFixed(4)
    });
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[138]++;
    res.json({
      success: true,
      performance,
      overall,
      filters: {
        symbol,
        patternType: pattern_type,
        timeframe,
        days
      },
      generatedAt: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[139]++;
    console.error('Error fetching pattern performance:', error);
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[140]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch pattern performance',
      details: error.message
    });
  }
});

/**
 * GET /api/patterns/alerts
 * Get pattern-based alerts
 */
/* istanbul ignore next */
cov_1x5m1ahaly().s[141]++;
router.get('/alerts', async (req, res) => {
  /* istanbul ignore next */
  cov_1x5m1ahaly().f[34]++;
  cov_1x5m1ahaly().s[142]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[143]++, req.user.sub);
    const {
      is_sent =
      /* istanbul ignore next */
      (cov_1x5m1ahaly().b[47][0]++, false),
      priority,
      limit =
      /* istanbul ignore next */
      (cov_1x5m1ahaly().b[48][0]++, 50)
    } =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[144]++, req.query);
    let whereClause =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[145]++, 'WHERE 1=1');
    let params =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[146]++, []);
    let paramIndex =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[147]++, 1);

    // Filter by sent status
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[148]++;
    if (is_sent !== undefined) {
      /* istanbul ignore next */
      cov_1x5m1ahaly().b[49][0]++;
      cov_1x5m1ahaly().s[149]++;
      whereClause += ` AND pa.is_sent = $${paramIndex}`;
      /* istanbul ignore next */
      cov_1x5m1ahaly().s[150]++;
      params.push(is_sent === 'true');
      /* istanbul ignore next */
      cov_1x5m1ahaly().s[151]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_1x5m1ahaly().b[49][1]++;
    }

    // Filter by priority
    cov_1x5m1ahaly().s[152]++;
    if (priority) {
      /* istanbul ignore next */
      cov_1x5m1ahaly().b[50][0]++;
      cov_1x5m1ahaly().s[153]++;
      whereClause += ` AND pa.priority = $${paramIndex}`;
      /* istanbul ignore next */
      cov_1x5m1ahaly().s[154]++;
      params.push(priority);
      /* istanbul ignore next */
      cov_1x5m1ahaly().s[155]++;
      paramIndex++;
    } else
    /* istanbul ignore next */
    {
      cov_1x5m1ahaly().b[50][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[156]++, await query(`
      SELECT 
        pa.id,
        pa.alert_type,
        pa.message,
        pa.is_sent,
        pa.sent_at,
        pa.priority,
        pa.created_at,
        dp.symbol,
        dp.timeframe,
        dp.confidence_score,
        dp.direction,
        pt.name as pattern_name,
        pt.category
      FROM pattern_alerts pa
      JOIN detected_patterns dp ON pa.detected_pattern_id = dp.id
      JOIN pattern_types pt ON dp.pattern_type_id = pt.id
      ${whereClause}
      ORDER BY pa.created_at DESC
      LIMIT $${paramIndex}
    `, [...params, parseInt(limit)]));
    const alerts =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[157]++, result.rows.map(row => {
      /* istanbul ignore next */
      cov_1x5m1ahaly().f[35]++;
      cov_1x5m1ahaly().s[158]++;
      return {
        id: row.id,
        alertType: row.alert_type,
        message: row.message,
        isSent: row.is_sent,
        sentAt: row.sent_at,
        priority: row.priority,
        createdAt: row.created_at,
        symbol: row.symbol,
        timeframe: row.timeframe,
        patternName: row.pattern_name,
        category: row.category,
        confidence: parseFloat(row.confidence_score),
        direction: row.direction
      };
    }));
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[159]++;
    res.json({
      success: true,
      alerts,
      total: alerts.length,
      filters: {
        isSent: is_sent,
        priority
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[160]++;
    console.error('Error fetching pattern alerts:', error);
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[161]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch pattern alerts',
      details: error.message
    });
  }
});

/**
 * POST /api/patterns/alerts/:id/mark-sent
 * Mark an alert as sent
 */
/* istanbul ignore next */
cov_1x5m1ahaly().s[162]++;
router.post('/alerts/:id/mark-sent', async (req, res) => {
  /* istanbul ignore next */
  cov_1x5m1ahaly().f[36]++;
  cov_1x5m1ahaly().s[163]++;
  try {
    const alertId =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[164]++, parseInt(req.params.id));
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[165]++;
    if (!alertId) {
      /* istanbul ignore next */
      cov_1x5m1ahaly().b[51][0]++;
      cov_1x5m1ahaly().s[166]++;
      return res.status(400).json({
        success: false,
        error: 'Invalid alert ID'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1x5m1ahaly().b[51][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[167]++, await query(`
      UPDATE pattern_alerts
      SET is_sent = true, sent_at = NOW()
      WHERE id = $1
      RETURNING *
    `, [alertId]));
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[168]++;
    if (result.rows.length === 0) {
      /* istanbul ignore next */
      cov_1x5m1ahaly().b[52][0]++;
      cov_1x5m1ahaly().s[169]++;
      return res.status(404).json({
        success: false,
        error: 'Alert not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1x5m1ahaly().b[52][1]++;
    }
    cov_1x5m1ahaly().s[170]++;
    res.json({
      success: true,
      message: 'Alert marked as sent',
      alert: result.rows[0]
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[171]++;
    console.error('Error marking alert as sent:', error);
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[172]++;
    res.status(500).json({
      success: false,
      error: 'Failed to mark alert as sent',
      details: error.message
    });
  }
});

/**
 * GET /api/patterns/dashboard
 * Get pattern recognition dashboard data
 */
/* istanbul ignore next */
cov_1x5m1ahaly().s[173]++;
router.get('/dashboard', async (req, res) => {
  /* istanbul ignore next */
  cov_1x5m1ahaly().f[37]++;
  cov_1x5m1ahaly().s[174]++;
  try {
    const {
      timeframe =
      /* istanbul ignore next */
      (cov_1x5m1ahaly().b[53][0]++, '1d'),
      days =
      /* istanbul ignore next */
      (cov_1x5m1ahaly().b[54][0]++, 7)
    } =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[175]++, req.query);

    // Recent patterns
    const recentPatterns =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[176]++, await query(`
      SELECT 
        dp.symbol,
        dp.detection_date,
        dp.confidence_score,
        dp.direction,
        dp.signal_strength,
        pt.name as pattern_name,
        pt.category
      FROM detected_patterns dp
      JOIN pattern_types pt ON dp.pattern_type_id = pt.id
      WHERE dp.timeframe = $1 
        AND dp.detection_date >= NOW() - INTERVAL $2 DAY
        AND dp.status = 'active'
      ORDER BY dp.detection_date DESC, dp.confidence_score DESC
      LIMIT 10
    `, [timeframe, parseInt(days)]));

    // Pattern categories distribution
    const categoryStats =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[177]++, await query(`
      SELECT 
        pt.category,
        COUNT(*) as count,
        AVG(dp.confidence_score) as avg_confidence
      FROM detected_patterns dp
      JOIN pattern_types pt ON dp.pattern_type_id = pt.id
      WHERE dp.timeframe = $1 
        AND dp.detection_date >= NOW() - INTERVAL $2 DAY
        AND dp.status = 'active'
      GROUP BY pt.category
      ORDER BY count DESC
    `, [timeframe, parseInt(days)]));

    // Signal strength distribution
    const signalStats =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[178]++, await query(`
      SELECT 
        signal_strength,
        COUNT(*) as count
      FROM detected_patterns
      WHERE timeframe = $1 
        AND detection_date >= NOW() - INTERVAL $2 DAY
        AND status = 'active'
      GROUP BY signal_strength
      ORDER BY 
        CASE signal_strength
          WHEN 'very_strong' THEN 1
          WHEN 'strong' THEN 2
          WHEN 'moderate' THEN 3
          WHEN 'weak' THEN 4
        END
    `, [timeframe, parseInt(days)]));

    // Direction distribution
    const directionStats =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[179]++, await query(`
      SELECT 
        direction,
        COUNT(*) as count,
        AVG(confidence_score) as avg_confidence
      FROM detected_patterns
      WHERE timeframe = $1 
        AND detection_date >= NOW() - INTERVAL $2 DAY
        AND status = 'active'
      GROUP BY direction
    `, [timeframe, parseInt(days)]));

    // Top performing symbols
    const topSymbols =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[180]++, await query(`
      SELECT 
        symbol,
        COUNT(*) as pattern_count,
        AVG(confidence_score) as avg_confidence,
        COUNT(CASE WHEN direction = 'bullish' THEN 1 END) as bullish_count,
        COUNT(CASE WHEN direction = 'bearish' THEN 1 END) as bearish_count
      FROM detected_patterns
      WHERE timeframe = $1 
        AND detection_date >= NOW() - INTERVAL $2 DAY
        AND status = 'active'
      GROUP BY symbol
      HAVING COUNT(*) >= 2
      ORDER BY pattern_count DESC, avg_confidence DESC
      LIMIT 10
    `, [timeframe, parseInt(days)]));
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[181]++;
    res.json({
      success: true,
      dashboard: {
        recentPatterns: recentPatterns.rows.map(row => {
          /* istanbul ignore next */
          cov_1x5m1ahaly().f[38]++;
          cov_1x5m1ahaly().s[182]++;
          return {
            symbol: row.symbol,
            patternName: row.pattern_name,
            category: row.category,
            detectionDate: row.detection_date,
            confidence: parseFloat(row.confidence_score),
            direction: row.direction,
            signalStrength: row.signal_strength
          };
        }),
        categoryStats: categoryStats.rows.map(row => {
          /* istanbul ignore next */
          cov_1x5m1ahaly().f[39]++;
          cov_1x5m1ahaly().s[183]++;
          return {
            category: row.category,
            count: parseInt(row.count),
            avgConfidence: parseFloat(row.avg_confidence)
          };
        }),
        signalStats: signalStats.rows.map(row => {
          /* istanbul ignore next */
          cov_1x5m1ahaly().f[40]++;
          cov_1x5m1ahaly().s[184]++;
          return {
            signalStrength: row.signal_strength,
            count: parseInt(row.count)
          };
        }),
        directionStats: directionStats.rows.map(row => {
          /* istanbul ignore next */
          cov_1x5m1ahaly().f[41]++;
          cov_1x5m1ahaly().s[185]++;
          return {
            direction: row.direction,
            count: parseInt(row.count),
            avgConfidence: parseFloat(row.avg_confidence)
          };
        }),
        topSymbols: topSymbols.rows.map(row => {
          /* istanbul ignore next */
          cov_1x5m1ahaly().f[42]++;
          cov_1x5m1ahaly().s[186]++;
          return {
            symbol: row.symbol,
            patternCount: parseInt(row.pattern_count),
            avgConfidence: parseFloat(row.avg_confidence),
            bullishCount: parseInt(row.bullish_count),
            bearishCount: parseInt(row.bearish_count)
          };
        })
      },
      filters: {
        timeframe,
        days
      },
      generatedAt: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[187]++;
    console.error('Error fetching pattern dashboard:', error);
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[188]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch pattern dashboard',
      details: error.message
    });
  }
});

// Helper functions
function calculateOverallSentiment(patterns) {
  /* istanbul ignore next */
  cov_1x5m1ahaly().f[43]++;
  cov_1x5m1ahaly().s[189]++;
  if (patterns.length === 0) {
    /* istanbul ignore next */
    cov_1x5m1ahaly().b[55][0]++;
    cov_1x5m1ahaly().s[190]++;
    return 'neutral';
  } else
  /* istanbul ignore next */
  {
    cov_1x5m1ahaly().b[55][1]++;
  }
  let bullishScore =
  /* istanbul ignore next */
  (cov_1x5m1ahaly().s[191]++, 0);
  let bearishScore =
  /* istanbul ignore next */
  (cov_1x5m1ahaly().s[192]++, 0);
  /* istanbul ignore next */
  cov_1x5m1ahaly().s[193]++;
  patterns.forEach(pattern => {
    /* istanbul ignore next */
    cov_1x5m1ahaly().f[44]++;
    const weight =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[194]++, pattern.confidence);
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[195]++;
    if (pattern.direction === 'bullish') {
      /* istanbul ignore next */
      cov_1x5m1ahaly().b[56][0]++;
      cov_1x5m1ahaly().s[196]++;
      bullishScore += weight;
    } else {
      /* istanbul ignore next */
      cov_1x5m1ahaly().b[56][1]++;
      cov_1x5m1ahaly().s[197]++;
      if (pattern.direction === 'bearish') {
        /* istanbul ignore next */
        cov_1x5m1ahaly().b[57][0]++;
        cov_1x5m1ahaly().s[198]++;
        bearishScore += weight;
      } else
      /* istanbul ignore next */
      {
        cov_1x5m1ahaly().b[57][1]++;
      }
    }
  });
  const total =
  /* istanbul ignore next */
  (cov_1x5m1ahaly().s[199]++, bullishScore + bearishScore);
  /* istanbul ignore next */
  cov_1x5m1ahaly().s[200]++;
  if (total === 0) {
    /* istanbul ignore next */
    cov_1x5m1ahaly().b[58][0]++;
    cov_1x5m1ahaly().s[201]++;
    return 'neutral';
  } else
  /* istanbul ignore next */
  {
    cov_1x5m1ahaly().b[58][1]++;
  }
  const bullishRatio =
  /* istanbul ignore next */
  (cov_1x5m1ahaly().s[202]++, bullishScore / total);
  /* istanbul ignore next */
  cov_1x5m1ahaly().s[203]++;
  if (bullishRatio > 0.6) {
    /* istanbul ignore next */
    cov_1x5m1ahaly().b[59][0]++;
    cov_1x5m1ahaly().s[204]++;
    return 'bullish';
  } else
  /* istanbul ignore next */
  {
    cov_1x5m1ahaly().b[59][1]++;
  }
  cov_1x5m1ahaly().s[205]++;
  if (bullishRatio < 0.4) {
    /* istanbul ignore next */
    cov_1x5m1ahaly().b[60][0]++;
    cov_1x5m1ahaly().s[206]++;
    return 'bearish';
  } else
  /* istanbul ignore next */
  {
    cov_1x5m1ahaly().b[60][1]++;
  }
  cov_1x5m1ahaly().s[207]++;
  return 'neutral';
}

// Real-time pattern detection endpoint
/* istanbul ignore next */
cov_1x5m1ahaly().s[208]++;
router.post('/detect-realtime', async (req, res) => {
  /* istanbul ignore next */
  cov_1x5m1ahaly().f[45]++;
  cov_1x5m1ahaly().s[209]++;
  try {
    const {
      symbols,
      timeframes =
      /* istanbul ignore next */
      (cov_1x5m1ahaly().b[61][0]++, ['1d']),
      patterns
    } =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[210]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[211]++, req.user.sub);
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[212]++;
    if (
    /* istanbul ignore next */
    (cov_1x5m1ahaly().b[63][0]++, !symbols) ||
    /* istanbul ignore next */
    (cov_1x5m1ahaly().b[63][1]++, symbols.length === 0)) {
      /* istanbul ignore next */
      cov_1x5m1ahaly().b[62][0]++;
      cov_1x5m1ahaly().s[213]++;
      return res.status(400).json({
        success: false,
        error: 'Symbols array is required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1x5m1ahaly().b[62][1]++;
    }

    // Detect patterns for specified symbols
    const detections =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[214]++, []);
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[215]++;
    for (const symbol of symbols) {
      /* istanbul ignore next */
      cov_1x5m1ahaly().s[216]++;
      for (const timeframe of timeframes) {
        const results =
        /* istanbul ignore next */
        (cov_1x5m1ahaly().s[217]++, await patternDetector.detectPatterns(symbol, timeframe, patterns));
        /* istanbul ignore next */
        cov_1x5m1ahaly().s[218]++;
        detections.push(...results);
      }
    }

    // Store pattern detections
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[219]++;
    await storePatternDetections(detections, userId);

    // Create alerts for significant patterns
    const alerts =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[220]++, await createPatternAlerts(detections, userId));
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[221]++;
    res.json({
      success: true,
      data: {
        patterns_detected: detections.length,
        alerts_created: alerts.length,
        detections: detections.slice(0, 20),
        // Return top 20
        alerts: alerts
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[222]++;
    console.error('Error in real-time pattern detection:', error);
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[223]++;
    res.status(500).json({
      success: false,
      error: 'Pattern detection failed',
      message: error.message
    });
  }
});

// Get pattern statistics
/* istanbul ignore next */
cov_1x5m1ahaly().s[224]++;
router.get('/statistics', async (req, res) => {
  /* istanbul ignore next */
  cov_1x5m1ahaly().f[46]++;
  cov_1x5m1ahaly().s[225]++;
  try {
    const {
      period =
      /* istanbul ignore next */
      (cov_1x5m1ahaly().b[64][0]++, '30d'),
      category
    } =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[226]++, req.query);

    // Get pattern statistics
    const stats =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[227]++, await getPatternStatistics(period, category));
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[228]++;
    res.json({
      success: true,
      data: stats
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[229]++;
    console.error('Error fetching pattern statistics:', error);
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[230]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch pattern statistics',
      message: error.message
    });
  }
});

// Get pattern performance
/* istanbul ignore next */
cov_1x5m1ahaly().s[231]++;
router.get('/performance', async (req, res) => {
  /* istanbul ignore next */
  cov_1x5m1ahaly().f[47]++;
  cov_1x5m1ahaly().s[232]++;
  try {
    const {
      pattern_type,
      timeframe =
      /* istanbul ignore next */
      (cov_1x5m1ahaly().b[65][0]++, '1d'),
      days =
      /* istanbul ignore next */
      (cov_1x5m1ahaly().b[66][0]++, 30)
    } =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[233]++, req.query);
    const performance =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[234]++, await getPatternPerformance(pattern_type, timeframe, days));
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[235]++;
    res.json({
      success: true,
      data: performance
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[236]++;
    console.error('Error fetching pattern performance:', error);
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[237]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch pattern performance',
      message: error.message
    });
  }
});

// Create pattern alert
/* istanbul ignore next */
cov_1x5m1ahaly().s[238]++;
router.post('/alerts', async (req, res) => {
  /* istanbul ignore next */
  cov_1x5m1ahaly().f[48]++;
  cov_1x5m1ahaly().s[239]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[240]++, req.user.sub);
    const {
      symbol,
      pattern_types,
      min_confidence =
      /* istanbul ignore next */
      (cov_1x5m1ahaly().b[67][0]++, 0.7),
      notify_email =
      /* istanbul ignore next */
      (cov_1x5m1ahaly().b[68][0]++, true)
    } =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[241]++, req.body);
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[242]++;
    if (
    /* istanbul ignore next */
    (cov_1x5m1ahaly().b[70][0]++, !symbol) ||
    /* istanbul ignore next */
    (cov_1x5m1ahaly().b[70][1]++, !pattern_types) ||
    /* istanbul ignore next */
    (cov_1x5m1ahaly().b[70][2]++, pattern_types.length === 0)) {
      /* istanbul ignore next */
      cov_1x5m1ahaly().b[69][0]++;
      cov_1x5m1ahaly().s[243]++;
      return res.status(400).json({
        success: false,
        error: 'Symbol and pattern_types are required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1x5m1ahaly().b[69][1]++;
    }

    // Create pattern-based alerts
    const alerts =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[244]++, []);
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[245]++;
    for (const patternType of pattern_types) {
      const alertConfig =
      /* istanbul ignore next */
      (cov_1x5m1ahaly().s[246]++, {
        symbol: symbol.toUpperCase(),
        alertType: 'pattern_detected',
        condition: 'equals',
        targetValue: patternType,
        metadata: {
          pattern_type: patternType,
          min_confidence: min_confidence,
          notify_email: notify_email
        },
        message: `Pattern alert: ${patternType} detected for ${symbol}`
      });
      const alert =
      /* istanbul ignore next */
      (cov_1x5m1ahaly().s[247]++, await watchlistAlerts.createAlert(userId, alertConfig));
      /* istanbul ignore next */
      cov_1x5m1ahaly().s[248]++;
      alerts.push(alert);
    }
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[249]++;
    res.json({
      success: true,
      data: alerts,
      message: `Created ${alerts.length} pattern alerts`
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[250]++;
    console.error('Error creating pattern alert:', error);
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[251]++;
    res.status(500).json({
      success: false,
      error: 'Failed to create pattern alert',
      message: error.message
    });
  }
});

// Get available pattern types
/* istanbul ignore next */
cov_1x5m1ahaly().s[252]++;
router.get('/types', (req, res) => {
  /* istanbul ignore next */
  cov_1x5m1ahaly().f[49]++;
  cov_1x5m1ahaly().s[253]++;
  try {
    const patternTypes =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[254]++, [{
      id: 'head_and_shoulders',
      name: 'Head and Shoulders',
      category: 'reversal',
      description: 'Bearish reversal pattern with three peaks',
      reliability: 'high',
      timeframe_suitability: ['1d', '1w']
    }, {
      id: 'inverse_head_and_shoulders',
      name: 'Inverse Head and Shoulders',
      category: 'reversal',
      description: 'Bullish reversal pattern with three troughs',
      reliability: 'high',
      timeframe_suitability: ['1d', '1w']
    }, {
      id: 'double_top',
      name: 'Double Top',
      category: 'reversal',
      description: 'Bearish reversal with two peaks at similar levels',
      reliability: 'medium',
      timeframe_suitability: ['1d', '1w']
    }, {
      id: 'double_bottom',
      name: 'Double Bottom',
      category: 'reversal',
      description: 'Bullish reversal with two troughs at similar levels',
      reliability: 'medium',
      timeframe_suitability: ['1d', '1w']
    }, {
      id: 'triangle_ascending',
      name: 'Ascending Triangle',
      category: 'continuation',
      description: 'Bullish continuation pattern with horizontal resistance',
      reliability: 'medium',
      timeframe_suitability: ['1d', '1w']
    }, {
      id: 'triangle_descending',
      name: 'Descending Triangle',
      category: 'continuation',
      description: 'Bearish continuation pattern with horizontal support',
      reliability: 'medium',
      timeframe_suitability: ['1d', '1w']
    }, {
      id: 'triangle_symmetrical',
      name: 'Symmetrical Triangle',
      category: 'continuation',
      description: 'Neutral pattern with converging support and resistance',
      reliability: 'low',
      timeframe_suitability: ['1d', '1w']
    }, {
      id: 'flag_bull',
      name: 'Bull Flag',
      category: 'continuation',
      description: 'Bullish continuation after strong upward move',
      reliability: 'high',
      timeframe_suitability: ['1h', '1d']
    }, {
      id: 'flag_bear',
      name: 'Bear Flag',
      category: 'continuation',
      description: 'Bearish continuation after strong downward move',
      reliability: 'high',
      timeframe_suitability: ['1h', '1d']
    }, {
      id: 'cup_and_handle',
      name: 'Cup and Handle',
      category: 'continuation',
      description: 'Bullish continuation pattern with rounded bottom',
      reliability: 'high',
      timeframe_suitability: ['1d', '1w']
    }, {
      id: 'wedge_rising',
      name: 'Rising Wedge',
      category: 'reversal',
      description: 'Bearish pattern with upward sloping support and resistance',
      reliability: 'medium',
      timeframe_suitability: ['1d', '1w']
    }, {
      id: 'wedge_falling',
      name: 'Falling Wedge',
      category: 'reversal',
      description: 'Bullish pattern with downward sloping support and resistance',
      reliability: 'medium',
      timeframe_suitability: ['1d', '1w']
    }]);
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[255]++;
    res.json({
      success: true,
      data: patternTypes
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[256]++;
    console.error('Error fetching pattern types:', error);
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[257]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch pattern types'
    });
  }
});

// Helper functions
async function storePatternDetections(detections, userId) {
  /* istanbul ignore next */
  cov_1x5m1ahaly().f[50]++;
  cov_1x5m1ahaly().s[258]++;
  if (
  /* istanbul ignore next */
  (cov_1x5m1ahaly().b[72][0]++, !detections) ||
  /* istanbul ignore next */
  (cov_1x5m1ahaly().b[72][1]++, detections.length === 0)) {
    /* istanbul ignore next */
    cov_1x5m1ahaly().b[71][0]++;
    cov_1x5m1ahaly().s[259]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_1x5m1ahaly().b[71][1]++;
  }
  cov_1x5m1ahaly().s[260]++;
  try {
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[261]++;
    for (const detection of detections) {
      /* istanbul ignore next */
      cov_1x5m1ahaly().s[262]++;
      await query(`
        INSERT INTO pattern_detections (
          user_id, symbol, pattern_type, timeframe, confidence_score,
          detection_data, start_date, end_date, status, detected_at
        ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, NOW())
        ON CONFLICT (symbol, pattern_type, timeframe, start_date)
        DO UPDATE SET
          confidence_score = EXCLUDED.confidence_score,
          detection_data = EXCLUDED.detection_data,
          status = EXCLUDED.status,
          detected_at = EXCLUDED.detected_at
      `, [userId, detection.symbol, detection.pattern_type, detection.timeframe, detection.confidence, JSON.stringify(detection.data), detection.start_date, detection.end_date, 'active']);
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[263]++;
    console.error('Error storing pattern detections:', error);
  }
}
async function createPatternAlerts(detections, userId) {
  /* istanbul ignore next */
  cov_1x5m1ahaly().f[51]++;
  const alerts =
  /* istanbul ignore next */
  (cov_1x5m1ahaly().s[264]++, []);
  /* istanbul ignore next */
  cov_1x5m1ahaly().s[265]++;
  try {
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[266]++;
    for (const detection of detections) {
      /* istanbul ignore next */
      cov_1x5m1ahaly().s[267]++;
      if (detection.confidence >= 0.75) {
        /* istanbul ignore next */
        cov_1x5m1ahaly().b[73][0]++;
        // High confidence patterns
        const alertConfig =
        /* istanbul ignore next */
        (cov_1x5m1ahaly().s[268]++, {
          symbol: detection.symbol,
          alertType: 'pattern_detected',
          condition: 'equals',
          targetValue: detection.pattern_type,
          metadata: {
            pattern_type: detection.pattern_type,
            confidence: detection.confidence,
            timeframe: detection.timeframe
          },
          message: `High confidence ${detection.pattern_type} pattern detected for ${detection.symbol} (${(detection.confidence * 100).toFixed(1)}% confidence)`
        });
        const alert =
        /* istanbul ignore next */
        (cov_1x5m1ahaly().s[269]++, await watchlistAlerts.createAlert(userId, alertConfig));
        /* istanbul ignore next */
        cov_1x5m1ahaly().s[270]++;
        alerts.push(alert);
      } else
      /* istanbul ignore next */
      {
        cov_1x5m1ahaly().b[73][1]++;
      }
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[271]++;
    console.error('Error creating pattern alerts:', error);
  }
  /* istanbul ignore next */
  cov_1x5m1ahaly().s[272]++;
  return alerts;
}
async function getPatternStatistics(period, category) {
  /* istanbul ignore next */
  cov_1x5m1ahaly().f[52]++;
  cov_1x5m1ahaly().s[273]++;
  try {
    const periodClause =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[274]++,
    /* istanbul ignore next */
    (cov_1x5m1ahaly().b[74][0]++, {
      '7d': "detected_at >= NOW() - INTERVAL '7 days'",
      '30d': "detected_at >= NOW() - INTERVAL '30 days'",
      '90d': "detected_at >= NOW() - INTERVAL '90 days'",
      '1y': "detected_at >= NOW() - INTERVAL '1 year'"
    }[period]) ||
    /* istanbul ignore next */
    (cov_1x5m1ahaly().b[74][1]++, "detected_at >= NOW() - INTERVAL '30 days'"));
    let categoryFilter =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[275]++, '');
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[276]++;
    if (category) {
      /* istanbul ignore next */
      cov_1x5m1ahaly().b[75][0]++;
      cov_1x5m1ahaly().s[277]++;
      categoryFilter = `AND pt.category = '${category}'`;
    } else
    /* istanbul ignore next */
    {
      cov_1x5m1ahaly().b[75][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[278]++, await query(`
      SELECT 
        pd.pattern_type,
        pt.category,
        pt.name,
        COUNT(*) as detection_count,
        AVG(pd.confidence_score) as avg_confidence,
        COUNT(DISTINCT pd.symbol) as unique_symbols,
        MAX(pd.detected_at) as latest_detection
      FROM pattern_detections pd
      LEFT JOIN pattern_types pt ON pd.pattern_type = pt.id
      WHERE ${periodClause} ${categoryFilter}
      GROUP BY pd.pattern_type, pt.category, pt.name
      ORDER BY detection_count DESC
    `));
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[279]++;
    return {
      period,
      category,
      statistics: result.rows,
      total_detections: result.rows.reduce((sum, row) => {
        /* istanbul ignore next */
        cov_1x5m1ahaly().f[53]++;
        cov_1x5m1ahaly().s[280]++;
        return sum + parseInt(row.detection_count);
      }, 0)
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[281]++;
    console.error('Error getting pattern statistics:', error);
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[282]++;
    return {
      period,
      category,
      statistics: [],
      total_detections: 0
    };
  }
}
async function getPatternPerformance(patternType, timeframe, days) {
  /* istanbul ignore next */
  cov_1x5m1ahaly().f[54]++;
  cov_1x5m1ahaly().s[283]++;
  try {
    const result =
    /* istanbul ignore next */
    (cov_1x5m1ahaly().s[284]++, await query(`
      SELECT 
        pd.symbol,
        pd.pattern_type,
        pd.confidence_score,
        pd.detected_at,
        pd.detection_data,
        -- Calculate performance metrics
        CASE 
          WHEN pd.pattern_type LIKE '%bull%' OR pd.pattern_type LIKE '%ascending%' OR pd.pattern_type = 'cup_and_handle'
          THEN 'bullish'
          WHEN pd.pattern_type LIKE '%bear%' OR pd.pattern_type LIKE '%descending%' OR pd.pattern_type = 'head_and_shoulders'
          THEN 'bearish'
          ELSE 'neutral'
        END as expected_direction
      FROM pattern_detections pd
      WHERE pd.pattern_type = $1
      AND pd.timeframe = $2
      AND pd.detected_at >= NOW() - INTERVAL '$3 days'
      ORDER BY pd.detected_at DESC
    `, [patternType, timeframe, days]));
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[285]++;
    return {
      pattern_type: patternType,
      timeframe,
      period_days: days,
      total_detections: result.rows.length,
      performance_data: result.rows
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[286]++;
    console.error('Error getting pattern performance:', error);
    /* istanbul ignore next */
    cov_1x5m1ahaly().s[287]++;
    return {
      pattern_type: patternType,
      timeframe,
      period_days: days,
      total_detections: 0,
      performance_data: []
    };
  }
}
/* istanbul ignore next */
cov_1x5m1ahaly().s[288]++;
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,