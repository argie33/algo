807235cea5fdef22bca77b6bc2206935
/* istanbul ignore next */
function cov_xkspvi43q() {
  var path = "/home/stocks/algo/webapp/lambda/routes/trading-strategies.js";
  var hash = "824ab6cb31a69542e8449c016f4976647f5f253f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/routes/trading-strategies.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 34
        }
      },
      "1": {
        start: {
          line: 2,
          column: 30
        },
        end: {
          line: 2,
          column: 59
        }
      },
      "2": {
        start: {
          line: 3,
          column: 51
        },
        end: {
          line: 3,
          column: 86
        }
      },
      "3": {
        start: {
          line: 4,
          column: 30
        },
        end: {
          line: 4,
          column: 71
        }
      },
      "4": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 41
        }
      },
      "5": {
        start: {
          line: 6,
          column: 30
        },
        end: {
          line: 6,
          column: 67
        }
      },
      "6": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 31
        }
      },
      "7": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 30
        }
      },
      "8": {
        start: {
          line: 14,
          column: 34
        },
        end: {
          line: 56,
          column: 1
        }
      },
      "9": {
        start: {
          line: 19,
          column: 28
        },
        end: {
          line: 19,
          column: 83
        }
      },
      "10": {
        start: {
          line: 20,
          column: 28
        },
        end: {
          line: 20,
          column: 109
        }
      },
      "11": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 26,
          column: 90
        }
      },
      "12": {
        start: {
          line: 31,
          column: 28
        },
        end: {
          line: 31,
          column: 78
        }
      },
      "13": {
        start: {
          line: 32,
          column: 28
        },
        end: {
          line: 32,
          column: 54
        }
      },
      "14": {
        start: {
          line: 37,
          column: 28
        },
        end: {
          line: 37,
          column: 84
        }
      },
      "15": {
        start: {
          line: 38,
          column: 28
        },
        end: {
          line: 38,
          column: 80
        }
      },
      "16": {
        start: {
          line: 43,
          column: 28
        },
        end: {
          line: 43,
          column: 84
        }
      },
      "17": {
        start: {
          line: 44,
          column: 28
        },
        end: {
          line: 44,
          column: 57
        }
      },
      "18": {
        start: {
          line: 52,
          column: 28
        },
        end: {
          line: 52,
          column: 79
        }
      },
      "19": {
        start: {
          line: 59,
          column: 0
        },
        end: {
          line: 96,
          column: 3
        }
      },
      "20": {
        start: {
          line: 60,
          column: 20
        },
        end: {
          line: 60,
          column: 53
        }
      },
      "21": {
        start: {
          line: 62,
          column: 2
        },
        end: {
          line: 95,
          column: 3
        }
      },
      "22": {
        start: {
          line: 63,
          column: 19
        },
        end: {
          line: 63,
          column: 31
        }
      },
      "23": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 67,
          column: 7
        }
      },
      "24": {
        start: {
          line: 69,
          column: 23
        },
        end: {
          line: 69,
          column: 76
        }
      },
      "25": {
        start: {
          line: 71,
          column: 21
        },
        end: {
          line: 75,
          column: 51
        }
      },
      "26": {
        start: {
          line: 74,
          column: 42
        },
        end: {
          line: 74,
          column: 53
        }
      },
      "27": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 80,
          column: 7
        }
      },
      "28": {
        start: {
          line: 79,
          column: 42
        },
        end: {
          line: 79,
          column: 53
        }
      },
      "29": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 82,
          column: 23
        }
      },
      "30": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 87,
          column: 7
        }
      },
      "31": {
        start: {
          line: 89,
          column: 21
        },
        end: {
          line: 93,
          column: 5
        }
      },
      "32": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 94,
          column: 35
        }
      },
      "33": {
        start: {
          line: 99,
          column: 0
        },
        end: {
          line: 146,
          column: 3
        }
      },
      "34": {
        start: {
          line: 100,
          column: 20
        },
        end: {
          line: 100,
          column: 53
        }
      },
      "35": {
        start: {
          line: 101,
          column: 25
        },
        end: {
          line: 101,
          column: 35
        }
      },
      "36": {
        start: {
          line: 103,
          column: 2
        },
        end: {
          line: 145,
          column: 3
        }
      },
      "37": {
        start: {
          line: 104,
          column: 19
        },
        end: {
          line: 104,
          column: 31
        }
      },
      "38": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 109,
          column: 7
        }
      },
      "39": {
        start: {
          line: 111,
          column: 21
        },
        end: {
          line: 111,
          column: 83
        }
      },
      "40": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 116,
          column: 5
        }
      },
      "41": {
        start: {
          line: 114,
          column: 23
        },
        end: {
          line: 114,
          column: 73
        }
      },
      "42": {
        start: {
          line: 115,
          column: 6
        },
        end: {
          line: 115,
          column: 44
        }
      },
      "43": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 122,
          column: 5
        }
      },
      "44": {
        start: {
          line: 120,
          column: 23
        },
        end: {
          line: 120,
          column: 68
        }
      },
      "45": {
        start: {
          line: 121,
          column: 6
        },
        end: {
          line: 121,
          column: 44
        }
      },
      "46": {
        start: {
          line: 124,
          column: 21
        },
        end: {
          line: 124,
          column: 99
        }
      },
      "47": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 129,
          column: 7
        }
      },
      "48": {
        start: {
          line: 131,
          column: 4
        },
        end: {
          line: 131,
          column: 23
        }
      },
      "49": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 137,
          column: 7
        }
      },
      "50": {
        start: {
          line: 139,
          column: 21
        },
        end: {
          line: 143,
          column: 5
        }
      },
      "51": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 144,
          column: 35
        }
      },
      "52": {
        start: {
          line: 149,
          column: 0
        },
        end: {
          line: 212,
          column: 3
        }
      },
      "53": {
        start: {
          line: 150,
          column: 20
        },
        end: {
          line: 150,
          column: 53
        }
      },
      "54": {
        start: {
          line: 151,
          column: 20
        },
        end: {
          line: 151,
          column: 30
        }
      },
      "55": {
        start: {
          line: 153,
          column: 2
        },
        end: {
          line: 211,
          column: 3
        }
      },
      "56": {
        start: {
          line: 154,
          column: 19
        },
        end: {
          line: 154,
          column: 31
        }
      },
      "57": {
        start: {
          line: 155,
          column: 85
        },
        end: {
          line: 155,
          column: 93
        }
      },
      "58": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 162,
          column: 7
        }
      },
      "59": {
        start: {
          line: 165,
          column: 27
        },
        end: {
          line: 179,
          column: 5
        }
      },
      "60": {
        start: {
          line: 182,
          column: 19
        },
        end: {
          line: 182,
          column: 87
        }
      },
      "61": {
        start: {
          line: 184,
          column: 21
        },
        end: {
          line: 189,
          column: 47
        }
      },
      "62": {
        start: {
          line: 191,
          column: 4
        },
        end: {
          line: 195,
          column: 7
        }
      },
      "63": {
        start: {
          line: 197,
          column: 4
        },
        end: {
          line: 197,
          column: 35
        }
      },
      "64": {
        start: {
          line: 199,
          column: 4
        },
        end: {
          line: 203,
          column: 7
        }
      },
      "65": {
        start: {
          line: 205,
          column: 21
        },
        end: {
          line: 209,
          column: 5
        }
      },
      "66": {
        start: {
          line: 210,
          column: 4
        },
        end: {
          line: 210,
          column: 35
        }
      },
      "67": {
        start: {
          line: 215,
          column: 0
        },
        end: {
          line: 263,
          column: 3
        }
      },
      "68": {
        start: {
          line: 216,
          column: 20
        },
        end: {
          line: 216,
          column: 53
        }
      },
      "69": {
        start: {
          line: 217,
          column: 25
        },
        end: {
          line: 217,
          column: 35
        }
      },
      "70": {
        start: {
          line: 218,
          column: 21
        },
        end: {
          line: 218,
          column: 29
        }
      },
      "71": {
        start: {
          line: 219,
          column: 20
        },
        end: {
          line: 219,
          column: 30
        }
      },
      "72": {
        start: {
          line: 221,
          column: 2
        },
        end: {
          line: 262,
          column: 3
        }
      },
      "73": {
        start: {
          line: 222,
          column: 19
        },
        end: {
          line: 222,
          column: 31
        }
      },
      "74": {
        start: {
          line: 224,
          column: 4
        },
        end: {
          line: 228,
          column: 7
        }
      },
      "75": {
        start: {
          line: 231,
          column: 28
        },
        end: {
          line: 231,
          column: 91
        }
      },
      "76": {
        start: {
          line: 233,
          column: 21
        },
        end: {
          line: 238,
          column: 40
        }
      },
      "77": {
        start: {
          line: 240,
          column: 4
        },
        end: {
          line: 245,
          column: 7
        }
      },
      "78": {
        start: {
          line: 247,
          column: 4
        },
        end: {
          line: 247,
          column: 23
        }
      },
      "79": {
        start: {
          line: 249,
          column: 4
        },
        end: {
          line: 254,
          column: 7
        }
      },
      "80": {
        start: {
          line: 256,
          column: 21
        },
        end: {
          line: 260,
          column: 5
        }
      },
      "81": {
        start: {
          line: 261,
          column: 4
        },
        end: {
          line: 261,
          column: 35
        }
      },
      "82": {
        start: {
          line: 266,
          column: 0
        },
        end: {
          line: 315,
          column: 3
        }
      },
      "83": {
        start: {
          line: 267,
          column: 20
        },
        end: {
          line: 267,
          column: 53
        }
      },
      "84": {
        start: {
          line: 268,
          column: 25
        },
        end: {
          line: 268,
          column: 35
        }
      },
      "85": {
        start: {
          line: 270,
          column: 2
        },
        end: {
          line: 314,
          column: 3
        }
      },
      "86": {
        start: {
          line: 271,
          column: 19
        },
        end: {
          line: 271,
          column: 31
        }
      },
      "87": {
        start: {
          line: 272,
          column: 70
        },
        end: {
          line: 272,
          column: 78
        }
      },
      "88": {
        start: {
          line: 274,
          column: 4
        },
        end: {
          line: 278,
          column: 7
        }
      },
      "89": {
        start: {
          line: 282,
          column: 4
        },
        end: {
          line: 300,
          column: 5
        }
      },
      "90": {
        start: {
          line: 283,
          column: 21
        },
        end: {
          line: 283,
          column: 79
        }
      },
      "91": {
        start: {
          line: 285,
          column: 6
        },
        end: {
          line: 296,
          column: 7
        }
      },
      "92": {
        start: {
          line: 286,
          column: 25
        },
        end: {
          line: 289,
          column: 47
        }
      },
      "93": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 77
        }
      },
      "94": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 27
        }
      },
      "95": {
        start: {
          line: 294,
          column: 25
        },
        end: {
          line: 294,
          column: 86
        }
      },
      "96": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 295,
          column: 39
        }
      },
      "97": {
        start: {
          line: 298,
          column: 23
        },
        end: {
          line: 298,
          column: 93
        }
      },
      "98": {
        start: {
          line: 299,
          column: 6
        },
        end: {
          line: 299,
          column: 37
        }
      },
      "99": {
        start: {
          line: 302,
          column: 4
        },
        end: {
          line: 306,
          column: 7
        }
      },
      "100": {
        start: {
          line: 308,
          column: 21
        },
        end: {
          line: 312,
          column: 5
        }
      },
      "101": {
        start: {
          line: 313,
          column: 4
        },
        end: {
          line: 313,
          column: 35
        }
      },
      "102": {
        start: {
          line: 318,
          column: 0
        },
        end: {
          line: 361,
          column: 3
        }
      },
      "103": {
        start: {
          line: 319,
          column: 20
        },
        end: {
          line: 319,
          column: 53
        }
      },
      "104": {
        start: {
          line: 320,
          column: 25
        },
        end: {
          line: 320,
          column: 35
        }
      },
      "105": {
        start: {
          line: 322,
          column: 2
        },
        end: {
          line: 360,
          column: 3
        }
      },
      "106": {
        start: {
          line: 323,
          column: 19
        },
        end: {
          line: 323,
          column: 31
        }
      },
      "107": {
        start: {
          line: 325,
          column: 4
        },
        end: {
          line: 328,
          column: 7
        }
      },
      "108": {
        start: {
          line: 331,
          column: 4
        },
        end: {
          line: 331,
          column: 63
        }
      },
      "109": {
        start: {
          line: 334,
          column: 22
        },
        end: {
          line: 334,
          column: 50
        }
      },
      "110": {
        start: {
          line: 335,
          column: 4
        },
        end: {
          line: 338,
          column: 29
        }
      },
      "111": {
        start: {
          line: 340,
          column: 21
        },
        end: {
          line: 343,
          column: 39
        }
      },
      "112": {
        start: {
          line: 345,
          column: 4
        },
        end: {
          line: 345,
          column: 69
        }
      },
      "113": {
        start: {
          line: 346,
          column: 4
        },
        end: {
          line: 346,
          column: 23
        }
      },
      "114": {
        start: {
          line: 348,
          column: 4
        },
        end: {
          line: 352,
          column: 7
        }
      },
      "115": {
        start: {
          line: 354,
          column: 21
        },
        end: {
          line: 358,
          column: 5
        }
      },
      "116": {
        start: {
          line: 359,
          column: 4
        },
        end: {
          line: 359,
          column: 35
        }
      },
      "117": {
        start: {
          line: 364,
          column: 0
        },
        end: {
          line: 421,
          column: 3
        }
      },
      "118": {
        start: {
          line: 365,
          column: 20
        },
        end: {
          line: 365,
          column: 53
        }
      },
      "119": {
        start: {
          line: 366,
          column: 25
        },
        end: {
          line: 366,
          column: 35
        }
      },
      "120": {
        start: {
          line: 367,
          column: 37
        },
        end: {
          line: 367,
          column: 46
        }
      },
      "121": {
        start: {
          line: 369,
          column: 2
        },
        end: {
          line: 420,
          column: 3
        }
      },
      "122": {
        start: {
          line: 370,
          column: 19
        },
        end: {
          line: 370,
          column: 31
        }
      },
      "123": {
        start: {
          line: 372,
          column: 4
        },
        end: {
          line: 377,
          column: 7
        }
      },
      "124": {
        start: {
          line: 379,
          column: 22
        },
        end: {
          line: 379,
          column: 50
        }
      },
      "125": {
        start: {
          line: 380,
          column: 19
        },
        end: {
          line: 389,
          column: 43
        }
      },
      "126": {
        start: {
          line: 391,
          column: 21
        },
        end: {
          line: 399,
          column: 59
        }
      },
      "127": {
        start: {
          line: 401,
          column: 4
        },
        end: {
          line: 404,
          column: 7
        }
      },
      "128": {
        start: {
          line: 406,
          column: 4
        },
        end: {
          line: 406,
          column: 23
        }
      },
      "129": {
        start: {
          line: 408,
          column: 4
        },
        end: {
          line: 412,
          column: 7
        }
      },
      "130": {
        start: {
          line: 414,
          column: 21
        },
        end: {
          line: 418,
          column: 5
        }
      },
      "131": {
        start: {
          line: 419,
          column: 4
        },
        end: {
          line: 419,
          column: 35
        }
      },
      "132": {
        start: {
          line: 424,
          column: 0
        },
        end: {
          line: 496,
          column: 3
        }
      },
      "133": {
        start: {
          line: 425,
          column: 20
        },
        end: {
          line: 425,
          column: 53
        }
      },
      "134": {
        start: {
          line: 427,
          column: 2
        },
        end: {
          line: 495,
          column: 3
        }
      },
      "135": {
        start: {
          line: 428,
          column: 4
        },
        end: {
          line: 428,
          column: 71
        }
      },
      "136": {
        start: {
          line: 430,
          column: 26
        },
        end: {
          line: 469,
          column: 5
        }
      },
      "137": {
        start: {
          line: 471,
          column: 21
        },
        end: {
          line: 480,
          column: 55
        }
      },
      "138": {
        start: {
          line: 482,
          column: 4
        },
        end: {
          line: 482,
          column: 23
        }
      },
      "139": {
        start: {
          line: 484,
          column: 4
        },
        end: {
          line: 487,
          column: 7
        }
      },
      "140": {
        start: {
          line: 489,
          column: 21
        },
        end: {
          line: 493,
          column: 5
        }
      },
      "141": {
        start: {
          line: 494,
          column: 4
        },
        end: {
          line: 494,
          column: 35
        }
      },
      "142": {
        start: {
          line: 498,
          column: 0
        },
        end: {
          line: 498,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 17
          },
          end: {
            line: 19,
            column: 18
          }
        },
        loc: {
          start: {
            line: 19,
            column: 28
          },
          end: {
            line: 19,
            column: 83
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 17
          },
          end: {
            line: 20,
            column: 18
          }
        },
        loc: {
          start: {
            line: 20,
            column: 28
          },
          end: {
            line: 20,
            column: 109
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 26,
            column: 17
          },
          end: {
            line: 26,
            column: 18
          }
        },
        loc: {
          start: {
            line: 26,
            column: 28
          },
          end: {
            line: 26,
            column: 90
          }
        },
        line: 26
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 31,
            column: 17
          },
          end: {
            line: 31,
            column: 18
          }
        },
        loc: {
          start: {
            line: 31,
            column: 28
          },
          end: {
            line: 31,
            column: 78
          }
        },
        line: 31
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 32,
            column: 17
          },
          end: {
            line: 32,
            column: 18
          }
        },
        loc: {
          start: {
            line: 32,
            column: 28
          },
          end: {
            line: 32,
            column: 54
          }
        },
        line: 32
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 37,
            column: 17
          },
          end: {
            line: 37,
            column: 18
          }
        },
        loc: {
          start: {
            line: 37,
            column: 28
          },
          end: {
            line: 37,
            column: 84
          }
        },
        line: 37
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 38,
            column: 17
          },
          end: {
            line: 38,
            column: 18
          }
        },
        loc: {
          start: {
            line: 38,
            column: 28
          },
          end: {
            line: 38,
            column: 80
          }
        },
        line: 38
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 43,
            column: 17
          },
          end: {
            line: 43,
            column: 18
          }
        },
        loc: {
          start: {
            line: 43,
            column: 28
          },
          end: {
            line: 43,
            column: 84
          }
        },
        line: 43
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 44,
            column: 17
          },
          end: {
            line: 44,
            column: 18
          }
        },
        loc: {
          start: {
            line: 44,
            column: 28
          },
          end: {
            line: 44,
            column: 57
          }
        },
        line: 44
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 52,
            column: 17
          },
          end: {
            line: 52,
            column: 18
          }
        },
        loc: {
          start: {
            line: 52,
            column: 28
          },
          end: {
            line: 52,
            column: 79
          }
        },
        line: 52
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 59,
            column: 16
          },
          end: {
            line: 59,
            column: 17
          }
        },
        loc: {
          start: {
            line: 59,
            column: 36
          },
          end: {
            line: 96,
            column: 1
          }
        },
        line: 59
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 74,
            column: 37
          },
          end: {
            line: 74,
            column: 38
          }
        },
        loc: {
          start: {
            line: 74,
            column: 42
          },
          end: {
            line: 74,
            column: 53
          }
        },
        line: 74
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 79,
            column: 37
          },
          end: {
            line: 79,
            column: 38
          }
        },
        loc: {
          start: {
            line: 79,
            column: 42
          },
          end: {
            line: 79,
            column: 53
          }
        },
        line: 79
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 99,
            column: 27
          },
          end: {
            line: 99,
            column: 28
          }
        },
        loc: {
          start: {
            line: 99,
            column: 47
          },
          end: {
            line: 146,
            column: 1
          }
        },
        line: 99
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 149,
            column: 79
          },
          end: {
            line: 149,
            column: 80
          }
        },
        loc: {
          start: {
            line: 149,
            column: 99
          },
          end: {
            line: 212,
            column: 1
          }
        },
        line: 149
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 215,
            column: 99
          },
          end: {
            line: 215,
            column: 100
          }
        },
        loc: {
          start: {
            line: 215,
            column: 119
          },
          end: {
            line: 263,
            column: 1
          }
        },
        line: 215
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 266,
            column: 27
          },
          end: {
            line: 266,
            column: 28
          }
        },
        loc: {
          start: {
            line: 266,
            column: 47
          },
          end: {
            line: 315,
            column: 1
          }
        },
        line: 266
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 318,
            column: 30
          },
          end: {
            line: 318,
            column: 31
          }
        },
        loc: {
          start: {
            line: 318,
            column: 50
          },
          end: {
            line: 361,
            column: 1
          }
        },
        line: 318
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 364,
            column: 38
          },
          end: {
            line: 364,
            column: 39
          }
        },
        loc: {
          start: {
            line: 364,
            column: 58
          },
          end: {
            line: 421,
            column: 1
          }
        },
        line: 364
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 424,
            column: 28
          },
          end: {
            line: 424,
            column: 29
          }
        },
        loc: {
          start: {
            line: 424,
            column: 48
          },
          end: {
            line: 496,
            column: 1
          }
        },
        line: 424
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 28
          },
          end: {
            line: 26,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 28
          },
          end: {
            line: 26,
            column: 48
          }
        }, {
          start: {
            line: 26,
            column: 52
          },
          end: {
            line: 26,
            column: 68
          }
        }, {
          start: {
            line: 26,
            column: 72
          },
          end: {
            line: 26,
            column: 90
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 28
          },
          end: {
            line: 38,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 28
          },
          end: {
            line: 38,
            column: 34
          }
        }, {
          start: {
            line: 38,
            column: 39
          },
          end: {
            line: 38,
            column: 56
          }
        }, {
          start: {
            line: 38,
            column: 60
          },
          end: {
            line: 38,
            column: 79
          }
        }],
        line: 38
      },
      "2": {
        loc: {
          start: {
            line: 44,
            column: 28
          },
          end: {
            line: 44,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 28
          },
          end: {
            line: 44,
            column: 34
          }
        }, {
          start: {
            line: 44,
            column: 38
          },
          end: {
            line: 44,
            column: 57
          }
        }],
        line: 44
      },
      "3": {
        loc: {
          start: {
            line: 52,
            column: 28
          },
          end: {
            line: 52,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 28
          },
          end: {
            line: 52,
            column: 34
          }
        }, {
          start: {
            line: 52,
            column: 39
          },
          end: {
            line: 52,
            column: 64
          }
        }, {
          start: {
            line: 52,
            column: 68
          },
          end: {
            line: 52,
            column: 78
          }
        }],
        line: 52
      },
      "4": {
        loc: {
          start: {
            line: 60,
            column: 20
          },
          end: {
            line: 60,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 20
          },
          end: {
            line: 60,
            column: 40
          }
        }, {
          start: {
            line: 60,
            column: 44
          },
          end: {
            line: 60,
            column: 53
          }
        }],
        line: 60
      },
      "5": {
        loc: {
          start: {
            line: 66,
            column: 14
          },
          end: {
            line: 66,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 66,
            column: 23
          },
          end: {
            line: 66,
            column: 53
          }
        }, {
          start: {
            line: 66,
            column: 56
          },
          end: {
            line: 66,
            column: 65
          }
        }],
        line: 66
      },
      "6": {
        loc: {
          start: {
            line: 100,
            column: 20
          },
          end: {
            line: 100,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 20
          },
          end: {
            line: 100,
            column: 40
          }
        }, {
          start: {
            line: 100,
            column: 44
          },
          end: {
            line: 100,
            column: 53
          }
        }],
        line: 100
      },
      "7": {
        loc: {
          start: {
            line: 108,
            column: 14
          },
          end: {
            line: 108,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 108,
            column: 23
          },
          end: {
            line: 108,
            column: 53
          }
        }, {
          start: {
            line: 108,
            column: 56
          },
          end: {
            line: 108,
            column: 65
          }
        }],
        line: 108
      },
      "8": {
        loc: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "9": {
        loc: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "10": {
        loc: {
          start: {
            line: 150,
            column: 20
          },
          end: {
            line: 150,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 150,
            column: 20
          },
          end: {
            line: 150,
            column: 40
          }
        }, {
          start: {
            line: 150,
            column: 44
          },
          end: {
            line: 150,
            column: 53
          }
        }],
        line: 150
      },
      "11": {
        loc: {
          start: {
            line: 158,
            column: 14
          },
          end: {
            line: 158,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 158,
            column: 23
          },
          end: {
            line: 158,
            column: 53
          }
        }, {
          start: {
            line: 158,
            column: 56
          },
          end: {
            line: 158,
            column: 65
          }
        }],
        line: 158
      },
      "12": {
        loc: {
          start: {
            line: 168,
            column: 18
          },
          end: {
            line: 168,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 18
          },
          end: {
            line: 168,
            column: 28
          }
        }, {
          start: {
            line: 168,
            column: 32
          },
          end: {
            line: 168,
            column: 34
          }
        }],
        line: 168
      },
      "13": {
        loc: {
          start: {
            line: 169,
            column: 22
          },
          end: {
            line: 174,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 169,
            column: 22
          },
          end: {
            line: 169,
            column: 36
          }
        }, {
          start: {
            line: 169,
            column: 40
          },
          end: {
            line: 174,
            column: 7
          }
        }],
        line: 169
      },
      "14": {
        loc: {
          start: {
            line: 175,
            column: 14
          },
          end: {
            line: 175,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 175,
            column: 14
          },
          end: {
            line: 175,
            column: 20
          }
        }, {
          start: {
            line: 175,
            column: 24
          },
          end: {
            line: 175,
            column: 29
          }
        }],
        line: 175
      },
      "15": {
        loc: {
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 176,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 176,
            column: 16
          }
        }, {
          start: {
            line: 176,
            column: 20
          },
          end: {
            line: 176,
            column: 38
          }
        }],
        line: 176
      },
      "16": {
        loc: {
          start: {
            line: 177,
            column: 19
          },
          end: {
            line: 177,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 177,
            column: 19
          },
          end: {
            line: 177,
            column: 30
          }
        }, {
          start: {
            line: 177,
            column: 34
          },
          end: {
            line: 177,
            column: 70
          }
        }],
        line: 177
      },
      "17": {
        loc: {
          start: {
            line: 216,
            column: 20
          },
          end: {
            line: 216,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 216,
            column: 20
          },
          end: {
            line: 216,
            column: 40
          }
        }, {
          start: {
            line: 216,
            column: 44
          },
          end: {
            line: 216,
            column: 53
          }
        }],
        line: 216
      },
      "18": {
        loc: {
          start: {
            line: 226,
            column: 14
          },
          end: {
            line: 226,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 226,
            column: 23
          },
          end: {
            line: 226,
            column: 53
          }
        }, {
          start: {
            line: 226,
            column: 56
          },
          end: {
            line: 226,
            column: 65
          }
        }],
        line: 226
      },
      "19": {
        loc: {
          start: {
            line: 242,
            column: 20
          },
          end: {
            line: 242,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 242,
            column: 20
          },
          end: {
            line: 242,
            column: 50
          }
        }, {
          start: {
            line: 242,
            column: 54
          },
          end: {
            line: 242,
            column: 55
          }
        }],
        line: 242
      },
      "20": {
        loc: {
          start: {
            line: 243,
            column: 18
          },
          end: {
            line: 243,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 243,
            column: 18
          },
          end: {
            line: 243,
            column: 44
          }
        }, {
          start: {
            line: 243,
            column: 48
          },
          end: {
            line: 243,
            column: 49
          }
        }],
        line: 243
      },
      "21": {
        loc: {
          start: {
            line: 267,
            column: 20
          },
          end: {
            line: 267,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 267,
            column: 20
          },
          end: {
            line: 267,
            column: 40
          }
        }, {
          start: {
            line: 267,
            column: 44
          },
          end: {
            line: 267,
            column: 53
          }
        }],
        line: 267
      },
      "22": {
        loc: {
          start: {
            line: 276,
            column: 14
          },
          end: {
            line: 276,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 276,
            column: 23
          },
          end: {
            line: 276,
            column: 53
          }
        }, {
          start: {
            line: 276,
            column: 56
          },
          end: {
            line: 276,
            column: 65
          }
        }],
        line: 276
      },
      "23": {
        loc: {
          start: {
            line: 282,
            column: 4
          },
          end: {
            line: 300,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 282,
            column: 4
          },
          end: {
            line: 300,
            column: 5
          }
        }, {
          start: {
            line: 297,
            column: 11
          },
          end: {
            line: 300,
            column: 5
          }
        }],
        line: 282
      },
      "24": {
        loc: {
          start: {
            line: 285,
            column: 6
          },
          end: {
            line: 296,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 285,
            column: 6
          },
          end: {
            line: 296,
            column: 7
          }
        }, {
          start: {
            line: 293,
            column: 13
          },
          end: {
            line: 296,
            column: 7
          }
        }],
        line: 285
      },
      "25": {
        loc: {
          start: {
            line: 319,
            column: 20
          },
          end: {
            line: 319,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 319,
            column: 20
          },
          end: {
            line: 319,
            column: 40
          }
        }, {
          start: {
            line: 319,
            column: 44
          },
          end: {
            line: 319,
            column: 53
          }
        }],
        line: 319
      },
      "26": {
        loc: {
          start: {
            line: 327,
            column: 14
          },
          end: {
            line: 327,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 327,
            column: 23
          },
          end: {
            line: 327,
            column: 53
          }
        }, {
          start: {
            line: 327,
            column: 56
          },
          end: {
            line: 327,
            column: 65
          }
        }],
        line: 327
      },
      "27": {
        loc: {
          start: {
            line: 365,
            column: 20
          },
          end: {
            line: 365,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 365,
            column: 20
          },
          end: {
            line: 365,
            column: 40
          }
        }, {
          start: {
            line: 365,
            column: 44
          },
          end: {
            line: 365,
            column: 53
          }
        }],
        line: 365
      },
      "28": {
        loc: {
          start: {
            line: 367,
            column: 10
          },
          end: {
            line: 367,
            column: 20
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 367,
            column: 18
          },
          end: {
            line: 367,
            column: 20
          }
        }],
        line: 367
      },
      "29": {
        loc: {
          start: {
            line: 367,
            column: 22
          },
          end: {
            line: 367,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 367,
            column: 31
          },
          end: {
            line: 367,
            column: 32
          }
        }],
        line: 367
      },
      "30": {
        loc: {
          start: {
            line: 374,
            column: 14
          },
          end: {
            line: 374,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 374,
            column: 23
          },
          end: {
            line: 374,
            column: 53
          }
        }, {
          start: {
            line: 374,
            column: 56
          },
          end: {
            line: 374,
            column: 65
          }
        }],
        line: 374
      },
      "31": {
        loc: {
          start: {
            line: 425,
            column: 20
          },
          end: {
            line: 425,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 425,
            column: 20
          },
          end: {
            line: 425,
            column: 40
          }
        }, {
          start: {
            line: 425,
            column: 44
          },
          end: {
            line: 425,
            column: 53
          }
        }],
        line: 425
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0],
      "29": [0],
      "30": [0, 0],
      "31": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "824ab6cb31a69542e8449c016f4976647f5f253f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_xkspvi43q = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_xkspvi43q();
const express =
/* istanbul ignore next */
(cov_xkspvi43q().s[0]++, require('express'));
const {
  authenticateToken
} =
/* istanbul ignore next */
(cov_xkspvi43q().s[1]++, require('../middleware/auth'));
const {
  createValidationMiddleware,
  sanitizers
} =
/* istanbul ignore next */
(cov_xkspvi43q().s[2]++, require('../middleware/validation'));
const tradingStrategyEngine =
/* istanbul ignore next */
(cov_xkspvi43q().s[3]++, require('../utils/tradingStrategyEngine'));
const logger =
/* istanbul ignore next */
(cov_xkspvi43q().s[4]++, require('../utils/logger'));
const {
  responseFormatter
} =
/* istanbul ignore next */
(cov_xkspvi43q().s[5]++, require('../utils/responseFormatter'));
const router =
/* istanbul ignore next */
(cov_xkspvi43q().s[6]++, express.Router());

// Apply authentication middleware to all routes
/* istanbul ignore next */
cov_xkspvi43q().s[7]++;
router.use(authenticateToken);

// Validation schemas for trading strategy endpoints
const strategyValidationSchemas =
/* istanbul ignore next */
(cov_xkspvi43q().s[8]++, {
  create: {
    type: {
      required: true,
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_xkspvi43q().f[0]++;
        cov_xkspvi43q().s[9]++;
        return sanitizers.string(value, {
          maxLength: 50,
          trim: true
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_xkspvi43q().f[1]++;
        cov_xkspvi43q().s[10]++;
        return ['momentum', 'mean_reversion', 'breakout', 'pattern_recognition'].includes(value);
      },
      errorMessage: 'Type must be one of: momentum, mean_reversion, breakout, pattern_recognition'
    },
    symbols: {
      required: true,
      type: 'array',
      validator: value => {
        /* istanbul ignore next */
        cov_xkspvi43q().f[2]++;
        cov_xkspvi43q().s[11]++;
        return /* istanbul ignore next */(cov_xkspvi43q().b[0][0]++, Array.isArray(value)) &&
        /* istanbul ignore next */
        (cov_xkspvi43q().b[0][1]++, value.length > 0) &&
        /* istanbul ignore next */
        (cov_xkspvi43q().b[0][2]++, value.length <= 10);
      },
      errorMessage: 'Symbols must be an array with 1-10 stock symbols'
    },
    active: {
      type: 'boolean',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_xkspvi43q().f[3]++;
        cov_xkspvi43q().s[12]++;
        return sanitizers.boolean(value, {
          defaultValue: false
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_xkspvi43q().f[4]++;
        cov_xkspvi43q().s[13]++;
        return typeof value === 'boolean';
      },
      errorMessage: 'Active must be true or false'
    },
    name: {
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_xkspvi43q().f[5]++;
        cov_xkspvi43q().s[14]++;
        return sanitizers.string(value, {
          maxLength: 100,
          trim: true
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_xkspvi43q().f[6]++;
        cov_xkspvi43q().s[15]++;
        return /* istanbul ignore next */(cov_xkspvi43q().b[1][0]++, !value) ||
        /* istanbul ignore next */
        (cov_xkspvi43q().b[1][1]++, value.length >= 2) &&
        /* istanbul ignore next */
        (cov_xkspvi43q().b[1][2]++, value.length <= 100);
      },
      errorMessage: 'Name must be 2-100 characters if provided'
    },
    description: {
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_xkspvi43q().f[7]++;
        cov_xkspvi43q().s[16]++;
        return sanitizers.string(value, {
          maxLength: 500,
          trim: true
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_xkspvi43q().f[8]++;
        cov_xkspvi43q().s[17]++;
        return /* istanbul ignore next */(cov_xkspvi43q().b[2][0]++, !value) ||
        /* istanbul ignore next */
        (cov_xkspvi43q().b[2][1]++, value.length <= 500);
      },
      errorMessage: 'Description must be 500 characters or less'
    }
  },
  execute: {
    signal: {
      type: 'object',
      validator: value => {
        /* istanbul ignore next */
        cov_xkspvi43q().f[9]++;
        cov_xkspvi43q().s[18]++;
        return /* istanbul ignore next */(cov_xkspvi43q().b[3][0]++, !value) ||
        /* istanbul ignore next */
        (cov_xkspvi43q().b[3][1]++, typeof value === 'object') &&
        /* istanbul ignore next */
        (cov_xkspvi43q().b[3][2]++, value.type);
      },
      errorMessage: 'Signal must be an object with a type property'
    }
  }
});

// Get all trading strategies for authenticated user
/* istanbul ignore next */
cov_xkspvi43q().s[19]++;
router.get('/', async (req, res) => {
  /* istanbul ignore next */
  cov_xkspvi43q().f[10]++;
  const requestId =
  /* istanbul ignore next */
  (cov_xkspvi43q().s[20]++,
  /* istanbul ignore next */
  (cov_xkspvi43q().b[4][0]++, res.locals.requestId) ||
  /* istanbul ignore next */
  (cov_xkspvi43q().b[4][1]++, 'unknown'));
  /* istanbul ignore next */
  cov_xkspvi43q().s[21]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[22]++, req.user.sub);
    /* istanbul ignore next */
    cov_xkspvi43q().s[23]++;
    logger.info(`📊 [${requestId}] Fetching user trading strategies`, {
      userId: userId ?
      /* istanbul ignore next */
      (cov_xkspvi43q().b[5][0]++, `${userId.substring(0, 8)}...`) :
      /* istanbul ignore next */
      (cov_xkspvi43q().b[5][1]++, 'unknown')
    });
    const strategies =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[24]++, await tradingStrategyEngine.getUserStrategies(userId));
    const response =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[25]++, responseFormatter.success({
      strategies,
      totalCount: strategies.length,
      activeCount: strategies.filter(s => {
        /* istanbul ignore next */
        cov_xkspvi43q().f[11]++;
        cov_xkspvi43q().s[26]++;
        return s.is_active;
      }).length
    }, 'Trading strategies retrieved successfully'));
    /* istanbul ignore next */
    cov_xkspvi43q().s[27]++;
    logger.info(`✅ [${requestId}] User strategies retrieved`, {
      totalCount: strategies.length,
      activeCount: strategies.filter(s => {
        /* istanbul ignore next */
        cov_xkspvi43q().f[12]++;
        cov_xkspvi43q().s[28]++;
        return s.is_active;
      }).length
    });
    /* istanbul ignore next */
    cov_xkspvi43q().s[29]++;
    res.json(response);
  } catch (error) {
    /* istanbul ignore next */
    cov_xkspvi43q().s[30]++;
    logger.error(`❌ [${requestId}] Error retrieving strategies`, {
      error: error.message,
      errorStack: error.stack
    });
    const response =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[31]++, responseFormatter.error('Failed to retrieve trading strategies', 500, {
      details: error.message
    }));
    /* istanbul ignore next */
    cov_xkspvi43q().s[32]++;
    res.status(500).json(response);
  }
});

// Get specific trading strategy
/* istanbul ignore next */
cov_xkspvi43q().s[33]++;
router.get('/:strategyId', async (req, res) => {
  /* istanbul ignore next */
  cov_xkspvi43q().f[13]++;
  const requestId =
  /* istanbul ignore next */
  (cov_xkspvi43q().s[34]++,
  /* istanbul ignore next */
  (cov_xkspvi43q().b[6][0]++, res.locals.requestId) ||
  /* istanbul ignore next */
  (cov_xkspvi43q().b[6][1]++, 'unknown'));
  const {
    strategyId
  } =
  /* istanbul ignore next */
  (cov_xkspvi43q().s[35]++, req.params);
  /* istanbul ignore next */
  cov_xkspvi43q().s[36]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[37]++, req.user.sub);
    /* istanbul ignore next */
    cov_xkspvi43q().s[38]++;
    logger.info(`📊 [${requestId}] Fetching strategy details`, {
      strategyId,
      userId: userId ?
      /* istanbul ignore next */
      (cov_xkspvi43q().b[7][0]++, `${userId.substring(0, 8)}...`) :
      /* istanbul ignore next */
      (cov_xkspvi43q().b[7][1]++, 'unknown')
    });
    const strategy =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[39]++, await tradingStrategyEngine.getStrategyPerformance(strategyId));
    /* istanbul ignore next */
    cov_xkspvi43q().s[40]++;
    if (!strategy) {
      /* istanbul ignore next */
      cov_xkspvi43q().b[8][0]++;
      const response =
      /* istanbul ignore next */
      (cov_xkspvi43q().s[41]++, responseFormatter.error('Strategy not found', 404));
      /* istanbul ignore next */
      cov_xkspvi43q().s[42]++;
      return res.status(404).json(response);
    } else
    /* istanbul ignore next */
    {
      cov_xkspvi43q().b[8][1]++;
    }

    // Verify ownership
    cov_xkspvi43q().s[43]++;
    if (strategy.user_id !== userId) {
      /* istanbul ignore next */
      cov_xkspvi43q().b[9][0]++;
      const response =
      /* istanbul ignore next */
      (cov_xkspvi43q().s[44]++, responseFormatter.error('Access denied', 403));
      /* istanbul ignore next */
      cov_xkspvi43q().s[45]++;
      return res.status(403).json(response);
    } else
    /* istanbul ignore next */
    {
      cov_xkspvi43q().b[9][1]++;
    }
    const response =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[46]++, responseFormatter.success(strategy, 'Strategy details retrieved successfully'));
    /* istanbul ignore next */
    cov_xkspvi43q().s[47]++;
    logger.info(`✅ [${requestId}] Strategy details retrieved`, {
      strategyId,
      strategyType: strategy.strategy_type
    });
    /* istanbul ignore next */
    cov_xkspvi43q().s[48]++;
    res.json(response);
  } catch (error) {
    /* istanbul ignore next */
    cov_xkspvi43q().s[49]++;
    logger.error(`❌ [${requestId}] Error retrieving strategy details`, {
      error: error.message,
      errorStack: error.stack,
      strategyId
    });
    const response =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[50]++, responseFormatter.error('Failed to retrieve strategy details', 500, {
      details: error.message
    }));
    /* istanbul ignore next */
    cov_xkspvi43q().s[51]++;
    res.status(500).json(response);
  }
});

// Create new trading strategy
/* istanbul ignore next */
cov_xkspvi43q().s[52]++;
router.post('/', createValidationMiddleware(strategyValidationSchemas.create), async (req, res) => {
  /* istanbul ignore next */
  cov_xkspvi43q().f[14]++;
  const requestId =
  /* istanbul ignore next */
  (cov_xkspvi43q().s[53]++,
  /* istanbul ignore next */
  (cov_xkspvi43q().b[10][0]++, res.locals.requestId) ||
  /* istanbul ignore next */
  (cov_xkspvi43q().b[10][1]++, 'unknown'));
  const startTime =
  /* istanbul ignore next */
  (cov_xkspvi43q().s[54]++, Date.now());
  /* istanbul ignore next */
  cov_xkspvi43q().s[55]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[56]++, req.user.sub);
    const {
      type,
      symbols,
      parameters,
      riskManagement,
      active,
      name,
      description
    } =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[57]++, req.body);
    /* istanbul ignore next */
    cov_xkspvi43q().s[58]++;
    logger.info(`🚀 [${requestId}] Creating new trading strategy`, {
      userId: userId ?
      /* istanbul ignore next */
      (cov_xkspvi43q().b[11][0]++, `${userId.substring(0, 8)}...`) :
      /* istanbul ignore next */
      (cov_xkspvi43q().b[11][1]++, 'unknown'),
      strategyType: type,
      symbols: symbols,
      active: active
    });

    // Build strategy configuration
    const strategyConfig =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[59]++, {
      type,
      symbols,
      parameters:
      /* istanbul ignore next */
      (cov_xkspvi43q().b[12][0]++, parameters) ||
      /* istanbul ignore next */
      (cov_xkspvi43q().b[12][1]++, {}),
      riskManagement:
      /* istanbul ignore next */
      (cov_xkspvi43q().b[13][0]++, riskManagement) ||
      /* istanbul ignore next */
      (cov_xkspvi43q().b[13][1]++, {
        riskPerTrade: 0.02,
        maxPositionSize: 0.1,
        stopLoss: 0.05,
        takeProfit: 0.10
      }),
      active:
      /* istanbul ignore next */
      (cov_xkspvi43q().b[14][0]++, active) ||
      /* istanbul ignore next */
      (cov_xkspvi43q().b[14][1]++, false),
      name:
      /* istanbul ignore next */
      (cov_xkspvi43q().b[15][0]++, name) ||
      /* istanbul ignore next */
      (cov_xkspvi43q().b[15][1]++, `${type} Strategy`),
      description:
      /* istanbul ignore next */
      (cov_xkspvi43q().b[16][0]++, description) ||
      /* istanbul ignore next */
      (cov_xkspvi43q().b[16][1]++, `Automated ${type} trading strategy`),
      provider: 'alpaca'
    });

    // Register strategy with engine
    const result =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[60]++, await tradingStrategyEngine.registerStrategy(userId, strategyConfig));
    const response =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[61]++, responseFormatter.success({
      strategyId: result.strategyId,
      status: result.status,
      active: result.active,
      configuration: strategyConfig
    }, 'Trading strategy created successfully'));
    /* istanbul ignore next */
    cov_xkspvi43q().s[62]++;
    logger.info(`✅ [${requestId}] Strategy created successfully`, {
      strategyId: result.strategyId,
      strategyType: type,
      totalTime: Date.now() - startTime
    });
    /* istanbul ignore next */
    cov_xkspvi43q().s[63]++;
    res.status(201).json(response);
  } catch (error) {
    /* istanbul ignore next */
    cov_xkspvi43q().s[64]++;
    logger.error(`❌ [${requestId}] Error creating strategy`, {
      error: error.message,
      errorStack: error.stack,
      totalTime: Date.now() - startTime
    });
    const response =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[65]++, responseFormatter.error('Failed to create trading strategy', 500, {
      details: error.message
    }));
    /* istanbul ignore next */
    cov_xkspvi43q().s[66]++;
    res.status(500).json(response);
  }
});

// Execute trading strategy
/* istanbul ignore next */
cov_xkspvi43q().s[67]++;
router.post('/:strategyId/execute', createValidationMiddleware(strategyValidationSchemas.execute), async (req, res) => {
  /* istanbul ignore next */
  cov_xkspvi43q().f[15]++;
  const requestId =
  /* istanbul ignore next */
  (cov_xkspvi43q().s[68]++,
  /* istanbul ignore next */
  (cov_xkspvi43q().b[17][0]++, res.locals.requestId) ||
  /* istanbul ignore next */
  (cov_xkspvi43q().b[17][1]++, 'unknown'));
  const {
    strategyId
  } =
  /* istanbul ignore next */
  (cov_xkspvi43q().s[69]++, req.params);
  const {
    signal
  } =
  /* istanbul ignore next */
  (cov_xkspvi43q().s[70]++, req.body);
  const startTime =
  /* istanbul ignore next */
  (cov_xkspvi43q().s[71]++, Date.now());
  /* istanbul ignore next */
  cov_xkspvi43q().s[72]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[73]++, req.user.sub);
    /* istanbul ignore next */
    cov_xkspvi43q().s[74]++;
    logger.info(`🎯 [${requestId}] Executing trading strategy`, {
      strategyId,
      userId: userId ?
      /* istanbul ignore next */
      (cov_xkspvi43q().b[18][0]++, `${userId.substring(0, 8)}...`) :
      /* istanbul ignore next */
      (cov_xkspvi43q().b[18][1]++, 'unknown'),
      hasSignal: !!signal
    });

    // Execute strategy
    const executionResult =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[75]++, await tradingStrategyEngine.executeStrategy(strategyId, signal));
    const response =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[76]++, responseFormatter.success({
      executionId: `exec-${Date.now()}`,
      strategyId,
      executionResult,
      executionTime: Date.now() - startTime
    }, 'Strategy executed successfully'));
    /* istanbul ignore next */
    cov_xkspvi43q().s[77]++;
    logger.info(`✅ [${requestId}] Strategy executed successfully`, {
      strategyId,
      ordersPlaced:
      /* istanbul ignore next */
      (cov_xkspvi43q().b[19][0]++, executionResult.orders?.length) ||
      /* istanbul ignore next */
      (cov_xkspvi43q().b[19][1]++, 0),
      totalValue:
      /* istanbul ignore next */
      (cov_xkspvi43q().b[20][0]++, executionResult.totalValue) ||
      /* istanbul ignore next */
      (cov_xkspvi43q().b[20][1]++, 0),
      totalTime: Date.now() - startTime
    });
    /* istanbul ignore next */
    cov_xkspvi43q().s[78]++;
    res.json(response);
  } catch (error) {
    /* istanbul ignore next */
    cov_xkspvi43q().s[79]++;
    logger.error(`❌ [${requestId}] Error executing strategy`, {
      error: error.message,
      errorStack: error.stack,
      strategyId,
      totalTime: Date.now() - startTime
    });
    const response =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[80]++, responseFormatter.error('Failed to execute trading strategy', 500, {
      details: error.message
    }));
    /* istanbul ignore next */
    cov_xkspvi43q().s[81]++;
    res.status(500).json(response);
  }
});

// Update trading strategy
/* istanbul ignore next */
cov_xkspvi43q().s[82]++;
router.put('/:strategyId', async (req, res) => {
  /* istanbul ignore next */
  cov_xkspvi43q().f[16]++;
  const requestId =
  /* istanbul ignore next */
  (cov_xkspvi43q().s[83]++,
  /* istanbul ignore next */
  (cov_xkspvi43q().b[21][0]++, res.locals.requestId) ||
  /* istanbul ignore next */
  (cov_xkspvi43q().b[21][1]++, 'unknown'));
  const {
    strategyId
  } =
  /* istanbul ignore next */
  (cov_xkspvi43q().s[84]++, req.params);
  /* istanbul ignore next */
  cov_xkspvi43q().s[85]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[86]++, req.user.sub);
    const {
      active,
      parameters,
      riskManagement,
      name,
      description
    } =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[87]++, req.body);
    /* istanbul ignore next */
    cov_xkspvi43q().s[88]++;
    logger.info(`🔄 [${requestId}] Updating trading strategy`, {
      strategyId,
      userId: userId ?
      /* istanbul ignore next */
      (cov_xkspvi43q().b[22][0]++, `${userId.substring(0, 8)}...`) :
      /* istanbul ignore next */
      (cov_xkspvi43q().b[22][1]++, 'unknown'),
      active
    });

    // For now, we'll implement a simple active/inactive toggle
    // More comprehensive updates would require additional validation
    /* istanbul ignore next */
    cov_xkspvi43q().s[89]++;
    if (active === false) {
      /* istanbul ignore next */
      cov_xkspvi43q().b[23][0]++;
      const result =
      /* istanbul ignore next */
      (cov_xkspvi43q().s[90]++, await tradingStrategyEngine.deactivateStrategy(strategyId));
      /* istanbul ignore next */
      cov_xkspvi43q().s[91]++;
      if (result) {
        /* istanbul ignore next */
        cov_xkspvi43q().b[24][0]++;
        const response =
        /* istanbul ignore next */
        (cov_xkspvi43q().s[92]++, responseFormatter.success({
          strategyId,
          status: 'deactivated'
        }, 'Strategy deactivated successfully'));
        /* istanbul ignore next */
        cov_xkspvi43q().s[93]++;
        logger.info(`✅ [${requestId}] Strategy deactivated`, {
          strategyId
        });
        /* istanbul ignore next */
        cov_xkspvi43q().s[94]++;
        res.json(response);
      } else {
        /* istanbul ignore next */
        cov_xkspvi43q().b[24][1]++;
        const response =
        /* istanbul ignore next */
        (cov_xkspvi43q().s[95]++, responseFormatter.error('Failed to deactivate strategy', 500));
        /* istanbul ignore next */
        cov_xkspvi43q().s[96]++;
        res.status(500).json(response);
      }
    } else {
      /* istanbul ignore next */
      cov_xkspvi43q().b[23][1]++;
      const response =
      /* istanbul ignore next */
      (cov_xkspvi43q().s[97]++, responseFormatter.error('Strategy updates not fully implemented', 501));
      /* istanbul ignore next */
      cov_xkspvi43q().s[98]++;
      res.status(501).json(response);
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_xkspvi43q().s[99]++;
    logger.error(`❌ [${requestId}] Error updating strategy`, {
      error: error.message,
      errorStack: error.stack,
      strategyId
    });
    const response =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[100]++, responseFormatter.error('Failed to update trading strategy', 500, {
      details: error.message
    }));
    /* istanbul ignore next */
    cov_xkspvi43q().s[101]++;
    res.status(500).json(response);
  }
});

// Delete trading strategy
/* istanbul ignore next */
cov_xkspvi43q().s[102]++;
router.delete('/:strategyId', async (req, res) => {
  /* istanbul ignore next */
  cov_xkspvi43q().f[17]++;
  const requestId =
  /* istanbul ignore next */
  (cov_xkspvi43q().s[103]++,
  /* istanbul ignore next */
  (cov_xkspvi43q().b[25][0]++, res.locals.requestId) ||
  /* istanbul ignore next */
  (cov_xkspvi43q().b[25][1]++, 'unknown'));
  const {
    strategyId
  } =
  /* istanbul ignore next */
  (cov_xkspvi43q().s[104]++, req.params);
  /* istanbul ignore next */
  cov_xkspvi43q().s[105]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[106]++, req.user.sub);
    /* istanbul ignore next */
    cov_xkspvi43q().s[107]++;
    logger.info(`🗑️ [${requestId}] Deleting trading strategy`, {
      strategyId,
      userId: userId ?
      /* istanbul ignore next */
      (cov_xkspvi43q().b[26][0]++, `${userId.substring(0, 8)}...`) :
      /* istanbul ignore next */
      (cov_xkspvi43q().b[26][1]++, 'unknown')
    });

    // First deactivate the strategy
    /* istanbul ignore next */
    cov_xkspvi43q().s[108]++;
    await tradingStrategyEngine.deactivateStrategy(strategyId);

    // Then delete from database
    const {
      query
    } =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[109]++, require('../utils/database'));
    /* istanbul ignore next */
    cov_xkspvi43q().s[110]++;
    await query(`
      DELETE FROM trading_strategies 
      WHERE id = $1 AND user_id = $2
    `, [strategyId, userId]);
    const response =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[111]++, responseFormatter.success({
      strategyId,
      status: 'deleted'
    }, 'Strategy deleted successfully'));
    /* istanbul ignore next */
    cov_xkspvi43q().s[112]++;
    logger.info(`✅ [${requestId}] Strategy deleted`, {
      strategyId
    });
    /* istanbul ignore next */
    cov_xkspvi43q().s[113]++;
    res.json(response);
  } catch (error) {
    /* istanbul ignore next */
    cov_xkspvi43q().s[114]++;
    logger.error(`❌ [${requestId}] Error deleting strategy`, {
      error: error.message,
      errorStack: error.stack,
      strategyId
    });
    const response =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[115]++, responseFormatter.error('Failed to delete trading strategy', 500, {
      details: error.message
    }));
    /* istanbul ignore next */
    cov_xkspvi43q().s[116]++;
    res.status(500).json(response);
  }
});

// Get strategy execution history
/* istanbul ignore next */
cov_xkspvi43q().s[117]++;
router.get('/:strategyId/executions', async (req, res) => {
  /* istanbul ignore next */
  cov_xkspvi43q().f[18]++;
  const requestId =
  /* istanbul ignore next */
  (cov_xkspvi43q().s[118]++,
  /* istanbul ignore next */
  (cov_xkspvi43q().b[27][0]++, res.locals.requestId) ||
  /* istanbul ignore next */
  (cov_xkspvi43q().b[27][1]++, 'unknown'));
  const {
    strategyId
  } =
  /* istanbul ignore next */
  (cov_xkspvi43q().s[119]++, req.params);
  const {
    limit =
    /* istanbul ignore next */
    (cov_xkspvi43q().b[28][0]++, 50),
    offset =
    /* istanbul ignore next */
    (cov_xkspvi43q().b[29][0]++, 0)
  } =
  /* istanbul ignore next */
  (cov_xkspvi43q().s[120]++, req.query);
  /* istanbul ignore next */
  cov_xkspvi43q().s[121]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[122]++, req.user.sub);
    /* istanbul ignore next */
    cov_xkspvi43q().s[123]++;
    logger.info(`📊 [${requestId}] Fetching strategy execution history`, {
      strategyId,
      userId: userId ?
      /* istanbul ignore next */
      (cov_xkspvi43q().b[30][0]++, `${userId.substring(0, 8)}...`) :
      /* istanbul ignore next */
      (cov_xkspvi43q().b[30][1]++, 'unknown'),
      limit,
      offset
    });
    const {
      query
    } =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[124]++, require('../utils/database'));
    const result =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[125]++, await query(`
      SELECT 
        e.*,
        s.user_id
      FROM strategy_executions e
      JOIN trading_strategies s ON e.strategy_id = s.id
      WHERE e.strategy_id = $1 AND s.user_id = $2
      ORDER BY e.executed_at DESC
      LIMIT $3 OFFSET $4
    `, [strategyId, userId, limit, offset]));
    const response =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[126]++, responseFormatter.success({
      executions: result.rows,
      strategyId,
      pagination: {
        limit: parseInt(limit),
        offset: parseInt(offset),
        total: result.rows.length
      }
    }, 'Strategy execution history retrieved successfully'));
    /* istanbul ignore next */
    cov_xkspvi43q().s[127]++;
    logger.info(`✅ [${requestId}] Execution history retrieved`, {
      strategyId,
      executionCount: result.rows.length
    });
    /* istanbul ignore next */
    cov_xkspvi43q().s[128]++;
    res.json(response);
  } catch (error) {
    /* istanbul ignore next */
    cov_xkspvi43q().s[129]++;
    logger.error(`❌ [${requestId}] Error retrieving execution history`, {
      error: error.message,
      errorStack: error.stack,
      strategyId
    });
    const response =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[130]++, responseFormatter.error('Failed to retrieve execution history', 500, {
      details: error.message
    }));
    /* istanbul ignore next */
    cov_xkspvi43q().s[131]++;
    res.status(500).json(response);
  }
});

// Get available strategy types and their configurations
/* istanbul ignore next */
cov_xkspvi43q().s[132]++;
router.get('/config/types', async (req, res) => {
  /* istanbul ignore next */
  cov_xkspvi43q().f[19]++;
  const requestId =
  /* istanbul ignore next */
  (cov_xkspvi43q().s[133]++,
  /* istanbul ignore next */
  (cov_xkspvi43q().b[31][0]++, res.locals.requestId) ||
  /* istanbul ignore next */
  (cov_xkspvi43q().b[31][1]++, 'unknown'));
  /* istanbul ignore next */
  cov_xkspvi43q().s[134]++;
  try {
    /* istanbul ignore next */
    cov_xkspvi43q().s[135]++;
    logger.info(`📋 [${requestId}] Fetching available strategy types`);
    const strategyTypes =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[136]++, {
      momentum: {
        name: 'Momentum Strategy',
        description: 'Follows price momentum and trend direction',
        parameters: {
          lookbackPeriod: {
            type: 'number',
            default: 20,
            min: 5,
            max: 100
          },
          momentumThreshold: {
            type: 'number',
            default: 0.02,
            min: 0.01,
            max: 0.1
          },
          rsiOverbought: {
            type: 'number',
            default: 70,
            min: 50,
            max: 90
          },
          rsiOversold: {
            type: 'number',
            default: 30,
            min: 10,
            max: 50
          }
        }
      },
      mean_reversion: {
        name: 'Mean Reversion Strategy',
        description: 'Trades based on price returning to historical average',
        parameters: {
          lookbackPeriod: {
            type: 'number',
            default: 20,
            min: 10,
            max: 50
          },
          smaLength: {
            type: 'number',
            default: 20,
            min: 10,
            max: 50
          },
          buyThreshold: {
            type: 'number',
            default: -0.02,
            min: -0.1,
            max: -0.01
          },
          sellThreshold: {
            type: 'number',
            default: 0.02,
            min: 0.01,
            max: 0.1
          }
        }
      },
      breakout: {
        name: 'Breakout Strategy',
        description: 'Trades on price breaking through support or resistance',
        parameters: {
          lookbackPeriod: {
            type: 'number',
            default: 50,
            min: 20,
            max: 100
          },
          breakoutPeriod: {
            type: 'number',
            default: 20,
            min: 10,
            max: 50
          },
          volumeMultiplier: {
            type: 'number',
            default: 1.5,
            min: 1.0,
            max: 3.0
          }
        }
      },
      pattern_recognition: {
        name: 'Pattern Recognition Strategy',
        description: 'Trades based on technical chart patterns',
        parameters: {
          lookbackPeriod: {
            type: 'number',
            default: 100,
            min: 50,
            max: 200
          },
          confidenceThreshold: {
            type: 'number',
            default: 0.7,
            min: 0.5,
            max: 0.9
          },
          patterns: {
            type: 'array',
            default: ['double_top', 'double_bottom', 'head_shoulders']
          }
        }
      }
    });
    const response =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[137]++, responseFormatter.success({
      strategyTypes,
      supportedProviders: ['alpaca'],
      riskManagementDefaults: {
        riskPerTrade: 0.02,
        maxPositionSize: 0.1,
        stopLoss: 0.05,
        takeProfit: 0.10
      }
    }, 'Strategy configuration retrieved successfully'));
    /* istanbul ignore next */
    cov_xkspvi43q().s[138]++;
    res.json(response);
  } catch (error) {
    /* istanbul ignore next */
    cov_xkspvi43q().s[139]++;
    logger.error(`❌ [${requestId}] Error retrieving strategy config`, {
      error: error.message,
      errorStack: error.stack
    });
    const response =
    /* istanbul ignore next */
    (cov_xkspvi43q().s[140]++, responseFormatter.error('Failed to retrieve strategy configuration', 500, {
      details: error.message
    }));
    /* istanbul ignore next */
    cov_xkspvi43q().s[141]++;
    res.status(500).json(response);
  }
});
/* istanbul ignore next */
cov_xkspvi43q().s[142]++;
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,