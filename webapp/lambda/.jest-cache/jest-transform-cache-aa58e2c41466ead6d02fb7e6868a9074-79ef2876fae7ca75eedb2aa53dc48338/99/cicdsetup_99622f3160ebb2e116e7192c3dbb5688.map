{"version":3,"names":["_getJestObj","mock","SecretsManagerClient","jest","fn","send","mockResolvedValue","SecretString","JSON","stringify","host","process","env","DB_HOST","port","DB_PORT","database","DB_NAME","username","DB_USER","password","DB_PASSWORD","ssl","GetSecretValueCommand","CognitoIdentityProviderClient","UserPoolId","ClientId","require","path","config","join","__dirname","console","log","NODE_ENV","ALLOW_TEST_AUTH_BYPASS","JWT_SECRET","API_KEY_ENCRYPTION_SECRET","DB_SSL","AWS_REGION","DB_SECRET_ARN","API_KEY_ENCRYPTION_SECRET_ARN","setTimeout","global","testConfig","user","jwt","secret","encryption","beforeAll","afterAll","Promise","resolve","on","reason","promise","warn","error","message"],"sources":["ci-cd-setup.js"],"sourcesContent":["/**\n * CI/CD Test Setup Configuration\n * \n * This setup handles the real-world CI/CD environment issues:\n * - Missing database credentials\n * - No Cognito configuration \n * - Missing AWS services\n * - Authentication bypass for testing\n */\n\nconst path = require('path');\n\n// Load test environment variables\nrequire('dotenv').config({ path: path.join(__dirname, '..', '.env.test') });\n\nconsole.log('üß™ CI/CD Test Environment Setup');\nconsole.log('================================');\n\n// Set up test environment\nprocess.env.NODE_ENV = 'test';\n\n// Mock AWS SDK for tests\njest.mock('@aws-sdk/client-secrets-manager', () => ({\n  SecretsManagerClient: jest.fn(() => ({\n    send: jest.fn().mockResolvedValue({\n      SecretString: JSON.stringify({\n        host: process.env.DB_HOST || 'localhost',\n        port: process.env.DB_PORT || '5432',\n        database: process.env.DB_NAME || 'financial_platform_test',\n        username: process.env.DB_USER || 'postgres',\n        password: process.env.DB_PASSWORD || 'postgres',\n        ssl: false\n      })\n    })\n  })),\n  GetSecretValueCommand: jest.fn()\n}));\n\n// Mock Cognito for tests\njest.mock('@aws-sdk/client-cognito-identity-provider', () => ({\n  CognitoIdentityProviderClient: jest.fn(() => ({\n    send: jest.fn().mockResolvedValue({\n      UserPoolId: 'test-user-pool',\n      ClientId: 'test-client-id'\n    })\n  }))\n}));\n\n// Set up authentication bypass for CI/CD testing\nprocess.env.ALLOW_TEST_AUTH_BYPASS = 'true';\nprocess.env.JWT_SECRET = process.env.JWT_SECRET || 'test-jwt-secret-for-ci-cd';\nprocess.env.API_KEY_ENCRYPTION_SECRET = process.env.API_KEY_ENCRYPTION_SECRET || 'test-encryption-secret-32-bytes!!';\n\n// Database configuration for CI/CD\nif (!process.env.DB_HOST) {\n  console.log('‚ö†Ô∏è No database configuration found - tests will handle connection failures');\n  process.env.DB_HOST = 'localhost';\n  process.env.DB_PORT = '5432';\n  process.env.DB_NAME = 'financial_platform_test';\n  process.env.DB_USER = 'postgres';\n  process.env.DB_PASSWORD = 'postgres';\n  process.env.DB_SSL = 'false';\n}\n\n// AWS configuration for tests\nprocess.env.AWS_REGION = process.env.AWS_REGION || 'us-east-1';\nprocess.env.DB_SECRET_ARN = process.env.DB_SECRET_ARN || 'arn:aws:secretsmanager:us-east-1:123456789012:secret:test-db-secret';\nprocess.env.API_KEY_ENCRYPTION_SECRET_ARN = process.env.API_KEY_ENCRYPTION_SECRET_ARN || 'arn:aws:secretsmanager:us-east-1:123456789012:secret:test-encryption-secret';\n\n// Set timeout for all tests\njest.setTimeout(30000);\n\n// Export test configuration to global\nglobal.testConfig = {\n  database: {\n    host: process.env.DB_HOST,\n    port: process.env.DB_PORT,\n    database: process.env.DB_NAME,\n    user: process.env.DB_USER,\n    password: process.env.DB_PASSWORD,\n    ssl: process.env.DB_SSL === 'true'\n  },\n  jwt: {\n    secret: process.env.JWT_SECRET\n  },\n  encryption: {\n    secret: process.env.API_KEY_ENCRYPTION_SECRET\n  }\n};\n\n// Global test setup\nbeforeAll(async () => {\n  console.log('üîß Global Test Setup');\n  console.log(`  NODE_ENV: ${process.env.NODE_ENV}`);\n  console.log(`  Database Host: ${process.env.DB_HOST}`);\n  console.log(`  Database Name: ${process.env.DB_NAME}`);\n  console.log(`  AWS Region: ${process.env.AWS_REGION}`);\n  console.log(`  Auth Bypass: ${process.env.ALLOW_TEST_AUTH_BYPASS}`);\n});\n\n// Global test cleanup\nafterAll(async () => {\n  console.log('üßπ Global Test Cleanup');\n  \n  // Give time for async operations to complete\n  await new Promise(resolve => setTimeout(resolve, 1000));\n});\n\n// Handle unhandled rejections in tests\nprocess.on('unhandledRejection', (reason, promise) => {\n  console.warn('‚ö†Ô∏è Unhandled Rejection in tests:', reason);\n  // Don't exit - let tests handle errors gracefully\n});\n\n// Handle uncaught exceptions in tests\nprocess.on('uncaughtException', (error) => {\n  console.warn('‚ö†Ô∏è Uncaught Exception in tests:', error.message);\n  // Don't exit - let tests handle errors gracefully\n});\n\nconsole.log('‚úÖ CI/CD Test Environment Setup Complete');\nconsole.log('================================');"],"mappings":"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","ignoreList":[]}