<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="52" failures="0" errors="0" time="1.14">
    <testsuite name="src/tests/unit/services/real-speech-service.test.js" timestamp="2025-07-19T13:02:22.748Z" hostname="LAPTOP-J9NJ3854" tests="52" failures="0" errors="0" skipped="0" time="0.041">
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Service Initialization &gt; should initialize with browser support detection" time="0.02">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Service Initialization &gt; should initialize with default settings" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Service Initialization &gt; should initialize speech recognition with settings" time="0.001">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Service Initialization &gt; should load available voices" time="0.001">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Browser Support Detection &gt; should detect speech recognition support" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Browser Support Detection &gt; should detect speech synthesis support" time="0.001">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Browser Support Detection &gt; should provide comprehensive support status" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Browser Support Detection &gt; should handle missing speech recognition gracefully" time="0.001">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Browser Support Detection &gt; should handle missing speech synthesis gracefully" time="0.001">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Speech Recognition (Speech-to-Text) &gt; should start listening successfully" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Speech Recognition (Speech-to-Text) &gt; should apply options when starting listening" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Speech Recognition (Speech-to-Text) &gt; should prevent starting when already listening" time="0.001">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Speech Recognition (Speech-to-Text) &gt; should stop listening successfully" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Speech Recognition (Speech-to-Text) &gt; should handle start callback" time="0.001">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Speech Recognition (Speech-to-Text) &gt; should handle final results" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Speech Recognition (Speech-to-Text) &gt; should handle interim results" time="0.001">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Speech Recognition (Speech-to-Text) &gt; should handle recognition errors" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Speech Recognition (Speech-to-Text) &gt; should handle recognition end" time="0.001">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Speech Recognition (Speech-to-Text) &gt; should handle start errors gracefully" time="0.001">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Speech Synthesis (Text-to-Speech) &gt; should speak text successfully" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Speech Synthesis (Text-to-Speech) &gt; should apply voice options when speaking" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Speech Synthesis (Text-to-Speech) &gt; should handle empty text gracefully" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Speech Synthesis (Text-to-Speech) &gt; should handle whitespace-only text gracefully" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Speech Synthesis (Text-to-Speech) &gt; should stop current speech before starting new" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Speech Synthesis (Text-to-Speech) &gt; should handle speech start callback" time="0.001">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Speech Synthesis (Text-to-Speech) &gt; should handle speech end callback" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Speech Synthesis (Text-to-Speech) &gt; should handle speech synthesis errors" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Speech Synthesis (Text-to-Speech) &gt; should stop speaking successfully" time="0.001">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Voice Management &gt; should get available voices with metadata" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Voice Management &gt; should detect female voices by name" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Voice Management &gt; should set voice by name" time="0.001">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Voice Management &gt; should handle setting non-existent voice" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Voice Management &gt; should handle asynchronous voice loading" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Error Message Handling &gt; should provide user-friendly error messages" time="0.001">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Settings Management &gt; should update settings and apply to recognition" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Settings Management &gt; should preserve existing settings when partially updating" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Callback Management &gt; should set all callbacks correctly" time="0.001">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Callback Management &gt; should handle partial callback setting" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Status Methods &gt; should report listening status correctly" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Status Methods &gt; should report speaking status correctly" time="0.001">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Edge Cases and Error Handling &gt; should handle recognition setup without recognition available" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Edge Cases and Error Handling &gt; should handle synthesis setup without synthesis available" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Edge Cases and Error Handling &gt; should handle multiple result events correctly" time="0.001">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Edge Cases and Error Handling &gt; should handle very long text for speech synthesis" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Edge Cases and Error Handling &gt; should handle recognition without onstart callback set" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Edge Cases and Error Handling &gt; should handle synthesis without callbacks set" time="0.001">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Performance and Resource Management &gt; should handle rapid start/stop cycles" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Performance and Resource Management &gt; should handle rapid speak/stop cycles" time="0.001">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Performance and Resource Management &gt; should handle concurrent speech operations" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Real-World Usage Scenarios &gt; should handle complete speech-to-text workflow" time="0">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Real-World Usage Scenarios &gt; should handle complete text-to-speech workflow" time="0.001">
        </testcase>
        <testcase classname="src/tests/unit/services/real-speech-service.test.js" name="🗣️ Real Speech Service &gt; Real-World Usage Scenarios &gt; should handle multilingual conversation" time="0">
        </testcase>
    </testsuite>
</testsuites>
