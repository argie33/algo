<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="12" failures="0" errors="0" time="1.17">
    <testsuite name="src/tests/unit/react-hooks-diagnostic.test.js" timestamp="2025-07-20T09:53:01.645Z" hostname="LAPTOP-J9NJ3854" tests="12" failures="0" errors="0" skipped="0" time="0.009">
        <testcase classname="src/tests/unit/react-hooks-diagnostic.test.js" name="ðŸ”¬ React Hooks Diagnostic Tests &gt; React Core Availability &gt; should have React available" time="0.001">
        </testcase>
        <testcase classname="src/tests/unit/react-hooks-diagnostic.test.js" name="ðŸ”¬ React Hooks Diagnostic Tests &gt; React Core Availability &gt; should have useState hook available" time="0">
        </testcase>
        <testcase classname="src/tests/unit/react-hooks-diagnostic.test.js" name="ðŸ”¬ React Hooks Diagnostic Tests &gt; React Core Availability &gt; should have useEffect hook available" time="0.001">
        </testcase>
        <testcase classname="src/tests/unit/react-hooks-diagnostic.test.js" name="ðŸ”¬ React Hooks Diagnostic Tests &gt; React Core Availability &gt; should have useSyncExternalStore hook available" time="0">
        </testcase>
        <testcase classname="src/tests/unit/react-hooks-diagnostic.test.js" name="ðŸ”¬ React Hooks Diagnostic Tests &gt; use-sync-external-store-shim Package &gt; should import use-sync-external-store/shim without error" time="0.003">
        </testcase>
        <testcase classname="src/tests/unit/react-hooks-diagnostic.test.js" name="ðŸ”¬ React Hooks Diagnostic Tests &gt; use-sync-external-store-shim Package &gt; should have compatible React version for useSyncExternalStore" time="0">
        </testcase>
        <testcase classname="src/tests/unit/react-hooks-diagnostic.test.js" name="ðŸ”¬ React Hooks Diagnostic Tests &gt; useState Error Reproduction &gt; should not throw &quot;Cannot read properties of undefined&quot; when accessing useState" time="0.001">
        </testcase>
        <testcase classname="src/tests/unit/react-hooks-diagnostic.test.js" name="ðŸ”¬ React Hooks Diagnostic Tests &gt; useState Error Reproduction &gt; should allow useState to be destructured from React" time="0">
        </testcase>
        <testcase classname="src/tests/unit/react-hooks-diagnostic.test.js" name="ðŸ”¬ React Hooks Diagnostic Tests &gt; useState Error Reproduction &gt; should detect if React is undefined when useState is accessed" time="0">
        </testcase>
        <testcase classname="src/tests/unit/react-hooks-diagnostic.test.js" name="ðŸ”¬ React Hooks Diagnostic Tests &gt; Bundle Analysis &gt; should have React available in global scope (if bundled globally)" time="0">
        </testcase>
        <testcase classname="src/tests/unit/react-hooks-diagnostic.test.js" name="ðŸ”¬ React Hooks Diagnostic Tests &gt; Bundle Analysis &gt; should import React successfully" time="0">
        </testcase>
        <testcase classname="src/tests/unit/react-hooks-diagnostic.test.js" name="ðŸ”¬ React Hooks Diagnostic Tests &gt; Dependency Resolution &gt; should have consistent React and use-sync-external-store versions" time="0">
        </testcase>
    </testsuite>
</testsuites>
