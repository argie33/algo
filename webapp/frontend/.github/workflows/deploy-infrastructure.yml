name: Deploy Infrastructure (RDS/ECS/Secrets)

on:
  push:
    branches:
      - main
    paths:
      - 'template-app-stocks.yml'
      - 'template-core-network.yml'
      - '.github/workflows/deploy-infrastructure.yml'
  workflow_dispatch:
    inputs:
      stack:
        description: 'Stack to deploy'
        required: true
        default: 'stocks-app-stack'
        type: choice
        options:
          - stocks-app-stack
          - stocks-core-stack

permissions:
  id-token: write
  contents: read

jobs:
  deploy-infrastructure:
    name: Deploy CloudFormation Stack
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsDeployRole
          role-session-name: github-deploy-infrastructure
          aws-region: us-east-1

      - name: Get stack parameters
        id: params
        run: |
          aws cloudformation describe-stacks \
            --stack-name stocks-app-stack \
            --region us-east-1 \
            --query 'Stacks[0].Parameters' \
            --output json > current-params.json
          
          echo "Current parameters:"
          cat current-params.json

      - name: Deploy stocks-app-stack
        if: github.event.inputs.stack == 'stocks-app-stack' || contains(github.event.head_commit.modified, 'template-app-stocks.yml')
        run: |
          echo "🚀 Deploying stocks-app-stack..."
          
          aws cloudformation update-stack \
            --stack-name stocks-app-stack \
            --region us-east-1 \
            --template-body file://template-app-stocks.yml \
            --capabilities CAPABILITY_IAM \
            --parameters \
              ParameterKey=RDSUsername,UsePreviousValue=true \
              ParameterKey=RDSPassword,UsePreviousValue=true \
              ParameterKey=FREDApiKey,UsePreviousValue=true
          
          echo "⏳ Waiting for stack update to complete..."
          aws cloudformation wait stack-update-complete \
            --stack-name stocks-app-stack \
            --region us-east-1
          
          echo "✅ Stack update complete!"

      - name: Verify RDS status
        run: |
          echo "📊 Checking RDS status..."
          aws rds describe-db-instances \
            --db-instance-identifier stocks \
            --region us-east-1 \
            --query 'DBInstances[0].[DBInstanceStatus,AllocatedStorage,MaxAllocatedStorage]' \
            --output table

      - name: Summary
        if: success()
        run: |
          echo "### ✅ Infrastructure Deployment Successful" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Stack:** stocks-app-stack" >> $GITHUB_STEP_SUMMARY
          echo "**Region:** us-east-1" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** UPDATE_COMPLETE" >> $GITHUB_STEP_SUMMARY
