#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('üöÄ Setting up production environment...');

// Get parameters from command line - NO HARDCODED DEFAULTS
const apiUrl = process.argv[2];
if (!apiUrl) {
  console.error('‚ùå Error: API URL is required');
  console.error('Usage: node setup-prod.js <API_URL> [environment] [userPoolId] [clientId] [cognitoDomain] [cloudfrontUrl]');
  console.error('Example: node setup-prod.js https://your-api-id.execute-api.us-east-1.amazonaws.com/dev production');
  process.exit(1);
}
const environment = process.argv[3] || 'production';
const userPoolId = process.argv[4] || '';
const clientId = process.argv[5] || '';
const cognitoDomain = process.argv[6] || '';
const cloudfrontUrl = process.argv[7] || '';

// Create environment configuration with Cognito
const prodConfig = {
  API_URL: apiUrl,
  WS_URL: `${apiUrl}/api/websocket`,
  BUILD_TIME: new Date().toISOString(),
  VERSION: '1.0.0',
  ENVIRONMENT: environment,
  COGNITO: {
    USER_POOL_ID: userPoolId || 'us-east-1_MISSING',
    CLIENT_ID: clientId || 'missing-client-id',
    REGION: 'us-east-1',
    DOMAIN: cognitoDomain || null,
    REDIRECT_SIGN_IN: cloudfrontUrl ? `https://${cloudfrontUrl}` : apiUrl,
    REDIRECT_SIGN_OUT: cloudfrontUrl ? `https://${cloudfrontUrl}` : apiUrl
  }
};

// Update the runtime config for production
const configPath = path.join(__dirname, '..', 'public', 'config.js');
const configContent = `// Runtime configuration - ${environment.charAt(0).toUpperCase() + environment.slice(1)} Environment
// This file is auto-generated by setup-prod.js
window.__CONFIG__ = ${JSON.stringify(prodConfig, null, 2)};
`;

fs.writeFileSync(configPath, configContent);
console.log('‚úÖ Updated public/config.js for', environment);

// Create .env file for Vite
const envPath = path.join(__dirname, '..', '.env');
const envContent = `# ${environment.charAt(0).toUpperCase() + environment.slice(1)} Environment Configuration
# Auto-generated by setup-prod.js

# API Configuration
VITE_API_URL=${apiUrl}
VITE_SERVERLESS=true
VITE_ENVIRONMENT=${environment}

# Build Configuration
VITE_BUILD_TIME=${new Date().toISOString()}
VITE_VERSION=1.0.0

# AWS Cognito Configuration
VITE_COGNITO_USER_POOL_ID=${userPoolId}
VITE_COGNITO_CLIENT_ID=${clientId}
VITE_AWS_REGION=us-east-1
VITE_COGNITO_DOMAIN=${cognitoDomain}
VITE_COGNITO_REDIRECT_SIGN_IN=${cloudfrontUrl ? `https://${cloudfrontUrl}` : apiUrl}
VITE_COGNITO_REDIRECT_SIGN_OUT=${cloudfrontUrl ? `https://${cloudfrontUrl}` : apiUrl}

# Feature Flags
VITE_ENABLE_DEBUG=${environment === 'production' ? 'false' : 'true'}
VITE_ENABLE_MOCK_DATA=false
`;

fs.writeFileSync(envPath, envContent);
console.log('‚úÖ Created .env file for', environment);

console.log('');
console.log(`üéâ ${environment.charAt(0).toUpperCase() + environment.slice(1)} environment configured!`);
console.log('');
console.log('üìã Configuration:');
console.log(`   API URL: ${prodConfig.API_URL}`);
console.log(`   WebSocket URL: ${prodConfig.WS_URL}`);
console.log(`   Environment: ${prodConfig.ENVIRONMENT}`);
console.log(`   Version: ${prodConfig.VERSION}`);
console.log('');
console.log('üîê Cognito Configuration:');
console.log(`   User Pool ID: ${prodConfig.COGNITO.USER_POOL_ID}`);
console.log(`   Client ID: ${prodConfig.COGNITO.CLIENT_ID}`);
console.log(`   Domain: ${prodConfig.COGNITO.DOMAIN || 'None'}`);
console.log(`   Redirect Sign In: ${prodConfig.COGNITO.REDIRECT_SIGN_IN}`);
console.log(`   Redirect Sign Out: ${prodConfig.COGNITO.REDIRECT_SIGN_OUT}`);
console.log('');
console.log('üöÄ Next steps:');
console.log('   1. Run: npm run build');
console.log('   2. Deploy the dist/ folder to your hosting provider');
console.log('');
console.log('üí° To reset to development config, run: npm run setup-dev');
console.log('');
console.log('‚ö†Ô∏è  Make sure your API Gateway URL and environment are correct before deploying!'); 