#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('üöÄ Setting up production environment...');

// Get API URL from command line or use placeholder
const apiUrl = process.argv[2] || 'https://your-api-gateway-url.amazonaws.com/prod';

// Create production environment configuration
const prodConfig = {
  API_URL: apiUrl,
  BUILD_TIME: new Date().toISOString(),
  VERSION: '1.0.0',
  ENVIRONMENT: 'production'
};

// Update the runtime config for production
const configPath = path.join(__dirname, '..', 'public', 'config.js');
const configContent = `// Runtime configuration - Production Environment
// This file is auto-generated by setup-prod.js
window.__CONFIG__ = ${JSON.stringify(prodConfig, null, 2)};
`;

fs.writeFileSync(configPath, configContent);
console.log('‚úÖ Updated public/config.js for production');

// Create .env file for Vite
const envPath = path.join(__dirname, '..', '.env');
const envContent = `# Production Environment Configuration
# Auto-generated by setup-prod.js

# API Configuration
VITE_API_URL=${apiUrl}
VITE_SERVERLESS=true
VITE_ENVIRONMENT=production

# Build Configuration
VITE_BUILD_TIME=${new Date().toISOString()}
VITE_VERSION=1.0.0

# Feature Flags
VITE_ENABLE_DEBUG=false
VITE_ENABLE_MOCK_DATA=false
`;

fs.writeFileSync(envPath, envContent);
console.log('‚úÖ Created .env file for production');

console.log('');
console.log('üéâ Production environment configured!');
console.log('');
console.log('üìã Configuration:');
console.log(`   API URL: ${prodConfig.API_URL}`);
console.log(`   Environment: ${prodConfig.ENVIRONMENT}`);
console.log(`   Version: ${prodConfig.VERSION}`);
console.log('');
console.log('üöÄ Next steps:');
console.log('   1. Run: npm run build');
console.log('   2. Deploy the dist/ folder to your hosting provider');
console.log('');
console.log('üí° To reset to development config, run: npm run setup-dev');
console.log('');
console.log('‚ö†Ô∏è  Make sure your API Gateway URL is correct before deploying!'); 