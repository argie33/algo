/**\n * Theme utilities WITHOUT MUI createTheme to prevent createPalette errors\n * Direct theme object creation to avoid MUI theme initialization\n */\n\n/**\n * Check MUI version and compatibility\n */\nexport function checkMuiVersion() {\n  try {\n    // Try to access MUI version info\n    const muiVersion = require('@mui/material/package.json').version;\n    console.log('🔍 MUI Version detected:', muiVersion);\n    return muiVersion;\n  } catch (error) {\n    console.warn('⚠️ Could not detect MUI version:', error);\n    return 'unknown';\n  }\n}\n\n/**\n * Create a safe theme without MUI createTheme to avoid createPalette errors\n */\nexport function createSafeTheme(mode = 'light') {\n  console.log('🎨 Creating safe theme object directly (no MUI createTheme) with mode:', mode);\n  \n  const isDark = mode === 'dark';\n  \n  // Create theme object directly without MUI createTheme\n  return {\n    palette: {\n      mode,\n      primary: {\n        main: '#1976d2',\n        light: '#42a5f5',\n        dark: '#1565c0',\n        contrastText: '#fff'\n      },\n      secondary: {\n        main: '#dc004e',\n        light: '#ff5983',\n        dark: '#9a0036',\n        contrastText: '#fff'\n      },\n      background: {\n        default: isDark ? '#121212' : '#f5f5f5',\n        paper: isDark ? '#1e1e1e' : '#ffffff'\n      },\n      text: {\n        primary: isDark ? '#ffffff' : '#000000',\n        secondary: isDark ? '#b3b3b3' : '#666666'\n      },\n      success: {\n        main: '#2e7d32',\n        light: '#4caf50',\n        dark: '#1b5e20'\n      },\n      error: {\n        main: '#d32f2f',\n        light: '#ef5350',\n        dark: '#c62828'\n      },\n      warning: {\n        main: '#ed6c02',\n        light: '#ff9800',\n        dark: '#e65100'\n      },\n      info: {\n        main: '#0288d1',\n        light: '#03a9f4',\n        dark: '#01579b'\n      }\n    },\n    typography: {\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif',\n      h1: { fontSize: '2.5rem', fontWeight: 600 },\n      h2: { fontSize: '2rem', fontWeight: 600 },\n      h3: { fontSize: '1.75rem', fontWeight: 600 },\n      h4: { fontSize: '1.5rem', fontWeight: 600 },\n      h5: { fontSize: '1.25rem', fontWeight: 600 },\n      h6: { fontSize: '1rem', fontWeight: 600 },\n      body1: { fontSize: '1rem' },\n      body2: { fontSize: '0.875rem' }\n    },\n    spacing: (factor) => factor * 8,\n    breakpoints: {\n      values: { xs: 0, sm: 600, md: 960, lg: 1280, xl: 1920 },\n      up: (key) => `@media (min-width:${key === 'xs' ? 0 : key === 'sm' ? 600 : key === 'md' ? 960 : key === 'lg' ? 1280 : 1920}px)`,\n      down: (key) => `@media (max-width:${key === 'xs' ? 599 : key === 'sm' ? 959 : key === 'md' ? 1279 : key === 'lg' ? 1919 : 2559}px)`\n    },\n    shape: {\n      borderRadius: 4\n    },\n    shadows: [\n      'none',\n      '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\n      '0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)',\n      '0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)',\n      '0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)',\n      '0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)',\n      '0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)',\n      '0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)',\n      '0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)',\n      '0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)',\n      '0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)',\n      '0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)',\n      '0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)',\n      '0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)',\n      '0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)',\n      '0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)',\n      '0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)',\n      '0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)',\n      '0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)',\n      '0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)',\n      '0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)',\n      '0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)',\n      '0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)',\n      '0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)',\n      '0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)'\n    ],\n    transitions: {\n      duration: {\n        shortest: 150,\n        shorter: 200,\n        short: 250,\n        standard: 300,\n        complex: 375,\n        enteringScreen: 225,\n        leavingScreen: 195\n      },\n      easing: {\n        easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\n        easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\n        easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\n        sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'\n      }\n    },\n    zIndex: {\n      mobileStepper: 1000,\n      speedDial: 1050,\n      appBar: 1100,\n      drawer: 1200,\n      modal: 1300,\n      snackbar: 1400,\n      tooltip: 1500\n    }\n  };\n}\n\n/**\n * Debug theme creation process - now without createTheme\n */\nexport function debugThemeCreation() {\n  console.log('🔍 Starting theme debug (without MUI createTheme)...');\n  \n  // Check MUI version\n  checkMuiVersion();\n  \n  // Test direct theme object creation\n  try {\n    const basicTheme = createSafeTheme('light');\n    console.log('✅ Direct theme object creation works');\n    console.log('🎨 Theme palette:', basicTheme.palette);\n    return basicTheme;\n  } catch (error) {\n    console.error('❌ Direct theme object creation failed:', error);\n    throw error;\n  }\n}\n\n/**\n * Get CSS variables for theme colors\n */\nexport function getThemeCSSVariables(theme) {\n  return {\n    '--primary-main': theme.palette.primary.main,\n    '--primary-light': theme.palette.primary.light,\n    '--primary-dark': theme.palette.primary.dark,\n    '--secondary-main': theme.palette.secondary.main,\n    '--background-default': theme.palette.background.default,\n    '--background-paper': theme.palette.background.paper,\n    '--text-primary': theme.palette.text.primary,\n    '--text-secondary': theme.palette.text.secondary,\n    '--success-main': theme.palette.success.main,\n    '--error-main': theme.palette.error.main,\n    '--warning-main': theme.palette.warning.main,\n    '--info-main': theme.palette.info.main\n  };\n}\n\n/**\n * Apply theme CSS variables to document\n */\nexport function applyThemeToDocument(theme) {\n  const variables = getThemeCSSVariables(theme);\n  const root = document.documentElement;\n  \n  Object.entries(variables).forEach(([property, value]) => {\n    root.style.setProperty(property, value);\n  });\n  \n  console.log('✅ Applied theme CSS variables to document');\n}