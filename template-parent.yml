# template-parent.yml
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Top-level parent stack.  Deploys in order:
    1) Core infra (VPC, Bastion, ECR, Code bucket)  
    2) App stack (RDS, Secrets, symbols-loader Lambda, ECS cluster)  
    3) ECS data-loader tasks

Parameters:
  # pass through from your CI trigger
  VpcCidr:
    Type: String
    Default: "10.0.0.0/16"
  PublicSubnetCidr1:
    Type: String
    Default: "10.0.1.0/24"
  PublicSubnetCidr2:
    Type: String
    Default: "10.0.2.0/24"
  PrivateSubnetCidr1:
    Type: String
    Default: "10.0.101.0/24"
  PrivateSubnetCidr2:
    Type: String
    Default: "10.0.102.0/24"

  CodeKey:
    Type: String
    Description: S3 key of loadstocksymbols ZIP
  RDSUsername:
    Type: String
  RDSPassword:
    Type: String
    NoEcho: true

  ImageTag:
    Type: String
    Description: Git SHA for Fargate image

Resources:

  CoreStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://YOUR_BUCKET/path/template-core.yml
      Parameters:
        VpcCidr:             !Ref VpcCidr
        PublicSubnetCidr1:   !Ref PublicSubnetCidr1
        PublicSubnetCidr2:   !Ref PublicSubnetCidr2
        PrivateSubnetCidr1:  !Ref PrivateSubnetCidr1
        PrivateSubnetCidr2:  !Ref PrivateSubnetCidr2
        DBStackName:         stocks-db-lambda-stack     # matches your childâ€™s ImportValue
        DBSecretName:        stocks-db-credentials

  AppStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: CoreStack
    Properties:
      TemplateURL: https://YOUR_BUCKET/path/template-app-stocks.yml
      Parameters:
        CodeKey:     !Ref CodeKey
        RDSUsername: !Ref RDSUsername
        RDSPassword: !Ref RDSPassword
        VpcCidr:     !Ref VpcCidr                # for the DB SG ingress :contentReference[oaicite:0]{index=0}:contentReference[oaicite:1]{index=1}

  EcsTasksStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: AppStack
    Properties:
      TemplateURL: https://YOUR_BUCKET/path/template-app-ecs-tasks.yml
      Parameters:
        ImageTag: !Ref ImageTag              # daily loader cron :contentReference[oaicite:2]{index=2}:contentReference[oaicite:3]{index=3}

Outputs:
  # Expose any outputs you still need at the top level
  VpcId:
    Description: VPC created by Core
    Value: !GetAtt CoreStack.Outputs.VpcId
  DBEndpoint:
    Description: RDS endpoint
    Value: !GetAtt AppStack.Outputs.DBEndpoint
  DataLoaderTaskDefArn:
    Description: ECS DataLoader task definition ARN
    Value: !GetAtt EcsTasksStack.Outputs.TaskDefinitionArn
