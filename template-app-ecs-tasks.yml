AWSTemplateFormatVersion: '2010-09-09'
Description: >
  ECS TaskDefinitions, CloudWatch LogGroups, and zero-scale Services
  for stock-symbols, econ-data, monthly-price, findata, pricedaily,
  priceweekly, pricemonthly, technicaldaily, loadkeystats, earnings,
  technicalsweekly & technicalsmonthly.

Parameters:
  StockSymbolsImageTag:
    Type: String
    Description: Tag for stock-symbols loader image
  EconDataImageTag:
    Type: String
    Description: Tag for econ-data loader image
  MonthlyPriceImageTag:
    Type: String
    Description: Tag for monthly-price loader image
  FindataImageTag:
    Type: String
    Description: Tag for findata loader image
  PriceImageTag:
    Type: String
    Description: Tag for pricedaily loader image
  PriceWeeklyImageTag:
    Type: String
    Description: Tag for priceweekly loader image
  PriceMonthlyImageTag:
    Type: String
    Description: Tag for pricemonthly loader image
  TechnicalDailyImageTag:
    Type: String
    Description: Tag for technicaldaily loader image
  LoadKeyStatsImageTag:
    Type: String
    Description: Tag for loadkeystats loader image
  EarningsImageTag:
    Type: String
    Description: Tag for earnings loader image
  TechnicalsWeeklyImageTag:
    Type: String
    Description: Tag for technicalsweekly loader image
  TechnicalsMonthlyImageTag:
    Type: String
    Description: Tag for technicalsmonthly loader image
  SwingTraderImageTag:       
    Type: String
    Description: Tag for swingtrader loader image
  BuySellImageTag:
    Type: String
    Description: Tag for buysell loader image
  ########################################
  FREDApiKey:
    Type: String
    NoEcho: true
    Description: FRED API key for econ-data loader
  IBKRUsername:
    Type: String
    NoEcho: true
    Description: “Your IBKR username (passed from GitHub Secret)”

  IBKRPassword:
    Type: String
    NoEcho: true
    Description: “Your IBKR password (passed from GitHub Secret)”
    
Resources:

  ########################################
  # A) ECS Execution Role & Policies     #
  ########################################
  ECSExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        - PolicyName: AllowCreateCWLogGroups
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: logs:CreateLogGroup
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/ecs/*"

        - PolicyName: AllowReadDBSecret
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: secretsmanager:GetSecretValue
                Resource: !ImportValue StocksApp-SecretArn
              - Effect: Allow
                Action: kms:Decrypt
                Resource: '*'

        - PolicyName: AllowReadSwingTraderSecrets
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: secretsmanager:GetSecretValue
                Resource:
                  - !Ref IBKRUsernameSecret
                  - !Ref IBKRPasswordSecret

  ########################################
  # B) CloudWatch Log Groups             #
  ########################################
  StockSymbolsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/stocksymbols-loader
      RetentionInDays: 14

  EconDataLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/econdata-loader
      RetentionInDays: 14

  MonthlyPriceLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/monthlyprice-loader
      RetentionInDays: 14

  FindataLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/findata-loader
      RetentionInDays: 14

  PriceLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/pricedaily-loader
      RetentionInDays: 14

  WeeklyLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/priceweekly-loader
      RetentionInDays: 14

  PricemonthlyLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/pricemonthly-loader
      RetentionInDays: 14

  TechnicalDailyLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/technicaldaily-loader
      RetentionInDays: 14

  LoadKeyStatsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/loadkeystats-loader
      RetentionInDays: 14

  EarningsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/earnings-loader
      RetentionInDays: 14

  TechnicalsWeeklyLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/technicalsweekly-loader
      RetentionInDays: 14

  TechnicalsMonthlyLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/technicalsmonthly-loader
      RetentionInDays: 14

  BuySellLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/buysell-loader
      RetentionInDays: 14

  SwingTraderLogGroup:   
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/swingtrader-loader
      RetentionInDays: 14

  ########################################
  # C) stock-symbols loader              #
  ########################################
  StockSymbolsTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: stocksymbols-loader
      Cpu: "512"
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: stocksymbols-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref StockSymbolsImageTag]]
          Essential: true
          Environment:
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/stocksymbols-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  StockSymbolsLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: stocksymbols-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref StockSymbolsTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          AssignPublicIp: ENABLED

  ########################################
  # D) econ-data loader                  #
  ########################################
  EconDataTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: econdata-loader
      Cpu: "512"
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: econdata-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref EconDataImageTag]]
          Essential: true
          Environment:
            - Name: LOG_GROUP
              Value: /ecs/econdata-loader
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
            - Name: FRED_API_KEY
              Value: !Ref FREDApiKey
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/econdata-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
              awslogs-create-group: 'true'

  EconDataLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: econdata-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref EconDataTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          AssignPublicIp: ENABLED

  ########################################
  # E) monthly-price loader              #
  ########################################
  MonthlyPriceTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: monthlyprice-loader
      Cpu: "512"
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: monthlyprice-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref MonthlyPriceImageTag]]
          Essential: true
          Environment:
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
            - Name: FRED_API_KEY
              Value: !Ref FREDApiKey
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/monthlyprice-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  MonthlyPriceLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: monthlyprice-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref MonthlyPriceTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          AssignPublicIp: ENABLED

  ########################################
  # F) findata loader                    #
  ########################################
  FindataTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: findata-loader
      Cpu: "1024"
      Memory: "2048"
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: findata-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref FindataImageTag]]
          Essential: true
          Environment:
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
            - Name: DB_HOST
              Value: !ImportValue StocksApp-DBEndpoint
            - Name: DB_PORT
              Value: !ImportValue StocksApp-DBPort
            - Name: DB_NAME
              Value: !ImportValue StocksApp-DBName
            - Name: DB_USER
              Value: !ImportValue StocksApp-DBUsername
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/findata-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  FindataLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: findata-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref FindataTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          AssignPublicIp: ENABLED

  ########################################
  # G) pricedaily loader                 #
  ########################################
  PriceTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: pricedaily-loader
      Cpu: "512"
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: pricedaily-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref PriceImageTag]]
          Essential: true
          Environment:
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
            - Name: DB_HOST
              Value: !ImportValue StocksApp-DBEndpoint
            - Name: DB_PORT
              Value: !ImportValue StocksApp-DBPort
            - Name: DB_NAME
              Value: !ImportValue StocksApp-DBName
            - Name: DB_USER
              Value: !ImportValue StocksApp-DBUsername
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/pricedaily-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  PriceLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: pricedaily-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref PriceTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          AssignPublicIp: ENABLED

  ########################################
  # H) priceweekly loader                #
  ########################################
  PriceWeeklyTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: priceweekly-loader
      Cpu: "512"
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: priceweekly-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref PriceWeeklyImageTag]]
          Essential: true
          Environment:
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
            - Name: DB_HOST
              Value: !ImportValue StocksApp-DBEndpoint
            - Name: DB_PORT
              Value: !ImportValue StocksApp-DBPort
            - Name: DB_NAME
              Value: !ImportValue StocksApp-DBName
            - Name: DB_USER
              Value: !ImportValue StocksApp-DBUsername
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/priceweekly-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  PriceWeeklyLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: priceweekly-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref PriceWeeklyTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          AssignPublicIp: ENABLED

  ########################################
  # I) pricemonthly loader               #
  ########################################
  PricemonthlyTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: pricemonthly-loader
      Cpu: "512"
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: pricemonthly-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref PriceMonthlyImageTag]]
          Essential: true
          Environment:
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
            - Name: DB_HOST
              Value: !ImportValue StocksApp-DBEndpoint
            - Name: DB_PORT
              Value: !ImportValue StocksApp-DBPort
            - Name: DB_NAME
              Value: !ImportValue StocksApp-DBName
            - Name: DB_USER
              Value: !ImportValue StocksApp-DBUsername
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/pricemonthly-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  PricemonthlyLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: pricemonthly-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref PricemonthlyTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          AssignPublicIp: ENABLED

  ########################################
  # J) technicaldaily loader             #
  ########################################
  TechnicalDailyTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: technicaldaily-loader
      Cpu: "512"
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: technicaldaily-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref TechnicalDailyImageTag]]
          Essential: true
          Environment:
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
            - Name: DB_HOST
              Value: !ImportValue StocksApp-DBEndpoint
            - Name: DB_PORT
              Value: !ImportValue StocksApp-DBPort
            - Name: DB_NAME
              Value: !ImportValue StocksApp-DBName
            - Name: DB_USER
              Value: !ImportValue StocksApp-DBUsername
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/technicaldaily-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  TechnicalDailyLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: technicaldaily-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref TechnicalDailyTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          AssignPublicIp: ENABLED

  ########################################
  # K) loadkeystats loader               #
  ########################################
  LoadKeyStatsTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: loadkeystats-loader
      Cpu: "512"
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: loadkeystats-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref LoadKeyStatsImageTag]]
          Essential: true
          Environment:
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/loadkeystats-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  LoadKeyStatsLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: loadkeystats-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref LoadKeyStatsTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          AssignPublicIp: ENABLED

  LoadKeyStatsEventsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AllowEcsRunTask
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecs:RunTask
                Resource: !Sub arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:task-definition/loadkeystats-loader*
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: !GetAtt ECSExecutionRole.Arn

  LoadKeyStatsScheduleRule:
    Type: AWS::Events::Rule
    Properties:
      Name: loadkeystats-daily
      Description: "Run loadkeystats-loader every day at 05:00 UTC"
      ScheduleExpression: 'cron(0 5 * * ? *)'
      State: ENABLED
      Targets:
        - Id: LoadKeyStatsTarget
          Arn: !ImportValue StocksApp-ClusterArn
          RoleArn: !GetAtt LoadKeyStatsEventsRole.Arn
          EcsParameters:
            TaskDefinitionArn: !Ref LoadKeyStatsTaskDefinition
            TaskCount: 1
            LaunchType: FARGATE
            NetworkConfiguration:
              AwsVpcConfiguration:
                Subnets:
                  - !ImportValue StocksCore-PublicSubnet1Id
                  - !ImportValue StocksCore-PublicSubnet2Id
                AssignPublicIp: ENABLED

  ########################################
  # L) earnings loader                   #
  ########################################
  EarningsTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: earnings-loader
      Cpu: "512"
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: earnings-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref EarningsImageTag]]
          Essential: true
          Environment:
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/earnings-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  EarningsLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: earnings-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref EarningsTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          AssignPublicIp: ENABLED

  ########################################
  # M) technicalsweekly loader           #
  ########################################
  TechnicalsWeeklyTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: technicalsweekly-loader
      Cpu: "512"
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: technicalsweekly-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref TechnicalsWeeklyImageTag]]
          Essential: true
          Environment:
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/technicalsweekly-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  TechnicalsWeeklyLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: technicalsweekly-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref TechnicalsWeeklyTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          AssignPublicIp: ENABLED

  ########################################
  # N) technicalsmonthly loader          #
  ########################################
  TechnicalsMonthlyTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: technicalsmonthly-loader
      Cpu: "512"
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: technicalsmonthly-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref TechnicalsMonthlyImageTag]]
          Essential: true
          Environment:
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/technicalsmonthly-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  TechnicalsMonthlyLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: technicalsmonthly-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref TechnicalsMonthlyTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          AssignPublicIp: ENABLED

  ########################################
  # N) buysell loader                    #
  ########################################
  BuySellTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: buysell-loader
      Cpu: "512"
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: buysell-loader
          Image: !Join [ ":", [ !ImportValue StocksCore-ContainerRepositoryUri, !Ref BuySellImageTag ] ]
          Essential: true
          Environment:
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
            - Name: DB_HOST
              Value: !ImportValue StocksApp-DBEndpoint
            - Name: DB_PORT
              Value: !ImportValue StocksApp-DBPort
            - Name: DB_NAME
              Value: !ImportValue StocksApp-DBName
            - Name: DB_USER
              Value: !ImportValue StocksApp-DBUsername
            - Name: FRED_API_KEY
              Value: !Ref FREDApiKey
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:    /ecs/buysell-loader
              awslogs-region:   !Ref AWS::Region
              awslogs-stream-prefix: ecs
              awslogs-create-group:  "true"

  BuySellLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: buysell-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref BuySellTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          AssignPublicIp: ENABLED

  ########################################
  # O) swingtrader loader                #
  ########################################
  IBKRUsernameSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: swingtrader/ibkr-username
      SecretString: !Ref IBKRUsername

  IBKRPasswordSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: swingtrader/ibkr-password
      SecretString: !Ref IBKRPassword

  SwingTraderTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: swingtrader-loader
      Cpu: "512"
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn

      ContainerDefinitions:
        - Name: swingtrader-loader
          Image: !Join [ ":", [ !ImportValue StocksCore-ContainerRepositoryUri, !Ref SwingTraderImageTag ] ]
          Essential: true

          Secrets:
            - Name: IBKR_USERNAME
              ValueFrom: !Ref IBKRUsernameSecret
            - Name: IBKR_PASSWORD
              ValueFrom: !Ref IBKRPasswordSecret

          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/swingtrader-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
              awslogs-create-group: "true"

  SwingTraderLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: swingtrader-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref SwingTraderTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          AssignPublicIp: ENABLED

  ########################################

Outputs:
  StockSymbolsTaskDefArn:
    Value: !Ref StockSymbolsTaskDefinition
  StockSymbolsServiceName:
    Value: !GetAtt StockSymbolsLoaderService.Name

  EconDataTaskDefArn:
    Value: !Ref EconDataTaskDefinition
  EconDataServiceName:
    Value: !GetAtt EconDataLoaderService.Name

  MonthlyPriceTaskDefArn:
    Value: !Ref MonthlyPriceTaskDefinition
  MonthlyPriceServiceName:
    Value: !GetAtt MonthlyPriceLoaderService.Name

  FindataTaskDefArn:
    Value: !Ref FindataTaskDefinition
  FindataServiceName:
    Value: !GetAtt FindataLoaderService.Name

  PriceTaskDefArn:
    Value: !Ref PriceTaskDefinition
  PriceServiceName:
    Value: !GetAtt PriceLoaderService.Name

  PriceWeeklyTaskDefArn:
    Value: !Ref PriceWeeklyTaskDefinition
  PriceWeeklyServiceName:
    Value: !GetAtt PriceWeeklyLoaderService.Name

  PricemonthlyTaskDefArn:
    Value: !Ref PricemonthlyTaskDefinition
  PricemonthlyServiceName:
    Value: !GetAtt PricemonthlyLoaderService.Name

  TechnicalDailyTaskDefArn:
    Value: !Ref TechnicalDailyTaskDefinition
  TechnicalDailyServiceName:
    Value: !GetAtt TechnicalDailyLoaderService.Name

  LoadKeyStatsTaskDefArn:
    Value: !Ref LoadKeyStatsTaskDefinition
  LoadKeyStatsServiceName:
    Value: !GetAtt LoadKeyStatsLoaderService.Name

  EarningsTaskDefArn:
    Value: !Ref EarningsTaskDefinition
  EarningsServiceName:
    Value: !GetAtt EarningsLoaderService.Name

  TechnicalsWeeklyTaskDefArn:
    Value: !Ref TechnicalsWeeklyTaskDefinition
  TechnicalsWeeklyServiceName:
    Value: !GetAtt TechnicalsWeeklyLoaderService.Name

  TechnicalsMonthlyTaskDefArn:
    Value: !Ref TechnicalsMonthlyTaskDefinition
  TechnicalsMonthlyServiceName:
    Value: !GetAtt TechnicalsMonthlyLoaderService.Name

  BuySellTaskDefArn:
    Value: !Ref BuySellTaskDefinition
  BuySellServiceName:
    Value: !GetAtt BuySellLoaderService.Name

  SwingTraderTaskDefArn:
    Value: !Ref SwingTraderTaskDefinition
  SwingTraderServiceName:
    Value: !GetAtt SwingTraderLoaderService.Name
