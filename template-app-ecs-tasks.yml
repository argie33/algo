# template-app-ecs-tasks.yml
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Fargate TaskDefinition + daily EventBridge schedule for price_data_daily loader

Parameters:
  ImageTag:
    Type: String
    Description: Docker image tag (Git SHA) to deploy

Resources:

  ### 1) CloudWatch Logs Group ###
  DataLoaderLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/stocks-data-loader
      RetentionInDays: 14

  ### 2) IAM role for EventBridge â†’ ECS RunTask ###
  DataLoaderEventsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: { Service: events.amazonaws.com }
            Action: sts:AssumeRole
      Policies:
        - PolicyName: InvokeRunTask
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecs:RunTask
                Resource: "*"
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !ImportValue StocksDBLambdaStack-EcsTaskExecutionRoleArn

  ### 3) ECS TaskDefinition ###
  DataLoaderTaskDef:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: stocks-data-loader
      RequiresCompatibilities: [ FARGATE ]
      Cpu:    '256'
      Memory: '512'
      NetworkMode: awsvpc
      ExecutionRoleArn: !ImportValue StocksDBLambdaStack-EcsTaskExecutionRoleArn
      TaskRoleArn:      !ImportValue StocksDBLambdaStack-EcsTaskExecutionRoleArn
      ContainerDefinitions:
        - Name: stocks-data-loader
          Image: !Join [ ":", [ !ImportValue StocksCore-ContainerRepositoryUri, !Ref ImageTag ] ]
          Essential: true
          Environment:
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksDBLambdaStack-SecretArn
            - Name: DB_ENDPOINT
              Value: !ImportValue StocksDBLambdaStack-DBEndpoint
            - Name: DB_PORT
              Value: !ImportValue StocksDBLambdaStack-DBPort
            - Name: DB_NAME
              Value: stocks
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:         /ecs/stocks-data-loader
              awslogs-region:        !Ref AWS::Region
              awslogs-stream-prefix: ecs

  ### 4) EventBridge schedule: run daily at 12:00 UTC ###
  DataLoaderSchedule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: cron(0 12 * * ? *)
      State: ENABLED
      Targets:
        - Id: RunDataLoader
          Arn:     !ImportValue StocksDBLambdaStack-ClusterArn
          RoleArn: !GetAtt DataLoaderEventsRole.Arn
          EcsParameters:
            TaskDefinitionArn: !Ref DataLoaderTaskDef
            LaunchType:        FARGATE
            NetworkConfiguration:
              AwsVpcConfiguration:
                Subnets:
                  - !ImportValue StocksCore-PrivateSubnet1Id
                  - !ImportValue StocksCore-PrivateSubnet2Id
                SecurityGroups:
                  - !ImportValue StocksCore-LambdaSecurityGroupId
                AssignPublicIp: DISABLED

Outputs:
  TaskDefinitionArn:
    Description: ARN of the created TaskDefinition
    Value: !Ref DataLoaderTaskDef
