# template-app-ecs-tasks.yml
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  ECS TaskDefinitions, CloudWatch LogGroups, and EventBridge schedules
  for findata, pricedaily & priceweekly—all in public subnets
  with public IPs and IAM‑only auth to RDS (no static creds).

Parameters:
  FindataImageTag:
    Type: String
    Description: findata image tag (e.g. findata-<git-sha>)
  PriceImageTag:
    Type: String
    Description: pricedaily image tag (e.g. pricedaily-<git-sha>)
  PriceWeeklyImageTag:
    Type: String
    Description: priceweekly image tag (e.g. priceweekly-<git-sha>)
  FREDApiKey:
    Type: String
    NoEcho: true
    Description: FRED API key for econ‑data loader

Resources:

  ##################################
  # 0) CloudWatch LogGroups
  ##################################
  FindataLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: '/ecs/findata-loader'
      RetentionInDays: 14

  PriceLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: '/ecs/pricedaily-loader'
      RetentionInDays: 14

  WeeklyLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: '/ecs/priceweekly-loader'
      RetentionInDays: 14

  ##################################
  # 1) EventBridge → ECS RunTask Role
  ##################################
  EcsEventsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ecs-events-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AllowRunTask
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecs:RunTask
                  - iam:PassRole
                Resource: "*"

  ##################################
  # 2) findata‑loader TaskDefinition
  ##################################
  FindataTaskDef:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: findata-loader
      Cpu: "512"
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities: [ FARGATE ]
      ExecutionRoleArn: !ImportValue StocksApp-EcsTaskExecutionRoleArn
      TaskRoleArn:      !ImportValue StocksApp-EcsTaskExecutionRoleArn
      ContainerDefinitions:
        - Name: findata-loader
          Image: !Sub "${StocksCore-ContainerRepositoryUri}:${FindataImageTag}"
          Essential: true
          Environment:
            - Name: DB_HOST
              Value: !ImportValue StocksApp-DBEndpoint
            - Name: DB_PORT
              Value: !ImportValue StocksApp-DBPort
            - Name: DB_NAME
              Value: !ImportValue StocksApp-DBName
            - Name: DB_USER
              Value: !ImportValue StocksApp-DBUsername
            - Name: FRED_API_KEY
              Value: !Ref FREDApiKey
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:         /ecs/findata-loader
              awslogs-region:        !Ref AWS::Region
              awslogs-stream-prefix: ecs

  ##################################
  # 3) pricedaily‑loader TaskDefinition
  ##################################
  PriceTaskDef:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: pricedaily-loader
      Cpu: "512"
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities: [ FARGATE ]
      ExecutionRoleArn: !ImportValue StocksApp-EcsTaskExecutionRoleArn
      TaskRoleArn:      !ImportValue StocksApp-EcsTaskExecutionRoleArn
      ContainerDefinitions:
        - Name: pricedaily-loader
          Image: !Sub "${StocksCore-ContainerRepositoryUri}:${PriceImageTag}"
          Essential: true
          Environment:
            - Name: DB_HOST
              Value: !ImportValue StocksApp-DBEndpoint
            - Name: DB_PORT
              Value: !ImportValue StocksApp-DBPort
            - Name: DB_NAME
              Value: !ImportValue StocksApp-DBName
            - Name: DB_USER
              Value: !ImportValue StocksApp-DBUsername
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:         /ecs/pricedaily-loader
              awslogs-region:        !Ref AWS::Region
              awslogs-stream-prefix: ecs

  ##################################
  # 4) priceweekly‑loader TaskDefinition
  ##################################
  WeeklyTaskDef:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: priceweekly-loader
      Cpu: "512"
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities: [ FARGATE ]
      ExecutionRoleArn: !ImportValue StocksApp-EcsTaskExecutionRoleArn
      TaskRoleArn:      !ImportValue StocksApp-EcsTaskExecutionRoleArn
      ContainerDefinitions:
        - Name: priceweekly-loader
          Image: !Sub "${StocksCore-ContainerRepositoryUri}:${PriceWeeklyImageTag}"
          Essential: true
          Environment:
            - Name: DB_HOST
              Value: !ImportValue StocksApp-DBEndpoint
            - Name: DB_PORT
              Value: !ImportValue StocksApp-DBPort
            - Name: DB_NAME
              Value: !ImportValue StocksApp-DBName
            - Name: DB_USER
              Value: !ImportValue StocksApp-DBUsername
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:         /ecs/priceweekly-loader
              awslogs-region:        !Ref AWS::Region
              awslogs-stream-prefix: ecs

  ##################################
  # 5) Scheduled: findata daily
  ##################################
  FindataSchedule:
    Type: AWS::Events::Rule
    Properties:
      Name: findata-loader-schedule
      ScheduleExpression: rate(1 day)
      State: ENABLED
      Targets:
        - Arn: !ImportValue StocksApp-ClusterArn
          Id: RunFindata
          RoleArn: !GetAtt EcsEventsRole.Arn
          EcsParameters:
            TaskDefinitionArn: !Ref FindataTaskDef
            LaunchType: FARGATE
            NetworkConfiguration:
              AwsVpcConfiguration:
                Subnets:
                  - !ImportValue StocksCore-PublicSubnet1Id
                  - !ImportValue StocksCore-PublicSubnet2Id
                SecurityGroups:
                  - !ImportValue StocksCore-LambdaSecurityGroupId
                AssignPublicIp: ENABLED

  ##################################
  # 6) Scheduled: pricedaily daily
  ##################################
  PriceSchedule:
    Type: AWS::Events::Rule
    Properties:
      Name: pricedaily-loader-schedule
      ScheduleExpression: rate(1 day)
      State: ENABLED
      Targets:
        - Arn: !ImportValue StocksApp-ClusterArn
          Id: RunPrice
          RoleArn: !GetAtt EcsEventsRole.Arn
          EcsParameters:
            TaskDefinitionArn: !Ref PriceTaskDef
            LaunchType: FARGATE
            NetworkConfiguration:
              AwsVpcConfiguration:
                Subnets:
                  - !ImportValue StocksCore-PublicSubnet1Id
                  - !ImportValue StocksCore-PublicSubnet2Id
                SecurityGroups:
                  - !ImportValue StocksCore-LambdaSecurityGroupId
                AssignPublicIp: ENABLED

  ##################################
  # 7) Scheduled: priceweekly weekly
  ##################################
  WeeklySchedule:
    Type: AWS::Events::Rule
    Properties:
      Name: priceweekly-loader-schedule
      ScheduleExpression: rate(7 days)
      State: ENABLED
      Targets:
        - Arn: !ImportValue StocksApp-ClusterArn
          Id: RunWeekly
          RoleArn: !GetAtt EcsEventsRole.Arn
          EcsParameters:
            TaskDefinitionArn: !Ref WeeklyTaskDef
            LaunchType: FARGATE
            NetworkConfiguration:
              AwsVpcConfiguration:
                Subnets:
                  - !ImportValue StocksCore-PublicSubnet1Id
                  - !ImportValue StocksCore-PublicSubnet2Id
                SecurityGroups:
                  - !ImportValue StocksCore-LambdaSecurityGroupId
                AssignPublicIp: ENABLED

Outputs:
  FindataTaskDefinitionArn:
    Value: !Ref FindataTaskDef
  PriceTaskDefinitionArn:
    Value: !Ref PriceTaskDef
  PriceWeeklyTaskDefinitionArn:
    Value: !Ref WeeklyTaskDef
