AWSTemplateFormatVersion: '2010-09-09'
Description: >
  ECS TaskDefinitions, CloudWatch LogGroups, and zero-scale Services
  for stock-symbols, econ-data, monthly-price, findata, pricedaily,
  priceweekly, pricemonthly, TechnicalsDaily, loadinfo, earnings,
  technicalsweekly & technicalsmonthly.

Parameters:
  StockSymbolsImageTag:
    Type: String
    Description: "Tag for stock-symbols loader image"
  EconDataImageTag:
    Type: String
    Description: "Tag for econ-data loader image"
  FindataImageTag:
    Type: String
    Description: "Tag for findata loader image"
  PriceImageTag:
    Type: String
    Description: "Tag for pricedaily loader image"
  PriceWeeklyImageTag:
    Type: String
    Description: "Tag for priceweekly loader image"
  PriceMonthlyImageTag:
    Type: String
    Description: "Tag for pricemonthly loader image"
  TechnicalsDailyImageTag:
    Type: String
    Description: "Tag for TechnicalsDaily loader image"
  LoadInfoImageTag:
    Type: String
    Description: "Tag for loadinfo loader image"
  EarningsImageTag:
    Type: String
    Description: "Tag for earnings loader image"
  TechnicalsWeeklyImageTag:
    Type: String
    Description: "Tag for technicalsweekly loader image"
  TechnicalsMonthlyImageTag:
    Type: String
    Description: "Tag for technicalsmonthly loader image"
  BuySellImageTag:
    Type: String
    Description: "Tag for buysell loader image"
  SwingTraderImageTag:
    Type: String
    Description: "Tag for swingtrader loader image"
  CalendarImageTag:
    Type: String
    Description: "Tag for calendar loader image"
  LoadLatestPriceDailyImageTag:
    Type: String
    Description: "Tag for loadlatestpricedaily loader image"
  LoadLatestPriceWeeklyImageTag:
    Type: String
    Description: "Tag for loadlatestpriceweekly loader image"
  LoadLatestPriceMonthlyImageTag:
    Type: String
    Description: "Tag for loadlatestpricemonthly loader image"

  FREDApiKey:
    Type: String
    NoEcho: true
    Description: "FRED API key for econ-data loader"
  IBKRUsername:
    Type: String
    NoEcho: true
    Description: "Your IBKR username (passed from GitHub Secret)"
  IBKRPassword:
    Type: String
    NoEcho: true
    Description: "Your IBKR password (passed from GitHub Secret)"

Resources:

  ########################################
  # A) ECS Execution Role & Policies     #
  ########################################
  ECSExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        - PolicyName: AllowCreateCWLogGroups
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/ecs/*"
        - PolicyName: AllowReadDBSecret
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: secretsmanager:GetSecretValue
                Resource: !ImportValue StocksApp-SecretArn
              - Effect: Allow
                Action: kms:Decrypt
                Resource: '*'
        - PolicyName: AllowReadSwingTraderSecrets
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: secretsmanager:GetSecretValue
                Resource:
                  - !Ref IBKRUsernameSecret
                  - !Ref IBKRPasswordSecret

  ########################################
  # B) CloudWatch Log Groups             #
  ########################################
  StockSymbolsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/stocksymbols-loader
      RetentionInDays: 14

  EconDataLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/econdata-loader
      RetentionInDays: 14

  FindataLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/findata-loader
      RetentionInDays: 14

  PriceLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/pricedaily-loader
      RetentionInDays: 14

  WeeklyLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/priceweekly-loader
      RetentionInDays: 14

  PriceMonthlyLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/pricemonthly-loader
      RetentionInDays: 14

  TechnicalsDailyLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/technicals-daily
      RetentionInDays: 14

  LoadInfoLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/loadinfo-loader
      RetentionInDays: 14

  EarningsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/earnings-loader
      RetentionInDays: 14

  TechnicalsWeeklyLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/technicalsweekly-loader
      RetentionInDays: 14

  TechnicalsMonthlyLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/technicalsmonthly-loader
      RetentionInDays: 14

  BuySellLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/buysell-loader
      RetentionInDays: 14

  SwingTraderLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/swingtrader-loader
      RetentionInDays: 14

  LoadLatestPriceDailyLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/loadlatestpricedaily-loader
      RetentionInDays: 14

  LoadLatestPriceWeeklyLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/loadlatestpriceweekly-loader
      RetentionInDays: 14

  LoadLatestPriceMonthlyLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/loadlatestpricemonthly-loader
      RetentionInDays: 14

  ########################################
  # C) stock-symbols loader              #
  ########################################
  StockSymbolsTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: stocksymbols-loader
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: stocksymbols-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref StockSymbolsImageTag]]
          Essential: true
          Environment:
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
            - Name: DB_HOST
              Value: !ImportValue StocksApp-DBEndpoint
            - Name: DB_PORT
              Value: !ImportValue StocksApp-DBPort
            - Name: DB_NAME
              Value: !ImportValue StocksApp-DBName
            - Name: DB_USER
              Value: !ImportValue StocksApp-DBUsername
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/stocksymbols-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  StockSymbolsLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: stocksymbols-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref StockSymbolsTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          SecurityGroups:
            - !ImportValue StocksApp-EcsTasksSecurityGroupId
          AssignPublicIp: ENABLED

  ########################################
  # D) econ-data loader                  #
  ########################################
  EconDataTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: econdata-loader
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: econdata-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref EconDataImageTag]]
          Essential: true
          Environment:
            - Name: LOG_GROUP
              Value: /ecs/econdata-loader
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
            - Name: DB_HOST
              Value: !ImportValue StocksApp-DBEndpoint
            - Name: DB_PORT
              Value: !ImportValue StocksApp-DBPort
            - Name: DB_NAME
              Value: !ImportValue StocksApp-DBName
            - Name: DB_USER
              Value: !ImportValue StocksApp-DBUsername
            - Name: FRED_API_KEY
              Value: !Ref FREDApiKey
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/econdata-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  EconDataLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: econdata-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref EconDataTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          SecurityGroups:
            - !ImportValue StocksApp-EcsTasksSecurityGroupId
          AssignPublicIp: ENABLED

  ########################################
  # E) monthly-price loader              #
  ########################################
  PriceMonthlyTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: pricemonthly-loader
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: pricemonthly-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref PriceMonthlyImageTag]]
          Essential: true
          Environment:
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
            - Name: DB_HOST
              Value: !ImportValue StocksApp-DBEndpoint
            - Name: DB_PORT
              Value: !ImportValue StocksApp-DBPort
            - Name: DB_NAME
              Value: !ImportValue StocksApp-DBName
            - Name: DB_USER
              Value: !ImportValue StocksApp-DBUsername
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/pricemonthly-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  PriceMonthlyService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: pricemonthly-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref PriceMonthlyTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          SecurityGroups:
            - !ImportValue StocksApp-EcsTasksSecurityGroupId
          AssignPublicIp: ENABLED

  ########################################
  # F) findata loader                    #
  ########################################
  FindataTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: findata-loader
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: findata-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref FindataImageTag]]
          Essential: true
          Environment:
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
            - Name: DB_HOST
              Value: !ImportValue StocksApp-DBEndpoint
            - Name: DB_PORT
              Value: !ImportValue StocksApp-DBPort
            - Name: DB_NAME
              Value: !ImportValue StocksApp-DBName
            - Name: DB_USER
              Value: !ImportValue StocksApp-DBUsername
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/findata-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  FindataLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: findata-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref FindataTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          SecurityGroups:
            - !ImportValue StocksApp-EcsTasksSecurityGroupId
          AssignPublicIp: ENABLED

  ########################################
  # G) pricedaily loader                 #
  ########################################
  PriceTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: pricedaily-loader
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: pricedaily-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref PriceImageTag]]
          Essential: true
          Environment:
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
            - Name: DB_HOST
              Value: !ImportValue StocksApp-DBEndpoint
            - Name: DB_PORT
              Value: !ImportValue StocksApp-DBPort
            - Name: DB_NAME
              Value: !ImportValue StocksApp-DBName
            - Name: DB_USER
              Value: !ImportValue StocksApp-DBUsername
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/pricedaily-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  PriceLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: pricedaily-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref PriceTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          SecurityGroups:
            - !ImportValue StocksApp-EcsTasksSecurityGroupId
          AssignPublicIp: ENABLED

  ########################################
  # H) priceweekly loader                #
  ########################################
  PriceWeeklyTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: priceweekly-loader
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: priceweekly-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref PriceWeeklyImageTag]]
          Essential: true
          Environment:
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
            - Name: DB_HOST
              Value: !ImportValue StocksApp-DBEndpoint
            - Name: DB_PORT
              Value: !ImportValue StocksApp-DBPort
            - Name: DB_NAME
              Value: !ImportValue StocksApp-DBName
            - Name: DB_USER
              Value: !ImportValue StocksApp-DBUsername
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/priceweekly-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  PriceWeeklyLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: priceweekly-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref PriceWeeklyTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          SecurityGroups:
            - !ImportValue StocksApp-EcsTasksSecurityGroupId
          AssignPublicIp: ENABLED

  ########################################
  # I) pricemonthly loader               #
  ########################################
  PriceMonthlyTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: pricemonthly-loader
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: pricemonthly-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref PriceMonthlyImageTag]]
          Essential: true
          Environment:
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
            - Name: DB_HOST
              Value: !ImportValue StocksApp-DBEndpoint
            - Name: DB_PORT
              Value: !ImportValue StocksApp-DBPort
            - Name: DB_NAME
              Value: !ImportValue StocksApp-DBName
            - Name: DB_USER
              Value: !ImportValue StocksApp-DBUsername
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/pricemonthly-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  PriceMonthlyService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: pricemonthly-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref PriceMonthlyTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          SecurityGroups:
            - !ImportValue StocksApp-EcsTasksSecurityGroupId
          AssignPublicIp: ENABLED

  ########################################
  # J) TechnicalsDaily loader             #
  ########################################
  TechnicalsDailyTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: technicalsdaily-loader
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: technicalsdaily-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref TechnicalsDailyImageTag]]
          Essential: true
          Environment:
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
            - Name: DB_HOST
              Value: !ImportValue StocksApp-DBEndpoint
            - Name: DB_PORT
              Value: !ImportValue StocksApp-DBPort
            - Name: DB_NAME
              Value: !ImportValue StocksApp-DBName
            - Name: DB_USER
              Value: !ImportValue StocksApp-DBUsername
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/technicals-daily
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  TechnicalsDailyLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: technicalsdaily-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref TechnicalsDailyTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          SecurityGroups:
            - !ImportValue StocksApp-EcsTasksSecurityGroupId
          AssignPublicIp: ENABLED

  ########################################
  # K) loadinfo loader                   #
  ########################################
  LoadInfoTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: loadinfo-loader
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: loadinfo-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref LoadInfoImageTag]]
          Essential: true
          Environment:
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/loadinfo-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  LoadInfoLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: loadinfo-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref LoadInfoTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          SecurityGroups:
            - !ImportValue StocksApp-EcsTasksSecurityGroupId
          AssignPublicIp: ENABLED

  ########################################
  # L) earnings loader                   #
  ########################################
  EarningsTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: earnings-loader
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: earnings-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref EarningsImageTag]]
          Essential: true
          Environment:
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
            - Name: DB_HOST
              Value: !ImportValue StocksApp-DBEndpoint
            - Name: DB_PORT
              Value: !ImportValue StocksApp-DBPort
            - Name: DB_NAME
              Value: !ImportValue StocksApp-DBName
            - Name: DB_USER
              Value: !ImportValue StocksApp-DBUsername
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/earnings-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  EarningsLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: earnings-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref EarningsTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          SecurityGroups:
            - !ImportValue StocksApp-EcsTasksSecurityGroupId
          AssignPublicIp: ENABLED

  ########################################
  # M) technicalsweekly loader           #
  ########################################
  TechnicalsWeeklyTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: technicalsweekly-loader
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: technicalsweekly-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref TechnicalsWeeklyImageTag]]
          Essential: true
          Environment:
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/technicalsweekly-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  TechnicalsWeeklyLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: technicalsweekly-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref TechnicalsWeeklyTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          SecurityGroups:
            - !ImportValue StocksApp-EcsTasksSecurityGroupId
          AssignPublicIp: ENABLED

  ########################################
  # N) technicalsmonthly loader          #
  ########################################
  TechnicalsMonthlyTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: technicalsmonthly-loader
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: technicalsmonthly-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref TechnicalsMonthlyImageTag]]
          Essential: true
          Environment:
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/technicalsmonthly-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  TechnicalsMonthlyLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: technicalsmonthly-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref TechnicalsMonthlyTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          SecurityGroups:
            - !ImportValue StocksApp-EcsTasksSecurityGroupId
          AssignPublicIp: ENABLED

  ########################################
  # O) swingtrader loader                #
  ########################################
  IBKRUsernameSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: swingtrader/ibkr-username
      SecretString: !Ref IBKRUsername

  IBKRPasswordSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: swingtrader/ibkr-password
      SecretString: !Ref IBKRPassword

  SwingTraderTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: swingtrader-loader
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: swingtrader-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref SwingTraderImageTag]]
          Essential: true
          Secrets:
            - Name: IBKR_USERNAME
              ValueFrom: !Ref IBKRUsernameSecret
            - Name: IBKR_PASSWORD
              ValueFrom: !Ref IBKRPasswordSecret
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/swingtrader-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  SwingTraderLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: swingtrader-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref SwingTraderTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          SecurityGroups:
            - !ImportValue StocksApp-EcsTasksSecurityGroupId
          AssignPublicIp: ENABLED

  ########################################
  # P) buysell loader                    #
  ########################################
  BuySellTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: buysell-loader
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: buysell-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref BuySellImageTag]]
          Essential: true
          Environment:
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
            - Name: FRED_API_KEY
              Value: !Ref FREDApiKey
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/buysell-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs


  BuySellLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: buysell-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref BuySellTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          SecurityGroups:
            - !ImportValue StocksApp-EcsTasksSecurityGroupId
          AssignPublicIp: ENABLED

  ########################################
  # Q) loadlatestpricedaily loader       #
  ########################################
  LoadLatestPriceDailyTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: loadlatestpricedaily-loader
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: loadlatestpricedaily-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref LoadLatestPriceDailyImageTag]]
          Essential: true
          Environment:
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
            - Name: DB_HOST
              Value: !ImportValue StocksApp-DBEndpoint
            - Name: DB_PORT
              Value: !ImportValue StocksApp-DBPort
            - Name: DB_NAME
              Value: !ImportValue StocksApp-DBName
            - Name: DB_USER
              Value: !ImportValue StocksApp-DBUsername
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/loadlatestpricedaily-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  LoadLatestPriceDailyLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: loadlatestpricedaily-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref LoadLatestPriceDailyTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          SecurityGroups:
            - !ImportValue StocksApp-EcsTasksSecurityGroupId
          AssignPublicIp: ENABLED

  ########################################
  # R) loadlatestpriceweekly loader      #
  ########################################
  LoadLatestPriceWeeklyTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: loadlatestpriceweekly-loader
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: loadlatestpriceweekly-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref LoadLatestPriceWeeklyImageTag]]
          Essential: true
          Environment:
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
            - Name: DB_HOST
              Value: !ImportValue StocksApp-DBEndpoint
            - Name: DB_PORT
              Value: !ImportValue StocksApp-DBPort
            - Name: DB_NAME
              Value: !ImportValue StocksApp-DBName
            - Name: DB_USER
              Value: !ImportValue StocksApp-DBUsername
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/loadlatestpriceweekly-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  LoadLatestPriceWeeklyLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: loadlatestpriceweekly-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref LoadLatestPriceWeeklyTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          SecurityGroups:
            - !ImportValue StocksApp-EcsTasksSecurityGroupId
          AssignPublicIp: ENABLED

  ########################################
  # S) loadlatestpricemonthly loader     #
  ########################################
  LoadLatestPriceMonthlyTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: loadlatestpricemonthly-loader
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn:      !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: loadlatestpricemonthly-loader
          Image: !Join [":", [!ImportValue StocksCore-ContainerRepositoryUri, !Ref LoadLatestPriceMonthlyImageTag]]
          Essential: true
          Environment:
            - Name: DB_SECRET_ARN
              Value: !ImportValue StocksApp-SecretArn
            - Name: DB_HOST
              Value: !ImportValue StocksApp-DBEndpoint
            - Name: DB_PORT
              Value: !ImportValue StocksApp-DBPort
            - Name: DB_NAME
              Value: !ImportValue StocksApp-DBName
            - Name: DB_USER
              Value: !ImportValue StocksApp-DBUsername
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/loadlatestpricemonthly-loader
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  LoadLatestPriceMonthlyLoaderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: loadlatestpricemonthly-loader-service
      Cluster: !ImportValue StocksApp-ClusterArn
      LaunchType: FARGATE
      DesiredCount: 0
      TaskDefinition: !Ref LoadLatestPriceMonthlyTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue StocksCore-PublicSubnet1Id
            - !ImportValue StocksCore-PublicSubnet2Id
          SecurityGroups:
            - !ImportValue StocksApp-EcsTasksSecurityGroupId
          AssignPublicIp: ENABLED

Outputs:
  StockSymbolsTaskDefArn:
    Description: ARN of the ECS TaskDefinition for stock-symbols loader
    Value: !Ref StockSymbolsTaskDefinition
    Export:
      Name: StockSymbolsTaskDefArn

  EconDataTaskDefArn:
    Description: ARN of the ECS TaskDefinition for econ-data loader
    Value: !Ref EconDataTaskDefinition
    Export:
      Name: EconDataTaskDefArn

  FindataTaskDefArn:
    Description: ARN of the ECS TaskDefinition for findata loader
    Value: !Ref FindataTaskDefinition
    Export:
      Name: FindataTaskDefArn

  PriceTaskDefArn:
    Description: ARN of the ECS TaskDefinition for pricedaily loader
    Value: !Ref PriceTaskDefinition
    Export:
      Name: PriceTaskDefArn

  PriceWeeklyTaskDefArn:
    Description: ARN of the ECS TaskDefinition for priceweekly loader
    Value: !Ref PriceWeeklyTaskDefinition
    Export:
      Name: PriceWeeklyTaskDefArn

  PriceMonthlyTaskDefArn:
    Description: ARN of the ECS TaskDefinition for pricemonthly loader
    Value: !Ref PriceMonthlyTaskDefinition
    Export:
      Name: PriceMonthlyTaskDefArn

  TechnicalsDailyTaskDefArn:
    Description: ARN of the ECS TaskDefinition for technicals-daily loader
    Value: !Ref TechnicalsDailyTaskDefinition
    Export:
      Name: TechnicalsDailyTaskDefArn

  LoadInfoTaskDefArn:
    Description: ARN of the ECS TaskDefinition for load-info loader
    Value: !Ref LoadInfoTaskDefinition
    Export:
      Name: LoadInfoTaskDefArn

  EarningsTaskDefArn:
    Description: ARN of the ECS TaskDefinition for earnings loader
    Value: !Ref EarningsTaskDefinition
    Export:
      Name: EarningsTaskDefArn

  TechnicalsWeeklyTaskDefArn:
    Description: ARN of the ECS TaskDefinition for technicals-weekly loader
    Value: !Ref TechnicalsWeeklyTaskDefinition
    Export:
      Name: TechnicalsWeeklyTaskDefArn

  TechnicalsMonthlyTaskDefArn:
    Description: ARN of the ECS TaskDefinition for technicals-monthly loader
    Value: !Ref TechnicalsMonthlyTaskDefinition
    Export:
      Name: TechnicalsMonthlyTaskDefArn

  SwingTraderTaskDefArn:
    Description: ARN of the ECS TaskDefinition for swing-trader loader
    Value: !Ref SwingTraderTaskDefinition
    Export:
      Name: SwingTraderTaskDefArn

  BuySellTaskDefArn:
    Description: ARN of the ECS TaskDefinition for buysell loader
    Value: !Ref BuySellTaskDefinition
    Export:
      Name: BuySellTaskDefArn

  LoadLatestPriceDailyTaskDefArn:
    Description: ARN of the ECS TaskDefinition for load-latest-price-daily loader
    Value: !Ref LoadLatestPriceDailyTaskDefinition
    Export:
      Name: LoadLatestPriceDailyTaskDefArn

  LoadLatestPriceWeeklyTaskDefArn:
    Description: ARN of the ECS TaskDefinition for load-latest-price-weekly loader
    Value: !Ref LoadLatestPriceWeeklyTaskDefinition
    Export:
      Name: LoadLatestPriceWeeklyTaskDefArn

  LoadLatestPriceMonthlyTaskDefArn:
    Description: ARN of the ECS TaskDefinition for load-latest-price-monthly loader
    Value: !Ref LoadLatestPriceMonthlyTaskDefinition
    Export:
      Name: LoadLatestPriceMonthlyTaskDefArn
