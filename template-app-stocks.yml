# template-app-ecs-tasks.yml
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  ECS TaskDefinitions, CloudWatch LogGroups, and EventBridge schedules
  for findata, pricedaily & priceweekly – all running in your private subnets
  (no public IP), IAM-only auth to RDS, and using VPC endpoints only.

Parameters:
  FindataImageTag:    { Type: String }
  PriceImageTag:      { Type: String }
  PriceWeeklyImageTag:{ Type: String }
  FREDApiKey:
    Type: String
    NoEcho: true

Resources:

  # 0) Logs
  FindataLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: { LogGroupName: '/ecs/findata-loader', RetentionInDays: 14 }
  PriceLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: { LogGroupName: '/ecs/pricedaily-loader', RetentionInDays: 14 }
  WeeklyLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: { LogGroupName: '/ecs/priceweekly-loader', RetentionInDays: 14 }

  # 1) EventBridge→ECS Role
  EcsEventsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ecs-events-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: { Service: events.amazonaws.com }
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AllowRunTask
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: [ ecs:RunTask, iam:PassRole ]
                Resource: "*"

  # 2) findata-loader
  FindataTaskDef:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: findata-loader
      Cpu: "512"
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities: [ FARGATE ]
      ExecutionRoleArn: !ImportValue StocksApp-EcsTaskExecutionRoleArn
      TaskRoleArn:      !ImportValue StocksApp-EcsTaskExecutionRoleArn
      ContainerDefinitions:
        - Name: findata-loader
          Image: !Sub "${StocksCore-ContainerRepositoryUri}:${FindataImageTag}"
          Essential: true
          Environment:
            - { Name: DB_HOST,  Value: !ImportValue StocksApp-DBEndpoint }
            - { Name: DB_PORT,  Value: !ImportValue StocksApp-DBPort     }
            - { Name: DB_NAME,  Value: !ImportValue StocksApp-DBName     }
            - { Name: DB_USER,  Value: !ImportValue StocksApp-DBUsername }
            - { Name: FRED_API_KEY, Value: !Ref FREDApiKey              }
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:         /ecs/findata-loader
              awslogs-region:        !Ref AWS::Region
              awslogs-stream-prefix: ecs

  # 3) pricedaily-loader
  PriceTaskDef:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: pricedaily-loader
      Cpu: "512"
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities: [ FARGATE ]
      ExecutionRoleArn: !ImportValue StocksApp-EcsTaskExecutionRoleArn
      TaskRoleArn:      !ImportValue StocksApp-EcsTaskExecutionRoleArn
      ContainerDefinitions:
        - Name: pricedaily-loader
          Image: !Sub "${StocksCore-ContainerRepositoryUri}:${PriceImageTag}"
          Essential: true
          Environment:
            - { Name: DB_HOST,  Value: !ImportValue StocksApp-DBEndpoint }
            - { Name: DB_PORT,  Value: !ImportValue StocksApp-DBPort     }
            - { Name: DB_NAME,  Value: !ImportValue StocksApp-DBName     }
            - { Name: DB_USER,  Value: !ImportValue StocksApp-DBUsername }
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:         /ecs/pricedaily-loader
              awslogs-region:        !Ref AWS::Region
              awslogs-stream-prefix: ecs

  # 4) priceweekly-loader
  WeeklyTaskDef:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: priceweekly-loader
      Cpu: "512"
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities: [ FARGATE ]
      ExecutionRoleArn: !ImportValue StocksApp-EcsTaskExecutionRoleArn
      TaskRoleArn:      !ImportValue StocksApp-EcsTaskExecutionRoleArn
      ContainerDefinitions:
        - Name: priceweekly-loader
          Image: !Sub "${StocksCore-ContainerRepositoryUri}:${PriceWeeklyImageTag}"
          Essential: true
          Environment:
            - { Name: DB_HOST,  Value: !ImportValue StocksApp-DBEndpoint }
            - { Name: DB_PORT,  Value: !ImportValue StocksApp-DBPort     }
            - { Name: DB_NAME,  Value: !ImportValue StocksApp-DBName     }
            - { Name: DB_USER,  Value: !ImportValue StocksApp-DBUsername }
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:         /ecs/priceweekly-loader
              awslogs-region:        !Ref AWS::Region
              awslogs-stream-prefix: ecs

  # 5) Schedules – run in private subnets, no Public IP
  FindataSchedule:
    Type: AWS::Events::Rule
    Properties:
      Name: findata-loader-schedule
      ScheduleExpression: rate(1 day)
      State: ENABLED
      Targets:
        - Arn: !ImportValue StocksApp-ClusterArn
          Id: RunFindata
          RoleArn: !GetAtt EcsEventsRole.Arn
          EcsParameters:
            TaskDefinitionArn: !Ref FindataTaskDef
            LaunchType: FARGATE
            NetworkConfiguration:
              AwsVpcConfiguration:
                Subnets:
                  - !ImportValue StocksCore-PrivateSubnet1Id
                  - !ImportValue StocksCore-PrivateSubnet2Id
                SecurityGroups:
                  - !ImportValue StocksCore-LambdaSecurityGroupId
                AssignPublicIp: DISABLED

  PriceSchedule:
    Type: AWS::Events::Rule
    Properties:
      Name: pricedaily-loader-schedule
      ScheduleExpression: rate(1 day)
      State: ENABLED
      Targets:
        - Arn: !ImportValue StocksApp-ClusterArn
          Id: RunPrice
          RoleArn: !GetAtt EcsEventsRole.Arn
          EcsParameters:
            TaskDefinitionArn: !Ref PriceTaskDef
            LaunchType: FARGATE
            NetworkConfiguration:
              AwsVpcConfiguration:
                Subnets:
                  - !ImportValue StocksCore-PrivateSubnet1Id
                  - !ImportValue StocksCore-PrivateSubnet2Id
                SecurityGroups:
                  - !ImportValue StocksCore-LambdaSecurityGroupId
                AssignPublicIp: DISABLED

  WeeklySchedule:
    Type: AWS::Events::Rule
    Properties:
      Name: priceweekly-loader-schedule
      ScheduleExpression: rate(7 days)
      State: ENABLED
      Targets:
        - Arn: !ImportValue StocksApp-ClusterArn
          Id: RunWeekly
          RoleArn: !GetAtt EcsEventsRole.Arn
          EcsParameters:
            TaskDefinitionArn: !Ref WeeklyTaskDef
            LaunchType: FARGATE
            NetworkConfiguration:
              AwsVpcConfiguration:
                Subnets:
                  - !ImportValue StocksCore-PrivateSubnet1Id
                  - !ImportValue StocksCore-PrivateSubnet2Id
                SecurityGroups:
                  - !ImportValue StocksCore-LambdaSecurityGroupId
                AssignPublicIp: DISABLED

Outputs:
  FindataTaskDefinitionArn:  { Value: !Ref FindataTaskDef  }
  PriceTaskDefinitionArn:   { Value: !Ref PriceTaskDef   }
  PriceWeeklyTaskDefinitionArn: { Value: !Ref WeeklyTaskDef  }
